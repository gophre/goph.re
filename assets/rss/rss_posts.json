[
  {
    "id": "6db8b96ea302a4cc363ef4f8e3563cbc",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Check if variable contains func() or not",
    "url": "https://www.reddit.com/r/golang/comments/12is2ex/check_if_variable_contains_func_or_not/",
    "resume": "",
    "date": "2023-04-11T18:05:03Z",
    "vote": 0
  },
  {
    "id": "72d42560fd5389afeb9422188e8aff6a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Help! Windows services with Kardianos and Fyne",
    "url": "https://www.reddit.com/r/golang/comments/12irlyr/help_windows_services_with_kardianos_and_fyne/",
    "resume": "",
    "date": "2023-04-11T17:50:59Z",
    "vote": 0
  },
  {
    "id": "6190f28c60fc1e32af6f27490572ee9a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Live video streaming app",
    "url": "https://www.reddit.com/r/golang/comments/12ir891/live_video_streaming_app/",
    "resume": "",
    "date": "2023-04-11T17:38:05Z",
    "vote": 0
  },
  {
    "id": "e2e3575090c38bff89a34ff1eec84386",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to create a PDF?",
    "url": "https://www.reddit.com/r/golang/comments/12ipmd8/how_to_create_a_pdf/",
    "resume": "",
    "date": "2023-04-11T16:43:25Z",
    "vote": 0
  },
  {
    "id": "0ff39ecda9c441ae3ad782421a04b981",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is it possible to write a driver for a custom keyboard on Go?",
    "url": "https://www.reddit.com/r/golang/comments/12ip3pc/is_it_possible_to_write_a_driver_for_a_custom/",
    "resume": "",
    "date": "2023-04-11T16:25:15Z",
    "vote": 0
  },
  {
    "id": "a894ade9078754795d52b081042e40dc",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Mobile coding?",
    "url": "https://www.reddit.com/r/golang/comments/12ip0t0/mobile_coding/",
    "resume": "",
    "date": "2023-04-11T16:22:14Z",
    "vote": 0
  },
  {
    "id": "93884b77f6a7954691d0c73260a6fa7d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Thoughts around checking empty/nil parameters in private functions",
    "url": "https://www.reddit.com/r/golang/comments/12inf1o/thoughts_around_checking_emptynil_parameters_in/",
    "resume": "",
    "date": "2023-04-11T15:28:32Z",
    "vote": 0
  },
  {
    "id": "213d0544f6d7c5032d5b29a95ebf5464",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is Go appropriate to develop Linux Desktop app ?",
    "url": "https://www.reddit.com/r/golang/comments/12indg3/is_go_appropriate_to_develop_linux_desktop_app/",
    "resume": "",
    "date": "2023-04-11T15:27:02Z",
    "vote": 0
  },
  {
    "id": "d4db325816a36aa43c535ed0cba46f8b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go server + TypeScript client with end-to-end type safety?",
    "url": "https://www.reddit.com/r/golang/comments/12imct6/go_server_typescript_client_with_endtoend_type/",
    "resume": "",
    "date": "2023-04-11T14:54:35Z",
    "vote": 0
  },
  {
    "id": "81a5eb6289ddb82c108a78af7b709bb8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "communicating with a serial interface",
    "url": "https://www.reddit.com/r/golang/comments/12illts/communicating_with_a_serial_interface/",
    "resume": "",
    "date": "2023-04-11T14:30:08Z",
    "vote": 0
  },
  {
    "id": "fbb8e209fdf29e7aba29b1a50faf2991",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How can I import a package from a subfolder?",
    "url": "https://www.reddit.com/r/golang/comments/12ile04/how_can_i_import_a_package_from_a_subfolder/",
    "resume": "",
    "date": "2023-04-11T14:22:35Z",
    "vote": 0
  },
  {
    "id": "801451e1343cdd14a7edc730588e7b71",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go development for your startup",
    "url": "https://www.reddit.com/r/golang/comments/12il664/go_development_for_your_startup/",
    "resume": "",
    "date": "2023-04-11T14:14:58Z",
    "vote": 0
  },
  {
    "id": "41f7bbe40e268b29cf398c71e1ba6903",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Cerbos - A stateless, self-hosted authZ layer for your application. Do not reinvent access management, authorization, ABAC, RBAC, user permissions, etc.",
    "url": "https://www.reddit.com/r/golang/comments/12ikwg5/cerbos_a_stateless_selfhosted_authz_layer_for/",
    "resume": "",
    "date": "2023-04-11T14:04:57Z",
    "vote": 0
  },
  {
    "id": "392bb4b1b7b24caa58885588da715e96",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Can you help me make my makefile for go projects better or suggest an alternative?",
    "url": "https://www.reddit.com/r/golang/comments/12ikj2l/can_you_help_me_make_my_makefile_for_go_projects/",
    "resume": "",
    "date": "2023-04-11T13:51:20Z",
    "vote": 0
  },
  {
    "id": "6564a2c8636d612acb89171842b81de7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "[Feedback request] Fuddle service registry",
    "url": "https://www.reddit.com/r/golang/comments/12ik5on/feedback_request_fuddle_service_registry/",
    "resume": "",
    "date": "2023-04-11T13:36:52Z",
    "vote": 0
  },
  {
    "id": "cc3ca4566c960aca8fc5c91a0ab0cbd0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Announcing FerretDB 1.0 GA - a truly Open Source MongoDB alternative (written in Go)",
    "url": "https://www.reddit.com/r/golang/comments/12ijuwe/announcing_ferretdb_10_ga_a_truly_open_source/",
    "resume": "",
    "date": "2023-04-11T13:25:57Z",
    "vote": 0
  },
  {
    "id": "8590a4763254f27120d57c8f351e4102",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "ZeroLog runtime error",
    "url": "https://forum.golangbridge.org/t/zerolog-runtime-error/31283#post_1",
    "resume": " \u003cp\u003eI have a project that using concurrent goroutines and each process log messages\u003cbr\u003e\nI am seeing below random exception, either for\u003cbr\u003e\nlog.Msgf or log event\u003c/p\u003e\n\u003cp\u003epanic: runtime error: index out of range [-1]\u003c/p\u003e\n\u003cp\u003egoroutine 6190 [running]:\u003cbr\u003e\n\u003ca href=\"http://github.com/rs/zerolog/internal/json.Encoder.AppendKey(...)\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com/rs/zerolog/internal/json.Encoder.AppendKey(...)\u003c/a\u003e\u003cbr\u003e\n/vendor/github.com/rs/zerolog/internal/json/base.go:15\u003cbr\u003e\n\u003ca href=\"http://github.com/rs/zerolog.(*Event).Str\" rel=\"noopener nofollow ugc\"\u003egithub.com/rs/zerolog.(*Event).Str\u003c/a\u003e(0xc003e10ba0?, {0x11a06c2?, 0xc000470ee0?}, {0x0?, 0x1e?})\u003cbr\u003e\n/vendor/github.com/rs/zerolog/event.go:247 +0x13d\u003c/p\u003e ",
    "date": "2023-04-11T13:21:02Z",
    "vote": 0
  },
  {
    "id": "a7ff2cf10172f2f5ae951b11145e12dc",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How To Structure Your Go App",
    "url": "https://www.reddit.com/r/golang/comments/12ijnf5/how_to_structure_your_go_app/",
    "resume": "",
    "date": "2023-04-11T13:18:21Z",
    "vote": 0
  },
  {
    "id": "83bfac9163822a4097969bcebf5aa4c8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Theine - High performance in-memory cache",
    "url": "https://www.reddit.com/r/golang/comments/12ijclv/theine_high_performance_inmemory_cache/",
    "resume": "",
    "date": "2023-04-11T13:08:12Z",
    "vote": 0
  },
  {
    "id": "90471db5adbb55cadc69948d8b10835e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Which Kafka client library should I use?",
    "url": "https://www.reddit.com/r/golang/comments/12ij4jn/which_kafka_client_library_should_i_use/",
    "resume": "",
    "date": "2023-04-11T13:00:44Z",
    "vote": 0
  },
  {
    "id": "1eb3afa8a54b0dee07034e819de75dc3",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Catching Up With Kat Zien on the Structure of Go Apps in 2023",
    "url": "https://blog.jetbrains.com/go/2023/04/11/catching-up-with-kat-zien-on-the-structure-of-go-apps-in-2023/",
    "resume": "Let’s say I was asked to build a Go application for a website that hosts raffles. I might end up with a file structure that looks like this: But is this correct? Or is everything I’ve written here completely wrong? This was a common feeling among Go developers back when Kat Zien gave her 2018 [\u0026#8230;]",
    "date": "2023-04-11T12:46:23Z",
    "vote": 0
  },
  {
    "id": "bdab5e4c4b218ef39628d4b2ecb12c60",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to Stop Testing \u0026 Break Your Code Base",
    "url": "https://www.reddit.com/r/golang/comments/12ii8v2/how_to_stop_testing_break_your_code_base/",
    "resume": "",
    "date": "2023-04-11T12:28:48Z",
    "vote": 0
  },
  {
    "id": "8f52a3b795545849470e6d652f752c8a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does Go, has something similar to Laravel eloquent (ORM) ?",
    "url": "https://www.reddit.com/r/golang/comments/12ii73s/does_go_has_something_similar_to_laravel_eloquent/",
    "resume": "",
    "date": "2023-04-11T12:26:55Z",
    "vote": 0
  },
  {
    "id": "4a9489fb5b4617e8da757bc1a5007d0c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "[Contribution] Go_Updater shellscripting (GNU/Linux or WSL)",
    "url": "https://www.reddit.com/r/golang/comments/12ii3x3/contribution_go_updater_shellscripting_gnulinux/",
    "resume": "",
    "date": "2023-04-11T12:23:23Z",
    "vote": 0
  },
  {
    "id": "41ab525055ff9567b949b7266bc3db08",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Any recommended open source project for beginners?",
    "url": "https://forum.golangbridge.org/t/any-recommended-open-source-project-for-beginners/31253#post_2",
    "resume": " \u003cp\u003eExplore GitHub\u003c/p\u003e ",
    "date": "2023-04-11T10:58:05Z",
    "vote": 0
  },
  {
    "id": "a2a1ab43eb5d65597766facb33bf52e3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "K3S Binary, How does that work?",
    "url": "https://www.reddit.com/r/golang/comments/12if7dj/k3s_binary_how_does_that_work/",
    "resume": "",
    "date": "2023-04-11T10:14:21Z",
    "vote": 0
  },
  {
    "id": "3c62724120522947045c686516d6bb0d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "AWS Custom resources with Lambda and Golang",
    "url": "https://www.reddit.com/r/golang/comments/12idhuu/aws_custom_resources_with_lambda_and_golang/",
    "resume": "",
    "date": "2023-04-11T08:44:00Z",
    "vote": 0
  },
  {
    "id": "03f1f85a7924b9c83caa19f50f6e50a8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go Blogs",
    "url": "https://www.reddit.com/r/golang/comments/12i9gpr/go_blogs/",
    "resume": "",
    "date": "2023-04-11T05:16:39Z",
    "vote": 0
  },
  {
    "id": "f6a0ee287740051eccdc34cd0c32959f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "The day /r/golang was almost deleted",
    "url": "https://www.reddit.com/r/golang/comments/12i6t8d/the_day_rgolang_was_almost_deleted/",
    "resume": "",
    "date": "2023-04-11T03:25:02Z",
    "vote": 0
  },
  {
    "id": "c3fccc37b14c12c9eebfbdbc218d1f26",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "chat-gpt TUI written in Go: Prompt-AI",
    "url": "https://www.reddit.com/r/golang/comments/12i6cwj/chatgpt_tui_written_in_go_promptai/",
    "resume": "",
    "date": "2023-04-11T03:06:51Z",
    "vote": 0
  },
  {
    "id": "442fd4ac7f94a3b9d5a08f4b5ad926f7",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "SetMemoryLimit but still OOMKilled (Out of memory killed)",
    "url": "https://forum.golangbridge.org/t/setmemorylimit-but-still-oomkilled-out-of-memory-killed/31268#post_4",
    "resume": " \u003cp\u003eyour application could have long-lived heap allocations, so the GC does do not much if you use this every time, like a cache in memory,\u003c/p\u003e\n\u003cp\u003ethis is a nice post to explain a little better about this\u003c/p\u003e\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://weaviate.io/blog/gomemlimit-a-game-changer-for-high-memory-applications\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://weaviate.io/img/favicon.ico\" class=\"site-icon\" width=\"48\" height=\"48\"\u003e\n\n      \u003ca href=\"https://weaviate.io/blog/gomemlimit-a-game-changer-for-high-memory-applications\" target=\"_blank\" rel=\"noopener nofollow ugc\" title=\"12:00AM - 15 August 2022\"\u003eweaviate.io – 15 Aug 22\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"aspect-image\" style=\"--aspect-ratio:690/491;\"\u003e\u003cimg src=\"https://weaviate.io/assets/images/hero-461c04a76bbf88f2115f4cf19be0023e.jpg\" class=\"thumbnail\" width=\"690\" height=\"491\"\u003e\u003c/div\u003e\n\n\u003ch3\u003e\u003ca href=\"https://weaviate.io/blog/gomemlimit-a-game-changer-for-high-memory-applications\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eGOMEMLIMIT is a game changer for high-memory applications | Weaviate - vector...\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003eGo 1.19 introduced GOMEMLIMIT, which completely changes how you can manage memory limits in Go. Learn how it helps Weaviate be more reliable.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003e\u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/point_up_2.png?v=12\" title=\":point_up_2:\" class=\"emoji\" alt=\":point_up_2:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e The Go authors explicitly label GOMEMLIMIT a “soft” limit. That means that the Go runtime does not guarantee that the memory usage will exceed the limit. Instead, it uses it as a target.\u003c/p\u003e ",
    "date": "2023-04-11T01:33:30Z",
    "vote": 0
  },
  {
    "id": "bb4f13886b7e37d0770f4069286e6feb",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Workaround for pinning dev dependencies",
    "url": "https://www.reddit.com/r/golang/comments/12i2c1x/workaround_for_pinning_dev_dependencies/",
    "resume": "",
    "date": "2023-04-11T00:33:43Z",
    "vote": 0
  },
  {
    "id": "1bd311c8e3288c2e8afa47bef8bb0380",
    "source": {
      "path": "golang",
      "name": "Golang Weekly",
      "url": "https://cprss.s3.amazonaws.com/golangweekly.com.xml"
    },
    "name": "The smallest Go binary",
    "url": "https://golangweekly.com/issues/455",
    "resume": "\u003ctable border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\"\u003e\n  \u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003cdiv\u003e    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\n\u003ctd align=\"left\" style=\"padding-left: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e#​455 — April 11, 2023\u003c/p\u003e\u003c/td\u003e\n\u003ctd align=\"right\" style=\"padding-right: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138059/rss\" style=\" color: #0099b4;\"\u003eUnsub\u003c/a\u003e  |  \u003ca href=\"https://golangweekly.com/link/138060/rss\" style=\" color: #0099b4;\"\u003eWeb Version\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eℹ️ As mentioned last time, \u003cem\u003eGo Weekly\u003c/em\u003e is now sent on \u003cem\u003eTuesdays\u003c/em\u003e, so if you missed us at all, we're now back on schedule 😄\u003cbr\u003e__\u003cbr\u003e\u003cem\u003ePeter Cooper, your editor\u003c/em\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 12px;  padding-left: 12px;\"\u003e\u003cp\u003eThe \u003cem\u003eGo Weekly\u003c/em\u003e Newsletter\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/138062/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/cbcxcq04t5uaunonjwap.jpg\" width=\"640\" style=\"    line-height: 100%;       \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138062/rss\" title=\"totallygamerjet.hashnode.dev\" style=\" color: #0099b4;    font-size: 1.1em; line-height: 1.4em;\"\u003eThe Smallest Go Binary - 5KB?\u003c/a\u003e\u003c/span\u003e — I thought this sounded a bit silly at first, especially dated April 1st, but the author (also the main maintainer of \u003ca href=\"https://golangweekly.com/link/138063/rss\" style=\" color: #0099b4;   \"\u003epurego\u003c/a\u003e) had an interesting use case: they wanted to use Go’s \u003cem\u003eassembler\u003c/em\u003e but not Go’s \u003cem\u003eruntime.\u003c/em\u003e Turns out it’s possible, with a lot of fiddling around. \u003cstrong\u003eNote: You will almost certainly never need to do this yourself, but it's fun to see the parts involved in doing so.\u003c/strong\u003e\u003c/p\u003e\n  \u003cp\u003eOver Engineered \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138064/rss\" title=\"go.dev\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eDeveloping a RESTful API with Go and Gin\u003c/a\u003e\u003c/span\u003e — It’s neat to see a tutorial like this pop up on the official Go site. It walks through the basics of using \u003ca href=\"https://golangweekly.com/link/138065/rss\" style=\" color: #0099b4;   \"\u003eGin\u003c/a\u003e to create a simple RESTful API that stores its data in memory for simplicity.\u003c/p\u003e\n  \u003cp\u003eOfficial Go Docs \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003ca href=\"https://golangweekly.com/link/138061/rss\" style=\" color: #0099b4;   \"\u003e\u003cimg src=\"https://copm.s3.amazonaws.com/a7a0c665.png\" width=\"110\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%;    \"\u003e\u003c/a\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138061/rss\" title=\"goteleport.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eWhat's Next in Kubernetes Access?\u003c/a\u003e\u003c/span\u003e — Manage and audit access to all Kubernetes infrastructure - databases, clusters, and more - using biometrics rather than shared tokens and gain visibility on all actions in a K8s pod with full session recordings, all with a free trial of Teleport.\u003c/p\u003e\n  \u003cp\u003eTeleport | goteleport.com \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138066/rss\" title=\"blog.ferretdb.io\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eFerretDB 1.0: An Open Source MongoDB Alternative\u003c/a\u003e\u003c/span\u003e — FerretDB is an interesting project we’ve been following over the past year. Built in Go, it converts MongoDB’s wire protocol queries into SQL with Postgres on the backend, so you can reproduce the MongoDB experience but without its \u003ca href=\"https://golangweekly.com/link/138067/rss\" style=\" color: #0099b4;   \"\u003econtroversial license change.\u003c/a\u003e\u003c/p\u003e\n  \u003cp\u003ePeter Farkas \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138068/rss\" title=\"www.jetbrains.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eWhat's New in GoLand 2023.1\u003c/a\u003e\u003c/span\u003e — GoLand is a popular (though commercial) IDE in the Go space, often coming in second only to VS Code, so it’s interesting to see what they’ve added. The latest version introduces a vulnerability checker and vulnerable package updater, improved gRPC tooling, and the ability to run ‘scratch’ files with non-standard-library packages.\u003c/p\u003e\n  \u003cp\u003eJetBrains \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eIN BRIEF:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138099/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGo 1.20.3 and Go 1.19.8\u003c/a\u003e have been released.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138069/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGo 1.21 is likely to have a static toolchain\u003c/a\u003e on Linux, rather than dynamically linking against glibc.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOver on Reddit, \u003ca href=\"https://golangweekly.com/link/138070/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ea Go developer noticed\u003c/a\u003e their Go code was running 2-3x slower than a JavaScript equivalent. People shared various optimizations with replacing all \u003ccode\u003eint\u003c/code\u003es with \u003ccode\u003euint32\u003c/code\u003e yielding the biggest improvement.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNo code, but it was interesting reading about \u003ca href=\"https://golangweekly.com/link/138071/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ehow Julia Evans approached building a zine feedback site\u003c/a\u003e with Go, SQLite and Vue.js.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138072/rss\" title=\"lobste.rs\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eHow Do You Name Your Go Variables\u003c/a\u003e\u003c/span\u003e — While this is a simple question on the surface, it often generates a ton of very strong opinions and lively discussion, as it did with the Lobsters community.\u003c/p\u003e\n  \u003cp\u003eLobsters \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138073/rss\" title=\"www.courier.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eSend Transactional Emails with Golang\u003c/a\u003e\u003c/span\u003e — Step-by-step guide with three different methods: SMTP, 3rd party email provider, and with notification infrastructure.\u003c/p\u003e\n  \u003cp\u003eCourier.com \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138074/rss\" title=\"betterprogramming.pub\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eHow to Secure a Go App with JWT\u003c/a\u003e\u003c/span\u003e — Authentication and authorization with middleware while staying stateless with REST.\u003c/p\u003e\n  \u003cp\u003eDilara Görüm \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e🛠 Code \u0026amp; Tools\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/138075/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/menyu9osev5z6g5cfdjf.jpg\" width=\"640\" style=\"    line-height: 100%;         \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138075/rss\" title=\"xuri.me\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eExcelize: Library for Working with Excel Spreadsheets\u003c/a\u003e\u003c/span\u003e — Read and write XLAM / XLSM / XLSX / XLTM / and XLTX files. A long time library that keeps going from strength to strength. \u003ca href=\"https://golangweekly.com/link/138076/rss\" style=\" color: #0099b4;   \"\u003eGitHub repo.\u003c/a\u003e\u003c/p\u003e\n  \u003cp\u003eQI-ANXIN GROUP \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138077/rss\" title=\"carlosbecker.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGoReleaser v1.17: Go Binary Build and Delivery Tool\u003c/a\u003e\u003c/span\u003e — The motivation for GoReleaser is to simplify the release process by building binaries for multiple platforms, creating a GitHub release, and even releasing a Homebrew formula. \u003ca href=\"https://golangweekly.com/link/138078/rss\" style=\" color: #0099b4;   \"\u003eGitHub repo.\u003c/a\u003e\u003c/p\u003e\n  \u003cp\u003eCarlos Alexandro Becker \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138079/rss\" title=\"www.topaz.sh\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eAuthorization Simplified with an Open-Source Authorizer Written in Go\u003c/a\u003e\u003c/span\u003e — Topaz is a Go native authorization service with built-in support for every authorization model: RBAC, ABAC, and ReBAC.\u003c/p\u003e\n  \u003cp\u003eAserto \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138080/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eTokenizer: Pure Go Implementation of OpenAI's Tokenizer\u003c/a\u003e\u003c/span\u003e — When you use OpenAI’s GPT, input and output is delivered in ‘tokens’ which are \u003cem\u003enot\u003c/em\u003e the same as characters, syllables or words, but somewhere in between. \u003cspan\u003eT\u003c/span\u003e\u003cspan\u003eruly\u003c/span\u003e\u003cspan\u003e mind\u003c/span\u003e\u003cspan\u003eb\u003c/span\u003e\u003cspan\u003eogg\u003c/span\u003e\u003cspan\u003eling\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003c/p\u003e\n  \u003cp\u003eWahlmann and Wendt \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138081/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ebearclaw: A Tiny Static Site Generator\u003c/a\u003e\u003c/span\u003e — \u003cem\u003e“makes converting markdown into websites easy.”\u003c/em\u003e Offers an RSS feed too. Possibly worth considering if you want something even simpler than \u003ca href=\"https://golangweekly.com/link/138082/rss\" style=\" color: #0099b4;   \"\u003eHugo.\u003c/a\u003e\u003c/p\u003e\n  \u003cp\u003ebearclaw \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eQUICK RELEASES:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138083/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eenv 8.0\u003c/a\u003e\u003cbr\u003e\n↳ Parse environment variables into structs.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138084/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGo OpenAI 1.7\u003c/a\u003e\u003cbr\u003e\n↳ OpenAI / ChatGPT client library.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138085/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGoToSocial 0.8\u003c/a\u003e\u003cbr\u003e\n↳ ActivityPub server powered by Go.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138086/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eVHS 0.4\u003c/a\u003e – Record GIFs of terminal actions.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138087/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ews 1.2\u003c/a\u003e – Tiny WebSocket library.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138088/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003egofumpt 0.5\u003c/a\u003e – A stricter \u003ccode\u003egofmt\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138089/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eSFTPGo 2.4.5\u003c/a\u003e – Full featured SFTP server.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/138090/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003etdl 0.8\u003c/a\u003e – Telegram file downloader.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 0px;  padding-left: 0px;\"\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eJobs\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138091/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eFind a Job Through Hired\u003c/a\u003e\u003c/span\u003e — Hired makes job hunting easy-instead of chasing recruiters, companies approach you with salary details up front. Create a free profile now.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eHired\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e🧑‍💻 Got a job listing to share? \u003cem\u003e\u003ca href=\"https://golangweekly.com/link/138092/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eHere's how\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e🕰    ICYMI \u003cspan style=\"text-transform: none; font-weight: 400;\"\u003e(\u003cem\u003eSome older stuff we might have missed\u003c/em\u003e)\u003c/span\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138093/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eGitHub Actions and Go\u003c/a\u003e\u003c/span\u003e — A CI workflow for Go you can reuse and tailor to your own needs. See the \u003ca href=\"https://golangweekly.com/link/138094/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003efinal \u003ccode\u003ebuild.yml\u003c/code\u003e.\u003c/a\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eOleg Kovalov\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138095/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eComprehensive Guide to Testing in Go\u003c/a\u003e\u003c/span\u003e — Covers things like table-driven tests, fuzzing, and parallel tests.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eAlexandre Couëdelo\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138096/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eEfficiently Writing Binary Data\u003c/a\u003e\u003c/span\u003e — \u003cem\u003e..or speeding up writing binary data in Go by 14x.\u003c/em\u003e Serializing data structures is a common need, but in some cases you may need a more efficient option than \u003ccode\u003ebinary.Write\u003c/code\u003e.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eJavier Honduvilla Coto\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/138097/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eSpeeding Up a CLI App with Concurrency\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eMichael Cuffaro\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n  \u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n\n\n\n\u003cimg src=\"https://golangweekly.com/open/455/rss\" width=\"1\" height=\"1\" /\u003e",
    "date": "2023-04-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c73e5567d825c2155314d33523e95d2e",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "SetMemoryLimit but still OOMKilled (Out of memory killed)",
    "url": "https://forum.golangbridge.org/t/setmemorylimit-but-still-oomkilled-out-of-memory-killed/31268#post_3",
    "resume": " \u003cp\u003eRead the 3rd paragraph here \u003ca href=\"https://pkg.go.dev/runtime/debug#SetMemoryLimit\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003edebug package - runtime/debug - Go Packages\u003c/a\u003e.  It explains examples of memory usage that is outside the control of \u003ccode\u003eSetMemoryLimit\u003c/code\u003e.  That’s likely what you need to look for.\u003c/p\u003e ",
    "date": "2023-04-10T23:19:02Z",
    "vote": 0
  },
  {
    "id": "3fdeb97ad4aeadfe6d6d2fd842506f79",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is there a library or tool I can use to avoid manually setting json keys i.e. ‘json:”name”’ next to fields in structs?",
    "url": "https://www.reddit.com/r/golang/comments/12hydek/is_there_a_library_or_tool_i_can_use_to_avoid/",
    "resume": "",
    "date": "2023-04-10T22:17:07Z",
    "vote": 0
  },
  {
    "id": "680f2621a78afcee2c47e5e36ffdb8c4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to secure POST API endpoint getting rich text editor HTML string",
    "url": "https://www.reddit.com/r/golang/comments/12hw43u/how_to_secure_post_api_endpoint_getting_rich_text/",
    "resume": "",
    "date": "2023-04-10T21:01:43Z",
    "vote": 0
  },
  {
    "id": "0f8c3c509bb07605f87f242a73e7d21e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I am receiving HTML format instead of JSON format.",
    "url": "https://www.reddit.com/r/golang/comments/12hufsw/i_am_receiving_html_format_instead_of_json_format/",
    "resume": "",
    "date": "2023-04-10T20:06:29Z",
    "vote": 0
  },
  {
    "id": "50f62faf0879e619ab87f612024a948f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "seekr web based all in one OSINT tool version 0.2.3 released",
    "url": "https://www.reddit.com/r/golang/comments/12hu2ya/seekr_web_based_all_in_one_osint_tool_version_023/",
    "resume": "",
    "date": "2023-04-10T19:55:11Z",
    "vote": 0
  },
  {
    "id": "4afc09f133b63009a7a5f3cd23e4d3ea",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does Go require complex Build Automation Tools beyond Makefile?",
    "url": "https://www.reddit.com/r/golang/comments/12htuf6/does_go_require_complex_build_automation_tools/",
    "resume": "",
    "date": "2023-04-10T19:47:11Z",
    "vote": 0
  },
  {
    "id": "8e580e61ea918ece418bb45927047351",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Annoyance at Go local package imports",
    "url": "https://www.reddit.com/r/golang/comments/12hsaoe/annoyance_at_go_local_package_imports/",
    "resume": "",
    "date": "2023-04-10T18:57:08Z",
    "vote": 0
  },
  {
    "id": "840f50ee83a80268e4fd5ed25139d19e",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "SetMemoryLimit but still OOMKilled (Out of memory killed)",
    "url": "https://forum.golangbridge.org/t/setmemorylimit-but-still-oomkilled-out-of-memory-killed/31268#post_2",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"an.dinh\" data-post=\"1\" data-topic=\"31268\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/letter_avatar_proxy/v4/letter/a/22d042/40.png\" class=\"avatar\"\u003e an.dinh:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGB and SetMemoryLimit 3.5GB to avoid pod OOMKil\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eWhy is it using so much memory ? Can you increase the pod limit ?\u003c/p\u003e ",
    "date": "2023-04-10T18:10:15Z",
    "vote": 0
  },
  {
    "id": "6232847ce59cc375c96685a96cd2d2b8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Troubleshooting failed schema migrations with Atlas",
    "url": "https://www.reddit.com/r/golang/comments/12hny10/troubleshooting_failed_schema_migrations_with/",
    "resume": "",
    "date": "2023-04-10T16:29:48Z",
    "vote": 0
  },
  {
    "id": "7d6815d497f57a0aa4d3ef05eb45c426",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Write integration tests with dockertest in Golang",
    "url": "https://www.reddit.com/r/golang/comments/12hn3kt/write_integration_tests_with_dockertest_in_golang/",
    "resume": "",
    "date": "2023-04-10T16:01:06Z",
    "vote": 0
  },
  {
    "id": "1fb89d9f4465299f360a784254c9a3f5",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Go development for your startup",
    "url": "https://www.youtube.com/watch?v=Gp3iKZMW21g",
    "resume": "",
    "date": "2023-04-10T16:00:09Z",
    "vote": 0
  },
  {
    "id": "c547d46d023515a3038ee7db31d0e883",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Design workflows of x/exp/slog handlers: pipeline and fanout",
    "url": "https://www.reddit.com/r/golang/comments/12hluwm/design_workflows_of_xexpslog_handlers_pipeline/",
    "resume": "",
    "date": "2023-04-10T15:17:57Z",
    "vote": 0
  },
  {
    "id": "acffe760bafa6964293dfde3c16d3581",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "what's your recommended router? chi, mux, something else?",
    "url": "https://www.reddit.com/r/golang/comments/12hl7x7/whats_your_recommended_router_chi_mux_something/",
    "resume": "",
    "date": "2023-04-10T14:55:20Z",
    "vote": 0
  },
  {
    "id": "56b8c3e43168f302ed62c62555c0e6d6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang is the most payed programming language in AI space",
    "url": "https://www.reddit.com/r/golang/comments/12hkjeu/golang_is_the_most_payed_programming_language_in/",
    "resume": "",
    "date": "2023-04-10T14:31:20Z",
    "vote": 0
  },
  {
    "id": "3e32153b0c36927f83612a53f2b0e6a6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Web Development em Go - Parte 09 - Usando o padrão MVC com Go. (Language: PT-BR)",
    "url": "https://www.reddit.com/r/golang/comments/12hh9z4/web_development_em_go_parte_09_usando_o_padrão/",
    "resume": "",
    "date": "2023-04-10T12:26:01Z",
    "vote": 0
  },
  {
    "id": "2bb0d46bb7c72291e973cea3db381e19",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Wails multiple pages",
    "url": "https://www.reddit.com/r/golang/comments/12hc0i5/wails_multiple_pages/",
    "resume": "",
    "date": "2023-04-10T08:26:37Z",
    "vote": 0
  },
  {
    "id": "2657b2b7daa62161f93061513c03a2d2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Release v1.2.0 · gobwas/ws - WebSocket library for Go.",
    "url": "https://www.reddit.com/r/golang/comments/12hbhxr/release_v120_gobwasws_websocket_library_for_go/",
    "resume": "",
    "date": "2023-04-10T08:02:36Z",
    "vote": 0
  },
  {
    "id": "b08b536bef8bce15ef0fd7eff76ff4cc",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I am the Co-founder of Video SDK, We are Live on Product Hunt. AMA!",
    "url": "https://www.reddit.com/r/golang/comments/12hbad2/i_am_the_cofounder_of_video_sdk_we_are_live_on/",
    "resume": "",
    "date": "2023-04-10T07:52:47Z",
    "vote": 0
  },
  {
    "id": "958098096064ac365774c42ccda97e35",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What does ./... mean when running commands from a binary?",
    "url": "https://www.reddit.com/r/golang/comments/12h9b9s/what_does_mean_when_running_commands_from_a_binary/",
    "resume": "",
    "date": "2023-04-10T06:14:48Z",
    "vote": 0
  },
  {
    "id": "d12ddd58e8afc40294a2bb50ff582739",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Check to see if JSON contains something",
    "url": "https://www.reddit.com/r/golang/comments/12h86z4/check_to_see_if_json_contains_something/",
    "resume": "",
    "date": "2023-04-10T05:21:45Z",
    "vote": 0
  },
  {
    "id": "3efcfac513b33fc150456dc5131cfcd0",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "SetMemoryLimit but still OOMKilled (Out of memory killed)",
    "url": "https://forum.golangbridge.org/t/setmemorylimit-but-still-oomkilled-out-of-memory-killed/31268#post_1",
    "resume": " \u003cp\u003eI have a go server that has to serve heavy traffic. I use pod k8s limited to 5GB and SetMemoryLimit 3.5GB to avoid pod OOMKilled (Out of memory killed) but it still happens. Maybe I misunderstood how it works, can anyone help me? I\u003c/p\u003e ",
    "date": "2023-04-10T03:05:04Z",
    "vote": 0
  },
  {
    "id": "6c2a077139458d7612882c76a445074b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Concurrency In Golang",
    "url": "https://www.reddit.com/r/golang/comments/12h4zm7/concurrency_in_golang/",
    "resume": "",
    "date": "2023-04-10T03:00:32Z",
    "vote": 0
  },
  {
    "id": "ca49b4e431aee8794dbd36d053fdb342",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "creating dirs and files root level.",
    "url": "https://www.reddit.com/r/golang/comments/12h4d0j/creating_dirs_and_files_root_level/",
    "resume": "",
    "date": "2023-04-10T02:34:52Z",
    "vote": 0
  },
  {
    "id": "f9375f39a07447283837a549e5b4f7b0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Optional fields in struct for APIs and DevX",
    "url": "https://www.reddit.com/r/golang/comments/12gz2ar/optional_fields_in_struct_for_apis_and_devx/",
    "resume": "",
    "date": "2023-04-09T23:05:13Z",
    "vote": 0
  },
  {
    "id": "3c720f3d3c6d0abb543ace25695f365c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "cgpt: Command line OpenAI chat completion CLI.",
    "url": "https://www.reddit.com/r/golang/comments/12gxunm/cgpt_command_line_openai_chat_completion_cli/",
    "resume": "",
    "date": "2023-04-09T22:20:36Z",
    "vote": 0
  },
  {
    "id": "43856f4c41e9643e2ecec0d9a4ef2c82",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "[imcache] A generic in-memory cache Go library. Feedback appreciated.",
    "url": "https://www.reddit.com/r/golang/comments/12gvyqb/imcache_a_generic_inmemory_cache_go_library/",
    "resume": "",
    "date": "2023-04-09T21:13:20Z",
    "vote": 0
  },
  {
    "id": "5c53eba6697138de1323aaf90a5a040d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Tideland Go Actor v0.3.0 released",
    "url": "https://www.reddit.com/r/golang/comments/12gt2zy/tideland_go_actor_v030_released/",
    "resume": "",
    "date": "2023-04-09T19:30:11Z",
    "vote": 0
  },
  {
    "id": "9b671b40e7fe6cadc4a924c140de31b8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Create multi-line loading bars?",
    "url": "https://www.reddit.com/r/golang/comments/12gpyza/create_multiline_loading_bars/",
    "resume": "",
    "date": "2023-04-09T17:39:08Z",
    "vote": 0
  },
  {
    "id": "65b768b68f2279fca40c3555f9e72f84",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Excelize 2.7.1 Released - Powerful open-source library for spreadsheet (Excel) document",
    "url": "https://forum.golangbridge.org/t/excelize-2-7-1-released-powerful-open-source-library-for-spreadsheet-excel-document/31266#post_1",
    "resume": " \u003cp\u003e\u003c/p\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://forum.golangbridge.org/uploads/default/original/2X/d/dc013f63679834d65115ba8b96d96205556ae133.png\" data-download-href=\"https://forum.golangbridge.org/uploads/default/dc013f63679834d65115ba8b96d96205556ae133\" title=\"Excelize 2.7.1 Released|333*250\"\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/optimized/2X/d/dc013f63679834d65115ba8b96d96205556ae133_2_666x500.png\" alt=\"Excelize 2.7.1 Released|333*250\" data-base62-sha1=\"vofIqc7mzxKjybXrVpFjgGCdJhF\" width=\"666\" height=\"500\" srcset=\"https://forum.golangbridge.org/uploads/default/optimized/2X/d/dc013f63679834d65115ba8b96d96205556ae133_2_666x500.png, https://forum.golangbridge.org/uploads/default/optimized/2X/d/dc013f63679834d65115ba8b96d96205556ae133_2_999x750.png 1.5x, https://forum.golangbridge.org/uploads/default/optimized/2X/d/dc013f63679834d65115ba8b96d96205556ae133_2_1332x1000.png 2x\" data-dominant-color=\"87E6B9\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eExcelize is a library written in pure Go providing a set of functions that allow you to write to and read from XLAM / XLSM / XLSX / XLTM / XLTX files. Supports reading and writing spreadsheet documents generated by Microsoft Excel™ 2007 and later. Supports complex components by high compatibility, and provided streaming API for generating or reading data from a worksheet with huge amounts of data.\u003c/p\u003e\n\u003cp\u003eGitHub: \u003ca href=\"https://github.com/xuri/excelize\" rel=\"noopener nofollow ugc\"\u003egithub.com/xuri/excelize\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eWe are pleased to announce the release of version 2.7.1. Featured are a handful of new areas of functionality and numerous bug fixes.\u003c/p\u003e\n\u003ch2\u003e\n\u003ca name=\"release-notes-1\" class=\"anchor\" href=\"https://forum.golangbridge.org#release-notes-1\"\u003e\u003c/a\u003eRelease Notes\u003c/h2\u003e\n\u003cp\u003eThe most notable changes in this release are:\u003c/p\u003e\n\u003ch3\u003e\n\u003ca name=\"breaking-change-2\" class=\"anchor\" href=\"https://forum.golangbridge.org#breaking-change-2\"\u003e\u003c/a\u003eBreaking Change\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRemove the \u003ccode\u003eColor\u003c/code\u003e field in the \u003ccode\u003eChartLine\u003c/code\u003e data type\u003c/li\u003e\n\u003cli\u003eReplace the data type \u003ccode\u003eShapeParagraph\u003c/code\u003e with \u003ccode\u003eRichTextRun\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eRemove the \u003ccode\u003eColor\u003c/code\u003e field from the type \u003ccode\u003eShape\u003c/code\u003e, and uses the \u003ccode\u003eFill\u003c/code\u003e instead of it\u003c/li\u003e\n\u003cli\u003eRemove the exported type \u003ccode\u003eAutoFilterListOptions\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eRename the exported type \u003ccode\u003eTableOptions\u003c/code\u003e to \u003ccode\u003eTable\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddChart\u003c/code\u003e function require using \u003ccode\u003eChartType\u003c/code\u003e enumeration value to specify the chart type\u003c/li\u003e\n\u003cli\u003eChange 7 functions signature:\n\u003cul\u003e\n\u003cli\u003eChange the \u003ccode\u003efunc (f *File) AutoFilter(sheet, rangeRef string, opts *AutoFilterOptions) error\u003c/code\u003e to \u003ccode\u003efunc (f *File) AutoFilter(sheet, rangeRef string, opts []AutoFilterOptions) error\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eChange the \u003ccode\u003efunc (f *File) AddPictureFromBytes(sheet, cell, name, extension string, file []byte, opts *GraphicOptions) error\u003c/code\u003e to \u003ccode\u003efunc (f *File) AddPictureFromBytes(sheet, cell string, pic *Picture) error\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eChange the \u003ccode\u003efunc (f *File) GetPicture(sheet, cell string) (string, []byte, error)\u003c/code\u003e to \u003ccode\u003efunc (f *File) GetPictures(sheet, cell string) ([]Picture, error)\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eChange the \u003ccode\u003efunc (f *File) AddVBAProject(bin string) error\u003c/code\u003e to \u003ccode\u003efunc (f *File) AddVBAProject(file []byte) error\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eChange the \u003ccode\u003efunc (f *File) GetComments() (map[string][]Comment, error)\u003c/code\u003e to \u003ccode\u003efunc (f *File) GetComments(sheet string) ([]Comment, error)\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eChange the \u003ccode\u003efunc (f *File) AddTable(sheet, rangeRef string, opts *TableOptions) error\u003c/code\u003e to \u003ccode\u003efunc (f *File) AddTable(sheet string, table *Table) error\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eChange the \u003ccode\u003efunc (sw *StreamWriter) AddTable(rangeRef string, opts *TableOptions) error\u003c/code\u003e to \u003ccode\u003efunc (sw *StreamWriter) AddTable(table *Table) error\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\n\u003ca name=\"notable-features-3\" class=\"anchor\" href=\"https://forum.golangbridge.org#notable-features-3\"\u003e\u003c/a\u003eNotable Features\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd new functions \u003ccode\u003eSetSheetDimension\u003c/code\u003e and \u003ccode\u003eGetSheetDimension\u003c/code\u003e for workbook dimension supports, related issue \u003cspan class=\"hashtag\"\u003e#1463\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eNewStyle\u003c/code\u003e function support to create of 17 kinds of fill variants styles\u003c/li\u003e\n\u003cli\u003eIncrease max cell styles limit to 65430\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddPicture\u003c/code\u003e function allowing insert BMP format images\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eGetPictures\u003c/code\u003e function support to get multiple images in a cell\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eSetConditionalFormat\u003c/code\u003e function support to creating a conditional format with a “stop if true” or “icon sets” rule\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eSetConditionalFormat\u003c/code\u003e function support to set border color and create solid color for the color data bar, related issue \u003cspan class=\"hashtag\"\u003e#1462\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddChart\u003c/code\u003e function support to set the format for the chart data series solid fill, related issue \u003cspan class=\"hashtag\"\u003e#1474\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddChart\u003c/code\u003e function support to set the bubble size in a data series\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddChart\u003c/code\u003e function support to specifies the values in second plot for the bar/pie of pie chart\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddChart\u003c/code\u003e function support to set number format for chart data labels and axis, related issue \u003cspan class=\"hashtag\"\u003e#1499\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddTable\u003c/code\u003e function support to specify if show header row of the table when create the table\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAddTable\u003c/code\u003e function support to validate table name, and added a new error constant \u003ccode\u003eErrTableNameLength\u003c/code\u003e, related issue \u003cspan class=\"hashtag\"\u003e#1468\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eAutoFilter\u003c/code\u003e function support to add multiple filter columns when create auto filter\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eCalcCellValue\u003c/code\u003e function support to specify if applying number format style for the cell calculation result\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eCalcCellValue\u003c/code\u003e function support double-byte chars for formula functions: LEFT, LEN, LENB, MID, MIDB, RIGHT and RIGHTB, related issue \u003cspan class=\"hashtag\"\u003e#1476\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eCalcCellValue\u003c/code\u003e function now returns formula error string in the result, and using the error message in returns error, related issue \u003cspan class=\"hashtag\"\u003e#1490\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eCase-insensitive for the image file extension name, related issue \u003cspan class=\"hashtag\"\u003e#1503\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe stream writer will be skip set cell value when got nil value, related issue \u003cspan class=\"hashtag\"\u003e#756\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eGetCellHyperLink\u003c/code\u003e function support get cell hyperlink for merged cells\u003c/li\u003e\n\u003cli\u003eAdd new exported data type \u003ccode\u003eChartType\u003c/code\u003e for represents chart type enumeration\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\n\u003ca name=\"improve-the-compatibility-4\" class=\"anchor\" href=\"https://forum.golangbridge.org#improve-the-compatibility-4\"\u003e\u003c/a\u003eImprove the Compatibility\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd support for workbook function groups\u003c/li\u003e\n\u003cli\u003eAdd support for strict theme namespace, related issue \u003cspan class=\"hashtag\"\u003e#1447\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eFix panic caused by the workbook relationship part not exist\u003c/li\u003e\n\u003cli\u003eImprove compatibility with SST index which contains blank characters, related issue \u003cspan class=\"hashtag\"\u003e#1508\u003c/span\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\n\u003ca name=\"bug-fixes-5\" class=\"anchor\" href=\"https://forum.golangbridge.org#bug-fixes-5\"\u003e\u003c/a\u003eBug Fixes\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eFix decimal number format round issue in some cases\u003c/li\u003e\n\u003cli\u003eFix incorrect cell type when modifying string cell with the time number, resolve issue \u003cspan class=\"hashtag\"\u003e#1464\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eFix cell resolver caused incorrect calculation result, resolve issue \u003cspan class=\"hashtag\"\u003e#1469\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eFix conditional format data bar min/max value doesn’t work, resolve issue \u003cspan class=\"hashtag\"\u003e#1492\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eSupports 0 row height and column width, resolve issue \u003cspan class=\"hashtag\"\u003e#1461\u003c/span\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\n\u003ca name=\"performance-6\" class=\"anchor\" href=\"https://forum.golangbridge.org#performance-6\"\u003e\u003c/a\u003ePerformance\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eImprove performance for apply number format with month name, related issue \u003cspan class=\"hashtag\"\u003e#1455\u003c/span\u003e\n\u003c/li\u003e\n\u003cli\u003eSpeed up for checking merged cells, related issue \u003cspan class=\"hashtag\"\u003e#1448\u003c/span\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\n\u003ca name=\"miscellaneous-7\" class=\"anchor\" href=\"https://forum.golangbridge.org#miscellaneous-7\"\u003e\u003c/a\u003eMiscellaneous\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eA pure WebAssembly / Javascript port of Go Excelize library named \u003ca href=\"https://github.com/xuri/excelize-wasm\" rel=\"noopener nofollow ugc\"\u003eexcelize-wasm\u003c/a\u003e NPM package has been production-ready use\u003c/li\u003e\n\u003cli\u003eThe dependencies module has been updated\u003c/li\u003e\n\u003cli\u003eUnit tests and godoc updated\u003c/li\u003e\n\u003cli\u003eUsing the specialized name in variables and functions\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://xuri.me/excelize\" rel=\"noopener nofollow ugc\"\u003eDocumentation website\u003c/a\u003e with multilingual: Arabic, German, Spanish, English, French, Russian, Chinese, Japanese, and Korean, which has been updated\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\n\u003ca name=\"thank-you-8\" class=\"anchor\" href=\"https://forum.golangbridge.org#thank-you-8\"\u003e\u003c/a\u003eThank you\u003c/h3\u003e\n\u003cp\u003eThanks for all the contributors to Excelize. Below is a list of contributors that have code contributions in this version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eliron-l (Liron Levin)\u003c/li\u003e\n\u003cli\u003enathj07 (Nathan Davies)\u003c/li\u003e\n\u003cli\u003eJosh-Weston (Josh Weston)\u003c/li\u003e\n\u003cli\u003ejaby\u003c/li\u003e\n\u003cli\u003eFlowingSPDG (Shugo Kawamura)\u003c/li\u003e\n\u003cli\u003ebarismar (Baris Mar Aziz)\u003c/li\u003e\n\u003cli\u003edoingNobb (张涛)\u003c/li\u003e\n\u003cli\u003erpoetrap (Rizki Putra)\u003c/li\u003e\n\u003cli\u003ehuangshaokun\u003c/li\u003e\n\u003cli\u003eCHANTXU64 (ChantXu64)\u003c/li\u003e\n\u003cli\u003eplayGitboy\u003c/li\u003e\n\u003c/ul\u003e ",
    "date": "2023-04-09T16:49:20Z",
    "vote": 0
  },
  {
    "id": "a1c2c72dc9650cd155de7f0176e92584",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How complex/big can I make games in Go?",
    "url": "https://www.reddit.com/r/golang/comments/12goerl/how_complexbig_can_i_make_games_in_go/",
    "resume": "",
    "date": "2023-04-09T16:41:02Z",
    "vote": 0
  },
  {
    "id": "e9ffc062199ccb19880f11a69fdca6b4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Excelize 2.7.1 Released - Powerful open-source library for spreadsheet (Excel) document",
    "url": "https://www.reddit.com/r/golang/comments/12gnrp4/excelize_271_released_powerful_opensource_library/",
    "resume": "",
    "date": "2023-04-09T16:16:57Z",
    "vote": 0
  },
  {
    "id": "fd7db060eb8ca3f0a62e8a4aa3221581",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why GOPATH unhidden directory in $HOME?",
    "url": "https://forum.golangbridge.org/t/why-gopath-unhidden-directory-in-home/31249#post_3",
    "resume": " \u003cp\u003eIt may be a relic, but many installs that have a go dependency look to GOPATH. Learned just yesterday I hadn’t put \u003cem\u003emy\u003c/em\u003e GOPATH everywhere it needed to be when installing kepubify.\u003c/p\u003e ",
    "date": "2023-04-09T16:15:32Z",
    "vote": 0
  },
  {
    "id": "2cd2642836647b0a6b3aa21e36d8ce8c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Getting multiple values for the same query parameter",
    "url": "https://www.reddit.com/r/golang/comments/12gmht7/getting_multiple_values_for_the_same_query/",
    "resume": "",
    "date": "2023-04-09T15:27:56Z",
    "vote": 0
  },
  {
    "id": "efd1919d232c3d9f8c2734e92c80fa6c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "[xslog] Repo with slog library handlers for Uber Zap, Sentry and OpenTelemetry tracing events. Feedback appreciated!",
    "url": "https://www.reddit.com/r/golang/comments/12glgt3/xslog_repo_with_slog_library_handlers_for_uber/",
    "resume": "",
    "date": "2023-04-09T14:46:58Z",
    "vote": 0
  },
  {
    "id": "c37d68d9c3afe9902a53e57503df3ee1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best approach for a monolithic web app?",
    "url": "https://www.reddit.com/r/golang/comments/12gk47y/best_approach_for_a_monolithic_web_app/",
    "resume": "",
    "date": "2023-04-09T13:54:30Z",
    "vote": 0
  },
  {
    "id": "d5f1b918bb80c5c89605089a873b0f47",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "gopls package completion of 3rd party packages stops working when vendoring dependencies. Using neovim with nvim-cmp.",
    "url": "https://www.reddit.com/r/golang/comments/12gjqdy/gopls_package_completion_of_3rd_party_packages/",
    "resume": "",
    "date": "2023-04-09T13:39:33Z",
    "vote": 0
  },
  {
    "id": "bf5f2ce8b6ec5b44c2ab1211f0ad0650",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Code review?",
    "url": "https://www.reddit.com/r/golang/comments/12gj81x/code_review/",
    "resume": "",
    "date": "2023-04-09T13:18:22Z",
    "vote": 0
  },
  {
    "id": "7e3b995c3d16742c4911d274e8fbc82f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What does bind mean in go lang?",
    "url": "https://www.reddit.com/r/golang/comments/12gi8cs/what_does_bind_mean_in_go_lang/",
    "resume": "",
    "date": "2023-04-09T12:35:33Z",
    "vote": 0
  },
  {
    "id": "0fdb6c5240a8e40a01407e187987c56b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "(some sort of) schema validation",
    "url": "https://www.reddit.com/r/golang/comments/12gi6g9/some_sort_of_schema_validation/",
    "resume": "",
    "date": "2023-04-09T12:33:23Z",
    "vote": 0
  },
  {
    "id": "4054de5af660da1c547b12e0ed096bba",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Checking when http client has disconnected",
    "url": "https://www.reddit.com/r/golang/comments/12ghtuf/checking_when_http_client_has_disconnected/",
    "resume": "",
    "date": "2023-04-09T12:17:48Z",
    "vote": 0
  },
  {
    "id": "77fb9a96ed85d231c4a71f75b5cdd7f9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "[gcalc] A simple calculater in golang",
    "url": "https://www.reddit.com/r/golang/comments/12gh4do/gcalc_a_simple_calculater_in_golang/",
    "resume": "",
    "date": "2023-04-09T11:44:45Z",
    "vote": 0
  },
  {
    "id": "fb7ea2626b733920c5685d8d055ea06d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Understand the execution flow of the following program",
    "url": "https://forum.golangbridge.org/t/understand-the-execution-flow-of-the-following-program/31256#post_2",
    "resume": " \u003cp\u003eHi and welcome \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e ! Go is eager and static but \u003cstrong\u003enot a truly  deterministic programming language\u003c/strong\u003e. So the result is 48 and 48 because \u003ccode\u003ethink(\u0026amp;1)\u003c/code\u003e is  executed before \u003ccode\u003e(i/2)\u003c/code\u003e, or rather: \u003ccode\u003esum1  = (7) + 41\u003c/code\u003e. For \u003ccode\u003esum2\u003c/code\u003e is the same. Go doesn’t force the evaluation of the right or left operand in the sum expression. This behavior seems error prone but pushes you a lot to write more clear code, decomposing complex statements and expressions.\u003cbr\u003e\nFor more informations let’s see \u003ca href=\"https://go101.org/article/evaluation-orders.html\" rel=\"noopener nofollow ugc\"\u003ethis\u003c/a\u003e.\u003c/p\u003e ",
    "date": "2023-04-09T11:20:47Z",
    "vote": 0
  },
  {
    "id": "2fc681457319d6f026cfc0445721edbe",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Recommendations for Learning Test-Driven Development (TDD) in Go?",
    "url": "https://www.reddit.com/r/golang/comments/12ggdt9/recommendations_for_learning_testdriven/",
    "resume": "",
    "date": "2023-04-09T11:08:39Z",
    "vote": 0
  },
  {
    "id": "50d2d67a2e9e64f73d2460cec07d8726",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why Go is the Future of Programming? - Advantages of Golang",
    "url": "https://forum.golangbridge.org/t/why-go-is-the-future-of-programming-advantages-of-golang/31252#post_2",
    "resume": " \u003cp\u003elame clickbait title, did not read the post\u003c/p\u003e ",
    "date": "2023-04-09T10:50:25Z",
    "vote": 0
  },
  {
    "id": "eef4c25a8602c9f2c3fd29d3f623c4b8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go is great. The code I wrote in 2016 is still easy to understand and extend. A simple case study",
    "url": "https://www.reddit.com/r/golang/comments/12gddba/go_is_great_the_code_i_wrote_in_2016_is_still/",
    "resume": "",
    "date": "2023-04-09T08:28:15Z",
    "vote": 0
  },
  {
    "id": "c7e06df1d98d0a007e2de30bcc3c1ef4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Robust backend framework for go",
    "url": "https://www.reddit.com/r/golang/comments/12gcj6d/robust_backend_framework_for_go/",
    "resume": "",
    "date": "2023-04-09T07:43:08Z",
    "vote": 0
  },
  {
    "id": "efb9f11dd4a59e31b2f45628fcb643ed",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Outdated Java Comparisons",
    "url": "https://www.reddit.com/r/golang/comments/12gc228/outdated_java_comparisons/",
    "resume": "",
    "date": "2023-04-09T07:17:20Z",
    "vote": 0
  },
  {
    "id": "1c75d2f3a236c28d10e8243458eabcbf",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Updating Only Database Fields that Have Updates",
    "url": "https://www.reddit.com/r/golang/comments/12gathx/updating_only_database_fields_that_have_updates/",
    "resume": "",
    "date": "2023-04-09T06:12:26Z",
    "vote": 0
  },
  {
    "id": "f92bac0df566d5503ce0958fd12c6212",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is it even possible to get Fresher/Intern roles as a Golang developer/Backend developer",
    "url": "https://www.reddit.com/r/golang/comments/12gadh1/is_it_even_possible_to_get_fresherintern_roles_as/",
    "resume": "",
    "date": "2023-04-09T05:49:52Z",
    "vote": 0
  },
  {
    "id": "02ca6f6a80a3f3622e8df196e15ca0cb",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Making Web App into docker container",
    "url": "https://www.reddit.com/r/golang/comments/12g9v0b/making_web_app_into_docker_container/",
    "resume": "",
    "date": "2023-04-09T05:23:32Z",
    "vote": 0
  },
  {
    "id": "6c9823637889d80bf340dfbf350f2014",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go in depth youtube channels?",
    "url": "https://www.reddit.com/r/golang/comments/12g9mxy/go_in_depth_youtube_channels/",
    "resume": "",
    "date": "2023-04-09T05:12:20Z",
    "vote": 0
  },
  {
    "id": "5c78f24d7a3b3ceba87ed114db1a3400",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "Become a Golang Pro with 10 “Defer” Tricks",
    "url": "https://golang.ch/become-a-golang-pro-with-10-defer-tricks/",
    "resume": "\u003cp\u003eGo’s defer keyword is a powerful tool that allows you to specify a function call to be executed later, usually after the surrounding function has returned. Although it may seem like a simple concept, the defer keyword can be used in several advanced ways to improve the efficiency and reliability of your Go code. This [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/become-a-golang-pro-with-10-defer-tricks/\"\u003eBecome a Golang Pro with 10 “Defer” Tricks\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/become-a-golang-pro-with-10-defer-tricks/\"\u003eBecome a Golang Pro with 10 “Defer” Tricks\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-04-09T04:31:29Z",
    "vote": 0
  },
  {
    "id": "d30851fb52172bc8e687746cd394fcff",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Pardon my stupid yet very basic question",
    "url": "https://www.reddit.com/r/golang/comments/12g6wlo/pardon_my_stupid_yet_very_basic_question/",
    "resume": "",
    "date": "2023-04-09T03:03:00Z",
    "vote": 0
  },
  {
    "id": "f7f1c157364f822cf9627e3d5565739d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What’s the way to block others from embedding your strict",
    "url": "https://www.reddit.com/r/golang/comments/12g3l4m/whats_the_way_to_block_others_from_embedding_your/",
    "resume": "",
    "date": "2023-04-09T00:35:14Z",
    "vote": 0
  },
  {
    "id": "3524ff1fa8e15bc6aed376b5339dffc7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What are some common use cases of etcd?",
    "url": "https://www.reddit.com/r/golang/comments/12g31ew/what_are_some_common_use_cases_of_etcd/",
    "resume": "",
    "date": "2023-04-09T00:11:19Z",
    "vote": 0
  },
  {
    "id": "8f6a31dc3926cd63c2d4005063a24e33",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to become a Golang Pro Developer",
    "url": "https://www.reddit.com/r/golang/comments/12g28np/how_to_become_a_golang_pro_developer/",
    "resume": "",
    "date": "2023-04-08T23:38:02Z",
    "vote": 0
  },
  {
    "id": "7bf8978eca758c06ecce01c1b28141e5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "SSE http handler detect disconnect",
    "url": "https://www.reddit.com/r/golang/comments/12fy5pa/sse_http_handler_detect_disconnect/",
    "resume": "",
    "date": "2023-04-08T20:55:57Z",
    "vote": 0
  },
  {
    "id": "35d54ba4ea36be1d8b37d90368108967",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What is the recommended image struct for JPEG processing?",
    "url": "https://www.reddit.com/r/golang/comments/12fxb8v/what_is_the_recommended_image_struct_for_jpeg/",
    "resume": "",
    "date": "2023-04-08T20:22:43Z",
    "vote": 0
  },
  {
    "id": "995f127fc4e909038ffab9f96004715a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "3d with Ebitengine?",
    "url": "https://www.reddit.com/r/golang/comments/12fx55f/3d_with_ebitengine/",
    "resume": "",
    "date": "2023-04-08T20:16:10Z",
    "vote": 0
  },
  {
    "id": "62335eba23a890506bfcf88e4c9fc003",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Understand the execution flow of the following program",
    "url": "https://forum.golangbridge.org/t/understand-the-execution-flow-of-the-following-program/31256#post_1",
    "resume": " \u003cp\u003efunc main() {\u003c/p\u003e\n\u003cp\u003ei, j := 10, 10\u003c/p\u003e\n\u003cp\u003evar sum1, sum2 int\u003c/p\u003e\n\u003cp\u003esum1 = (i / 2) + think(\u0026amp;i)\u003c/p\u003e\n\u003cp\u003esum2 = think(\u0026amp;j) + (i / 2)\u003c/p\u003e\n\u003cp\u003efmt.Printf(“Value of sum1 is %d and sum2 is %d”, sum1, sum2)\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003efunc think(k *int) int {\u003c/p\u003e\n\u003cp\u003e*k += 4\u003c/p\u003e\n\u003cp\u003ereturn 3*(*k) - 1\u003c/p\u003e\n\u003cp\u003e}\u003cbr\u003e\nThe output from this short program is sum1=sum2=48. How is go evaluating it?\u003c/p\u003e ",
    "date": "2023-04-08T19:15:11Z",
    "vote": 0
  },
  {
    "id": "f07e25c5605b171da8ed8cd76a3dbbde",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go-based Startups, Please Share Your Experience",
    "url": "https://www.reddit.com/r/golang/comments/12fvi7e/gobased_startups_please_share_your_experience/",
    "resume": "",
    "date": "2023-04-08T19:14:26Z",
    "vote": 0
  },
  {
    "id": "a9e0692fbf8af138c88e08f7a3118ffd",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Any recommended open source project for beginners?",
    "url": "https://forum.golangbridge.org/t/any-recommended-open-source-project-for-beginners/31253#post_1",
    "resume": " \u003cp\u003eI have started learning golang for more than 4 months now. I am looking for an open source project to contribute. Do you have any advices?\u003c/p\u003e ",
    "date": "2023-04-08T19:01:53Z",
    "vote": 0
  },
  {
    "id": "d7ed1b450ca472f54212e74759c65f72",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Make Java from Go",
    "url": "https://www.reddit.com/r/golang/comments/12fsi48/make_java_from_go/",
    "resume": "",
    "date": "2023-04-08T17:27:16Z",
    "vote": 0
  },
  {
    "id": "de4dacb63481fb2a158ac7d614e93a91",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Two golang template files but only one is getting rendered",
    "url": "https://www.reddit.com/r/golang/comments/12frysv/two_golang_template_files_but_only_one_is_getting/",
    "resume": "",
    "date": "2023-04-08T17:09:13Z",
    "vote": 0
  },
  {
    "id": "b1959223df4f4080e9c5ab2aaaad88c1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Do you typically use Docker as your dev environment?",
    "url": "https://www.reddit.com/r/golang/comments/12frsrf/do_you_typically_use_docker_as_your_dev/",
    "resume": "",
    "date": "2023-04-08T17:03:31Z",
    "vote": 0
  },
  {
    "id": "f730a7ec8e3682e263cf36f1ef45f0ab",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Pointer and Structs",
    "url": "https://www.reddit.com/r/golang/comments/12fpho7/pointer_and_structs/",
    "resume": "",
    "date": "2023-04-08T15:34:26Z",
    "vote": 0
  },
  {
    "id": "1fdc24c3849129b66412d333610442b3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Real-time events implementation with sse and pubsub",
    "url": "https://www.reddit.com/r/golang/comments/12ford8/realtime_events_implementation_with_sse_and_pubsub/",
    "resume": "",
    "date": "2023-04-08T15:05:29Z",
    "vote": 0
  },
  {
    "id": "9445f87a537e69406fb25e3c3a5b0169",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Returning png images and data from an api",
    "url": "https://www.reddit.com/r/golang/comments/12fogo4/returning_png_images_and_data_from_an_api/",
    "resume": "",
    "date": "2023-04-08T14:54:29Z",
    "vote": 0
  },
  {
    "id": "6f0c21355c6263f0364f3659934f13be",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why Go is the Future of Programming? - Advantages of Golang",
    "url": "https://forum.golangbridge.org/t/why-go-is-the-future-of-programming-advantages-of-golang/31252#post_1",
    "resume": " \u003cp\u003eHi, everyone!\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eWhich I have written bellow in my writings will be only same to or similar to the official writings already mentioned elsewhere. But I think this discussion will be necessary for everyone.\u003c/em\u003e\u003cbr\u003e\n\u003cem\u003e\u003cstrong\u003eLet’s put together all the specifics of Go’s advantages in this discussion as a Go developer!\u003c/strong\u003e\u003c/em\u003e\u003cbr\u003e\n\u003cem\u003eI want you to join this discussion and share advantages of Go compared to other programming languages that you have actually experienced  as a developer with examples.\u003c/em\u003e\u003cbr\u003e\n\u003cem\u003eOf course, official writings or analytics other than mentioned in my writings would be nice too.\u003c/em\u003e\u003cbr\u003e\n\u003cem\u003eIf you do, this discussion will convince all of us more that Go is the future of programming.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eGo, also known as Golang, is a relatively programming language that has grown exponentially in popularity over the last several years. Created by Google in 2009, it was designed to be simple, efficient, and scalable, with the goal of being able to handle large distributed systems. In this article, we’ll discuss the reasons why Go is the future of programming.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eConcurrency:\u003cbr\u003e\nOne of the most important features of Go is its ability to handle concurrency. Go was built from the ground up with concurrency in mind, making it an ideal language for building highly parallelized applications. Unlike other languages that rely on threads, which can be difficult to work with and require a lot of overhead, Go uses goroutines, which are lightweight threads that can be run concurrently without much effort. This makes it much easier to write concurrent code that is both efficient and maintainable.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePerformance:\u003cbr\u003e\nGo is fast. Really fast. Its compiled nature results in extremely performant applications. Startup time and throughput are generally better than what you would expect from interpreted languages like Python or even Java. And since it is statically typed, Go provides plenty of opportunities for early optimizations while running your application.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eScalability:\u003cbr\u003e\nGo is excellent for building large applications that need to scale. It is perfect for distributed systems, which is why companies like Google, Netflix, Uber, and Dropbox use Go extensively in their own infrastructure. Go’s scalability is its bread-and-butter. Whether you want to build web-sockets, microservices, big-data analytics pipelines, network gateways, Orchestration Layer, whatever, Go is the right choice!\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSimplicity:\u003cbr\u003e\nGo is simple, straightforward, and consistent in its syntax. Compared to many thousands of features in Java to get the job done, Go keeps the language specification minimalistic. The less complexity means fewer mistakes and happier developers.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e ",
    "date": "2023-04-08T14:20:06Z",
    "vote": 0
  },
  {
    "id": "fc654c395fe9702e1a3bdaddd44c27be",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go port of SQLite without CGo",
    "url": "https://www.reddit.com/r/golang/comments/12fnhwj/go_port_of_sqlite_without_cgo/",
    "resume": "",
    "date": "2023-04-08T14:19:07Z",
    "vote": 0
  },
  {
    "id": "61dd2df69365a6785d065e28d169f9f5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go 1.21 will (likely) have a static toolchain on Linux",
    "url": "https://www.reddit.com/r/golang/comments/12fn0y5/go_121_will_likely_have_a_static_toolchain_on/",
    "resume": "",
    "date": "2023-04-08T14:01:53Z",
    "vote": 0
  },
  {
    "id": "0389a9a5eb1a0dc76fed0246aa05e8fe",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why GOPATH unhidden directory in $HOME?",
    "url": "https://forum.golangbridge.org/t/why-gopath-unhidden-directory-in-home/31249#post_2",
    "resume": " \u003cp\u003eThe \u003ccode\u003eGOPATH\u003c/code\u003e is a relict from old days, which you used for active development back before modules got finalized. So I think until 1.14ish…\u003c/p\u003e\n\u003cp\u003eToday it’s indeed not more than a mix of go specific cache and state folders.\u003c/p\u003e\n\u003cp\u003eI would indeed favour to move it into \u003ccode\u003eXDG_DATA_HOME\u003c/code\u003e and \u003ccode\u003eXDG_CACHE_HOME\u003c/code\u003e respectively.\u003c/p\u003e ",
    "date": "2023-04-08T13:55:52Z",
    "vote": 0
  },
  {
    "id": "9ceb813048e5b63622d64d62085ad6db",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What's an ideal project structure for a Golang web service?",
    "url": "https://www.reddit.com/r/golang/comments/12fivj8/whats_an_ideal_project_structure_for_a_golang_web/",
    "resume": "",
    "date": "2023-04-08T11:16:52Z",
    "vote": 0
  },
  {
    "id": "8ba9eb69538a6b6ec0ca48352f21a151",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Api Gateway",
    "url": "https://www.reddit.com/r/golang/comments/12fijwx/api_gateway/",
    "resume": "",
    "date": "2023-04-08T11:01:01Z",
    "vote": 0
  },
  {
    "id": "9a667952fd560ab5d4af956e684d98a5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Crash course recommendation",
    "url": "https://www.reddit.com/r/golang/comments/12fi8lx/crash_course_recommendation/",
    "resume": "",
    "date": "2023-04-08T10:45:22Z",
    "vote": 0
  },
  {
    "id": "d5e00ff331bf3cc26639011731885f0e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "OSS vs. Closed - Managing Database Column Differences?",
    "url": "https://www.reddit.com/r/golang/comments/12fi17a/oss_vs_closed_managing_database_column_differences/",
    "resume": "",
    "date": "2023-04-08T10:34:57Z",
    "vote": 0
  },
  {
    "id": "3375ee834e86bb7b41d0621c772b80a4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "To point or not to point",
    "url": "https://www.reddit.com/r/golang/comments/12fg5ml/to_point_or_not_to_point/",
    "resume": "",
    "date": "2023-04-08T08:47:50Z",
    "vote": 0
  },
  {
    "id": "706e04ce875f2c631c45e0553186b6ba",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to measure reused or new connection per host for net/http using custom transport",
    "url": "https://www.reddit.com/r/golang/comments/12ff4uu/how_to_measure_reused_or_new_connection_per_host/",
    "resume": "",
    "date": "2023-04-08T07:49:36Z",
    "vote": 0
  },
  {
    "id": "f03cb20ea362aa14107c40154bfea7cd",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Deciding between Rust or Go for desktop applications",
    "url": "https://www.reddit.com/r/golang/comments/12fepkc/deciding_between_rust_or_go_for_desktop/",
    "resume": "",
    "date": "2023-04-08T07:23:41Z",
    "vote": 0
  },
  {
    "id": "8ca73f476803b5e02d16f88ae92d64d1",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why GOPATH unhidden directory in $HOME?",
    "url": "https://forum.golangbridge.org/t/why-gopath-unhidden-directory-in-home/31249#post_1",
    "resume": " \u003cp\u003eWhy is the default gopath an unhidden directory dumped in my home folder? With some files my user cannot move/edit? At the very least it should be a hidden directory. Preferably unhidden under .local or .config or .cache or wherever makes more sense than unhidden in the root of $HOME.\u003c/p\u003e\n\u003cp\u003eI’ve moved it to .go and ‘go env -w GOPATH=$HOME/.go’ but from the sound of ‘go help gopath’ this seems like it could be nullified at anytime.\u003c/p\u003e ",
    "date": "2023-04-08T05:07:37Z",
    "vote": 0
  },
  {
    "id": "dfff1bc703b2f5a526604fbf30d1d230",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "kick - a command line project boilerplate tool",
    "url": "https://www.reddit.com/r/golang/comments/12f7b81/kick_a_command_line_project_boilerplate_tool/",
    "resume": "",
    "date": "2023-04-08T01:42:24Z",
    "vote": 0
  },
  {
    "id": "eac3b601f13a74ce51a4b17f89d539b7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "In defer f(g()) explain the execution flow",
    "url": "https://www.reddit.com/r/golang/comments/12f5qf4/in_defer_fg_explain_the_execution_flow/",
    "resume": "",
    "date": "2023-04-08T00:43:42Z",
    "vote": 0
  },
  {
    "id": "3e0872f996113dc33d6e311196d55952",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "File upload",
    "url": "https://www.reddit.com/r/golang/comments/12f57dy/file_upload/",
    "resume": "",
    "date": "2023-04-08T00:25:06Z",
    "vote": 0
  },
  {
    "id": "6b230b87d1cef6747eb2673d7b737b1e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why is bcrypt killing my benchmarks?",
    "url": "https://www.reddit.com/r/golang/comments/12f3xvy/why_is_bcrypt_killing_my_benchmarks/",
    "resume": "",
    "date": "2023-04-07T23:40:50Z",
    "vote": 0
  },
  {
    "id": "b070b4714b58662da8095fdd7a21d8ca",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "5 Go Projects No One Knows About Vol 2",
    "url": "https://www.reddit.com/r/golang/comments/12f1upa/5_go_projects_no_one_knows_about_vol_2/",
    "resume": "",
    "date": "2023-04-07T22:28:48Z",
    "vote": 0
  },
  {
    "id": "7e08f161f41d98e627e6ae9fe0d4e8b3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Which code screenshot style is the best?",
    "url": "https://www.reddit.com/r/golang/comments/12f1sqs/which_code_screenshot_style_is_the_best/",
    "resume": "",
    "date": "2023-04-07T22:26:56Z",
    "vote": 0
  },
  {
    "id": "1c10a40cad9b37ad356a0cdc3fd67b2e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "testcerts v1.1.0 released | Added self-signed CA and Custom Domains",
    "url": "https://www.reddit.com/r/golang/comments/12f1ali/testcerts_v110_released_added_selfsigned_ca_and/",
    "resume": "",
    "date": "2023-04-07T22:09:32Z",
    "vote": 0
  },
  {
    "id": "61f8a43a6f6d6ff0a449e876754a06ca",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "gopacket checking if a packet has an http payload",
    "url": "https://www.reddit.com/r/golang/comments/12f1a9o/gopacket_checking_if_a_packet_has_an_http_payload/",
    "resume": "",
    "date": "2023-04-07T22:09:14Z",
    "vote": 0
  },
  {
    "id": "c6c86f7674750db62de413c18c9c9dde",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Should we replace regular interface injection with generics?",
    "url": "https://www.reddit.com/r/golang/comments/12f0egf/should_we_replace_regular_interface_injection/",
    "resume": "",
    "date": "2023-04-07T21:40:29Z",
    "vote": 0
  },
  {
    "id": "69a720ba7b5116939b32d9918c07e9d7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Ebitengine online?",
    "url": "https://www.reddit.com/r/golang/comments/12ezl3p/ebitengine_online/",
    "resume": "",
    "date": "2023-04-07T21:13:26Z",
    "vote": 0
  },
  {
    "id": "d8269c9714527a57cb88868bd8b9e677",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Question about concurrency...",
    "url": "https://www.reddit.com/r/golang/comments/12ey7x3/question_about_concurrency/",
    "resume": "",
    "date": "2023-04-07T20:28:30Z",
    "vote": 0
  },
  {
    "id": "96fd0f9e612a91e6d55687a19114e471",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "ListenAndServe is not stopping main from ending",
    "url": "https://www.reddit.com/r/golang/comments/12exd42/listenandserve_is_not_stopping_main_from_ending/",
    "resume": "",
    "date": "2023-04-07T20:00:21Z",
    "vote": 0
  },
  {
    "id": "9cdebe98214cf0441e23edbbb5a288e7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Explin execution flow! Line by line",
    "url": "https://www.reddit.com/r/golang/comments/12ew9tb/explin_execution_flow_line_by_line/",
    "resume": "",
    "date": "2023-04-07T19:24:27Z",
    "vote": 0
  },
  {
    "id": "b4fde1d5326b11ec4dd57cc47321fd38",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Open source Go client for OpenAI API",
    "url": "https://www.reddit.com/r/golang/comments/12evewo/open_source_go_client_for_openai_api/",
    "resume": "",
    "date": "2023-04-07T18:56:34Z",
    "vote": 0
  },
  {
    "id": "1ef698bf27c9696a1676ded82b9c401f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I want to work as a backend dev. Is go good for it?",
    "url": "https://www.reddit.com/r/golang/comments/12ev3jn/i_want_to_work_as_a_backend_dev_is_go_good_for_it/",
    "resume": "",
    "date": "2023-04-07T18:46:14Z",
    "vote": 0
  },
  {
    "id": "8d73d06bcae09ff8363f5345b41e9d33",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "qst request builder v0.1.0",
    "url": "https://www.reddit.com/r/golang/comments/12eqpcp/qst_request_builder_v010/",
    "resume": "",
    "date": "2023-04-07T16:24:43Z",
    "vote": 0
  },
  {
    "id": "cca2d1d7f4541bc011dcb0859c1e044d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Sending multiple values over a channel",
    "url": "https://www.reddit.com/r/golang/comments/12eq0lk/sending_multiple_values_over_a_channel/",
    "resume": "",
    "date": "2023-04-07T16:02:46Z",
    "vote": 0
  },
  {
    "id": "f043edc7a515feb3ddebd90d0267555e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Pure Go implementation of OpenAI's tokenizer",
    "url": "https://www.reddit.com/r/golang/comments/12eoszv/pure_go_implementation_of_openais_tokenizer/",
    "resume": "",
    "date": "2023-04-07T15:23:40Z",
    "vote": 0
  },
  {
    "id": "7b3acf38846ad28a2a62d45853e30018",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Building a ChatGPT powered assistant into a golang command line tool",
    "url": "https://www.reddit.com/r/golang/comments/12enua1/building_a_chatgpt_powered_assistant_into_a/",
    "resume": "",
    "date": "2023-04-07T14:52:50Z",
    "vote": 0
  },
  {
    "id": "afb68bc79fb9aebe2008b85a7fc77e89",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What did GPT-4 find wrong with the rqlite source code, the distributed SQLite DB written in Go?",
    "url": "https://www.reddit.com/r/golang/comments/12en6lx/what_did_gpt4_find_wrong_with_the_rqlite_source/",
    "resume": "",
    "date": "2023-04-07T14:31:10Z",
    "vote": 0
  },
  {
    "id": "968fbd1be9b93737cd53784724543044",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to run periodic tasks?",
    "url": "https://www.reddit.com/r/golang/comments/12em87q/how_to_run_periodic_tasks/",
    "resume": "",
    "date": "2023-04-07T13:59:14Z",
    "vote": 0
  },
  {
    "id": "fee5a6bdb00fe94ce2c0fb159a91b756",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Profiling Go Programs (CLI Edition)",
    "url": "https://www.reddit.com/r/golang/comments/12elonh/profiling_go_programs_cli_edition/",
    "resume": "",
    "date": "2023-04-07T13:40:13Z",
    "vote": 0
  },
  {
    "id": "88a361bff52415ae89ded462f741556f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "The reason for no parameterized methods",
    "url": "https://www.reddit.com/r/golang/comments/12ejo96/the_reason_for_no_parameterized_methods/",
    "resume": "",
    "date": "2023-04-07T12:28:20Z",
    "vote": 0
  },
  {
    "id": "feea9a6e597252579410031a95e5ea1e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Atlas v0.10.1 | New Analyzers and Cloud Linting Configuration",
    "url": "https://www.reddit.com/r/golang/comments/12ehh3n/atlas_v0101_new_analyzers_and_cloud_linting/",
    "resume": "",
    "date": "2023-04-07T11:04:03Z",
    "vote": 0
  },
  {
    "id": "dde3088b66b99dd3a7959152d0c13858",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "should i switch form node to go?",
    "url": "https://www.reddit.com/r/golang/comments/12eh4na/should_i_switch_form_node_to_go/",
    "resume": "",
    "date": "2023-04-07T10:50:31Z",
    "vote": 0
  },
  {
    "id": "96487f64c9fbfd96f053d86d357badfa",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best project to code cover all Golang bases",
    "url": "https://www.reddit.com/r/golang/comments/12eglm5/best_project_to_code_cover_all_golang_bases/",
    "resume": "",
    "date": "2023-04-07T10:28:04Z",
    "vote": 0
  },
  {
    "id": "ed124939a2709c6fc4eff8cf73db5673",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best boilerplate web application to get going for a production app",
    "url": "https://www.reddit.com/r/golang/comments/12egki2/best_boilerplate_web_application_to_get_going_for/",
    "resume": "",
    "date": "2023-04-07T10:26:40Z",
    "vote": 0
  },
  {
    "id": "a2fe08cd7a58e51f43e2a64e26b99a44",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang audiobooks?",
    "url": "https://www.reddit.com/r/golang/comments/12egeg7/golang_audiobooks/",
    "resume": "",
    "date": "2023-04-07T10:19:30Z",
    "vote": 0
  },
  {
    "id": "9125754685b2407d368d0179fd5285d8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Trying to type cast an interface{} in a struct{} to a spectific type (which is a struct) but fails.",
    "url": "https://www.reddit.com/r/golang/comments/12ec4w5/trying_to_type_cast_an_interface_in_a_struct_to_a/",
    "resume": "",
    "date": "2023-04-07T06:25:44Z",
    "vote": 0
  },
  {
    "id": "8e41378280c36d756eae216234af3b96",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What platform do y’all like to use when deploying Go applications?",
    "url": "https://www.reddit.com/r/golang/comments/12ea7i1/what_platform_do_yall_like_to_use_when_deploying/",
    "resume": "",
    "date": "2023-04-07T04:49:20Z",
    "vote": 0
  },
  {
    "id": "8570edb6244b0a87e4f82e92a200005c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Help: unable to run go. could not import strconv (EOF)",
    "url": "https://www.reddit.com/r/golang/comments/12ea0jp/help_unable_to_run_go_could_not_import_strconv_eof/",
    "resume": "",
    "date": "2023-04-07T04:40:57Z",
    "vote": 0
  },
  {
    "id": "a4eef8360f4c117ea3e4e4c726dc4edd",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "seekr - new golang OSINT tool",
    "url": "https://www.reddit.com/r/golang/comments/12e70b1/seekr_new_golang_osint_tool/",
    "resume": "",
    "date": "2023-04-07T02:40:46Z",
    "vote": 0
  },
  {
    "id": "3187b2f38069cbaee2205b88740608d1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Python + Go architecture",
    "url": "https://www.reddit.com/r/golang/comments/12e4z99/python_go_architecture/",
    "resume": "",
    "date": "2023-04-07T01:25:46Z",
    "vote": 0
  },
  {
    "id": "5e5e6417f56ca851d3c7606b9b64086f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Better golang prelude",
    "url": "https://www.reddit.com/r/golang/comments/12dz3t2/better_golang_prelude/",
    "resume": "",
    "date": "2023-04-06T21:44:39Z",
    "vote": 0
  },
  {
    "id": "3a92ef8760d4f64fb9ab920585b43d6f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Multiple languages",
    "url": "https://forum.golangbridge.org/t/multiple-languages/31210#post_2",
    "resume": " \u003cp\u003eHey,\u003c/p\u003e\n\u003cp\u003eOverall looks good to me, a few changes, I would make is removing init() and maybe using \u003ca href=\"https://github.com/nicksnyder/go-i18n\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eGitHub - nicksnyder/go-i18n: Translate your Go program into multiple languages.\u003c/a\u003e but it is highly personal, I only used hugo(it was the easiest option) for i18n in the past\u003c/p\u003e\n\u003cp\u003eone aspect I can see which will improve, you can use \u003ccode\u003ego:embed\u003c/code\u003e for your public static assets/templates with embed.FS so that your final binary can be standalone with \u003ccode\u003elocale/\u003c/code\u003e files\u003c/p\u003e\n\u003cp\u003eyou also won’t need a mutex if you are only reading from the map only, I wouldn’t do in-memory unsafe map and read/write in http handlers because it would grow eventually, probably what you need is something like a thread-safe LRU(least recently used cache if you continue(you will need eviction at some point of the map or the cache) with this library and approach \u003ca href=\"https://github.com/hashicorp/golang-lru\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eGitHub - hashicorp/golang-lru: Golang LRU cache\u003c/a\u003e)\u003c/p\u003e ",
    "date": "2023-04-06T21:07:56Z",
    "vote": 0
  },
  {
    "id": "d24a14f113adc2051ea16b4f7c7bb879",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Recommended books and/or text tutorials for getting started with go 1.18+",
    "url": "https://www.reddit.com/r/golang/comments/12dx61k/recommended_books_andor_text_tutorials_for/",
    "resume": "",
    "date": "2023-04-06T20:37:43Z",
    "vote": 0
  },
  {
    "id": "e65aa821fd4b307a17a6ba6fec482fb7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go vs Java, TS or C# in a medium size professional project",
    "url": "https://www.reddit.com/r/golang/comments/12dx03h/go_vs_java_ts_or_c_in_a_medium_size_professional/",
    "resume": "",
    "date": "2023-04-06T20:32:09Z",
    "vote": 0
  },
  {
    "id": "de539abaf6e80136a32492deeb16e6e1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "SSE with a redis subscription",
    "url": "https://www.reddit.com/r/golang/comments/12dwn5y/sse_with_a_redis_subscription/",
    "resume": "",
    "date": "2023-04-06T20:20:10Z",
    "vote": 0
  },
  {
    "id": "7e45d0122206385290542563e66dd919",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The biggest job interview of GPT-4's life",
    "url": "https://changelog.com/gotime/272",
    "resume": "Mat \u0026 Johnny interview everyone’s favorite LLM (Natalie with a special hat on) to see if it’d make a good hire as a Go dev. Also, Mat tries to turn it into his very own creepy robot by asking personal questions about his co-hosts. Things get weird. In a good way?",
    "date": "2023-04-06T19:00:00Z",
    "vote": 0
  },
  {
    "id": "2a3c8da8751b2eed4845096249f741aa",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Advices on microservices / database stuff (in Go)",
    "url": "https://www.reddit.com/r/golang/comments/12dt1sk/advices_on_microservices_database_stuff_in_go/",
    "resume": "",
    "date": "2023-04-06T18:21:58Z",
    "vote": 0
  },
  {
    "id": "feb425180469a6f47c4cc7fe38c056b1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Need some help",
    "url": "https://www.reddit.com/r/golang/comments/12ds8um/need_some_help/",
    "resume": "",
    "date": "2023-04-06T17:55:56Z",
    "vote": 0
  },
  {
    "id": "4cd51aaddcaf183e96c228acbbacf9fd",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Delve v1.20.2 is out now",
    "url": "https://www.reddit.com/r/golang/comments/12dqpah/delve_v1202_is_out_now/",
    "resume": "",
    "date": "2023-04-06T17:05:18Z",
    "vote": 0
  },
  {
    "id": "544c00ad1c17375c1ca672438ac45eef",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "made Twitter-Backend with golang",
    "url": "https://www.reddit.com/r/golang/comments/12dpok3/made_twitterbackend_with_golang/",
    "resume": "",
    "date": "2023-04-06T16:31:45Z",
    "vote": 0
  },
  {
    "id": "dac0452435153ead5401e1ec346c1e97",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Converting an interface{} to a struct",
    "url": "https://www.reddit.com/r/golang/comments/12dorfy/converting_an_interface_to_a_struct/",
    "resume": "",
    "date": "2023-04-06T16:01:38Z",
    "vote": 0
  },
  {
    "id": "3d55fa89882c6221dc1a8260fb539789",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "go-mask: Library for masking sensitive information",
    "url": "https://www.reddit.com/r/golang/comments/12dnbf8/gomask_library_for_masking_sensitive_information/",
    "resume": "",
    "date": "2023-04-06T15:13:13Z",
    "vote": 0
  },
  {
    "id": "eea5c70ddc1aecfc7cebae66b051a6b3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Beyond API Service: Adding a React Frontend",
    "url": "https://www.reddit.com/r/golang/comments/12dkhx0/beyond_api_service_adding_a_react_frontend/",
    "resume": "",
    "date": "2023-04-06T13:32:30Z",
    "vote": 0
  },
  {
    "id": "438175a2e0e55758a9b57297f3f15361",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go channels through Redis List",
    "url": "https://www.reddit.com/r/golang/comments/12dk4kb/go_channels_through_redis_list/",
    "resume": "",
    "date": "2023-04-06T13:19:18Z",
    "vote": 0
  },
  {
    "id": "d5b2170b8ee43858510f1e6a2df9070a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "srctx: a LSIF parser for understanding what happened in every lines of your code",
    "url": "https://www.reddit.com/r/golang/comments/12di427/srctx_a_lsif_parser_for_understanding_what/",
    "resume": "",
    "date": "2023-04-06T12:03:37Z",
    "vote": 0
  },
  {
    "id": "931db44b148f7e6a8a428af2ec8ed35d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What existing libraries are there for implementing Kubernetes liveness and readiness probes?",
    "url": "https://www.reddit.com/r/golang/comments/12dhjjm/what_existing_libraries_are_there_for/",
    "resume": "",
    "date": "2023-04-06T11:41:44Z",
    "vote": 0
  },
  {
    "id": "fb209050abdc3a3991e30782964720bd",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "What is the difference between `go get -u -t ./...` and `go get -u -t all`?",
    "url": "https://forum.golangbridge.org/t/what-is-the-difference-between-go-get-u-t-and-go-get-u-t-all/31222#post_2",
    "resume": " \u003cp\u003eHi and Welcome \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e ! \u003ccode\u003e./...\u003c/code\u003e (most used in the go’s philosophy of avoiding dependencies as much as possible) references all the current package and sub-package dependencies  (only the direct ones), while \u003ccode\u003eall\u003c/code\u003e is useful when you want to update both direct and indirect (not imported in any file or imported from your direct dependency). The latter is common if you want to be sure that all the puzzle pieces work fine if your direct dependencies have some other in turn or if you want to  update a dependency temporary not used    in order to avoid future problems.\u003c/p\u003e ",
    "date": "2023-04-06T11:20:46Z",
    "vote": 0
  },
  {
    "id": "3f2ba88ec79d4ecfc265021ef10e20cf",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Array and Slice behaviors with len() and cap()",
    "url": "https://forum.golangbridge.org/t/array-and-slice-behaviors-with-len-and-cap/30833#post_9",
    "resume": " \u003cp\u003eHey there! Congrats on starting your journey with Golang!\u003cbr\u003e\nIn Go, arrays have a fixed size, which means the length (len) and capacity (cap) of an array are the same. This is because arrays in Go are designed to be efficient and have a fixed size at compile time. Slices, on the other hand, are dynamic and flexible. They are built on top of arrays and provide a more powerful and convenient way to work with collections of data.\u003c/p\u003e\n\u003cp\u003eThe [:] and [: :] syntax in Go are used to create slices from arrays or existing slices. The syntax [ : ] creates a new slice that refers to the entire underlying array, while [ : : ] creates a new slice with the same length and capacity as the underlying array or slice. The [:] syntax is commonly used to create a new slice with a subset of elements from an existing array or slice, and the [::] syntax is used to create a new slice that refers to the entire underlying array or slice, but with a potentially different length and capacity.\u003c/p\u003e\n\u003cp\u003eIf you’re interested in learning more about \u003cstrong\u003earrays and slices in Go\u003c/strong\u003e, I recommend checking out the following \u003ca href=\"https://www.interviewbit.com/blog/remove-duplicates-from-array/\" rel=\"noopener nofollow ugc\"\u003earticle\u003c/a\u003e. It provides detailed explanations and examples that may help clarify some of the concepts you’re encountering in Golang.\u003c/p\u003e ",
    "date": "2023-04-06T11:05:51Z",
    "vote": 0
  },
  {
    "id": "c11b31a7031a3809149c21a8babbd4df",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Function variables are faster than functions?",
    "url": "https://forum.golangbridge.org/t/function-variables-are-faster-than-functions/31231#post_2",
    "resume": " \u003cp\u003eHi! Closure vs function has no difference. What makes your code faster is the less closure arguments number;  in fact you’re using an in loco instance of \u003ccode\u003eimage[][]\u003c/code\u003e  instead of passing it call by call (the first case + \u003ccode\u003ecolor\u003c/code\u003e + \u003ccode\u003eoriginal\u003c/code\u003e.\u003cbr\u003e\nIt’s one of the advantages of lambdas in pass-by-value programming languages (if well used).\u003c/p\u003e ",
    "date": "2023-04-06T10:10:55Z",
    "vote": 0
  },
  {
    "id": "51711d8395d3823751b26a6583cc4081",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Case-insensitive ordinal string comparison",
    "url": "https://www.reddit.com/r/golang/comments/12demsl/caseinsensitive_ordinal_string_comparison/",
    "resume": "",
    "date": "2023-04-06T09:33:00Z",
    "vote": 0
  },
  {
    "id": "fc967301c1c2508dc055b03348144a10",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Max() for variable list of numbers.",
    "url": "https://www.reddit.com/r/golang/comments/12dbvpt/max_for_variable_list_of_numbers/",
    "resume": "",
    "date": "2023-04-06T06:59:09Z",
    "vote": 0
  },
  {
    "id": "5e5b0ae36a0f7ecba1f939c8c5982a84",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Realistically speaking, which type of programming jobs can juniors apply for programming in Go?",
    "url": "https://www.reddit.com/r/golang/comments/12dbk3n/realistically_speaking_which_type_of_programming/",
    "resume": "",
    "date": "2023-04-06T06:40:46Z",
    "vote": 0
  },
  {
    "id": "7ee7a1f4991da665790c90b98ca3343a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Function variables are faster than functions?",
    "url": "https://forum.golangbridge.org/t/function-variables-are-faster-than-functions/31231#post_1",
    "resume": " \u003cp\u003eI was doing a leetcode problem, and discovered that this code:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc floodFill(image [][]int, sr int, sc int, color int) [][]int {\n    original :=image[sr][sc] \n    if original == color {\n        return image\n    }\n\n    fill(image,  sr, sc, color, original)\n\n    return image\n}\n\nfunc fill(image [][]int, sr int, sc int, color int, original int) {\n    image[sr][sc] = color\n\n    if sr \u0026gt; 0 \u0026amp;\u0026amp; image[sr-1][sc] == original {\n        fill(image,  sr-1, sc, color, original)\n    }\n\n    if sc \u0026gt; 0 \u0026amp;\u0026amp; image[sr][sc-1] == original {\n        fill(image,   sr, sc-1, color, original)\n    }\n\n    if sc \u0026lt; len(image[0]) - 1 \u0026amp;\u0026amp; image[sr][sc+1] == original {\n        fill(image,  sr, sc+1, color, original)\n    }\n\n    if sr \u0026lt; len(image) - 1 \u0026amp;\u0026amp; image[sr+1][sc] == original {\n        fill(image,  sr+1, sc, color, original)\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eis actually slower (10ms) than this other code (3ms)\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc floodFill(image [][]int, sr int, sc int, color int) [][]int {\n    original :=image[sr][sc] \n    if original == color {\n        return image\n    }\n\n    var fill func( sr int, sc int ) \n    fill = func(  sr int, sc int ) {\n        image[sr][sc] = color\n\n        if sr \u0026gt; 0 \u0026amp;\u0026amp; image[sr-1][sc] == original {\n            fill(  sr-1, sc )\n        }\n\n        if sc \u0026gt; 0 \u0026amp;\u0026amp; image[sr][sc-1] == original {\n            fill(   sr, sc-1 )\n        }\n\n        if sc \u0026lt; len(image[0]) - 1 \u0026amp;\u0026amp; image[sr][sc+1] == original {\n            fill(  sr, sc+1 )\n        }\n\n        if sr \u0026lt; len(image) - 1 \u0026amp;\u0026amp; image[sr+1][sc] == original {\n            fill(  sr+1, sc )\n        }\n    }\n\n    fill(  sr, sc )\n\n    return image\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIs this a side effect of their platform (the instance that ran the first version is a bit faster), or is this a clue that func variables are faster than functions ?\u003c/p\u003e ",
    "date": "2023-04-06T05:16:34Z",
    "vote": 0
  },
  {
    "id": "b87f36cb0593faedb5a72c09a225dda4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "go pprof analysis",
    "url": "https://www.reddit.com/r/golang/comments/12d5psk/go_pprof_analysis/",
    "resume": "",
    "date": "2023-04-06T02:03:28Z",
    "vote": 0
  },
  {
    "id": "7178258dbe6d8484d22675215230ad38",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Boot.dev Beat. April 2023",
    "url": "https://blog.boot.dev/news/bootdev-beat-2023-04/",
    "resume": "We released more this last March than I think we\u0026rsquo;ve ever released in a single month before.",
    "date": "2023-04-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f8c8cd4a78836ba887c1d0bdcc13d0d6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "weird interface{}/pointer nil check behavior inside function",
    "url": "https://www.reddit.com/r/golang/comments/12d18qt/weird_interfacepointer_nil_check_behavior_inside/",
    "resume": "",
    "date": "2023-04-05T23:08:13Z",
    "vote": 0
  },
  {
    "id": "e26c4d75030979af63ec8206eca95db3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go Project generator",
    "url": "https://www.reddit.com/r/golang/comments/12d0w4n/go_project_generator/",
    "resume": "",
    "date": "2023-04-05T22:55:08Z",
    "vote": 0
  },
  {
    "id": "8ee93a05dd64b2a04709254e6a370f18",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Handy script to upgrade to the latest version of Go",
    "url": "https://www.reddit.com/r/golang/comments/12czz0h/handy_script_to_upgrade_to_the_latest_version_of/",
    "resume": "",
    "date": "2023-04-05T22:20:29Z",
    "vote": 0
  },
  {
    "id": "d55d302f24017a72367a4d643b8e65c3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "fluentassert/verify 1.0.0 is released",
    "url": "https://www.reddit.com/r/golang/comments/12cypd6/fluentassertverify_100_is_released/",
    "resume": "",
    "date": "2023-04-05T21:33:20Z",
    "vote": 0
  },
  {
    "id": "b26e1365e3278efec9ec0bfc5f7f0064",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "go-chi/renderer why middleware",
    "url": "https://www.reddit.com/r/golang/comments/12cxp00/gochirenderer_why_middleware/",
    "resume": "",
    "date": "2023-04-05T21:00:29Z",
    "vote": 0
  },
  {
    "id": "1808d2e7e190c26f706b8f12d459fabb",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to Implement a Service Weaver Deployer",
    "url": "https://www.reddit.com/r/golang/comments/12cxksp/how_to_implement_a_service_weaver_deployer/",
    "resume": "",
    "date": "2023-04-05T20:56:06Z",
    "vote": 0
  },
  {
    "id": "f8de48df88b01a9f22843cd5c6aee91f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "EZDC - easily setting up tests that rely on services in a docker-compose.yml",
    "url": "https://www.reddit.com/r/golang/comments/12cxiix/ezdc_easily_setting_up_tests_that_rely_on/",
    "resume": "",
    "date": "2023-04-05T20:53:51Z",
    "vote": 0
  },
  {
    "id": "cf0deb3e6e70b0df6d43a2c55d05f23e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How does Go handle const/var strings?",
    "url": "https://www.reddit.com/r/golang/comments/12cwbjs/how_does_go_handle_constvar_strings/",
    "resume": "",
    "date": "2023-04-05T20:10:10Z",
    "vote": 0
  },
  {
    "id": "899e93f2ae3f9d5bf350b3ca1c824a67",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How can I use Golang in an Enterprise and Consumer Solution?",
    "url": "https://www.reddit.com/r/golang/comments/12cw89s/how_can_i_use_golang_in_an_enterprise_and/",
    "resume": "",
    "date": "2023-04-05T20:06:51Z",
    "vote": 0
  },
  {
    "id": "0c567395be63f486891deca73601a159",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Need help in understanding an issue with generics and struct",
    "url": "https://www.reddit.com/r/golang/comments/12cu21k/need_help_in_understanding_an_issue_with_generics/",
    "resume": "",
    "date": "2023-04-05T18:50:55Z",
    "vote": 0
  },
  {
    "id": "bae2860b674634fd9a6ddc97585661a7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does this project structure make sense?",
    "url": "https://www.reddit.com/r/golang/comments/12cswjz/does_this_project_structure_make_sense/",
    "resume": "",
    "date": "2023-04-05T18:11:20Z",
    "vote": 0
  },
  {
    "id": "026520b951920d8d8989ead66f2c7a99",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "DynamoDB GetItem, exceeded maximum number of attempts",
    "url": "https://www.reddit.com/r/golang/comments/12csjym/dynamodb_getitem_exceeded_maximum_number_of/",
    "resume": "",
    "date": "2023-04-05T17:59:32Z",
    "vote": 0
  },
  {
    "id": "79297717ce29f716939761a5dcda70ee",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Búsqueda laboral #Golang #Argentina!",
    "url": "https://www.reddit.com/r/golang/comments/12cs9ip/búsqueda_laboral_golang_argentina/",
    "resume": "",
    "date": "2023-04-05T17:49:30Z",
    "vote": 0
  },
  {
    "id": "22f56f986d4b4abfb568f944e5c72324",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Búsqueda laboral #GOLANG en #Argentina",
    "url": "https://www.reddit.com/r/golang/comments/12cs8ki/búsqueda_laboral_golang_en_argentina/",
    "resume": "",
    "date": "2023-04-05T17:48:35Z",
    "vote": 0
  },
  {
    "id": "7e79eeb80e8034af18ae8217488b0959",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Generic function has only a varargs parameter, is it possible to make type inference work in this case?",
    "url": "https://www.reddit.com/r/golang/comments/12cs71f/generic_function_has_only_a_varargs_parameter_is/",
    "resume": "",
    "date": "2023-04-05T17:47:02Z",
    "vote": 0
  },
  {
    "id": "1eb0f54b06722618305ff8223c01e730",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How do you guys make sure all fields of a struct are initalized? Is the only way to do that via a function?",
    "url": "https://www.reddit.com/r/golang/comments/12cr4wx/how_do_you_guys_make_sure_all_fields_of_a_struct/",
    "resume": "",
    "date": "2023-04-05T17:11:24Z",
    "vote": 0
  },
  {
    "id": "aa1b9c505775b7c3900c870ffb824e3a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is there any go library to print compiler errors?",
    "url": "https://www.reddit.com/r/golang/comments/12cqwyj/is_there_any_go_library_to_print_compiler_errors/",
    "resume": "",
    "date": "2023-04-05T17:04:08Z",
    "vote": 0
  },
  {
    "id": "60d2c6f53db603774dc2aaac835d6b0c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "No docker options",
    "url": "https://www.reddit.com/r/golang/comments/12cpurw/no_docker_options/",
    "resume": "",
    "date": "2023-04-05T16:29:44Z",
    "vote": 0
  },
  {
    "id": "190c6386799e803c9bc1d150c5eac868",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Building an event-driven backend application with Pub/Sub and microservices",
    "url": "https://www.reddit.com/r/golang/comments/12cl83x/building_an_eventdriven_backend_application_with/",
    "resume": "",
    "date": "2023-04-05T13:56:56Z",
    "vote": 0
  },
  {
    "id": "d37668ca90eea03d2a7679e8971e7ca4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Rethinking Connectivity - GOTO 2022 talk now published",
    "url": "https://www.reddit.com/r/golang/comments/12ckspq/rethinking_connectivity_goto_2022_talk_now/",
    "resume": "",
    "date": "2023-04-05T13:42:18Z",
    "vote": 0
  },
  {
    "id": "9c604c0c0d64f2c93a47f285f165c159",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Guide to backend development in Go",
    "url": "https://www.reddit.com/r/golang/comments/12cjkqh/guide_to_backend_development_in_go/",
    "resume": "",
    "date": "2023-04-05T12:59:48Z",
    "vote": 0
  },
  {
    "id": "120c7f1734b809c1a12d9fff62f2a348",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Cannot use generic type iradix.Tree[T any] without instantiation while installing Go package",
    "url": "https://forum.golangbridge.org/t/cannot-use-generic-type-iradix-tree-t-any-without-instantiation-while-installing-go-package/31216#post_4",
    "resume": " \u003cp\u003eHi, Thanks for your tips! I actually understood my mistake. I created one module and a custom packages. Now I don’t have that problem any more!!\u003cbr\u003e\nI have another question regarding my script. I have to automatically generate ACL- Tokens in a Go project via consul API. For that I have this Policy configuration file as an input for creating the token:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\tkey_prefix \"\" {\n\t\t  policy = \"deny\"\n\t\t}\n\n\t\tkey_prefix \"apps/app_name_1/\" {\n\t\t  policy = \"list\"\n\t\t}\n\n\t\tkey_prefix \"apps/app_name_1/\" {\n\t\t  policy = \"read\"\n\t\t}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn the requirement that I received, I don’t have to create a policy first before creating a token, but as I understood from the consul API documentation, it is actually needed.\u003cbr\u003e\nHowever, the requirement is “just to apply this .hcl file in the Go script and push it to consul”. The policy Rules should serve as permissions. This is literally how I got this task, but I don’t understand how to create a Token without creating a policy first and just applying the defined rules as permissions.\u003c/p\u003e ",
    "date": "2023-04-05T12:58:17Z",
    "vote": 0
  },
  {
    "id": "3f19121461d503afe2978305fb2f88a7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Doubt around \"Test only public functions\" concept",
    "url": "https://www.reddit.com/r/golang/comments/12cgvx0/doubt_around_test_only_public_functions_concept/",
    "resume": "",
    "date": "2023-04-05T11:17:42Z",
    "vote": 0
  },
  {
    "id": "78b0338cc834a0e6df2c44a3c3a0bd59",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Problem with importing local go source code file from the same package",
    "url": "https://www.reddit.com/r/golang/comments/12ce3ii/problem_with_importing_local_go_source_code_file/",
    "resume": "",
    "date": "2023-04-05T09:06:45Z",
    "vote": 0
  },
  {
    "id": "b2302126d683843090a34b8f08d5cb94",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Min/Max for integers?",
    "url": "https://www.reddit.com/r/golang/comments/12cd5tx/minmax_for_integers/",
    "resume": "",
    "date": "2023-04-05T08:20:25Z",
    "vote": 0
  },
  {
    "id": "4c37907e1842574b1d4da1f3651e519b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "WunderGraph - OSS Backend for Frontend Framework - implemented in Go - configured through TypeScript",
    "url": "https://www.reddit.com/r/golang/comments/12cc5mu/wundergraph_oss_backend_for_frontend_framework/",
    "resume": "",
    "date": "2023-04-05T07:30:29Z",
    "vote": 0
  },
  {
    "id": "97d41c3531da90f0e89767df6b26bdb2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best resource to get from zero to hero",
    "url": "https://www.reddit.com/r/golang/comments/12cayk3/best_resource_to_get_from_zero_to_hero/",
    "resume": "",
    "date": "2023-04-05T06:31:57Z",
    "vote": 0
  },
  {
    "id": "e492417334f6debf87696ea9b2dc2fa3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is Beego official website down ?",
    "url": "https://www.reddit.com/r/golang/comments/12c9f3a/is_beego_official_website_down/",
    "resume": "",
    "date": "2023-04-05T05:18:21Z",
    "vote": 0
  },
  {
    "id": "1db1d360725fa88b05dae82bf2309321",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is there an alternative website to the go docs?",
    "url": "https://www.reddit.com/r/golang/comments/12c4cvm/is_there_an_alternative_website_to_the_go_docs/",
    "resume": "",
    "date": "2023-04-05T01:46:36Z",
    "vote": 0
  },
  {
    "id": "187491522539753bd9a641c9a1f76943",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "What is the difference between `go get -u -t ./...` and `go get -u -t all`?",
    "url": "https://forum.golangbridge.org/t/what-is-the-difference-between-go-get-u-t-and-go-get-u-t-all/31222#post_1",
    "resume": " \u003cp\u003eWhat is the difference between \u003ccode\u003ego get -u -t ./...\u003c/code\u003e and \u003ccode\u003ego get -u -t all\u003c/code\u003e?\u003c/p\u003e\n\u003cp\u003eI’m not sure what’s the right way to upgrade all dependencies (Including transitive), in particular, \u003ccode\u003ego get -u -t ./...\u003c/code\u003e seems to have not upgraded some of my indirect dependencies while \u003ccode\u003ego get -u -t all\u003c/code\u003e seems to have also added stuff to the \u003ccode\u003ego.mod\u003c/code\u003e and upgraded other stuff?\u003c/p\u003e\n\u003cp\u003eI’m quite confused on what’s the difference between the two commands and how the logic for upgrading works or is supposed to work.\u003c/p\u003e ",
    "date": "2023-04-04T23:20:50Z",
    "vote": 0
  },
  {
    "id": "2404a0fe519947cc84573736fd0be414",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Fibratus 1.10.0 - a modern Windows kernel tracing and threat detection engine built in Go",
    "url": "https://www.reddit.com/r/golang/comments/12bwb7g/fibratus_1100_a_modern_windows_kernel_tracing_and/",
    "resume": "",
    "date": "2023-04-04T20:57:23Z",
    "vote": 0
  },
  {
    "id": "6ca9faee1c9629be24e438f2b4b6cd92",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I want to share my Go Cheat Sheets made out of real printed circuit boards.",
    "url": "https://www.reddit.com/r/golang/comments/12bsyld/i_want_to_share_my_go_cheat_sheets_made_out_of/",
    "resume": "",
    "date": "2023-04-04T19:04:43Z",
    "vote": 0
  },
  {
    "id": "d71e92a4ce69dadbedace89a5a271c39",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does golang have a future?",
    "url": "https://www.reddit.com/r/golang/comments/12bs9kr/does_golang_have_a_future/",
    "resume": "",
    "date": "2023-04-04T18:41:09Z",
    "vote": 0
  },
  {
    "id": "49d1a8c5fd569feca5e7d6b22bd70dd8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to organize templates for more complex pages?",
    "url": "https://www.reddit.com/r/golang/comments/12bs831/how_to_organize_templates_for_more_complex_pages/",
    "resume": "",
    "date": "2023-04-04T18:39:49Z",
    "vote": 0
  },
  {
    "id": "60709683a8a6c15e02400a5352d8ba43",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What are some resources that can help me gain a deeper understanding of Go?",
    "url": "https://www.reddit.com/r/golang/comments/12brw2p/what_are_some_resources_that_can_help_me_gain_a/",
    "resume": "",
    "date": "2023-04-04T18:28:35Z",
    "vote": 0
  },
  {
    "id": "b7508b0b899466c3906fa9733b69431e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go 1.20.3 is released",
    "url": "https://www.reddit.com/r/golang/comments/12bru0t/go_1203_is_released/",
    "resume": "",
    "date": "2023-04-04T18:26:39Z",
    "vote": 0
  },
  {
    "id": "09d06cb9fb1147a4e609991702f65650",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Service Observability Recommendations",
    "url": "https://www.reddit.com/r/golang/comments/12bregx/service_observability_recommendations/",
    "resume": "",
    "date": "2023-04-04T18:11:51Z",
    "vote": 0
  },
  {
    "id": "734f111fe98c67f49a0e283d0027a669",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best way to learn Go?",
    "url": "https://www.reddit.com/r/golang/comments/12bqwps/best_way_to_learn_go/",
    "resume": "",
    "date": "2023-04-04T17:55:19Z",
    "vote": 0
  },
  {
    "id": "d32e287e42cbd8b110657a4aa1d39028",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "For all my backend devs who want to make awesome frontend designs but don't know where to start, join the waiting list for uiZard auto designer. A tool that uses AI to generate web/mobile designs from a text prompt.",
    "url": "https://www.reddit.com/r/golang/comments/12bpijz/for_all_my_backend_devs_who_want_to_make_awesome/",
    "resume": "",
    "date": "2023-04-04T17:08:22Z",
    "vote": 0
  },
  {
    "id": "7e75007f2f2bef5c7a5775f96cf47512",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Compile windows(x64) dll inside of linux(wsl)",
    "url": "https://www.reddit.com/r/golang/comments/12bp3yb/compile_windowsx64_dll_inside_of_linuxwsl/",
    "resume": "",
    "date": "2023-04-04T16:54:31Z",
    "vote": 0
  },
  {
    "id": "151dc317257bc48b6bdf47d4fb74b893",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "NATS \u0026 Kafka comparison",
    "url": "https://www.reddit.com/r/golang/comments/12bozo9/nats_kafka_comparison/",
    "resume": "",
    "date": "2023-04-04T16:50:27Z",
    "vote": 0
  },
  {
    "id": "ec9ed7ffc9d71cc3a76be8cb1ac03e28",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Build GitHub sign-in with Go and Logto",
    "url": "https://www.reddit.com/r/golang/comments/12bmcfc/build_github_signin_with_go_and_logto/",
    "resume": "",
    "date": "2023-04-04T15:22:19Z",
    "vote": 0
  },
  {
    "id": "ef30d90fad6ee57549b0de7fccb19311",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Open source project ideas",
    "url": "https://www.reddit.com/r/golang/comments/12blg58/open_source_project_ideas/",
    "resume": "",
    "date": "2023-04-04T14:51:10Z",
    "vote": 0
  },
  {
    "id": "90553273874b5ab0ea2f2cb0dc0845e5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "PTerm v0.12.58: You can now use beautiful structured logging for your projects!",
    "url": "https://www.reddit.com/r/golang/comments/12bhpel/pterm_v01258_you_can_now_use_beautiful_structured/",
    "resume": "",
    "date": "2023-04-04T12:32:04Z",
    "vote": 0
  },
  {
    "id": "0e2b724ed6148597bb261e33fa1f6ec2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Who is using Go to build web sites and applications?",
    "url": "https://www.reddit.com/r/golang/comments/12bhbp0/who_is_using_go_to_build_web_sites_and/",
    "resume": "",
    "date": "2023-04-04T12:17:32Z",
    "vote": 0
  },
  {
    "id": "b44a6cf7c4a361835bfbb4ac14ed1f3f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "PTerm now supports beautiful structured logging",
    "url": "https://www.reddit.com/r/golang/comments/12bh0dh/pterm_now_supports_beautiful_structured_logging/",
    "resume": "",
    "date": "2023-04-04T12:05:08Z",
    "vote": 0
  },
  {
    "id": "b15be2e1185c92fd931994d5a17590f0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GoLand 2023.1 has been released!",
    "url": "https://www.reddit.com/r/golang/comments/12bgcgc/goland_20231_has_been_released/",
    "resume": "",
    "date": "2023-04-04T11:38:26Z",
    "vote": 0
  },
  {
    "id": "ca328876cd679938de78d1ca58330a0f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Cannot use generic type iradix.Tree[T any] without instantiation while installing Go package",
    "url": "https://forum.golangbridge.org/t/cannot-use-generic-type-iradix-tree-t-any-without-instantiation-while-installing-go-package/31216#post_3",
    "resume": " \u003cp\u003eI think the library versions are incorrect as Norbert said.  It is my understanding that there 2 ways that Go supports upgrading a module to version 2 and beyond:  One is to create a “v2” branch for your module in source control (instead of the “master” or “main” branch) and the alternative is to create a “v2” subdirectory within your “master” or “main” branch for your v2 code.  It appears that hashicorp did neither and instead only uses tags to identify the version number.\u003c/p\u003e\n\u003cp\u003eWhen you run \u003ccode\u003ego get\u003c/code\u003e, even though your \u003ccode\u003ego.mod\u003c/code\u003e file requires v1, because \u003ccode\u003egithub.com/hashicorp/go-immutable-radix\u003c/code\u003e v2 (with a generic \u003ccode\u003eTree\u003c/code\u003e type) is “mixed” in with v1, you’re getting v2 instead of v1 and therefore get this error.\u003c/p\u003e\n\u003cp\u003eYou could try forking v1 and then \u003ccode\u003ego get\u003c/code\u003e your own repository instead of hashicorps.\u003c/p\u003e ",
    "date": "2023-04-04T11:27:15Z",
    "vote": 0
  },
  {
    "id": "19c2a7d229b14aaefec799c937ad1a52",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A tool to help you manage your go imports",
    "url": "https://www.reddit.com/r/golang/comments/12bextq/a_tool_to_help_you_manage_your_go_imports/",
    "resume": "",
    "date": "2023-04-04T10:37:44Z",
    "vote": 0
  },
  {
    "id": "b168663d06c9d999443078497f878e88",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best Resource to learn Web Go-Gin framework.",
    "url": "https://www.reddit.com/r/golang/comments/12be50b/best_resource_to_learn_web_gogin_framework/",
    "resume": "",
    "date": "2023-04-04T09:56:50Z",
    "vote": 0
  },
  {
    "id": "ed5c89afdf111b5d848a56fcb6afdaf9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A guide for evaluating tracing tools",
    "url": "https://www.reddit.com/r/golang/comments/12bdd8q/a_guide_for_evaluating_tracing_tools/",
    "resume": "",
    "date": "2023-04-04T09:07:17Z",
    "vote": 0
  },
  {
    "id": "3bba0ec145f0d4a7dc446aa01ed757da",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_10",
    "resume": " \u003cp\u003eI’m guessing your concern is performance will suffer - but maybe you would be best off benchmarking a go http server and seeing what the performance is like, since the overhead may be insigificant - it really depends on how often you call the Go functions and how much work gets done by them.\u003c/p\u003e\n\u003cp\u003eYou may also find you can send multiple requests at once which could benefit.  Or turning a set of function calls into a single ‘service’.\u003c/p\u003e\n\u003cp\u003eI also recommend checking out tinygo - which is only a bit less than full go - but seems better for Wasm - which you could then use from nodejs directly - but, if tou sue wasm, you won’t get any performance benefit from using compiled Go.\u003c/p\u003e\n\u003cp\u003eWithout knowing the library you are using and how frequently/what for, this is still uncertain - benchmarking should help.\u003c/p\u003e ",
    "date": "2023-04-04T08:28:38Z",
    "vote": 0
  },
  {
    "id": "b4f49aa59fae41fbdcc065a24ff9e00d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Cannot use generic type iradix.Tree[T any] without instantiation while installing Go package",
    "url": "https://forum.golangbridge.org/t/cannot-use-generic-type-iradix-tree-t-any-without-instantiation-while-installing-go-package/31216#post_2",
    "resume": " \u003cp\u003eAre you using a go module or legacy workspace project?\u003c/p\u003e\n\u003cp\u003eTo me this looks as if you are using incompatible versions of libraries.\u003c/p\u003e ",
    "date": "2023-04-04T07:53:08Z",
    "vote": 0
  },
  {
    "id": "67dd660c2d82f78daf79cb9a5ef49c06",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "An error occurred: Sorry, new users can only put 2 links in a post",
    "url": "https://forum.golangbridge.org/t/an-error-occurred-sorry-new-users-can-only-put-2-links-in-a-post/31214#post_4",
    "resume": " \u003cp\u003eHi Sean, it worked with your Tip and I could create my post. Maybe you could have a look, when you find time for it \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e Thanks!!\u003c/p\u003e ",
    "date": "2023-04-04T07:25:07Z",
    "vote": 0
  },
  {
    "id": "7b64208077623260d873d9a7ebd3a495",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Cannot use generic type iradix.Tree[T any] without instantiation while installing Go package",
    "url": "https://forum.golangbridge.org/t/cannot-use-generic-type-iradix-tree-t-any-without-instantiation-while-installing-go-package/31216#post_1",
    "resume": " \u003cp\u003eHi everyone,\u003cbr\u003e\nCan anyone help me with this issue? Any help is APPRECIATED!\u003cbr\u003e\nI’m trying to access the consul API fully with this package:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e“github [slash] github[dot]com/hashicorp/consul/api”\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI installed it on my Windows machine and imported it into my Go script, however it seems to have a dependency with this package:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e“src[slash] github[dot]com/armon/go-metrics”\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWhenever I run the script (which actually should have worked) or run this command \u003cstrong\u003e“go get -u [github]github[dot]com/armon/go-metrics”\u003c/strong\u003e  to update the version of the package I get this message:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e# “src[slash] github[dot]com/armon/go-metrics”\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e“src[slash] go\\src\\github[dot]com\\armon\\go-metrics\\start.go:37:17: cannot use generic type iradix.Tree[T any] without instantiation”\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e“src[slash] go\\src\\github[dot]com\\armon\\go-metrics\\metrics.go:166:23: cannot infer T (“src[slash]go\\src\\github[dot]com\\hashicorp\\go-immutable-radix\\iradix.go:32:10”)”\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThese are my imports:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github[dot]com/go-git/go-git\"\n\t\"github[dot]com/go-git/go-git/plumbing/transport/http\"\n\t\"github[dot]com/hashicorp/consul/api\"\n\t\"github[dot]com/hashicorp/hcl/hclsimple\"\n)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis is the function where I create an API client (It’s not completed yet!)\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc createACLToken(file_name string) {\n\t// Create a new api.Client object to connect to the Consul server\n\tclient, err := api.NewClient(api.DefaultConfig())\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\t// Read the ACL token configuration from the .hcl file\n\tvar token_config api.ACLToken\n\terr = hclsimple.DecodeFile(fmt.Sprintf(\"%s.hcl\", file_name), nil, \u0026amp;token_config)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tacl := client.ACL()\n\n\t/// Create a new policy with the same name as the ACL token\n\tpolicy := api.ACLPolicy{Name: file_name, Rules: token_config.Rules}\n\n\tcreatedPolicy, writeMeta, err := acl.PolicyCreate(\u0026amp;policy, nil)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Printf(\"Policy created: %v\\nWriteMeta: %v\\n\", createdPolicy, writeMeta)\n\n\t// // Create a new role with the same name as the ACL token\n\t// role := api.ACLRole{Name: file_name, Policies: []string{file_name}}\n\t// _, err = acl.RoleCreate(\u0026amp;role, nil)\n\t// if err != nil {\n\t// \tlog.Fatal(err)\n\t// }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI also checked these packages in GOPATH directory and they are available:\u003c/p\u003e\n\u003cp\u003e“…go\\src\\github[dot]com\\armon\\go-metrics”\u003cbr\u003e\n“…go\\src\\github[dot]com\\armon\\go-radix”\u003cbr\u003e\n“…go\\src\\github[dot]com\\hashicorp\\consul\\api”\u003cbr\u003e\n“…go\\src\\github[dot]com\\hashicorp\\hcl\\hclsimple”\u003c/p\u003e ",
    "date": "2023-04-04T07:24:00Z",
    "vote": 0
  },
  {
    "id": "41fc1a67b2fad7a5eda35bd6da1e6ba2",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "An error occurred: Sorry, new users can only put 2 links in a post",
    "url": "https://forum.golangbridge.org/t/an-error-occurred-sorry-new-users-can-only-put-2-links-in-a-post/31214#post_3",
    "resume": " \u003cp\u003eHi Sean, Thanks for the answer! I will try to pack the links in a string literal, like you suggested!\u003c/p\u003e ",
    "date": "2023-04-04T07:05:10Z",
    "vote": 0
  },
  {
    "id": "e2a8e13ea6b4ba188495be6a7e33491c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Securing Your Golang Application: Unleashing the Power of Authentication and Authorization",
    "url": "https://www.reddit.com/r/golang/comments/12bbahn/securing_your_golang_application_unleashing_the/",
    "resume": "",
    "date": "2023-04-04T06:50:39Z",
    "vote": 0
  },
  {
    "id": "2211fe1635f90c7d06e2bc91ab08f3a3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Using Imgui with Go",
    "url": "https://www.reddit.com/r/golang/comments/12basj0/using_imgui_with_go/",
    "resume": "",
    "date": "2023-04-04T06:19:32Z",
    "vote": 0
  },
  {
    "id": "0830cf83cc2c925b5bdf8c3b9cc83b2b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why did Go choose to break the classic C frame?",
    "url": "https://www.reddit.com/r/golang/comments/12b8eu8/why_did_go_choose_to_break_the_classic_c_frame/",
    "resume": "",
    "date": "2023-04-04T04:00:33Z",
    "vote": 0
  },
  {
    "id": "d0600eb30390ab3dcc7a1bd8b9062361",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Exit go program, as soon as a function starts.",
    "url": "https://www.reddit.com/r/golang/comments/12b6rrf/exit_go_program_as_soon_as_a_function_starts/",
    "resume": "",
    "date": "2023-04-04T02:38:16Z",
    "vote": 0
  },
  {
    "id": "1c5a1843784c60039291db77dd7b4068",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Socket Options \u0026 Go: Multiple Listeners, One Port",
    "url": "https://www.reddit.com/r/golang/comments/12b6f8b/socket_options_go_multiple_listeners_one_port/",
    "resume": "",
    "date": "2023-04-04T02:24:33Z",
    "vote": 0
  },
  {
    "id": "d8aef514c335e668c96d85a123ad503b",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Issue with net/http",
    "url": "https://forum.golangbridge.org/t/issue-with-net-http/31213#post_3",
    "resume": " \u003cp\u003eThanks a lot!!!\u003c/p\u003e ",
    "date": "2023-04-04T01:57:03Z",
    "vote": 0
  },
  {
    "id": "104115de95f5f16a61981c7c471ba3d0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why not just use Javascript or Rust instead of Golang(has more support) + websocket alternatives",
    "url": "https://www.reddit.com/r/golang/comments/12b489e/why_not_just_use_javascript_or_rust_instead_of/",
    "resume": "",
    "date": "2023-04-04T00:57:34Z",
    "vote": 0
  },
  {
    "id": "3e141dd171279e47dae5e6051317e325",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "mgmt - https://github.com/purpleidea/mgmt",
    "url": "https://www.reddit.com/r/golang/comments/12b3din/mgmt_httpsgithubcompurpleideamgmt/",
    "resume": "",
    "date": "2023-04-04T00:24:16Z",
    "vote": 0
  },
  {
    "id": "5ca8ac7b66053fe382c38134a74a95e5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Google's Firebase Auth in Go, no npm please",
    "url": "https://www.reddit.com/r/golang/comments/12az73t/googles_firebase_auth_in_go_no_npm_please/",
    "resume": "",
    "date": "2023-04-03T21:52:04Z",
    "vote": 0
  },
  {
    "id": "9f2a5eab41fd0d89128534da6c314986",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Websockets with golang",
    "url": "https://www.reddit.com/r/golang/comments/12az60u/websockets_with_golang/",
    "resume": "",
    "date": "2023-04-03T21:51:03Z",
    "vote": 0
  },
  {
    "id": "6773fa259ef8c271230ce0736f8c881c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Was wondering if someone that has hired developers in the past could take a look at my resume and see if it has got enough to start submitting for an entry-level positon.",
    "url": "https://www.reddit.com/r/golang/comments/12ayfgu/was_wondering_if_someone_that_has_hired/",
    "resume": "",
    "date": "2023-04-03T21:25:27Z",
    "vote": 0
  },
  {
    "id": "a9e26d466009167d1cb6fccdffaf546f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Dynamically pass the SQL parameter(s) in Go",
    "url": "https://www.reddit.com/r/golang/comments/12axvf4/dynamically_pass_the_sql_parameters_in_go/",
    "resume": "",
    "date": "2023-04-03T21:06:43Z",
    "vote": 0
  },
  {
    "id": "6ee617b360aff1a3721a481d9c3f3c07",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Could go outperform rust?",
    "url": "https://www.reddit.com/r/golang/comments/12av94r/could_go_outperform_rust/",
    "resume": "",
    "date": "2023-04-03T19:38:50Z",
    "vote": 0
  },
  {
    "id": "6dc4f576f55f54c9f7f73b1d886f0919",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "An error occurred: Sorry, new users can only put 2 links in a post",
    "url": "https://forum.golangbridge.org/t/an-error-occurred-sorry-new-users-can-only-put-2-links-in-a-post/31214#post_2",
    "resume": " \u003cp\u003eHi, Gayane, and welcome to the forum.\u003c/p\u003e\n\u003cp\u003eIt is my understanding that the restrictions exist to prevent bots (or people) from creating accounts and immediately posting advertisements or other spam.\u003c/p\u003e\n\u003cp\u003eCan you post whatever it is that you’re looking for without the link?  If the link is to code that’s relevant to your question, you can usually edit the URL to something like “github [dot] com/user/repo” which will let us edit the URL and search whatever you need.\u003c/p\u003e ",
    "date": "2023-04-03T19:23:25Z",
    "vote": 0
  },
  {
    "id": "0ddf27bebc0d75f1d0622a4a3451741f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Issue with net/http",
    "url": "https://forum.golangbridge.org/t/issue-with-net-http/31213#post_2",
    "resume": " \u003cp\u003e\u003ca href=\"https://pkg.go.dev/net/http#NewRequest\" rel=\"noopener nofollow ugc\"\u003eNewRequest\u003c/a\u003e takes an \u003ca href=\"https://pkg.go.dev/io#Reader\" rel=\"noopener nofollow ugc\"\u003eio.Reader\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003efunc NewRequest(method, url string, body io.Reader) (*Request, error)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo, for testing purposes you could read from a string or something similar:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003er := strings.NewReader(\"Test Data\")\nreq, _ := http.NewRequest(http.MethodPost, \"/data/import\", r)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou could also read from a file if you wish with something along the lines of this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003efile, err := os.Open(\"testdata.txt\") // For read access.\nif err != nil {\n\t// Do something with the error\n\tlog.Fatal(err)\n}\ndefer file.Close()\nreq, _ := http.NewRequest(http.MethodPost, \"/data/import\", file)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTotally wrote this code without compiling it or anything so you might need to tweak it to get it to actually work, but that should get you started!\u003c/p\u003e ",
    "date": "2023-04-03T18:22:17Z",
    "vote": 0
  },
  {
    "id": "96b2b4220e5fe0bf27092664e437a542",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "An error occurred: Sorry, new users can only put 2 links in a post",
    "url": "https://forum.golangbridge.org/t/an-error-occurred-sorry-new-users-can-only-put-2-links-in-a-post/31214#post_1",
    "resume": " \u003cp\u003eHi everyone,\u003cbr\u003e\nI am new in this community and my first trial to share my thoughts and current issues that I’m facing went wrong.\u003cbr\u003e\nIf it’s for a security reason, I can understand, but when will I be granted to share a post?\u003c/p\u003e\n\u003cp\u003eThanks in advance!\u003c/p\u003e\n\u003cp\u003eBest regards,\u003cbr\u003e\nGayane\u003c/p\u003e ",
    "date": "2023-04-03T18:18:13Z",
    "vote": 0
  },
  {
    "id": "0c662e8a55fa6dca7c760229008f3636",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Issue with net/http",
    "url": "https://forum.golangbridge.org/t/issue-with-net-http/31213#post_1",
    "resume": " \u003cp\u003eI am testing an API and there is a url to upload files, say data/import.\u003cbr\u003e\nThe contentType is multipart/form but only the file is sent. }\u003cbr\u003e\nI have the following code for an http client\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e     req, _ := http.NewRequest(http.MethodPost, \"/data/import\", ?)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI don’t know what to put in the “?”.\u003cbr\u003e\nWill it be the path of the file directly or do I have to read the file with a reader\u003cbr\u003e\nand pass the bytes slide?\u003c/p\u003e\n\u003cp\u003eTIA,\u003cbr\u003e\nYamil\u003c/p\u003e ",
    "date": "2023-04-03T17:55:08Z",
    "vote": 0
  },
  {
    "id": "5ad43d33dbc4452a3ae97cfeabd54126",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Who's Hiring? - April 2023",
    "url": "https://www.reddit.com/r/golang/comments/12aq7tb/whos_hiring_april_2023/",
    "resume": "",
    "date": "2023-04-03T16:50:47Z",
    "vote": 0
  },
  {
    "id": "5a39183de007d6dcea25d7457d92dfcf",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "GoLand 2023.1 Is Out!",
    "url": "https://blog.jetbrains.com/go/2023/04/03/goland-2023-1/",
    "resume": "The next major version of GoLand is here!\u0026#160; GoLand 2023.1 introduces the vulnerability checker and better navigation across gRPC code, and it makes the Rename refactoring available for generic receivers. Interface implementations are now shown in the editor with Code Vision. You can now run scratch files with non-standard-library packages, use regular expressions to create [\u0026#8230;]",
    "date": "2023-04-03T16:25:56Z",
    "vote": 0
  },
  {
    "id": "d4c653cfad40b000c539d463f11e6875",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Enjoy Kubernetes with Go",
    "url": "https://www.youtube.com/watch?v=U7RKEqfM1XY",
    "resume": "",
    "date": "2023-04-03T16:00:16Z",
    "vote": 0
  },
  {
    "id": "3fc86e6c4f5cba60218d16a8c388b3e8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "`@ory/client` vs. `@ory/kratos-client` and others",
    "url": "https://www.reddit.com/r/golang/comments/12aoheb/oryclient_vs_orykratosclient_and_others/",
    "resume": "",
    "date": "2023-04-03T15:50:43Z",
    "vote": 0
  },
  {
    "id": "79a5f1d3428847721cd8c2b68d09a0bb",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Poll: Did Go add generics just for the critics?",
    "url": "https://www.reddit.com/r/golang/comments/12almok/poll_did_go_add_generics_just_for_the_critics/",
    "resume": "",
    "date": "2023-04-03T14:09:24Z",
    "vote": 0
  },
  {
    "id": "36f8eef2a2191a809967ecc44e2fcb77",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What would you rewrite in Golang?",
    "url": "https://www.reddit.com/r/golang/comments/12alic4/what_would_you_rewrite_in_golang/",
    "resume": "",
    "date": "2023-04-03T14:05:02Z",
    "vote": 0
  },
  {
    "id": "322b866d1c001d61645ec2d577675146",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "slogt bridges stdlib testing.T and slog",
    "url": "https://www.reddit.com/r/golang/comments/12ajonr/slogt_bridges_stdlib_testingt_and_slog/",
    "resume": "",
    "date": "2023-04-03T12:58:51Z",
    "vote": 0
  },
  {
    "id": "50f64eda9d7802e4950f77831daf4975",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Web Development em Go - Parte 08 - Template Functions (Language: PT-BR)",
    "url": "https://www.reddit.com/r/golang/comments/12aj9j5/web_development_em_go_parte_08_template_functions/",
    "resume": "",
    "date": "2023-04-03T12:42:41Z",
    "vote": 0
  },
  {
    "id": "9e08a86e6827cc0164d3ac3a8f466db1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Postfix completions for methods like functions in VS Code",
    "url": "https://www.reddit.com/r/golang/comments/12aheoy/postfix_completions_for_methods_like_functions_in/",
    "resume": "",
    "date": "2023-04-03T11:27:28Z",
    "vote": 0
  },
  {
    "id": "36765b87383a8c588daffbd8d83bdcd0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Debugging concurrency: Adding millisecond sleeps randomly?",
    "url": "https://www.reddit.com/r/golang/comments/12agjqq/debugging_concurrency_adding_millisecond_sleeps/",
    "resume": "",
    "date": "2023-04-03T10:50:28Z",
    "vote": 0
  },
  {
    "id": "6146954fcf320e9ca123171374f81a0c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is Go-Gin framework Ready for Enterprise Applications ?",
    "url": "https://www.reddit.com/r/golang/comments/12ag8ys/is_gogin_framework_ready_for_enterprise/",
    "resume": "",
    "date": "2023-04-03T10:36:44Z",
    "vote": 0
  },
  {
    "id": "b19453ae0ae0b5484fcc31fa57fe925a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Senior Golang Developer (f/m/d) @ United Internet in Germany",
    "url": "https://forum.golangbridge.org/t/senior-golang-developer-f-m-d-united-internet-in-germany/31209#post_4",
    "resume": " \u003cp\u003e(post deleted by author)\u003c/p\u003e ",
    "date": "2023-04-03T09:57:21Z",
    "vote": 0
  },
  {
    "id": "da3c7027bbe85c30581c22c9023209a5",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Senior Golang Developer (f/m/d) @ United Internet in Germany",
    "url": "https://forum.golangbridge.org/t/senior-golang-developer-f-m-d-united-internet-in-germany/31209#post_3",
    "resume": " \u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eIf you are interested in this job please apply using the application link. It is a full time job which requires a permanent residence in Germany. You should be ready to relocate.\u003c/p\u003e\n\u003cp\u003eRegards,\u003cbr\u003e\nPawel\u003c/p\u003e ",
    "date": "2023-04-03T09:46:55Z",
    "vote": 0
  },
  {
    "id": "7ba9ffe3cd56fc81d84af856482661aa",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Senior Golang Developer (f/m/d) @ United Internet in Germany",
    "url": "https://forum.golangbridge.org/t/senior-golang-developer-f-m-d-united-internet-in-germany/31209#post_2",
    "resume": " \u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI would be glad to assist you.\u003c/p\u003e\n\u003cp\u003eTo discuss further in detail kindly reach me at \u003ca href=\"mailto:garry@cisinlabs.com\"\u003egarry@cisinlabs.com\u003c/a\u003e or Skype me: cis.garry\u003c/p\u003e\n\u003cp\u003eLooking forward for your response.\u003c/p\u003e\n\u003cp\u003eThanks\u003c/p\u003e\n\u003cp\u003eGarry\u003c/p\u003e ",
    "date": "2023-04-03T09:45:23Z",
    "vote": 0
  },
  {
    "id": "8648377be650535d0878cf2062b81237",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Multiple languages",
    "url": "https://forum.golangbridge.org/t/multiple-languages/31210#post_1",
    "resume": " \u003cp\u003eStruggling with multi-language site for a while. There are many ways to do this as I understand. I found one way using \u003cstrong\u003e\u003ca href=\"http://github.com/leonelquinteros/gotext\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eGitHub - leonelquinteros/gotext: Go (Golang) GNU gettext utilities package\u003c/a\u003e\u003c/strong\u003e. Which seems to be simpler than \u003cstrong\u003e\u003ca href=\"http://golang.org/x/text\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eThe Go Programming Language\u003c/a\u003e\u003c/strong\u003e IMHO.\u003c/p\u003e\n\u003cp\u003eI should be glad if anybody could make a review of my code and tell me if I am on the right track or not.\u003c/p\u003e\n\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://go.dev/play/p/YnkqoNmzQLn\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://go.dev/images/favicon-gopher.png\" class=\"site-icon\" width=\"288\" height=\"288\"\u003e\n\n      \u003ca href=\"https://go.dev/play/p/YnkqoNmzQLn\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ego.dev\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"aspect-image\" style=\"--aspect-ratio:690/400;\"\u003e\u003cimg src=\"https://go.dev/doc/gopher/gopher5logo.jpg\" class=\"thumbnail\" width=\"690\" height=\"400\"\u003e\u003c/div\u003e\n\n\u003ch3\u003e\u003ca href=\"https://go.dev/play/p/YnkqoNmzQLn\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eGo Playground - The Go Programming Language\u003c/a\u003e\u003c/h3\u003e\n\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eLive preview\u003c/p\u003e\n\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://lang.go4webdev.org\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://lang.go4webdev.org/misc/favicon-32x32.png\" class=\"site-icon\" width=\"\" height=\"\"\u003e\n\n      \u003ca href=\"https://lang.go4webdev.org\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003elang.go4webdev.org\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \n\n\u003ch3\u003e\u003ca href=\"https://lang.go4webdev.org\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egoLang\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003eTranslate text from within Go templates\u003c/p\u003e\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n ",
    "date": "2023-04-03T09:38:31Z",
    "vote": 0
  },
  {
    "id": "92984d29f71083f5a0de73a8ca9bc352",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Senior Golang Developer (f/m/d) @ United Internet in Germany",
    "url": "https://forum.golangbridge.org/t/senior-golang-developer-f-m-d-united-internet-in-germany/31209#post_1",
    "resume": " \u003cp\u003eIONOS is the leading European digitalisation partner for small and medium-sized businesses (SMB). The company serves around six million customers and operates across 18 markets in Europe and North America, with its services being accessible worldwide. With its Web Presence \u0026amp; Productivity portfolio, IONOS acts as a ‘one-stop shop’ for all digitalisation needs: from domains and web hosting to classic website builders and do-it-yourself solutions, from e-commerce to online marketing tools. In addition, the company offers Cloud Solutions to enterprises who are looking to move to the cloud as their businesses evolve.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eYour Tasks\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThe IONOS Platform as a Service team is seeking a highly motivated and experienced software engineer, to help build services for the IONOS Cloud customers in different areas.\u003c/p\u003e\n\u003cp\u003eThe teams are development-focused. In a Cloud environment, the customers expect API-first self-service, immediate delivery and complete automation. Thus, our choice are GoLang, GitOps and CI/CD - not root shells and bash scripts.\u003c/p\u003e\n\u003cp\u003eOur teams are responsible for the entire lifecycle of the service: we build it, we ship it, and we run it. We are looking for someone to join our team and work with us on providing the best product possible. This role reports to the Engineering Manager: PaaS Network Services.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eTasks:\u003c/em\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEngineering and Ownership of Kubernetes and cloud-based solutions.\u003c/li\u003e\n\u003cli\u003eProgramming in Go.\u003c/li\u003e\n\u003cli\u003eCollaborating with an agile and self-motivated team of peers.\u003c/li\u003e\n\u003cli\u003eSolving interesting problems in a dynamic cloud environment.\u003c/li\u003e\n\u003cli\u003eSupporting the operations and management of distributed systems.\u003c/li\u003e\n\u003cli\u003eContinuously improving our build, test and deployment automation.\u003c/li\u003e\n\u003cli\u003eContinuously improving the quality and resilience of our services.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eWe appreciate\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGood experience developing, testing and deploying well-engineered code, preferably in Go.\u003c/li\u003e\n\u003cli\u003eBasic knowledge of containerization, Kubernetes and at least one cloud platform (e.g. AWS, Azure, GCP, OpenShift).\u003c/li\u003e\n\u003cli\u003eBasic knowledge of networking, especially load balancers and NAT Gateways in the cloud.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003eFurthermore we would greatly appreciate:\u003c/em\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDeep Golang knowledge, including profiling, remote debugging and mastering of Go tooling.\u003c/li\u003e\n\u003cli\u003eAdvanced experience in deploying and managing apps on Kubernetes, including helm charts and ArgoCD.\u003c/li\u003e\n\u003cli\u003eConstructive contributions to design and architecture discussions.\u003c/li\u003e\n\u003cli\u003eExperience operating and troubleshooting production environments.\u003c/li\u003e\n\u003cli\u003eExperience building Kubernetes CRDs and operators.\u003c/li\u003e\n\u003cli\u003eExperience with the Linux operating system, including Linux networking.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://united-internet.talentry.com/share/job/301911/620141/1680513582/3\" rel=\"noopener nofollow ugc\"\u003eApply here\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e ",
    "date": "2023-04-03T09:38:11Z",
    "vote": 0
  },
  {
    "id": "33702f5223ded24affafae8b057b129c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go stdlib regexp package: A DFA experiment",
    "url": "https://www.reddit.com/r/golang/comments/12aesly/go_stdlib_regexp_package_a_dfa_experiment/",
    "resume": "",
    "date": "2023-04-03T09:19:14Z",
    "vote": 0
  },
  {
    "id": "d0536600b8d2d6342cbdb98c4db6a2f2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Using DBStats To Test for Connection Leak in Golang",
    "url": "https://www.reddit.com/r/golang/comments/12aeiqz/using_dbstats_to_test_for_connection_leak_in/",
    "resume": "",
    "date": "2023-04-03T09:03:14Z",
    "vote": 0
  },
  {
    "id": "3b934c99d7a597c7dc7e931f19d90b88",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why does Go implement floats with a struct?",
    "url": "https://www.reddit.com/r/golang/comments/12ae1rf/why_does_go_implement_floats_with_a_struct/",
    "resume": "",
    "date": "2023-04-03T08:36:23Z",
    "vote": 0
  },
  {
    "id": "43e40dcc858884071ae5caa2ce8c2ec1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Animated diagrams with D2, a text-to-diagram language written in Go",
    "url": "https://www.reddit.com/r/golang/comments/12a87ag/animated_diagrams_with_d2_a_texttodiagram/",
    "resume": "",
    "date": "2023-04-03T03:33:07Z",
    "vote": 0
  },
  {
    "id": "71a4275fcd3cadc27f50168082f5c4f0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "io.MultiWriter only writes to first writer",
    "url": "https://www.reddit.com/r/golang/comments/12a76uy/iomultiwriter_only_writes_to_first_writer/",
    "resume": "",
    "date": "2023-04-03T02:47:54Z",
    "vote": 0
  },
  {
    "id": "f4fa1457e1b4229011494d3cff950174",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Seeking Guidance, Help/Collaboration Building a Web Application for Artisans and Users",
    "url": "https://www.reddit.com/r/golang/comments/12a6nyy/seeking_guidance_helpcollaboration_building_a_web/",
    "resume": "",
    "date": "2023-04-03T02:26:05Z",
    "vote": 0
  },
  {
    "id": "ca22559710a8e5e9b60a88c3025fdd0b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Compared to PHP, what is missing from GoLang",
    "url": "https://www.reddit.com/r/golang/comments/12a64zz/compared_to_php_what_is_missing_from_golang/",
    "resume": "",
    "date": "2023-04-03T02:03:59Z",
    "vote": 0
  },
  {
    "id": "4bae62612dc2d3a1f564fb42d145af1a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_9",
    "resume": " \u003cp\u003eHi Andy\u003c/p\u003e\n\u003cp\u003eI want to use NodeJS to run a Go library on the same mac machine.\u003cbr\u003e\nSo I’m trying to check the compatibility of the GopherJS and the Go library!\u003c/p\u003e ",
    "date": "2023-04-03T00:45:47Z",
    "vote": 0
  },
  {
    "id": "668264607ab310ac541df8fdcc117b51",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Extensible API Handlers Ep. 10",
    "url": "https://www.ardanlabs.com/blog/2023/04/interfaces-101-extensible-api-handlers-ep-10.html",
    "resume": "Introduction In episode 9, Miki discussed how a command flag can be decoded into a user defined type with the Value interface. As a recap, the Value interface consists of two methods: one for serializing the underlying concrete type and one for deserializing a string into an object. To put this interface to the test, Miki wrote a command that had a flag to specify a network address. While implementing the Set method of the Value interface, Miki demonstrated how to add validation for your program’s flags.",
    "date": "2023-04-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c6acead6944fddb8f49557c68fb8f31b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Gin Error Handling",
    "url": "https://www.reddit.com/r/golang/comments/12a0vo9/gin_error_handling/",
    "resume": "",
    "date": "2023-04-02T22:41:49Z",
    "vote": 0
  },
  {
    "id": "7f15ba2f947f001be72b55e31c898ba8",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Best GO Lang resources",
    "url": "https://forum.golangbridge.org/t/best-go-lang-resources/31180#post_5",
    "resume": " \u003cp\u003eyou must first read \u003ca href=\"https://go.dev/doc/effective_go\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eEffective Go - The Go Programming Language\u003c/a\u003e\u003c/p\u003e ",
    "date": "2023-04-02T20:46:44Z",
    "vote": 0
  },
  {
    "id": "27e4b022df7d3f352e7986b75ca1f907",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Know your enemy: Transformer multi-head attention in 72 lines of Go. This the dark heart of all modern AI systems, that assimilate your work without citation (\"fair use\") and reduce your economic value toward zero.",
    "url": "https://www.reddit.com/r/golang/comments/129wv7f/know_your_enemy_transformer_multihead_attention/",
    "resume": "",
    "date": "2023-04-02T20:20:44Z",
    "vote": 0
  },
  {
    "id": "99d717e116e49debac2ff14180631df2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why methods types are different",
    "url": "https://www.reddit.com/r/golang/comments/129t0y0/why_methods_types_are_different/",
    "resume": "",
    "date": "2023-04-02T18:07:47Z",
    "vote": 0
  },
  {
    "id": "5414850f0032bfccc8df6ec4be4cb07f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "ResultGroup: Go lib for concurrent tasks \u0026 errors management",
    "url": "https://www.reddit.com/r/golang/comments/129smfi/resultgroup_go_lib_for_concurrent_tasks_errors/",
    "resume": "",
    "date": "2023-04-02T17:53:56Z",
    "vote": 0
  },
  {
    "id": "c26269ea1720101c53f3cd86e9fc88dc",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "ChatGPTUI: ChatGPT 🤖 with Textual User Interface mode written in Go",
    "url": "https://www.reddit.com/r/golang/comments/129sfuy/chatgptui_chatgpt_with_textual_user_interface/",
    "resume": "",
    "date": "2023-04-02T17:47:38Z",
    "vote": 0
  },
  {
    "id": "ee847e051d0b27ac971c9fbb00d10cc6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Ebiten vs pixel (Golang)",
    "url": "https://www.reddit.com/r/golang/comments/129sagu/ebiten_vs_pixel_golang/",
    "resume": "",
    "date": "2023-04-02T17:42:24Z",
    "vote": 0
  },
  {
    "id": "416b1ce04044cef58341d4145176d95c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Know your enemy: Transformer multi-head attention in 72 lines of Go. This the dark heart of all modern AI systems, that assimilate your work without citation (\"fair use\") and reduce your economic value toward zero",
    "url": "https://www.reddit.com/r/golang/comments/129s2r7/know_your_enemy_transformer_multihead_attention/",
    "resume": "",
    "date": "2023-04-02T17:35:01Z",
    "vote": 0
  },
  {
    "id": "be95b90784073f4937049d1cc38cf0ad",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go famous/standard frameworks and libraries ?",
    "url": "https://www.reddit.com/r/golang/comments/129rn09/go_famousstandard_frameworks_and_libraries/",
    "resume": "",
    "date": "2023-04-02T17:19:48Z",
    "vote": 0
  },
  {
    "id": "5ea95b8f9246b9c386c7f60c7d6fbdc1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Queue management service modeling",
    "url": "https://www.reddit.com/r/golang/comments/129qxv0/queue_management_service_modeling/",
    "resume": "",
    "date": "2023-04-02T16:55:18Z",
    "vote": 0
  },
  {
    "id": "3eae6a046e19ccdeb4f1d4a5e5d13a27",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "In-memory key value store",
    "url": "https://www.reddit.com/r/golang/comments/129n6oh/inmemory_key_value_store/",
    "resume": "",
    "date": "2023-04-02T14:39:58Z",
    "vote": 0
  },
  {
    "id": "b4e0c0cc4bf40b81c1061e4d93e3748e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Web scraping with Go",
    "url": "https://www.reddit.com/r/golang/comments/129n1g4/web_scraping_with_go/",
    "resume": "",
    "date": "2023-04-02T14:34:37Z",
    "vote": 0
  },
  {
    "id": "ba810c2b4c1f00cebcec78f2e896717e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go SMB Server?",
    "url": "https://www.reddit.com/r/golang/comments/129hizd/go_smb_server/",
    "resume": "",
    "date": "2023-04-02T10:44:28Z",
    "vote": 0
  },
  {
    "id": "fcec51bf7fdd40530f2a36b916cc58e1",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_8",
    "resume": " \u003cp\u003eCould you please give some more detail of your expected architecture - i.e are you using JS from browser or NodeJS.  Do you want to run Go on the same machine?  Are you using mobile/desktop/devices?  What O/S (shouldn’t matter though)?\u003c/p\u003e\n\u003cp\u003ee.g. I use browser JS with a Go http server (windows) using REST - and also using web sockets for push from server.  For this I use standard Go server.http with mux and websocket.  I also use getlantern/systray to have an icon you can use to open chrome, using lorca, after the server is running, i.e for an editor in my case.  Note that I only need max 60 frame/s updates which may not be your case…\u003c/p\u003e\n\u003cp\u003eBest wishes - Andy\u003c/p\u003e ",
    "date": "2023-04-02T09:39:05Z",
    "vote": 0
  },
  {
    "id": "8cff4d90b7fc723f6ce44ab8aaba197b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "vanceai-go - golang SDK for VanceAI image processing API",
    "url": "https://www.reddit.com/r/golang/comments/129gc52/vanceaigo_golang_sdk_for_vanceai_image_processing/",
    "resume": "",
    "date": "2023-04-02T09:38:11Z",
    "vote": 0
  },
  {
    "id": "18c805c00068f5b9c7840af0f6af2467",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Manipulating internet and wireless connections with different protocols",
    "url": "https://www.reddit.com/r/golang/comments/129csya/manipulating_internet_and_wireless_connections/",
    "resume": "",
    "date": "2023-04-02T06:43:54Z",
    "vote": 0
  },
  {
    "id": "83d886198f7f4084a2da0ed2a8d9be11",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Help! My implement of Tie-breaker algorithm for \"mutex\" does not work",
    "url": "https://forum.golangbridge.org/t/help-my-implement-of-tie-breaker-algorithm-for-mutex-does-not-work/31199#post_3",
    "resume": " \u003cp\u003eYes. I have checked that common languages do not guarantee sequential consistency, if there is data race.\u003cbr\u003e\nAfter all, thanks \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e ",
    "date": "2023-04-02T06:23:28Z",
    "vote": 0
  },
  {
    "id": "8007f61a11c7fef7c0596c1f34c26a4d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Looking for suggestions on the code architectures and patterns",
    "url": "https://www.reddit.com/r/golang/comments/1298ibg/looking_for_suggestions_on_the_code_architectures/",
    "resume": "",
    "date": "2023-04-02T03:25:02Z",
    "vote": 0
  },
  {
    "id": "314ad6c5658cba991c4b9af96f3225ca",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Building and debugging 32-bit program on 64-bit system",
    "url": "https://forum.golangbridge.org/t/building-and-debugging-32-bit-program-on-64-bit-system/31181#post_3",
    "resume": " \u003cp\u003ethanks for taking the time to help me.\u003cbr\u003e\nI think that logging all over the places is a not ideal but always useful method.\u003cbr\u003e\nI will try it tommrow\u003c/p\u003e ",
    "date": "2023-04-02T00:47:01Z",
    "vote": 0
  },
  {
    "id": "201c52dd344e98ce2517d751d4dee525",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Handler vs Controller",
    "url": "https://www.reddit.com/r/golang/comments/1294p5g/handler_vs_controller/",
    "resume": "",
    "date": "2023-04-02T00:46:47Z",
    "vote": 0
  },
  {
    "id": "a08c89802d8d20bb294b54a6b6b485d1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "LYRA",
    "url": "https://www.reddit.com/r/golang/comments/129192y/lyra/",
    "resume": "",
    "date": "2023-04-01T22:35:36Z",
    "vote": 0
  },
  {
    "id": "c9a332a757470ee453c37d6265d9a69a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Remote origin already exists error on go build",
    "url": "https://www.reddit.com/r/golang/comments/12915f7/remote_origin_already_exists_error_on_go_build/",
    "resume": "",
    "date": "2023-04-01T22:31:47Z",
    "vote": 0
  },
  {
    "id": "db9a897544da188cd88fc397a9e1dd90",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Telemetry really goes into Go toolchain, no matter what",
    "url": "https://www.reddit.com/r/golang/comments/128zqi1/telemetry_really_goes_into_go_toolchain_no_matter/",
    "resume": "",
    "date": "2023-04-01T21:38:11Z",
    "vote": 0
  },
  {
    "id": "4cb8caabcd4f34b6c6af62f6ba73ccca",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to embed an interface into a struct?",
    "url": "https://www.reddit.com/r/golang/comments/128z7lx/how_to_embed_an_interface_into_a_struct/",
    "resume": "",
    "date": "2023-04-01T21:19:22Z",
    "vote": 0
  },
  {
    "id": "d8b25abae4945b4f9de29ff4c6616dac",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "New language suggestion to old time Gopher",
    "url": "https://www.reddit.com/r/golang/comments/128ymjz/new_language_suggestion_to_old_time_gopher/",
    "resume": "",
    "date": "2023-04-01T20:58:17Z",
    "vote": 0
  },
  {
    "id": "58da1e95ae5c12085f40278ce1d5dec3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "getting your repo's date and commit hash to use as version",
    "url": "https://www.reddit.com/r/golang/comments/128xdr8/getting_your_repos_date_and_commit_hash_to_use_as/",
    "resume": "",
    "date": "2023-04-01T20:13:32Z",
    "vote": 0
  },
  {
    "id": "8e716bc4bd3bdba7bd9b8ca69ba334ef",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How and where to start building web api backend?",
    "url": "https://www.reddit.com/r/golang/comments/128vfrn/how_and_where_to_start_building_web_api_backend/",
    "resume": "",
    "date": "2023-04-01T19:03:33Z",
    "vote": 0
  },
  {
    "id": "856beb6514c2b383e8137dae67df0918",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Help structure project",
    "url": "https://www.reddit.com/r/golang/comments/128udx0/help_structure_project/",
    "resume": "",
    "date": "2023-04-01T18:25:29Z",
    "vote": 0
  },
  {
    "id": "ec9cba559cd510ca55bcd4a454840392",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GitHub - agis/spawn: Spawn your Go binary from its TestMain, for end-to-end tests",
    "url": "https://www.reddit.com/r/golang/comments/128ub30/github_agisspawn_spawn_your_go_binary_from_its/",
    "resume": "",
    "date": "2023-04-01T18:22:30Z",
    "vote": 0
  },
  {
    "id": "eb8ab618fc13d7f8880bcdd9d8cac597",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "With the Hexagonal Architecture / Ports \u0026 Adapters pattern, how do you prevent callers of your driving interfaces from calling your driven interfaces directly instead?",
    "url": "https://www.reddit.com/r/golang/comments/128sr5q/with_the_hexagonal_architecture_ports_adapters/",
    "resume": "",
    "date": "2023-04-01T17:25:11Z",
    "vote": 0
  },
  {
    "id": "6119479a62497e2c964b48a7925b5e40",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Help! My implement of Tie-breaker algorithm for \"mutex\" does not work",
    "url": "https://forum.golangbridge.org/t/help-my-implement-of-tie-breaker-algorithm-for-mutex-does-not-work/31199#post_2",
    "resume": " \u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://go.dev/ref/mem\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://go.dev/images/favicon-gopher.png\" class=\"site-icon\" width=\"288\" height=\"288\"\u003e\n\n      \u003ca href=\"https://go.dev/ref/mem\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ego.dev\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"aspect-image\" style=\"--aspect-ratio:690/400;\"\u003e\u003cimg src=\"https://go.dev/doc/gopher/gopher5logo.jpg\" class=\"thumbnail\" width=\"690\" height=\"400\"\u003e\u003c/div\u003e\n\n\u003ch3\u003e\u003ca href=\"https://go.dev/ref/mem\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eThe Go Memory Model - The Go Programming Language\u003c/a\u003e\u003c/h3\u003e\n\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrograms that modify data being simultaneously accessed by multiple goroutines must serialize such access.\u003c/p\u003e\n\u003c/blockquote\u003e ",
    "date": "2023-04-01T16:46:23Z",
    "vote": 0
  },
  {
    "id": "2fd06aa804e0927fb328d63e9942dd4b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Looking for a gRPC tutorial",
    "url": "https://www.reddit.com/r/golang/comments/128r68b/looking_for_a_grpc_tutorial/",
    "resume": "",
    "date": "2023-04-01T16:26:49Z",
    "vote": 0
  },
  {
    "id": "f3ff57ffe492bc5808a34de6fa272741",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Can you review my project ?",
    "url": "https://www.reddit.com/r/golang/comments/128p25n/can_you_review_my_project/",
    "resume": "",
    "date": "2023-04-01T15:06:58Z",
    "vote": 0
  },
  {
    "id": "1add71174938acc9e876fa3457ea3ed2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Gocrest v1.1.0 released",
    "url": "https://www.reddit.com/r/golang/comments/128n246/gocrest_v110_released/",
    "resume": "",
    "date": "2023-04-01T13:51:55Z",
    "vote": 0
  },
  {
    "id": "69236841a2f5488bb8f8300136838df2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "The Smallest Go Binary (5KB)",
    "url": "https://www.reddit.com/r/golang/comments/128mmd4/the_smallest_go_binary_5kb/",
    "resume": "",
    "date": "2023-04-01T13:34:15Z",
    "vote": 0
  },
  {
    "id": "b3cb678348f46b154fdd2ce6c4af2206",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "crit: build smaller binaries 🦀",
    "url": "https://www.reddit.com/r/golang/comments/128l5bs/crit_build_smaller_binaries/",
    "resume": "",
    "date": "2023-04-01T12:37:17Z",
    "vote": 0
  },
  {
    "id": "c1d39dcbd35327d29869983aab30e991",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Code review first go project",
    "url": "https://www.reddit.com/r/golang/comments/128k7ov/code_review_first_go_project/",
    "resume": "",
    "date": "2023-04-01T11:59:20Z",
    "vote": 0
  },
  {
    "id": "29636f4f5c490ace2217cb94f2fa179b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "strconv.Atoi is causing my test to fail and I can't figure out why",
    "url": "https://www.reddit.com/r/golang/comments/128jg5t/strconvatoi_is_causing_my_test_to_fail_and_i_cant/",
    "resume": "",
    "date": "2023-04-01T11:26:10Z",
    "vote": 0
  },
  {
    "id": "8b646e20aad2ec2dd52740a1a158291b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Simple terminal UI for ChatGPT",
    "url": "https://www.reddit.com/r/golang/comments/128j6fa/simple_terminal_ui_for_chatgpt/",
    "resume": "",
    "date": "2023-04-01T11:14:41Z",
    "vote": 0
  },
  {
    "id": "926e9ba81b22d6833ea1d44c1d5c2ad2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why is it invalid to take the address of a string's byte?",
    "url": "https://www.reddit.com/r/golang/comments/128j3vk/why_is_it_invalid_to_take_the_address_of_a/",
    "resume": "",
    "date": "2023-04-01T11:11:30Z",
    "vote": 0
  },
  {
    "id": "cf5f769c701e543774029c0b95aaa273",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Reading and writting to/from struct concurrently. Problem?",
    "url": "https://www.reddit.com/r/golang/comments/128ize0/reading_and_writting_tofrom_struct_concurrently/",
    "resume": "",
    "date": "2023-04-01T11:05:58Z",
    "vote": 0
  },
  {
    "id": "207aeb62f6827d1d24723cdd81fd3ca9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I made a SQL to array/map/struct and CRUD ORM library",
    "url": "https://www.reddit.com/r/golang/comments/128hpxf/i_made_a_sql_to_arraymapstruct_and_crud_orm/",
    "resume": "",
    "date": "2023-04-01T10:05:52Z",
    "vote": 0
  },
  {
    "id": "89184dd03baf718c1b06ddbe597ec924",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GoLang Goes Retro: Compiler Now Supports Morse Code | TechCrunch",
    "url": "https://www.reddit.com/r/golang/comments/128fmz1/golang_goes_retro_compiler_now_supports_morse/",
    "resume": "",
    "date": "2023-04-01T08:17:12Z",
    "vote": 0
  },
  {
    "id": "376cb97a9362c431f289cd23bd9c02f5",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Logger implementation: circular dep between conf pkg and custom log pkg",
    "url": "https://forum.golangbridge.org/t/logger-implementation-circular-dep-between-conf-pkg-and-custom-log-pkg/31202#post_1",
    "resume": " \u003cp\u003eHi guys,\u003c/p\u003e\n\u003cp\u003eIt’s the first time I use a logger. After a few searches, I ended up with \u003ccode\u003ezerolog\u003c/code\u003e.\u003cbr\u003e\nI’ve created a simple web server that call a dummy api endpoint to illustrate my concern.\u003cbr\u003e\nGitHub Repo of the example: \u003ca href=\"https://github.com/BigBoulard/logger\" rel=\"noopener nofollow ugc\"\u003ehttps://github.com/BigBoulard/logger\u003c/a\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003e\nvar (\n\trouter *gin.Engine\n)\n\nfunc main() {\n\t// load the env variables\n\tconf.LoadEnv()\n\n\t// GinMode is set to \"debug\" in the /.env file\n\tgin.SetMode(conf.Env.GinMode)\n\trouter = gin.Default()\n\n\t// creates a controller that uses an httpclient to call https://jsonplaceholder.typicode.com/todos\n\tcontroller := controller.NewController(\n\t\thttpclient.NewClient(),\n\t)\n\trouter.GET(\"/todos\", controller.GetTodos)\n\n\t// run the router on host and port specified in the /.env file\n\terr := router.Run(fmt.Sprintf(\"%s:%s\", conf.Env.Host, conf.Env.Port))\n\tif err != nil {\n\t\tlog.Fatal(\"application/main\", err)\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAs you already noticed, This server uses environment variables that need to be loaded differently if I’m working locally or if the server is in a production environment, right? So to manage this, I’ve created a \u003ccode\u003econf\u003c/code\u003e package which looks like this.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003epackage conf\n\nimport (\n\t\"log\"\n\t\"os\"\n\n\t\"github.com/joho/godotenv\"\n)\n\nvar Env = \u0026amp;env{}\n\ntype env struct {\n\tAppMode string\n\tGinMode string\n\tHost    string\n\tPort    string\n}\n\nvar IsLoaded = false\n\nfunc LoadEnv() {\n\t// the httpclient and the Gin server both need the env vars\n\t// but we don't want to load them twice\n\tif IsLoaded {\n\t\treturn\n\t}\n\n\t// if not \"prod\"\n\tif Env.AppMode != \"prod\" {\n\t\tcurDir, err := os.Getwd()\n\t\tif err != nil {\n\t\t\tlog.Fatal(err, \"conf\", \"LoadEnv\", \"error loading os.Getwd()\")\n\t\t}\n\t\t// load the /.env file\n\t\tloadErr := godotenv.Load(curDir + \"/.env\")\n\t\tif loadErr != nil {\n\t\t\tlog.Fatal(loadErr, \"conf\", \"LoadEnv\", \"can't load env file from current directory: \"+curDir)\n\t\t}\n\t\tEnv.GinMode = \"debug\"\n\t} else {\n\t\tEnv.GinMode = \"release\"\n\t}\n\n\t// load the env vars\n\tEnv.AppMode = os.Getenv(\"APP_MODE\")\n\tEnv.Host = os.Getenv(\"HOST\")\n\tEnv.Port = os.Getenv(\"PORT\")\n\n\tIsLoaded = true\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTo make a long story short, I’ve created a \u003ccode\u003elog\u003c/code\u003e package that I would include in each microservice.\u003cbr\u003e\nThis \u003ccode\u003elog\u003c/code\u003e package uses an environment variable at startup to determine the log level and decide whether to activate certain features. The \u003ccode\u003elog\u003c/code\u003e package looks like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003epackage log\n\nvar l *logger = NewLogger()\nconst API = \"test api\"\n\ntype logger struct {\n\tlogger zerolog.Logger // see https://github.com/rs/zerolog#leveled-logging\n}\n\nfunc NewLogger() *logger {\n    loadEnvFile()\n    var zlog zerolog.Logger\n\tif os.Getenv(\"APP_ENV\") == \"dev\" {\n           // setup for dev ...\n        } else {\n          // setup for prod ...\n       }\nreturn \u0026amp;logger{\n  logger: zlog,\n}\n\nfunc Error(path string, err error) {\n\tl.logger.\n\t\tError().\n\t\tStack().\n\t\tStr(\"path\", path).\n\t\tMsg(err.Error())\n}\n\nfunc Fatal(path string, err error) {\n\tl.logger.\n\t\tFatal().\n\t\tStack().\n\t\tStr(\"path\", path).\n\t\tMsg(err.Error())\n}\n\n// PROBLEM: I need to duplicate loadEnvFile() from conf.load_env.go\n// because conf uses log ... but conversely, log need conf cause it needs the env var\nfunc loadEnvFile() {\n\tcurDir, err := os.Getwd()\n\tif err != nil {\n\t\tlog.Fatal(err, \"test api\", \"App\", \"gw - conf - LoadEnv - os.Getwd()\")\n\t}\n\tloadErr := godotenv.Load(curDir + \"/.env\")\n\tif loadErr != nil {\n\t\tlog.Fatal(err, \"test api\", \"conf - LoadEnv\", \"godotenv.Load(\"+curDir+\"/.env\\\")\")\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAs you can see, I can’t use \u003ccode\u003eloadEnvFile()\u003c/code\u003e from the \u003ccode\u003econf\u003c/code\u003e package as it causes a circular dependency, so I guess that there’s probably a better way to implement this…\u003c/p\u003e\n\u003cp\u003eThank you so much.\u003c/p\u003e ",
    "date": "2023-04-01T07:30:30Z",
    "vote": 0
  },
  {
    "id": "4580cb57b4ce3dcf0e9d17f940674358",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Looking for Part time opportunity",
    "url": "https://www.reddit.com/r/golang/comments/128a7vn/looking_for_part_time_opportunity/",
    "resume": "",
    "date": "2023-04-01T03:48:05Z",
    "vote": 0
  },
  {
    "id": "da0af1f846eb9b9d8b1d8f096af4eee8",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Help! My implement of Tie-breaker algorithm for \"mutex\" does not work",
    "url": "https://forum.golangbridge.org/t/help-my-implement-of-tie-breaker-algorithm-for-mutex-does-not-work/31199#post_1",
    "resume": " \u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evar data int = 1\nvar done = make(chan bool)\n\nvar last int = 1\nvar in1 bool = false\nvar in2 bool = false\nvar mu sync.Mutex\n\nfunc racing1() {\n\tfor i := 0; i \u0026lt; 10000; i++ {\n\t\tlast = 1\n\t\tin1 = true\n\n\t\tfor in2 \u0026amp;\u0026amp; last == 1 {\n\t\t}\n\t\t// mu.Lock()\n\t\tdata = data + 1\n\t\t// mu.Unlock()\n\n\t\tin1 = false\n\t}\n\n\tdone \u0026lt;- true\n}\n\nfunc racing2() {\n\tfor i := 0; i \u0026lt; 10000; i++ {\n\t\tlast = 2\n\t\tin2 = true\n\n\t\tfor in1 \u0026amp;\u0026amp; last == 2 {\n\t\t}\n\n\t\t// mu.Lock()\n\t\tdata = data + 1\n\t\t// mu.Unlock()\n\n\t\tin2 = false\n\t}\n\n\tdone \u0026lt;- true\n}\n\nfunc main() {\n\tgo racing1()\n\tgo racing2()\n\n\t\u0026lt;-done\n\t\u0026lt;-done\n\n\tfmt.Println(data)\n}\n\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-04-01T03:25:19Z",
    "vote": 0
  },
  {
    "id": "61bd7cd6247323bb7eb408ab39d758d5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Am I being pedantic about these things?",
    "url": "https://www.reddit.com/r/golang/comments/1286wki/am_i_being_pedantic_about_these_things/",
    "resume": "",
    "date": "2023-04-01T01:22:51Z",
    "vote": 0
  },
  {
    "id": "130d336da23256730f5944a672dcd569",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "GitHub Event Monitoring",
    "url": "https://forum.golangbridge.org/t/github-event-monitoring/31198#post_1",
    "resume": " \u003cp\u003eBefore I dive into this, is anyone using golang to monitor for git Events ( specifically a COMMIT) and then using the event to yank the latest code out of a Repo?\u003c/p\u003e\n\u003cp\u003eThanks\u003c/p\u003e ",
    "date": "2023-03-31T19:29:24Z",
    "vote": 0
  },
  {
    "id": "70b295a772b7ca1c8fc664394e1b9054",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best ways to render objects containing strings",
    "url": "https://www.reddit.com/r/golang/comments/127vb4g/best_ways_to_render_objects_containing_strings/",
    "resume": "",
    "date": "2023-03-31T18:55:58Z",
    "vote": 0
  },
  {
    "id": "5c99b641db7a6d03b04fcf75797dd951",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Preventing breaking changes to your database with Atlas",
    "url": "https://www.reddit.com/r/golang/comments/127tumm/preventing_breaking_changes_to_your_database_with/",
    "resume": "",
    "date": "2023-03-31T18:07:27Z",
    "vote": 0
  },
  {
    "id": "d6078007363162ba0a322c0fc7023479",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Any example of project with gofiber using both CSRF protection and JWT ?",
    "url": "https://www.reddit.com/r/golang/comments/127tdvy/any_example_of_project_with_gofiber_using_both/",
    "resume": "",
    "date": "2023-03-31T17:52:26Z",
    "vote": 0
  },
  {
    "id": "90d38e2852fe5337bb495d390d2164be",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Do we have any vscode plugin to convert json to struct in Go?",
    "url": "https://www.reddit.com/r/golang/comments/127t7yp/do_we_have_any_vscode_plugin_to_convert_json_to/",
    "resume": "",
    "date": "2023-03-31T17:47:02Z",
    "vote": 0
  },
  {
    "id": "8a4fe9c0484f6b3b38d87ecdd9448506",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Latest gopls version still v0.11.0 from December 22?",
    "url": "https://www.reddit.com/r/golang/comments/127srfi/latest_gopls_version_still_v0110_from_december_22/",
    "resume": "",
    "date": "2023-03-31T17:32:00Z",
    "vote": 0
  },
  {
    "id": "3c91634fd5335d0d594c435b8742b53a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Does go support big-endian?",
    "url": "https://forum.golangbridge.org/t/does-go-support-big-endian/30870#post_7",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"adeshk\" data-post=\"6\" data-topic=\"30870\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/letter_avatar_proxy/v4/letter/a/c57346/40.png\" class=\"avatar\"\u003e adeshk:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCan I rely on this?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eIt is the official documentation\u003c/p\u003e ",
    "date": "2023-03-31T16:16:54Z",
    "vote": 0
  },
  {
    "id": "610550dafdd223b6508bc5bcfaebdde9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go generator that writes data as code?",
    "url": "https://www.reddit.com/r/golang/comments/127pc3r/go_generator_that_writes_data_as_code/",
    "resume": "",
    "date": "2023-03-31T15:38:21Z",
    "vote": 0
  },
  {
    "id": "627407e7a8f66e9d9d9ba3acae197332",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Go and VSCode BSOD",
    "url": "https://forum.golangbridge.org/t/go-and-vscode-bsod/31172#post_3",
    "resume": " \u003cp\u003eWell. I just installed go v18.5.0 manually, then ran latest VSCode. No BSOD. Installed pls v.0.9.1 manually. Tadaa. Can now debug go.\u003cbr\u003e\nIf anyone else runs into this issue, just install an older version manually. Hopefully when 21 or 22 come out it will have fixed itself… \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003cbr\u003e\nThank you \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/skillian\"\u003e@skillian\u003c/a\u003e for spurring me into trying again. Tadaa!\u003c/p\u003e ",
    "date": "2023-03-31T15:37:29Z",
    "vote": 0
  },
  {
    "id": "0c95892ac2ba57a0e16f94dc3a03ac49",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Go and VSCode BSOD",
    "url": "https://forum.golangbridge.org/t/go-and-vscode-bsod/31172#post_2",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"MrFox\" data-post=\"1\" data-topic=\"31172\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/letter_avatar_proxy/v4/letter/m/f19dbf/40.png\" class=\"avatar\"\u003e MrFox:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI treated myself to a new PC, i9 13th gen, lotsa RAM, fast M2 drive…\u003cbr\u003e\nReinstalled everything from scratch. Win10, VS2022 (I’m a C# dev by day) and VSCode (I’m working on a Go project by night…)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eAre you me? \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/laughing.png?v=12\" title=\":laughing:\" class=\"emoji\" alt=\":laughing:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e I have a similar setup but I \u003cem\u003eusually\u003c/em\u003e program in Go on my laptop, and haven’t used VSCode and Go on my desktop in a while. I think I still have 1.18 or 1.19 on there.  I’ll try out 1.20.2 when I get home from my C# job later today!\u003c/p\u003e ",
    "date": "2023-03-31T15:14:14Z",
    "vote": 0
  },
  {
    "id": "bf8c19e80819f3502a13014b7322cdde",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "go-mir - a toolkit to develop RESTful API backend service like develop service of gRPC",
    "url": "https://www.reddit.com/r/golang/comments/127oicg/gomir_a_toolkit_to_develop_restful_api_backend/",
    "resume": "",
    "date": "2023-03-31T15:11:00Z",
    "vote": 0
  },
  {
    "id": "b7546c381379bcf8884de969f7231cc5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Yesql - a toolkit to help use std sql or sqlx in go web develop",
    "url": "https://www.reddit.com/r/golang/comments/127o68k/yesql_a_toolkit_to_help_use_std_sql_or_sqlx_in_go/",
    "resume": "",
    "date": "2023-03-31T15:00:21Z",
    "vote": 0
  },
  {
    "id": "029cecb9c8501088ce4a080aeee4a845",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Finding a way to mock the methods in standard library (ssh, sftp)",
    "url": "https://forum.golangbridge.org/t/finding-a-way-to-mock-the-methods-in-standard-library-ssh-sftp/31193#post_1",
    "resume": " \u003cp\u003eI’m working on increasing code coverage for my repository. Working on a niche section of the code that involves call to standard library using ssh, sftp.\u003c/p\u003e\n\u003cp\u003eHere is a minimal example of the code I’m dealing with in a Go snippet - \u003ca href=\"https://go.dev/play/p/DZ3H9FRlbGI\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eGo Playground - The Go Programming Language\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBasically I’m trying to modify the prototype of \u003ccode\u003esshDialer\u003c/code\u003e and \u003ccode\u003esftpNewClient\u003c/code\u003e, to return an interface as the first return value, so that I can create a mock struct (using gomock or testify/mock) to further test my code. Is that achievable. Also would appreciate other approaches based on my code structure.\u003c/p\u003e\n\u003cp\u003eThank you!\u003c/p\u003e ",
    "date": "2023-03-31T13:21:23Z",
    "vote": 0
  },
  {
    "id": "8c69c709609973b91aca3a6ba105825f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Cookie help",
    "url": "https://www.reddit.com/r/golang/comments/127kxw0/cookie_help/",
    "resume": "",
    "date": "2023-03-31T13:07:26Z",
    "vote": 0
  },
  {
    "id": "80c341c6e60829cd21df314304c241b4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Indie Go book recommendation",
    "url": "https://www.reddit.com/r/golang/comments/127kbqb/indie_go_book_recommendation/",
    "resume": "",
    "date": "2023-03-31T12:44:39Z",
    "vote": 0
  },
  {
    "id": "edcc8e5b32da85b414020c7441bc12e2",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Does go support big-endian?",
    "url": "https://forum.golangbridge.org/t/does-go-support-big-endian/30870#post_6",
    "resume": " \u003cp\u003eI’m trying to compile GO from source for amd64 architecture.\u003cbr\u003e\nI was wondering if i could set the ARCH to compile for Big endian.\u003c/p\u003e\n\u003cp\u003eI came across this page which says Big endian is not supported for amd64 \u003ca href=\"https://go.dev/doc/install/source\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eInstalling Go from source - The Go Programming Language\u003c/a\u003e. Can I rely on this?\u003c/p\u003e ",
    "date": "2023-03-31T12:17:01Z",
    "vote": 0
  },
  {
    "id": "35978abc955ae3c0291d39fd77328835",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Remote GO Blockchain Infrastructure Engineer",
    "url": "https://forum.golangbridge.org/t/remote-go-blockchain-infrastructure-engineer/31191#post_5",
    "resume": " \u003cp\u003eHey Gary,\u003c/p\u003e\n\u003cp\u003eI’ve just sent you an email \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e\n\u003cp\u003eCheers!\u003cbr\u003e\nMark\u003c/p\u003e ",
    "date": "2023-03-31T12:03:23Z",
    "vote": 0
  },
  {
    "id": "bdf57451d9c274d7037b02f5ff8ad894",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Remote GO Blockchain Infrastructure Engineer",
    "url": "https://forum.golangbridge.org/t/remote-go-blockchain-infrastructure-engineer/31191#post_4",
    "resume": " \u003cp\u003eHi Maria!\u003c/p\u003e\n\u003cp\u003eThanks for your response, I look forward to chatting with you! I haven’t received your email yet I’m afraid, would you mind re-sending it?\u003c/p\u003e\n\u003cp\u003eAll the best,\u003cbr\u003e\nMark\u003c/p\u003e ",
    "date": "2023-03-31T12:02:29Z",
    "vote": 0
  },
  {
    "id": "a9810a4026643ab78d4760fb7be7cf0f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Text articles vs Video tutorials",
    "url": "https://www.reddit.com/r/golang/comments/127ioyg/text_articles_vs_video_tutorials/",
    "resume": "",
    "date": "2023-03-31T11:51:21Z",
    "vote": 0
  },
  {
    "id": "c112ea22621906dded4074577d9ace3b",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Remote GO Blockchain Infrastructure Engineer",
    "url": "https://forum.golangbridge.org/t/remote-go-blockchain-infrastructure-engineer/31191#post_3",
    "resume": " \u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI am interested and has reached out via email.\u003c/p\u003e\n\u003cp\u003ePlease review and share your feedback for the same \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e\n\u003cp\u003eKind Regards\u003cbr\u003e\nMaria\u003c/p\u003e ",
    "date": "2023-03-31T11:47:24Z",
    "vote": 0
  },
  {
    "id": "9c96edd5ca485e357280affc729d8ecf",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Switch with w/wo default for boolean comparison",
    "url": "https://www.reddit.com/r/golang/comments/127ij8s/switch_with_wwo_default_for_boolean_comparison/",
    "resume": "",
    "date": "2023-03-31T11:44:50Z",
    "vote": 0
  },
  {
    "id": "2b4062ae885ae53812fe1b868b4d8cb8",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Remote GO Blockchain Infrastructure Engineer",
    "url": "https://forum.golangbridge.org/t/remote-go-blockchain-infrastructure-engineer/31191#post_2",
    "resume": " \u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI would be glad to assist you.\u003c/p\u003e\n\u003cp\u003eTo discuss further in detail kindly reach me at \u003ca href=\"mailto:garry@cisinlabs.com\"\u003egarry@cisinlabs.com\u003c/a\u003e or Skype me: cis.garry\u003c/p\u003e\n\u003cp\u003eLooking forward for your response.\u003c/p\u003e\n\u003cp\u003eThanks\u003c/p\u003e\n\u003cp\u003eGarry\u003c/p\u003e ",
    "date": "2023-03-31T11:38:20Z",
    "vote": 0
  },
  {
    "id": "7c7dccabeb4b9e57966e08df974258b3",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Remote GO Blockchain Infrastructure Engineer",
    "url": "https://forum.golangbridge.org/t/remote-go-blockchain-infrastructure-engineer/31191#post_1",
    "resume": " \u003cp\u003eRole: Blockchain Infrastructure Engineer (zkEVM)\u003cbr\u003e\nLocation: Remote\u003cbr\u003e\nSalary: $100-150k\u003c/p\u003e\n\u003cp\u003eLooking for a Blockchain (Golang) role? WorksHub can help! We’re recruiting for Scroll, the exciting scaling solution for Ethereum. With a $1.8 billion company valuation and being Vitalik Buterin’s favorite layer-2 scaling solution this could be a great move for you if you have Geth experience. The company offers $100-150k, the interview process is only three stages, and the zkEVM projects they’re working on are causing a massive buzz. Contact me at \u003ca href=\"mailto:marklee@functionalworks.com\"\u003emarklee@functionalworks.com\u003c/a\u003e to learn more and set up a time to chat with the CTO.\u003c/p\u003e\n\u003cp\u003eThe Job Description can be found here - \u003ca href=\"https://www.works-hub.com/jobs/remote-blockchain-infrastructure-engineer-40c\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eRemote Blockchain Infrastructure Engineer - Scroll\u003c/a\u003e\u003c/p\u003e ",
    "date": "2023-03-31T11:30:56Z",
    "vote": 0
  },
  {
    "id": "e07f991564690d662886b24eeaad6929",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What are some best resources to learn Golang Production Deployment?",
    "url": "https://www.reddit.com/r/golang/comments/127i12y/what_are_some_best_resources_to_learn_golang/",
    "resume": "",
    "date": "2023-03-31T11:23:39Z",
    "vote": 0
  },
  {
    "id": "13810d24aa891856ed1a5a6bcf96eb6c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Arche 0.6 released -- fastes Entity Component System (ECS) for Go?",
    "url": "https://www.reddit.com/r/golang/comments/127hzrm/arche_06_released_fastes_entity_component_system/",
    "resume": "",
    "date": "2023-03-31T11:22:19Z",
    "vote": 0
  },
  {
    "id": "da69dfc5817f903188f1aa1f820fec4d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "[HELP] - Please help refactoring the code",
    "url": "https://www.reddit.com/r/golang/comments/127g0a3/help_please_help_refactoring_the_code/",
    "resume": "",
    "date": "2023-03-31T09:39:15Z",
    "vote": 0
  },
  {
    "id": "ab96054f7bb14a44f3eaf5417314a242",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Ask ChatGPT to generate commands",
    "url": "https://www.reddit.com/r/golang/comments/127fuy5/ask_chatgpt_to_generate_commands/",
    "resume": "",
    "date": "2023-03-31T09:29:58Z",
    "vote": 0
  },
  {
    "id": "3afbf2c2ee768c5c9829ce18a7ced96d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GoLand getting stuck when saving",
    "url": "https://www.reddit.com/r/golang/comments/127ej2l/goland_getting_stuck_when_saving/",
    "resume": "",
    "date": "2023-03-31T08:13:32Z",
    "vote": 0
  },
  {
    "id": "26a1731df7293a14af44bdc7a067ae25",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I've just started learning Golang, and I'm struggling to choose a framework.",
    "url": "https://www.reddit.com/r/golang/comments/127ej0y/ive_just_started_learning_golang_and_im/",
    "resume": "",
    "date": "2023-03-31T08:13:26Z",
    "vote": 0
  },
  {
    "id": "d166bc5c3b88797a8bd706365a63c266",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "From Unknown to Expert: Golang Statements You Need to Know",
    "url": "https://www.reddit.com/r/golang/comments/127d6z0/from_unknown_to_expert_golang_statements_you_need/",
    "resume": "",
    "date": "2023-03-31T07:08:51Z",
    "vote": 0
  },
  {
    "id": "14ad0a53b611d76e9738af3893a9a16d",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "Golang hash table that is faster and uses less memory",
    "url": "https://golang.ch/golang-hash-table-that-is-faster-and-uses-less-memory/",
    "resume": "\u003cp\u003eA new Golang hash table based on\u0026#160;SwissTable\u0026#160;that is faster and uses less memory than Golang\u0026#8217;s built-in map. We\u0026#8217;ll cover the motivation, design and implementation of this new package and give you some reasons to try it. This blog is part of our deep-dive series on the Go programming language. Past iterations include posts about\u0026#160;concurrency,\u0026#160;\u0026#8220;inheritance\u0026#8221;, and\u0026#160;managing [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/golang-hash-table-that-is-faster-and-uses-less-memory/\"\u003eGolang hash table that is faster and uses less memory\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/golang-hash-table-that-is-faster-and-uses-less-memory/\"\u003eGolang hash table that is faster and uses less memory\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-03-31T04:10:32Z",
    "vote": 0
  },
  {
    "id": "3015a34e756d6c3c86c4540f53fc7012",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Microbenchmark suite shows Go is about as fast as Rust (except for one outlier)",
    "url": "https://www.reddit.com/r/golang/comments/1277944/microbenchmark_suite_shows_go_is_about_as_fast_as/",
    "resume": "",
    "date": "2023-03-31T02:29:57Z",
    "vote": 0
  },
  {
    "id": "075498176353a8d00ccb33703b10cc9f",
    "source": {
      "path": "golang",
      "name": "Golang Weekly",
      "url": "https://cprss.s3.amazonaws.com/golangweekly.com.xml"
    },
    "name": "'Til Tuesday",
    "url": "https://golangweekly.com/issues/454",
    "resume": "\u003ctable border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\"\u003e\n  \u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003cdiv\u003e    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\n\u003ctd align=\"left\" style=\"padding-left: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e#​454 — March 31, 2023\u003c/p\u003e\u003c/td\u003e\n\u003ctd align=\"right\" style=\"padding-right: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137633/rss\" style=\" color: #0099b4;\"\u003eUnsub\u003c/a\u003e  |  \u003ca href=\"https://golangweekly.com/link/137634/rss\" style=\" color: #0099b4;\"\u003eWeb Version\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eℹ️ \u003cstrong\u003eA quick scheduling note: The Go Weekly Newsletter is moving to Tuesdays.\u003c/strong\u003e As such, the newsletter will be taking a break next week and we will be back in your inbox on Tuesday April 11, 2023. Thanks for reading, and we'll see you then.\u003cbr\u003e__\u003cbr\u003e\u003cem\u003ePeter Cooper, Editor\u003c/em\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 12px;  padding-left: 12px;\"\u003e\u003cp\u003eThe \u003cem\u003eGo Weekly\u003c/em\u003e Newsletter\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/137636/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/zoqh8fi4r71geeniqxqn.jpg\" width=\"640\" style=\"    line-height: 100%;       \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137636/rss\" title=\"www.dolthub.com\" style=\" color: #0099b4;    font-size: 1.1em; line-height: 1.4em;\"\u003eSwissMap: A Smaller, Faster Hash Table for Go\u003c/a\u003e\u003c/span\u003e — The creators of the DoltDB database have open-sourced SwissMap, a Go port of a hash map from Google’s \u003ca href=\"https://golangweekly.com/link/137637/rss\" style=\" color: #0099b4;   \"\u003eAbseil\u003c/a\u003e library. It uses less memory than Go’s built-in map and is well-suited for performance-sensitive contexts where memory use for large hash tables is a concern – though, as always, there are tradeoffs to consider. (\u003ca href=\"https://golangweekly.com/link/137638/rss\" style=\" color: #0099b4;   \"\u003eGitHub repo\u003c/a\u003e.)\u003c/p\u003e\n  \u003cp\u003eAndy Arthur (DoltHub) \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003cspan\u003e🎂 \u003c/span\u003e \u003ca href=\"https://golangweekly.com/link/137639/rss\" title=\"go.dev\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGo 1 Released 11 Years Ago\u003c/a\u003e\u003c/span\u003e — A quick jump back in time to March 2012 when “Go version 1” was officially released. A lot has changed since then, but Andrew ended the post with one thing that is still true: \u003cem\u003e“There has never been a better time to be a Go programmer.”\u003c/em\u003e\u003c/p\u003e\n  \u003cp\u003eAndrew Gerrand \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003ca href=\"https://golangweekly.com/link/137635/rss\" style=\" color: #0099b4;   \"\u003e\u003cimg src=\"https://copm.s3.amazonaws.com/bcc68a3c.png\" width=\"110\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%;    \"\u003e\u003c/a\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137635/rss\" title=\"www.ardanlabs.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGo! Experts at Your Service\u003c/a\u003e\u003c/span\u003e — Do you need help filling skill gaps, speeding up development \u0026amp; creating high performing software with Go, Docker, K8s, Terraform and Rust? We’ll help you maximize your architecture, structure, tech-debt and human capital.\u003c/p\u003e\n  \u003cp\u003eArdan Labs Consulting \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137640/rss\" title=\"bitfieldconsulting.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eThe Adapter Pattern in Go\u003c/a\u003e\u003c/span\u003e — How do you test a database without a database? It’s not a trick question. There’s a synergy between testability and good design, and the adapter pattern can help you decouple business logic (“\u003cem\u003eknowing about widgets\u003c/em\u003e”) from persistent storage (“\u003cem\u003eknowing about Postgres\u003c/em\u003e”).\u003c/p\u003e\n  \u003cp\u003eJohn Arundel \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eIN BRIEF:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThe Go team has \u003ca href=\"https://golangweekly.com/link/137641/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eannounced a plan to release Go 1.20.3 and 1.19.8\u003c/a\u003e on Tuesday, April 4 in response to some necessary security fixes for some currently private vulnerabilities.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe Google Cloud team covers \u003ca href=\"https://golangweekly.com/link/137642/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ehow to connect a Go app to Cloud SQL\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe team at Druva explains \u003ca href=\"https://golangweekly.com/link/137643/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ehow to work with WebSockets at scale\u003c/a\u003e from Go.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137644/rss\" title=\"www.storj.io\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGo Integration Tests with Postgres\u003c/a\u003e\u003c/span\u003e — A look at a few ways to use Postgres in testing scenarios, each with their own pros and cons.\u003c/p\u003e\n  \u003cp\u003eEgon Elbre \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e▶  \u003ca href=\"https://golangweekly.com/link/137645/rss\" title=\"changelog.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eCross-Platform Graphical User Interfaces with Go\u003c/a\u003e\u003c/span\u003e — The creators of Wails and Fyne went on \u003cem\u003eGo Time\u003c/em\u003e to talk about the challenges of cross-platform GUI development.\u003c/p\u003e\n  \u003cp\u003eGo Time Podcast \u003cspan style=\"text-transform: uppercase; margin-left: 4px; padding-top: 1px; padding-right: 4px;  padding-left: 4px; font-size: 0.9em;             \"\u003epodcast\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137671/rss\" title=\"www.kenaqshal.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eDebugging Dockerized Go Apps with VS Code\u003c/a\u003e\u003c/span\u003e — It’s reasonably simple to setup a local Docker environment for debugging with Delve and Docker (or Docker Compose), as this step-by-step tutorial demonstrates.\u003c/p\u003e\n  \u003cp\u003eKen Aqshal \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137647/rss\" title=\"t.mp\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eWhat Is a Saga in Microservices?\u003c/a\u003e\u003c/span\u003e — Take a deeper dive into the mechanics of sagas and explore how they can be used to manage long-running processes.\u003c/p\u003e\n  \u003cp\u003eTemporal Technologies \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137648/rss\" title=\"evilmartians.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eAnyCable Off Rails: Connecting Twilio Streams with Go and Ruby's Hanami\u003c/a\u003e\u003c/span\u003e — An interesting marriage of Go and Ruby here to create an app to transcribe a chat into text using \u003ca href=\"https://golangweekly.com/link/137649/rss\" style=\" color: #0099b4;   \"\u003eVosk\u003c/a\u003e (a speech recognition system) and a load of other tools. There’s a great chance you’ll be exposed to something new here.\u003c/p\u003e\n  \u003cp\u003eEvil Martians \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e🛠 Code \u0026amp; Tools\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/137650/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/hfabik4ulqhv2l0zssqj.jpg\" width=\"640\" style=\"        line-height: 100%;     \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137650/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003egotraceui: A GUI App for Viewing Go Execution Traces\u003c/a\u003e\u003c/span\u003e — Meant to be a faster, more accessible, and more powerful alternative to \u003ccode\u003ego tool trace\u003c/code\u003e with a \u003ca href=\"https://golangweekly.com/link/137651/rss\" style=\" color: #0099b4;   \"\u003eGio UI\u003c/a\u003e-powered interface tuned specifically to the unique characteristics of Go traces.\u003c/p\u003e\n  \u003cp\u003eDominik Honnef \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137652/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ego-nbd: Pure Go NBD Server and Client Library\u003c/a\u003e\u003c/span\u003e — NBD means \u003ca href=\"https://golangweekly.com/link/137653/rss\" style=\" color: #0099b4;   \"\u003e\u003cem\u003eNetwork Block Device\u003c/em\u003e\u003c/a\u003e and in Linux this provides a mechanism for providing block devices (e.g. a hard drive) over a network rather than in local hardware. With go-nbd, you can build your own abstractions and bridges, such as to turn a file, byte slice, S3 bucket or other io.ReadWriter into a fully-fledged block device.\u003c/p\u003e\n  \u003cp\u003eFelicitas Pojtinger \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137654/rss\" title=\"tailscale.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eTailscale Integrates with 60+ Solutions That Your Team Uses Every Day\u003c/a\u003e\u003c/span\u003e — Tailscale makes it easy to connect all your team’s devices and development environments in a way that feels like magic.\u003c/p\u003e\n  \u003cp\u003eTailscale \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137655/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003egocodewalker: For Walking Directories of Code\u003c/a\u003e\u003c/span\u003e — If you want to walk through a nested set of directories in a code repo while respecting \u003ccode\u003e.gitignore\u003c/code\u003e, this is for you.\u003c/p\u003e\n  \u003cp\u003eBen Boyter \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/137656/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/o3u1xsgb3kk90hmybggs.jpg\" width=\"640\" style=\"        line-height: 100%;     \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137656/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eTint: \u003ccode\u003eslog.Handler\u003c/code\u003e That Writes Tinted Logs\u003c/a\u003e\u003c/span\u003e — Tinted, as in colorful. Works alongside the (still experimental) \u003ca href=\"https://golangweekly.com/link/137657/rss\" style=\" color: #0099b4;   \"\u003estructured logging approach\u003c/a\u003e Go is currently considering. Reminds me of that \u003cem\u003eSoft Cell\u003c/em\u003e song from the 80s.\u003c/p\u003e\n  \u003cp\u003elmittmann \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137658/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003epathfind: Path Finding on 2D Polygonal Maps\u003c/a\u003e\u003c/span\u003e — Finds the shortest path between two points in a polygon set by building a visibility graph and then using the A* search algorithm against it.\u003c/p\u003e\n  \u003cp\u003eFrederik Zipp \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 0px;  padding-left: 0px;\"\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eJobs\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137659/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eSoftware Engineer C++\u003c/a\u003e\u003c/span\u003e — Join our \"kick ass\" team. Our software team operates from 17 countries and we're always looking for more exceptional engineers.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eSticker Mule\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137660/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eFind a Job Through Hired\u003c/a\u003e\u003c/span\u003e — Hired makes job hunting easy-instead of chasing recruiters, companies approach you with salary details up front. Create a free profile now.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eHired\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e🧑‍💻 Got a job listing to share? \u003cem\u003e\u003ca href=\"https://golangweekly.com/link/137661/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eHere's how\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eQUICK RELEASES:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137662/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ewazero 1.0.1\u003c/a\u003e\u003cbr\u003e\n↳ Zero dependency WebAssembly runtime for Go devs.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137663/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eTiDB 7.0\u003c/a\u003e\u003cbr\u003e\n↳ Distributed MySQL-compatible NewSQL database.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137664/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eD2 0.3\u003c/a\u003e\u003cbr\u003e\n↳ Diagram scripting language that turns text to diagrams.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137665/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eFerret 0.18\u003c/a\u003e\u003cbr\u003e\n↳ Declarative web scraping.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137666/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eFiber 2.43\u003c/a\u003e\u003cbr\u003e\n↳ Express.js inspired web framework.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137667/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eHertz 0.6.1\u003c/a\u003e\u003cbr\u003e\n↳ HTTP framework for microservices.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137668/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ego-elasticsearch 8.7\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137669/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eNATS - Go Client 1.25\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n  \u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n\n\n\n\u003cimg src=\"https://golangweekly.com/open/454/rss\" width=\"1\" height=\"1\" /\u003e",
    "date": "2023-03-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4bd5944c2608575b94b343e11e69f50c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "As a Go programmer, what design pattern, programming techniques have you actually used, implemented regularly in your workplace which made your life much easier?",
    "url": "https://www.reddit.com/r/golang/comments/126y75p/as_a_go_programmer_what_design_pattern/",
    "resume": "",
    "date": "2023-03-30T20:24:15Z",
    "vote": 0
  },
  {
    "id": "0778799e5d24b9c01cce77d3f785a3ae",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang GUI",
    "url": "https://www.reddit.com/r/golang/comments/126wivx/golang_gui/",
    "resume": "",
    "date": "2023-03-30T19:18:36Z",
    "vote": 0
  },
  {
    "id": "62cab6f60425a456a21cd8e382d1ee05",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Best GO Lang resources",
    "url": "https://forum.golangbridge.org/t/best-go-lang-resources/31180#post_4",
    "resume": " \u003cp\u003eI recommend The Go Programming Language often. It’s slightly outdated with regard to modules and generics but you can easily supplement that knowledge with the docs; for example \u003ca href=\"https://go.dev/doc/tutorial/create-module\" rel=\"noopener nofollow ugc\"\u003etutorial/create-module\u003c/a\u003e and \u003ca href=\"https://go.dev/doc/tutorial/generics\" rel=\"noopener nofollow ugc\"\u003etutorial/generics\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.gopl.io/\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ehttps://www.gopl.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIt is an excellent book. Read the first part of it for free on that link and see if it fits with your style of learning.\u003c/p\u003e ",
    "date": "2023-03-30T18:39:11Z",
    "vote": 0
  },
  {
    "id": "3694b934a6dd9d52ef6b45560325593e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How do create dynamic models in Golang?",
    "url": "https://www.reddit.com/r/golang/comments/126sxjx/how_do_create_dynamic_models_in_golang/",
    "resume": "",
    "date": "2023-03-30T17:03:01Z",
    "vote": 0
  },
  {
    "id": "f2fc6d3b535607d4628541d7cb8bce5b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Cross-platform graphical user interfaces",
    "url": "https://changelog.com/gotime/271",
    "resume": "We’re joined by the creators of Wails and Fyne to dig into writing Go code for different architectures and operating systems.",
    "date": "2023-03-30T17:00:00Z",
    "vote": 0
  },
  {
    "id": "b852712652b72f1801b6b770be9d3b95",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Best GO Lang resources",
    "url": "https://forum.golangbridge.org/t/best-go-lang-resources/31180#post_3",
    "resume": " \u003cp\u003eAlready used it, I was asking about a paid resource with in depth break down of the language.\u003c/p\u003e ",
    "date": "2023-03-30T16:41:48Z",
    "vote": 0
  },
  {
    "id": "e430bcd9ef038305a2df2a600aa0792d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Build a Serverless Gym App with Go, AWS Lambda, ChatGPT, Twilio and WhatsApp",
    "url": "https://www.reddit.com/r/golang/comments/126rvj8/build_a_serverless_gym_app_with_go_aws_lambda/",
    "resume": "",
    "date": "2023-03-30T16:24:30Z",
    "vote": 0
  },
  {
    "id": "08dd342170cb063f57d796c5a48629e9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "New version of requests with support for httptest.Server",
    "url": "https://www.reddit.com/r/golang/comments/126rhrj/new_version_of_requests_with_support_for/",
    "resume": "",
    "date": "2023-03-30T16:10:24Z",
    "vote": 0
  },
  {
    "id": "3d3dd4009e74e5cdcee77fa2dcd70f47",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is there a Pop3 package that works with Outlook after it's authentication changes?",
    "url": "https://www.reddit.com/r/golang/comments/126r7af/is_there_a_pop3_package_that_works_with_outlook/",
    "resume": "",
    "date": "2023-03-30T15:59:55Z",
    "vote": 0
  },
  {
    "id": "51159240df439baf02c29801d161b01c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "compressing an image gives different results based on a value used only in an if condition",
    "url": "https://www.reddit.com/r/golang/comments/126qxqj/compressing_an_image_gives_different_results/",
    "resume": "",
    "date": "2023-03-30T15:50:10Z",
    "vote": 0
  },
  {
    "id": "dd72058db760bffd538d4e2a810ab5df",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Building a Memory Efficient Hash Table in Golang",
    "url": "https://www.reddit.com/r/golang/comments/126qqss/building_a_memory_efficient_hash_table_in_golang/",
    "resume": "",
    "date": "2023-03-30T15:43:29Z",
    "vote": 0
  },
  {
    "id": "c7f6a0ac3016fab2d651752809bc6b36",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I put together a basic tutorial of Go on my blog with examples for red teams and pen testers.",
    "url": "https://www.reddit.com/r/golang/comments/126qfmi/i_put_together_a_basic_tutorial_of_go_on_my_blog/",
    "resume": "",
    "date": "2023-03-30T15:32:36Z",
    "vote": 0
  },
  {
    "id": "42557f77d28a11b255a469d8688b620b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "sqlmock help",
    "url": "https://www.reddit.com/r/golang/comments/126poie/sqlmock_help/",
    "resume": "",
    "date": "2023-03-30T15:04:19Z",
    "vote": 0
  },
  {
    "id": "003d1abb5f564baea61963c49f95b028",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Logging with Sentry",
    "url": "https://www.reddit.com/r/golang/comments/126oxad/logging_with_sentry/",
    "resume": "",
    "date": "2023-03-30T14:35:03Z",
    "vote": 0
  },
  {
    "id": "90abb3f6a8e8853f77746fd3e09e64c4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "gotraceui: Go execution trace frontend",
    "url": "https://www.reddit.com/r/golang/comments/126oq1u/gotraceui_go_execution_trace_frontend/",
    "resume": "",
    "date": "2023-03-30T14:27:08Z",
    "vote": 0
  },
  {
    "id": "2aa63b885da142cb2f42eb68752de698",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How should you fail a TestMain using testing.M?",
    "url": "https://www.reddit.com/r/golang/comments/126mgml/how_should_you_fail_a_testmain_using_testingm/",
    "resume": "",
    "date": "2023-03-30T13:08:48Z",
    "vote": 0
  },
  {
    "id": "b46d8454b7c2a1f5fdfebec944b2ee5e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Tell me it's my personal filter bubble. Why do people keep using Rust for building things where Go can be a perfect fit?",
    "url": "https://www.reddit.com/r/golang/comments/126lif3/tell_me_its_my_personal_filter_bubble_why_do/",
    "resume": "",
    "date": "2023-03-30T12:29:16Z",
    "vote": 0
  },
  {
    "id": "e5b2b68aab1ebfe15b9bf5f5c46cc40a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Docker golang sdk issue when writing a `docker exec` look-alike",
    "url": "https://forum.golangbridge.org/t/docker-golang-sdk-issue-when-writing-a-docker-exec-look-alike/31159#post_3",
    "resume": " \u003cp\u003eOk, I even tried my hand with ChatGPT, the answer was worse ( ! ) : within the container I have stdin, but no stdout or stderr.\u003c/p\u003e\n\u003cp\u003eAny help would be greatly appreciated, I’m stumped.\u003c/p\u003e ",
    "date": "2023-03-30T11:57:37Z",
    "vote": 0
  },
  {
    "id": "51c8188c5c35ad962d44c172b69b4ec1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Turboshred: A recursive, fast file shredder for UNIX-like systems",
    "url": "https://www.reddit.com/r/golang/comments/126j4h7/turboshred_a_recursive_fast_file_shredder_for/",
    "resume": "",
    "date": "2023-03-30T10:46:24Z",
    "vote": 0
  },
  {
    "id": "16cca37f9e49778d690174808fc39c44",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Building and debugging 32-bit program on 64-bit system",
    "url": "https://forum.golangbridge.org/t/building-and-debugging-32-bit-program-on-64-bit-system/31181#post_2",
    "resume": " \u003cp\u003eUnfortunately, you cannot debug 32-bit Go programs with Delve, the de facto standard Go debugger. You can try to use gdb instead, but based on \u003ca href=\"https://go.dev/doc/gdb\" rel=\"noopener nofollow ugc\"\u003ethe Go documentation\u003c/a\u003e, it is my understanding that it can be challenging or even wrong:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGDB does not understand Go programs well. The stack management, threading, and runtime contain aspects that differ enough from the execution model GDB expects that they can confuse the debugger and cause incorrect results even when the program is compiled with gccgo. As a consequence, although GDB can be useful in some situations (e.g., debugging Cgo code, or debugging the runtime itself), it is not a reliable debugger for Go programs, particularly heavily concurrent ones. Moreover, it is not a priority for the Go project to address these issues, which are difficult.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI still use 32-bit systems and the way I “debug” them is with logging all over the place, which is far from ideal. Maybe someone else will have better information.\u003c/p\u003e ",
    "date": "2023-03-30T10:10:16Z",
    "vote": 0
  },
  {
    "id": "89476c91afb3e9ff2596e78ccd92e0bd",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "PHOS: A Go channel extension with internal handlers",
    "url": "https://www.reddit.com/r/golang/comments/126hbuw/phos_a_go_channel_extension_with_internal_handlers/",
    "resume": "",
    "date": "2023-03-30T09:09:13Z",
    "vote": 0
  },
  {
    "id": "b7c7ce06fe62fd7d5faa1e868f5a6c53",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I created an in-memory SQL database called MemSQL as a learning project",
    "url": "https://www.reddit.com/r/golang/comments/126gli8/i_created_an_inmemory_sql_database_called_memsql/",
    "resume": "",
    "date": "2023-03-30T08:27:38Z",
    "vote": 0
  },
  {
    "id": "d79b0798e97cb24f0348f7bb603241e1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Two ways to provide configuration: command-line, yaml file.",
    "url": "https://www.reddit.com/r/golang/comments/126fgcj/two_ways_to_provide_configuration_commandline/",
    "resume": "",
    "date": "2023-03-30T07:22:51Z",
    "vote": 0
  },
  {
    "id": "45956c4f643d149c93f3227ee3513c71",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Telltail: Universal Clipboard for Text",
    "url": "https://www.reddit.com/r/golang/comments/126d6ix/telltail_universal_clipboard_for_text/",
    "resume": "",
    "date": "2023-03-30T05:49:04Z",
    "vote": 0
  },
  {
    "id": "6b246e88419bcbea3d3c675452f2c9f4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How does the cap function work on slices?",
    "url": "https://www.reddit.com/r/golang/comments/126biw8/how_does_the_cap_function_work_on_slices/",
    "resume": "",
    "date": "2023-03-30T04:24:52Z",
    "vote": 0
  },
  {
    "id": "dc5256a8649541720b2e3d993ffcf903",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Beginner Who Wants to learn Golang",
    "url": "https://www.reddit.com/r/golang/comments/1268ha3/beginner_who_wants_to_learn_golang/",
    "resume": "",
    "date": "2023-03-30T02:18:45Z",
    "vote": 0
  },
  {
    "id": "aa52a7653f2e9e8055b8571f60cf8137",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Building and debugging 32-bit program on 64-bit system",
    "url": "https://forum.golangbridge.org/t/building-and-debugging-32-bit-program-on-64-bit-system/31181#post_1",
    "resume": " \u003cp\u003eDear all,\u003c/p\u003e\n\u003cp\u003eI’m currently working on a program that is designed to run on both 32-bit and 64-bit systems. During the process of compiling it with the 386 mode, I came across some bugs that need to be resolved. Therefore, I decided to use Goland on my 64-bit system to debug the program.\u003c/p\u003e\n\u003cp\u003eI have already set up the run/debug configurations, as shown in the attached image.\u003cbr\u003e\n\u003c/p\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://forum.golangbridge.org/uploads/default/original/2X/f/f77dcb7c160a656c9b4b317fda19ceaedaeeb803.png\" data-download-href=\"https://forum.golangbridge.org/uploads/default/f77dcb7c160a656c9b4b317fda19ceaedaeeb803\" title=\"image\"\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/original/2X/f/f77dcb7c160a656c9b4b317fda19ceaedaeeb803.png\" alt=\"image\" data-base62-sha1=\"zjprRGxBb7qRDZkM8xWQhqCBAht\" width=\"690\" height=\"142\" data-dominant-color=\"434647\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cbr\u003e\nHowever, when I try to debug the program, I’m encountering an error that’s preventing me from proceeding.\u003cp\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eAPI server listening at: 127.0.0.1:60327\nunsupported architecture of windows/i386 - only windows/amd64  windows/arm64 are supported\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAs a developer, I’m always eager to learn and improve my skills, so any assistance or guidance in resolving this issue would be greatly appreciated.\u003c/p\u003e\n\u003cp\u003eThank you in advance for your help!\u003c/p\u003e ",
    "date": "2023-03-30T01:54:15Z",
    "vote": 0
  },
  {
    "id": "439b50df7ca29cf21d21204414934850",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does Go fix \"the Trouble with OOP\"? (I wanted to get the perspective of both FP and Go experts)",
    "url": "https://www.reddit.com/r/golang/comments/1266u7v/does_go_fix_the_trouble_with_oop_i_wanted_to_get/",
    "resume": "",
    "date": "2023-03-30T01:08:14Z",
    "vote": 0
  },
  {
    "id": "378c9442bb63952e514eba198d4f751e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "It's Not About the Job Openings",
    "url": "https://blog.boot.dev/jobs/not-about-job-openings/",
    "resume": "I talk to boatloads of students who are starting to learn to code, and invariably they are hyper-concerned about which programming languages and technologies they should be learning.",
    "date": "2023-03-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "61047534ca658d89872b2d13faa8181c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Complete Python Tutorial for Absolute Beginners in 2023",
    "url": "https://blog.boot.dev/tutorials/python-tutorial/",
    "resume": "Python is an unbelievably powerful programming language that is used by millions of developers in production systems around the world.",
    "date": "2023-03-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a135e4e3967cd0ef5769eca25ef84779",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "go install on a private repo.",
    "url": "https://www.reddit.com/r/golang/comments/12637d9/go_install_on_a_private_repo/",
    "resume": "",
    "date": "2023-03-29T22:40:44Z",
    "vote": 0
  },
  {
    "id": "dffc6b48f5ca289bc9cfef73704d8830",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Where to learn + Communities?",
    "url": "https://www.reddit.com/r/golang/comments/1263232/where_to_learn_communities/",
    "resume": "",
    "date": "2023-03-29T22:35:11Z",
    "vote": 0
  },
  {
    "id": "4671c03fa7b4eac3e200b56a46495612",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Best GO Lang resources",
    "url": "https://forum.golangbridge.org/t/best-go-lang-resources/31180#post_2",
    "resume": " \u003cp\u003eThe primary way to start with Go is its official web page, \u003ca href=\"https://go.dev/learn/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eGet Started - The Go Programming Language\u003c/a\u003e\u003c/p\u003e ",
    "date": "2023-03-29T22:05:49Z",
    "vote": 0
  },
  {
    "id": "d4eca81c6a4c464ad46f432066515348",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "TIL you can stub any function with go:linkname",
    "url": "https://www.reddit.com/r/golang/comments/1261j2t/til_you_can_stub_any_function_with_golinkname/",
    "resume": "",
    "date": "2023-03-29T21:38:10Z",
    "vote": 0
  },
  {
    "id": "f8fa3354a1ae39b5165e256da8c1d997",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "SwissMap: a smaller, faster Golang Hash Table",
    "url": "https://www.reddit.com/r/golang/comments/1260z0x/swissmap_a_smaller_faster_golang_hash_table/",
    "resume": "",
    "date": "2023-03-29T21:16:16Z",
    "vote": 0
  },
  {
    "id": "c29cc2a2dba8d00095ee1d8d17459c4c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Can you beat openAI?",
    "url": "https://www.reddit.com/r/golang/comments/12608xa/can_you_beat_openai/",
    "resume": "",
    "date": "2023-03-29T20:48:19Z",
    "vote": 0
  },
  {
    "id": "34efcf101e7a9b0ad5f0e38c4e788f98",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Image compression",
    "url": "https://www.reddit.com/r/golang/comments/125zvid/image_compression/",
    "resume": "",
    "date": "2023-03-29T20:34:12Z",
    "vote": 0
  },
  {
    "id": "5d41d70a1525142ff832612b62c43efd",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GoReleaser: I'll pay someone to walk me through the Homebrew, Scoop, and/or Chocolately portion of my MVP while I take notes",
    "url": "https://www.reddit.com/r/golang/comments/125zece/goreleaser_ill_pay_someone_to_walk_me_through_the/",
    "resume": "",
    "date": "2023-03-29T20:16:28Z",
    "vote": 0
  },
  {
    "id": "a3244f2821b4265d156b294fc31d3113",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Package for shortest path finding in a set of polygons",
    "url": "https://www.reddit.com/r/golang/comments/125yt2w/package_for_shortest_path_finding_in_a_set_of/",
    "resume": "",
    "date": "2023-03-29T19:53:45Z",
    "vote": 0
  },
  {
    "id": "e67fd8770c1b901b30949b32634d8ca0",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Best GO Lang resources",
    "url": "https://forum.golangbridge.org/t/best-go-lang-resources/31180#post_1",
    "resume": " \u003cp\u003eI am fairly new to Golang, but I have used languages like Javascript, Python and PHP. The difficulty I’m having at this point is how different these languages are, and I really want to understand Golang down to the basics. So I’d really appreciate if nice go resources can be recommended where I’d be able to work the Language from ground up.\u003c/p\u003e ",
    "date": "2023-03-29T19:16:49Z",
    "vote": 0
  },
  {
    "id": "4b847ef49450db1d2242b43b91a32849",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Discover the top crypto developers jobs of the week, including Golang!",
    "url": "https://www.reddit.com/r/golang/comments/125xbsl/discover_the_top_crypto_developers_jobs_of_the/",
    "resume": "",
    "date": "2023-03-29T18:58:33Z",
    "vote": 0
  },
  {
    "id": "0a5de7ace9a49d797b92d2499862d51e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Digger (OSS Terraform Cloud Alternative) now supports GCP",
    "url": "https://www.reddit.com/r/golang/comments/125unip/digger_oss_terraform_cloud_alternative_now/",
    "resume": "",
    "date": "2023-03-29T17:30:45Z",
    "vote": 0
  },
  {
    "id": "54fd7bbb975450b4122275ac2547a6b6",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Does go support big-endian?",
    "url": "https://forum.golangbridge.org/t/does-go-support-big-endian/30870#post_5",
    "resume": " \u003cp\u003eCan you show the full error?\u003c/p\u003e ",
    "date": "2023-03-29T17:25:09Z",
    "vote": 0
  },
  {
    "id": "3f37aedc799b87eb535dbd585d04e034",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Kubeshark Slack integration: Alert based on Kubernetes network events",
    "url": "https://www.reddit.com/r/golang/comments/125u6ww/kubeshark_slack_integration_alert_based_on/",
    "resume": "",
    "date": "2023-03-29T17:12:41Z",
    "vote": 0
  },
  {
    "id": "a89d4939cc2d926a53b18314352f1bca",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Rant about compiler and unused variables",
    "url": "https://www.reddit.com/r/golang/comments/125tu5a/rant_about_compiler_and_unused_variables/",
    "resume": "",
    "date": "2023-03-29T16:59:23Z",
    "vote": 0
  },
  {
    "id": "958f72418cb2560aca4ed1e078fec005",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Could not import package",
    "url": "https://forum.golangbridge.org/t/could-not-import-package/31170#post_4",
    "resume": " \u003cp\u003eNo, it does not get shorter than that. The module-based import path helps avoid ambiguities. Imagine you create a package named \u003ccode\u003eos\u003c/code\u003e and import it as \u003ccode\u003eos\u003c/code\u003e. The compiler would not be able to distinguish your \u003ccode\u003eos\u003c/code\u003e package from the \u003ccode\u003eos\u003c/code\u003e package in the standard library.\u003c/p\u003e ",
    "date": "2023-03-29T16:53:16Z",
    "vote": 0
  },
  {
    "id": "123e1c933a756c6824ce6b32a469d769",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Debugging and Resolving Issues with Go and the sqlite3 Library",
    "url": "https://www.reddit.com/r/golang/comments/125thku/debugging_and_resolving_issues_with_go_and_the/",
    "resume": "",
    "date": "2023-03-29T16:45:32Z",
    "vote": 0
  },
  {
    "id": "5c6c39b22b81ff026feb33b72a094559",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "go-nbd – A Pure Go NBD Server and Client Library",
    "url": "https://www.reddit.com/r/golang/comments/125swkv/gonbd_a_pure_go_nbd_server_and_client_library/",
    "resume": "",
    "date": "2023-03-29T16:23:04Z",
    "vote": 0
  },
  {
    "id": "9aff40596271eccb3219ef24443e1808",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GuardLlama - Open-source WireGuard VPN with ad-blocking capabilities",
    "url": "https://www.reddit.com/r/golang/comments/125ssur/guardllama_opensource_wireguard_vpn_with/",
    "resume": "",
    "date": "2023-03-29T16:19:05Z",
    "vote": 0
  },
  {
    "id": "4ed089484de11e8c1ff92d8d386fcc61",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Issues regarding importing",
    "url": "https://forum.golangbridge.org/t/issues-regarding-importing/31174#post_2",
    "resume": " \u003cp\u003eHi \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/oluwatobi_giwa\"\u003e@Oluwatobi_Giwa\u003c/a\u003e,\u003c/p\u003e\n\u003cp\u003eMove \u003ccode\u003elogging.go\u003c/code\u003e into a directory that has the name of the package, and your import should work fine:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\u0026lt;base_dir\u0026gt;/pkg/logging/logging.go\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOr rename the \u003ccode\u003epkg\u003c/code\u003e directory to \u003ccode\u003elogging\u003c/code\u003e. A \u003ccode\u003epkg\u003c/code\u003e directory \u003ca href=\"https://appliedgo.com/blog/go-project-layout\" rel=\"noopener nofollow ugc\"\u003eis not always necessary\u003c/a\u003e.\u003c/p\u003e ",
    "date": "2023-03-29T15:39:08Z",
    "vote": 0
  },
  {
    "id": "af0464189cdac81a93ad93cd5c4c8aba",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Does go support big-endian?",
    "url": "https://forum.golangbridge.org/t/does-go-support-big-endian/30870#post_4",
    "resume": " \u003cp\u003eSorry for the delayed response.\u003c/p\u003e\n\u003cp\u003eThis is the package i download go1.16.6.linux-amd64.tar.gz.\u003cbr\u003e\nI’m trying to compile it using the musl tool chain for openwrt and i see the following error:\u003cbr\u003e\ngo.o: compiled for a little endian system and target is big endian\u003c/p\u003e ",
    "date": "2023-03-29T15:28:05Z",
    "vote": 0
  },
  {
    "id": "175b2db676c505259f46c1c3c0cd193d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Gojq modify query",
    "url": "https://forum.golangbridge.org/t/gojq-modify-query/31077#post_6",
    "resume": " \u003cp\u003eHi Sean,\u003c/p\u003e\n\u003cp\u003eThanks for the reply, I am new to Go and still digesting data types.\u003c/p\u003e\n\u003cp\u003eRegards,\u003cbr\u003e\nWalter\u003c/p\u003e ",
    "date": "2023-03-29T15:18:34Z",
    "vote": 0
  },
  {
    "id": "c4365449b8d73bf1308ac61d6ee26945",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Gojq modify query",
    "url": "https://forum.golangbridge.org/t/gojq-modify-query/31077#post_5",
    "resume": " \u003cp\u003eHello Rm,\u003c/p\u003e\n\u003cp\u003eI was trying to make gojq work, but you are  right  I just want to filter a json string. Your example fits my requirements.\u003c/p\u003e\n\u003cp\u003eThank You,\u003cbr\u003e\nWalter\u003c/p\u003e ",
    "date": "2023-03-29T15:16:52Z",
    "vote": 0
  },
  {
    "id": "00eae0a9b67dcfb3ed96cb169ca5927b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How do I append to an interface which stores a slice",
    "url": "https://www.reddit.com/r/golang/comments/125r2hv/how_do_i_append_to_an_interface_which_stores_a/",
    "resume": "",
    "date": "2023-03-29T15:11:32Z",
    "vote": 0
  },
  {
    "id": "22bfb42cada2f08a5e7d241d71a195e5",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Gojq modify query",
    "url": "https://forum.golangbridge.org/t/gojq-modify-query/31077#post_4",
    "resume": " \u003cp\u003eHeres the go playground of that code:\u003c/p\u003e\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://go.dev/play/p/tkEA6g9Sg_a\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://go.dev/images/favicon-gopher.png\" class=\"site-icon\" width=\"288\" height=\"288\"\u003e\n\n      \u003ca href=\"https://go.dev/play/p/tkEA6g9Sg_a\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ego.dev\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"aspect-image\" style=\"--aspect-ratio:690/400;\"\u003e\u003cimg src=\"https://go.dev/doc/gopher/gopher5logo.jpg\" class=\"thumbnail\" width=\"690\" height=\"400\"\u003e\u003c/div\u003e\n\n\u003ch3\u003e\u003ca href=\"https://go.dev/play/p/tkEA6g9Sg_a\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eGo Playground - The Go Programming Language\u003c/a\u003e\u003c/h3\u003e\n\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n ",
    "date": "2023-03-29T15:00:41Z",
    "vote": 0
  },
  {
    "id": "51019a871a96cd32e8719f46f79a6c15",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Gojq modify query",
    "url": "https://forum.golangbridge.org/t/gojq-modify-query/31077#post_3",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"Walter_Policarpio\" data-post=\"1\" data-topic=\"31077\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/walter_policarpio/40/13027_2.png\" class=\"avatar\"\u003e Walter_Policarpio:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e{“id”: 1553,\u003cbr\u003e\n“node_id”: “xxxxx”,\u003cbr\u003e\n“name”: “xxxx-actions”,\u003cbr\u003e\n“full_name”: “xxxx/xxxxx-actions”,\u003cbr\u003e\n“private”: false,\u003cbr\u003e\n“owner”: {\u003cbr\u003e\n“login”: “xxxx”,\u003cbr\u003e\n“id”: 4,\u003cbr\u003e\n“node_id”: “xxxxxx”\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eNot sure why you want to use /itchyny/gojq in my code – it’s a great package. But if you just want to change a value in json – lets say you’ve got it in a string. You did a http.Client get, the body contained a json string, and now you want to modify that string and make it the payload of a POST.  I am not going to go over the http.Client part of this, but assume you already have the json string.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/tidwall/gjson\"\n\t\"github.com/tidwall/pretty\"\n\t\"github.com/tidwall/sjson\"\n)\n\nvar jIn string = `{\"id\":1553,\"node_id\":\"xxxxx\",\"name\":\"xxxx-actions\",\"full_name\":\"xxxx/xxxxx-actions\",\"private\":false,\"owner\":{\"login\":\"xxxx\",\"id\":4,\"node_id\":\"xxxxxx\"}}`\n\nfunc main() {\n\tvar err error\n\tres := gjson.Get(jIn, \"owner.login\")\n\tfmt.Println(res.Str)\n\tif jIn, err = sjson.Set(jIn, \"owner.login\", \"Superman\"); err != nil {\n\t\tpanic(err)\n\t}\n\tjOut := pretty.Pretty([]byte(jIn))\n\tfmt.Println(string(jOut))\n\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhile I use /itchyny/gojq, my tools for json are \u003ca href=\"https://github.com/tidwall\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003etidwall (Josh Baker) · GitHub\u003c/a\u003e. Notice in this example I didn’t have to pull it in to a struct or map, it worked with the jIn json string directly. I was able to change the owner.login to Superman using sjson\u003c/p\u003e ",
    "date": "2023-03-29T14:59:13Z",
    "vote": 0
  },
  {
    "id": "737ecaced2000f3936b2b75d5df360d6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A there any production-ready code generators?",
    "url": "https://www.reddit.com/r/golang/comments/125pkhi/a_there_any_productionready_code_generators/",
    "resume": "",
    "date": "2023-03-29T14:23:44Z",
    "vote": 0
  },
  {
    "id": "019068f71ff7d16eed6ed90076e057b3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Integration Tests with Postgres",
    "url": "https://www.reddit.com/r/golang/comments/125p66i/integration_tests_with_postgres/",
    "resume": "",
    "date": "2023-03-29T14:08:30Z",
    "vote": 0
  },
  {
    "id": "0dcf5ac0529969247c36169ff6e896a4",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Issues regarding importing",
    "url": "https://forum.golangbridge.org/t/issues-regarding-importing/31174#post_1",
    "resume": " \u003cp\u003eI’ve a src file in \u003ccode\u003e\u0026lt;base_dir\u0026gt;/pkg/logging.go\u003c/code\u003e (package logging) and i want to import in \u003ccode\u003e\u0026lt;base_dir\u0026gt;/http/app_app.go\u003c/code\u003e (package http)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003emain.go\u003cbr\u003e\n\u003ccode\u003elogger \"github.com/tobigiwa/golang-security-backend/pkg/logging\"\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003ethe compiler still complains as brokenimport, what am i doing wrongly?\u003c/p\u003e ",
    "date": "2023-03-29T13:56:31Z",
    "vote": 0
  },
  {
    "id": "a0e4a445b118c4ac3d684d87815f9923",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Sorted maps and slices, getting a different result for each compilation",
    "url": "https://forum.golangbridge.org/t/sorted-maps-and-slices-getting-a-different-result-for-each-compilation/31173#post_5",
    "resume": " \u003cp\u003eYes, thank you so much for your help\u003c/p\u003e ",
    "date": "2023-03-29T13:15:37Z",
    "vote": 0
  },
  {
    "id": "bf6ced57457bcf3b5df76736e7aee40a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Your Input Matters: Take Our MongoDB ORM/ODM Solutions Survey for Go Developers",
    "url": "https://www.reddit.com/r/golang/comments/125ni7n/your_input_matters_take_our_mongodb_ormodm/",
    "resume": "",
    "date": "2023-03-29T13:03:27Z",
    "vote": 0
  },
  {
    "id": "297a525d1b9003a2aa499be0aaddbf96",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Docker golang sdk issue when writing a `docker exec` look-alike",
    "url": "https://forum.golangbridge.org/t/docker-golang-sdk-issue-when-writing-a-docker-exec-look-alike/31159#post_2",
    "resume": " \u003cp\u003eI’ve added this line near the top of the file:\u003cbr\u003e\n\u003ccode\u003eDockerExecConfig.DetachKeys = \"ctrl-a,ctrl-d\"\u003c/code\u003e … CTRL+C still kicks me out of the container.\u003c/p\u003e\n\u003cp\u003eSo to recap my issues:\u003cbr\u003e\n. stdin being copied to stdout as well\u003cbr\u003e\n. CTRL+C kicks me out of the container, the command (such as \u003ccode\u003etail -f\u003c/code\u003e) where it was supposed to be targeted at is then allowed to proceed (ie not being interrupted)\u003cbr\u003e\n. tab completion not working at all within container\u003c/p\u003e ",
    "date": "2023-03-29T12:54:01Z",
    "vote": 0
  },
  {
    "id": "46c9599e5e3995030289ebb79a8999dc",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Sorted maps and slices, getting a different result for each compilation",
    "url": "https://forum.golangbridge.org/t/sorted-maps-and-slices-getting-a-different-result-for-each-compilation/31173#post_4",
    "resume": " \u003cp\u003eI’m not sure I understand what you’re trying to do, but I removed \u003ccode\u003esort_map\u003c/code\u003e and came up with \u003ca href=\"https://goplay.space/#WAa3qYFZ1PK\" rel=\"noopener nofollow ugc\"\u003ethis\u003c/a\u003e.  Is this what you’re looking for?\u003c/p\u003e ",
    "date": "2023-03-29T12:49:11Z",
    "vote": 0
  },
  {
    "id": "d62bcaa60a3eea54ee8dbb5ff9995aab",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Sorted maps and slices, getting a different result for each compilation",
    "url": "https://forum.golangbridge.org/t/sorted-maps-and-slices-getting-a-different-result-for-each-compilation/31173#post_3",
    "resume": " \u003cp\u003eThank you so much for your quick reply. I already did that but I don’t know why it gave different results each time I compile it.\u003c/p\u003e\n\u003cp\u003eThis one is correct\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/original/2X/e/e839239dcf24035decb80575308842435ced60ee.png\" alt=\"Capture d’écran de 2023-03-29 14-32-21\" data-base62-sha1=\"x8lbYv6k7qR0GNOOnU3o2s2K0y2\" width=\"676\" height=\"196\"\u003e\u003c/p\u003e\n\u003cp\u003eThese two results are not.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/original/2X/8/843aa17153e7ad5194c42681eb0f0cde9e0bc874.png\" alt=\"Capture d’écran de 2023-03-29 14-31-22\" data-base62-sha1=\"iRKDMwHSdLZs07POOI19jo8C6Z6\" width=\"687\" height=\"211\"\u003e\u003cbr\u003e\n\u003cimg src=\"https://forum.golangbridge.org/uploads/default/original/2X/9/9ab27ea2d3ce087c10bb8038c0a6a1655e437119.png\" alt=\"Capture d’écran de 2023-03-29 14-31-48\" data-base62-sha1=\"m4vX7kAmcf5aCvrsYlyFH9Ifje1\" width=\"674\" height=\"193\"\u003e\u003c/p\u003e ",
    "date": "2023-03-29T12:44:18Z",
    "vote": 0
  },
  {
    "id": "862653d49d94761d7b38e74b83491740",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Sorted maps and slices, getting a different result for each compilation",
    "url": "https://forum.golangbridge.org/t/sorted-maps-and-slices-getting-a-different-result-for-each-compilation/31173#post_2",
    "resume": " \u003cp\u003eMaps are unsortable. You can instead sort a slice of keys like you are already doing and then just iterate over that slice whenever you need the data in order.\u003c/p\u003e ",
    "date": "2023-03-29T12:22:42Z",
    "vote": 0
  },
  {
    "id": "56987d11a3e32ba0df9b99f62eaa19a8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Least-privilege for Kafka data",
    "url": "https://www.reddit.com/r/golang/comments/125lkvp/leastprivilege_for_kafka_data/",
    "resume": "",
    "date": "2023-03-29T11:44:37Z",
    "vote": 0
  },
  {
    "id": "050c5617d1fb87dad0a8c1cc6ba27288",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Sorted maps and slices, getting a different result for each compilation",
    "url": "https://forum.golangbridge.org/t/sorted-maps-and-slices-getting-a-different-result-for-each-compilation/31173#post_1",
    "resume": " \u003cp\u003eHello everyone,\u003c/p\u003e\n\u003cp\u003eCould someone help me understand what’s going on with the following code, I don’t know why it gave me different results each time I ran it. My goal is to create a map and sort it by keys, and then I want to gather its values in a slice.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003epackage main\u003c/p\u003e\n\u003cp\u003eimport (\u003cbr\u003e\n“fmt”\u003cbr\u003e\n“sort”\u003cbr\u003e\n)\u003c/p\u003e\n\u003cp\u003efunc main() {\u003cbr\u003e\nmap1 := make(map[uint16][]byte)\u003cbr\u003e\nmap1[264] = []byte{4, 6, 2, 7}\u003cbr\u003e\nmap1[85] = []byte{99, 65, 4, 11, 22}\u003cbr\u003e\nmap1[668] = []byte{44, 25, 47, 23, 72, 63, 48}\u003cbr\u003e\nmap1[32] = []byte{19, 63, 40}\u003cbr\u003e\nfmt.Println(map1)\u003cbr\u003e\nkeys := make([]uint16, 0)\u003cbr\u003e\nfor key := range map1 {\u003cbr\u003e\nkeys = append(keys, key)\u003cbr\u003e\n}\u003cbr\u003e\nfmt.Println(\"keys: \", keys)\u003cbr\u003e\nsort.Slice(keys, func(i, j int) bool { return keys[i] \u0026lt; keys[j] })\u003cbr\u003e\nfmt.Println(\"sorted keys: \", keys)\u003cbr\u003e\nsort_map := make(map[uint16][]byte)\u003cbr\u003e\nfor k := range keys {\u003cbr\u003e\nsort_map[keys[k]] = map1[keys[k]]\u003cbr\u003e\n}\u003cbr\u003e\nfmt.Println(sort_map)\u003cbr\u003e\nfor k, v := range sort_map {\u003cbr\u003e\nfmt.Println(k, v)\u003cbr\u003e\n}\u003cbr\u003e\ntotal_data := make([]byte, 0)\u003cbr\u003e\nfor _, v := range sort_map {\u003cbr\u003e\ntotal_data = append(total_data, v…)\u003cbr\u003e\n}\u003cbr\u003e\nfmt.Println(total_data)\u003cbr\u003e\nfor i := range total_data {\u003cbr\u003e\nx := total_data[i]\u003cbr\u003e\nfmt.Println(x)\u003cbr\u003e\n}\u003cbr\u003e\n}\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThank you so much for your help, I really appreciate it.\u003c/p\u003e ",
    "date": "2023-03-29T11:38:54Z",
    "vote": 0
  },
  {
    "id": "8790ab2272a4534eca47f0ee2e56c9aa",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "fluentassert - asking for feedback",
    "url": "https://www.reddit.com/r/golang/comments/125ku5f/fluentassert_asking_for_feedback/",
    "resume": "",
    "date": "2023-03-29T11:17:58Z",
    "vote": 0
  },
  {
    "id": "3d9a48a7d754efc9f562edc3502867b2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to recreate this post request in go? | I've tried for hours",
    "url": "https://www.reddit.com/r/golang/comments/125knw1/how_to_recreate_this_post_request_in_go_ive_tried/",
    "resume": "",
    "date": "2023-03-29T11:09:46Z",
    "vote": 0
  },
  {
    "id": "fc1763374f15ddf00b5566991ddf22ac",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Go and VSCode BSOD",
    "url": "https://forum.golangbridge.org/t/go-and-vscode-bsod/31172#post_1",
    "resume": " \u003cp\u003eSo, here’s a strange one. I treated myself to a new PC, i9 13th gen, lotsa RAM, fast M2 drive…\u003cbr\u003e\nReinstalled everything from scratch. Win10, VS2022 (I’m a C# dev by day) and VSCode (I’m working on a Go project by night…)\u003cbr\u003e\nWhen I came to install Go, it seemed fine. Installed from go1.20.2.windows-amd64 download, all good.\u003cbr\u003e\nBut when I installed the Go plugin on VSCode it blue screened when it tried to install delve.\u003cbr\u003e\nNow whenever I run VSCode and try to use Go plugin, BSOD.\u003cbr\u003e\nI tried installing delve manually, but got errors which I raised with the delve team\u003c/p\u003e\u003caside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/go-delve/delve/issues/3317\"\u003e\n  \u003cheader class=\"source\"\u003e\n\n      \u003ca href=\"https://github.com/go-delve/delve/issues/3317\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com/go-delve/delve\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"github-row\"\u003e\n  \u003cdiv class=\"github-icon-container\" title=\"Issue\"\u003e\n\t  \u003csvg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/div\u003e\n\n  \u003cdiv class=\"github-info-container\"\u003e\n    \u003ch4\u003e\n      \u003ca href=\"https://github.com/go-delve/delve/issues/3317\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eNot able to install delve 1.20.1, \"could not import internal/goarch (EOF)\"\u003c/a\u003e\n    \u003c/h4\u003e\n\n    \u003cdiv class=\"github-info\"\u003e\n      \u003cdiv class=\"date\"\u003e\n        opened \u003cspan class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-03-28\" data-time=\"16:02:34\" data-timezone=\"UTC\"\u003e04:02PM - 28 Mar 23 UTC\u003c/span\u003e\n      \u003c/div\u003e\n\n        \u003cdiv class=\"date\"\u003e\n          closed \u003cspan class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-03-28\" data-time=\"17:56:05\" data-timezone=\"UTC\"\u003e05:56PM - 28 Mar 23 UTC\u003c/span\u003e\n        \u003c/div\u003e\n\n      \u003cdiv class=\"user\"\u003e\n        \u003ca href=\"https://github.com/FoxAndFoxElectrics\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003e\n          \u003cimg alt=\"FoxAndFoxElectrics\" src=\"https://avatars.githubusercontent.com/u/85499690?v=4\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\"\u003e\n          FoxAndFoxElectrics\n        \u003c/a\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class=\"labels\"\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n  \u003cdiv class=\"github-row\"\u003e\n    \u003cp class=\"github-body-container\"\u003eHi all, probably doing something stupid, but this is what I tried: \n\n1. What v\u003cspan class=\"show-more-container\"\u003e\u003ca href=\"https://forum.golangbridge.org\" rel=\"noopener\" class=\"show-more\"\u003e…\u003c/a\u003e\u003c/span\u003e\u003cspan class=\"excerpt hidden\"\u003eersion of Delve are you using (`dlv version`)? 1.20.1\n`go install github.com/go-delve/delve/cmd/dlv@latest`\n \n2. What version of Go are you using? (`go version`)?\nran the file : go1.20.2.windows-amd64\nChecked version:\n```\ngo version\ngo version go1.20.2 windows/amd64\n```\n\nI wonder, is amd64 compatible with Intel i9????\n\n3. What operating system and processor architecture are you using?\nNew build i9 13900K Windows 10: 10.0.19045\n32GB RAM, tons of hard drive space.\nThis is a new PC and hasn't had GO installed on it before.\n\n4. What did you do?\n```\ngo clean -modcache\ngo install github.com/go-delve/delve/cmd/dlv@latest\n```\n\n5. What did you expect to see?\nInstall OK of delve\n\n6. What did you see instead?\n could not import internal/goarch (EOF) and various others...\n\n```\ngo: downloading github.com/go-delve/delve v1.20.1\ngo: downloading github.com/sirupsen/logrus v1.6.0\ngo: downloading github.com/spf13/cobra v1.1.3\ngo: downloading github.com/google/go-dap v0.6.0\ngo: downloading github.com/mattn/go-isatty v0.0.3\ngo: downloading gopkg.in/yaml.v2 v2.4.0\ngo: downloading github.com/cosiner/argv v0.1.0\ngo: downloading github.com/go-delve/liner v1.2.3-0.20220127212407-d32d89dd2a5d\ngo: downloading github.com/mattn/go-colorable v0.0.9\ngo: downloading github.com/derekparker/trie v0.0.0-20200317170641-1fdf38b7b0e9\ngo: downloading golang.org/x/sys v0.0.0-20220908164124-27713097b956\ngo: downloading golang.org/x/arch v0.0.0-20190927153633-4e8777c89be4\ngo: downloading github.com/hashicorp/golang-lru v0.5.4\ngo: downloading go.starlark.net v0.0.0-20220816155156-cfacd8902214\ngo: downloading github.com/cilium/ebpf v0.7.0\ngo: downloading github.com/spf13/pflag v1.0.5\ngo: downloading github.com/cpuguy83/go-md2man/v2 v2.0.0\ngo: downloading github.com/inconshreveable/mousetrap v1.0.0\ngo: downloading github.com/mattn/go-runewidth v0.0.13\ngo: downloading github.com/konsorten/go-windows-terminal-sequences v1.0.3\ngo: downloading github.com/russross/blackfriday/v2 v2.0.1\ngo: downloading github.com/rivo/uniseg v0.2.0\ngo: downloading github.com/shurcooL/sanitized_anchor_name v1.0.0\n# runtime/internal/math\nC:\\Program Files\\Go\\src\\runtime\\internal\\math\\math.go:7:8: could not import internal/goarch (EOF)\n# runtime/internal/sys\nC:\\Program Files\\Go\\src\\runtime\\internal\\sys\\consts.go:8:2: could not import internal/goarch (EOF)\nC:\\Program Files\\Go\\src\\runtime\\internal\\sys\\consts.go:9:2: could not import internal/goos (EOF)\n# github.com/shurcooL/sanitized_anchor_name\ngo\\pkg\\mod\\github.com\\shurcoo!l\\sanitized_anchor_name@v1.0.0\\main.go:10:8: could not import unicode (EOF)\n# github.com/rivo/uniseg\ngo\\pkg\\mod\\github.com\\rivo\\uniseg@v0.2.0\\grapheme.go:3:8: could not import unicode/utf8 (EOF)\n# internal/abi\nC:\\Program Files\\Go\\src\\internal\\abi\\abi.go:8:2: could not import internal/goarch (EOF)\n# internal/bytealg\nC:\\Program Files\\Go\\src\\internal\\bytealg\\bytealg.go:8:2: could not import internal/cpu (EOF)\n# math\nC:\\Program Files\\Go\\src\\math\\exp_amd64.go:9:8: could not import internal/cpu (EOF)\nC:\\Program Files\\Go\\src\\math\\fma.go:7:8: could not import math/bits (EOF)\n```\u003c/span\u003e\u003c/p\u003e\n  \u003c/div\u003e\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\u003cp\u003e\nAnd then with the Go team\u003c/p\u003e\u003caside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/golang/go/issues/59295\"\u003e\n  \u003cheader class=\"source\"\u003e\n\n      \u003ca href=\"https://github.com/golang/go/issues/59295\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com/golang/go\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"github-row\"\u003e\n  \u003cdiv class=\"github-icon-container\" title=\"Issue\"\u003e\n\t  \u003csvg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"\u003e\u003cpath fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/div\u003e\n\n  \u003cdiv class=\"github-info-container\"\u003e\n    \u003ch4\u003e\n      \u003ca href=\"https://github.com/golang/go/issues/59295\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ecannot install delve - could not import internal/goarch\u003c/a\u003e\n    \u003c/h4\u003e\n\n    \u003cdiv class=\"github-info\"\u003e\n      \u003cdiv class=\"date\"\u003e\n        opened \u003cspan class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-03-28\" data-time=\"16:49:13\" data-timezone=\"UTC\"\u003e04:49PM - 28 Mar 23 UTC\u003c/span\u003e\n      \u003c/div\u003e\n\n        \u003cdiv class=\"date\"\u003e\n          closed \u003cspan class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-03-28\" data-time=\"17:34:55\" data-timezone=\"UTC\"\u003e05:34PM - 28 Mar 23 UTC\u003c/span\u003e\n        \u003c/div\u003e\n\n      \u003cdiv class=\"user\"\u003e\n        \u003ca href=\"https://github.com/FoxAndFoxElectrics\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003e\n          \u003cimg alt=\"FoxAndFoxElectrics\" src=\"https://avatars.githubusercontent.com/u/85499690?v=4\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\"\u003e\n          FoxAndFoxElectrics\n        \u003c/a\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class=\"labels\"\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n  \u003cdiv class=\"github-row\"\u003e\n    \u003cp class=\"github-body-container\"\u003eI raised this on the delve help forum \nhttps://github.com/go-delve/delve/issues\u003cspan class=\"show-more-container\"\u003e\u003ca href=\"https://forum.golangbridge.org\" rel=\"noopener\" class=\"show-more\"\u003e…\u003c/a\u003e\u003c/span\u003e\u003cspan class=\"excerpt hidden\"\u003e/3317\nand they redirected me here\n\nHi all, probably doing something stupid, but this is what I tried: \n\n### What version of Go are you using (`go version`)?\n\n```\ngo version\ngo version go1.20.2 windows/amd64\n```\n\n### Does this issue reproduce with the latest release?\nYes\n\n### What operating system and processor architecture are you using (`go env`)?\n\nNew build i9 13900K Windows 10: 10.0.19045\n32GB RAM, tons of hard drive space.\nThis is a new PC and hasn't had GO installed on it before.\n\n\u0026lt;details\u0026gt;\u0026lt;summary\u0026gt;\u0026lt;code\u0026gt;go env\u0026lt;/code\u0026gt; Output\u0026lt;/summary\u0026gt;\u0026lt;br\u0026gt;\u0026lt;pre\u0026gt;\ngo env\nset GO111MODULE=\nset GOARCH=amd64\nset GOBIN=\nset GOCACHE=C:\\Users\\conta\\AppData\\Local\\go-build\nset GOENV=C:\\Users\\conta\\AppData\\Roaming\\go\\env\nset GOEXE=.exe\nset GOEXPERIMENT=\nset GOFLAGS=\nset GOHOSTARCH=amd64\nset GOHOSTOS=windows\nset GOINSECURE=\nset GOMODCACHE=C:\\Users\\conta\\go\\pkg\\mod\nset GONOPROXY=\nset GONOSUMDB=\nset GOOS=windows\nset GOPATH=C:\\Users\\conta\\go\nset GOPRIVATE=\nset GOPROXY=https://proxy.golang.org,direct\nset GOROOT=C:\\Program Files\\Go\nset GOSUMDB=sum.golang.org\nset GOTMPDIR=\nset GOTOOLDIR=C:\\Program Files\\Go\\pkg\\tool\\windows_amd64\nset GOVCS=\nset GOVERSION=go1.20.2\nset GCCGO=gccgo\nset GOAMD64=v1\nset AR=ar\nset CC=gcc\nset CXX=g++\nset CGO_ENABLED=0\nset GOMOD=NUL\nset GOWORK=\nset CGO_CFLAGS=-O2 -g\nset CGO_CPPFLAGS=\nset CGO_CXXFLAGS=-O2 -g\nset CGO_FFLAGS=-O2 -g\nset CGO_LDFLAGS=-O2 -g\nset PKG_CONFIG=pkg-config\nset GOGCCFLAGS=-m64 -fno-caret-diagnostics -Qunused-arguments -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=C:\\Users\\conta\\AppData\\Local\\Temp\\go-build2941949347=/tmp/go-build -gno-record-gcc-switches\n\n\u0026lt;/pre\u0026gt;\u0026lt;/details\u0026gt;\n\n### What did you do?\n\nRan the installer go1.20.2.windows-amd64\nChecked version:\n```\ngo version\ngo version go1.20.2 windows/amd64\n```\nTried to install delve\n```\ngo clean -modcache\ngo install github.com/go-delve/delve/cmd/dlv@latest\n```\n\n### What did you expect to see?\nDelve install OK\n\n### What did you see instead?\n\n could not import internal/goarch (EOF) and various others...\n\n```\ngo: downloading github.com/go-delve/delve v1.20.1\ngo: downloading github.com/sirupsen/logrus v1.6.0\ngo: downloading github.com/spf13/cobra v1.1.3\ngo: downloading github.com/google/go-dap v0.6.0\ngo: downloading github.com/mattn/go-isatty v0.0.3\ngo: downloading gopkg.in/yaml.v2 v2.4.0\ngo: downloading github.com/cosiner/argv v0.1.0\ngo: downloading github.com/go-delve/liner v1.2.3-0.20220127212407-d32d89dd2a5d\ngo: downloading github.com/mattn/go-colorable v0.0.9\ngo: downloading github.com/derekparker/trie v0.0.0-20200317170641-1fdf38b7b0e9\ngo: downloading golang.org/x/sys v0.0.0-20220908164124-27713097b956\ngo: downloading golang.org/x/arch v0.0.0-20190927153633-4e8777c89be4\ngo: downloading github.com/hashicorp/golang-lru v0.5.4\ngo: downloading go.starlark.net v0.0.0-20220816155156-cfacd8902214\ngo: downloading github.com/cilium/ebpf v0.7.0\ngo: downloading github.com/spf13/pflag v1.0.5\ngo: downloading github.com/cpuguy83/go-md2man/v2 v2.0.0\ngo: downloading github.com/inconshreveable/mousetrap v1.0.0\ngo: downloading github.com/mattn/go-runewidth v0.0.13\ngo: downloading github.com/konsorten/go-windows-terminal-sequences v1.0.3\ngo: downloading github.com/russross/blackfriday/v2 v2.0.1\ngo: downloading github.com/rivo/uniseg v0.2.0\ngo: downloading github.com/shurcooL/sanitized_anchor_name v1.0.0\n# runtime/internal/math\nC:\\Program Files\\Go\\src\\runtime\\internal\\math\\math.go:7:8: could not import internal/goarch (EOF)\n# runtime/internal/sys\nC:\\Program Files\\Go\\src\\runtime\\internal\\sys\\consts.go:8:2: could not import internal/goarch (EOF)\nC:\\Program Files\\Go\\src\\runtime\\internal\\sys\\consts.go:9:2: could not import internal/goos (EOF)\n# github.com/shurcooL/sanitized_anchor_name\ngo\\pkg\\mod\\github.com\\shurcoo!l\\sanitized_anchor_name@v1.0.0\\main.go:10:8: could not import unicode (EOF)\n# github.com/rivo/uniseg\ngo\\pkg\\mod\\github.com\\rivo\\uniseg@v0.2.0\\grapheme.go:3:8: could not import unicode/utf8 (EOF)\n# internal/abi\nC:\\Program Files\\Go\\src\\internal\\abi\\abi.go:8:2: could not import internal/goarch (EOF)\n# internal/bytealg\nC:\\Program Files\\Go\\src\\internal\\bytealg\\bytealg.go:8:2: could not import internal/cpu (EOF)\n# math\nC:\\Program Files\\Go\\src\\math\\exp_amd64.go:9:8: could not import internal/cpu (EOF)\nC:\\Program Files\\Go\\src\\math\\fma.go:7:8: could not import math/bits (EOF)\n```\u003c/span\u003e\u003c/p\u003e\n  \u003c/div\u003e\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\u003cp\u003e\nBoth tickets have been closed. So no help there.\u003cbr\u003e\nOther than ‘looks like a corrupt installation of go’\u003cbr\u003e\nBut it’s a fresh install… I downloaded the file again, reinstalled, same.\u003cbr\u003e\nWhen I install go 18.5.0, all is fine. Except it doesn’'t play well with VSCode because VSCode wants the latest…\u003c/p\u003e\n\u003cp\u003eAny ideas?\u003cbr\u003e\nI’m currently doing Go coding on my laptop, which is a pain.\u003c/p\u003e ",
    "date": "2023-03-29T10:13:16Z",
    "vote": 0
  },
  {
    "id": "5ff2b6ff10baa0880cf55295af62272b",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Could not import package",
    "url": "https://forum.golangbridge.org/t/could-not-import-package/31170#post_3",
    "resume": " \u003cp\u003ethanks a lot!\u003cbr\u003e\nIf I understand you right - I can’t use some mechanism for writing short way like in C++?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#include \"enitites\" // instead path/entities\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-29T09:49:47Z",
    "vote": 0
  },
  {
    "id": "7b43136a276e85a96ce9b6ed401b7075",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Could not import package",
    "url": "https://forum.golangbridge.org/t/could-not-import-package/31170#post_2",
    "resume": " \u003cp\u003eHi \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/neverhood\"\u003e@Neverhood\u003c/a\u003e,\u003c/p\u003e\n\u003cp\u003eGo has no relative import paths—at least, not directly.\u003c/p\u003e\n\u003cp\u003eWhat is the module name that you gave your module? (It’s stored in \u003ccode\u003ego.mod\u003c/code\u003e, in the line that starts with \u003ccode\u003emodule\u003c/code\u003e.)\u003c/p\u003e\n\u003cp\u003eAdd the module name as a prefix to the import path:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eimport \"\u0026lt;your module name\u0026gt;/entities\"\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThis should make the import work. (See also the \u003ca href=\"https://go.dev/play/p/BWJ4dcUqVfT\" rel=\"noopener nofollow ugc\"\u003eMultiple File\u003c/a\u003es example in the Go Playground. (The “files” are separated by \u003ccode\u003e-- filename.ext --\u003c/code\u003e lines.) The module name is \u003ccode\u003eplay.ground\u003c/code\u003e, the package \u003ccode\u003efoo\u003c/code\u003e lives in subdirectory \u003ccode\u003efoo/\u003c/code\u003e, and the resulting import path is \u003ccode\u003eplay.ground/foo\u003c/code\u003e.)\u003c/p\u003e ",
    "date": "2023-03-29T09:40:52Z",
    "vote": 0
  },
  {
    "id": "42a28c22d51b7374565980e2f5c83925",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A common iterator pattern",
    "url": "https://www.reddit.com/r/golang/comments/125hrnp/a_common_iterator_pattern/",
    "resume": "",
    "date": "2023-03-29T08:50:41Z",
    "vote": 0
  },
  {
    "id": "f7fb237edf597bdeef16faa9e742ae99",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Could not import entities",
    "url": "https://forum.golangbridge.org/t/could-not-import-entities/31170#post_1",
    "resume": " \u003cp\u003eHi. Error text :\u003cbr\u003e\n\u003cstrong\u003ecould not import entities (cannot find package “entities” in any of\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e/usr/lib/go-1.20/src/entities (from $GOROOT)\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e/home/jk/go/src/entities (from $GOPATH))\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI’ve simple structure\u003cbr\u003e\nentities|entity.go\u003cbr\u003e\nmain.go\u003c/p\u003e\n\u003cp\u003eentities is a package. It tries to find along this way\u003cbr\u003e\n/home/jk/go/src/entities (from $GOPATH))\u003cbr\u003e\n\u003c/p\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://forum.golangbridge.org/uploads/default/original/2X/e/ea04d848e4551be741be100e384c8625d85c9bfa.png\" data-download-href=\"https://forum.golangbridge.org/uploads/default/ea04d848e4551be741be100e384c8625d85c9bfa\" title=\"Снимок экрана от 2023-03-29 11-17-42\"\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/original/2X/e/ea04d848e4551be741be100e384c8625d85c9bfa.png\" alt=\"Снимок экрана от 2023-03-29 11-17-42\" data-base62-sha1=\"xoe6HKg7PHxgd1VHXOMfLZHNShY\" width=\"690\" height=\"323\" data-dominant-color=\"252525\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eBut project located into /home/jk/go/src/go_test.\u003c/p\u003e\n\u003cp\u003eWhat I should to do for fix it?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage entities\n\ntype Entity struct {\n\tid   int\n\tname string\n}\n\nfunc (Entity) newEntity(id int, name string) *Entity {\n\treturn \u0026amp;Entity{id, name}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage main\n\nimport (\n\t\"fmt\"\n\t\"entities\"\n)\n\nfunc main() {\n\tent := entities.newEntity(1, \"name\")\n\tfmt.Println(ent)\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-29T08:31:40Z",
    "vote": 0
  },
  {
    "id": "59cdf023a282c76ad6b90f5ace86b169",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Could not import package",
    "url": "https://forum.golangbridge.org/t/could-not-import-package/31170#post_1",
    "resume": " \u003cp\u003eHi. Error text :\u003cbr\u003e\n\u003cstrong\u003ecould not import entities (cannot find package “entities” in any of\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e/usr/lib/go-1.20/src/entities (from $GOROOT)\u003c/strong\u003e\u003cbr\u003e\n\u003cstrong\u003e/home/jk/go/src/entities (from $GOPATH))\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI’ve simple structure\u003cbr\u003e\nentities|entity.go\u003cbr\u003e\nmain.go\u003c/p\u003e\n\u003cp\u003eentities is a package. It tries to find along this way\u003cbr\u003e\n/home/jk/go/src/entities (from $GOPATH))\u003cbr\u003e\n\u003c/p\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://forum.golangbridge.org/uploads/default/original/2X/e/ea04d848e4551be741be100e384c8625d85c9bfa.png\" data-download-href=\"https://forum.golangbridge.org/uploads/default/ea04d848e4551be741be100e384c8625d85c9bfa\" title=\"Снимок экрана от 2023-03-29 11-17-42\"\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/original/2X/e/ea04d848e4551be741be100e384c8625d85c9bfa.png\" alt=\"Снимок экрана от 2023-03-29 11-17-42\" data-base62-sha1=\"xoe6HKg7PHxgd1VHXOMfLZHNShY\" width=\"690\" height=\"323\" data-dominant-color=\"252525\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eBut project located into /home/jk/go/src/go_test.\u003c/p\u003e\n\u003cp\u003eWhat I should to do for fix it?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage entities\n\ntype Entity struct {\n\tid   int\n\tname string\n}\n\nfunc (Entity) newEntity(id int, name string) *Entity {\n\treturn \u0026amp;Entity{id, name}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage main\n\nimport (\n\t\"fmt\"\n\t\"entities\"\n)\n\nfunc main() {\n\tent := entities.newEntity(1, \"name\")\n\tfmt.Println(ent)\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-29T08:31:40Z",
    "vote": 0
  },
  {
    "id": "0967ededb80f820026d99a8888931808",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GitHub - xNaCly/gleichzeitig: Run shell scripts, commands and executables in parallel",
    "url": "https://www.reddit.com/r/golang/comments/125gin2/github_xnaclygleichzeitig_run_shell_scripts/",
    "resume": "",
    "date": "2023-03-29T07:37:35Z",
    "vote": 0
  },
  {
    "id": "8a79f9cf1c31fe3aea588e5ecf4a4898",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_7",
    "resume": " \u003cp\u003eThat‘s a super useful article. Thanks for sharing, \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/hoodie\"\u003e@hoodie\u003c/a\u003e!\u003c/p\u003e ",
    "date": "2023-03-29T07:36:56Z",
    "vote": 0
  },
  {
    "id": "a9f4f5c656a63a866fe9e4c85fb29e81",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Where are we at with Error Handling Improvements in GO?",
    "url": "https://www.reddit.com/r/golang/comments/125gh8k/where_are_we_at_with_error_handling_improvements/",
    "resume": "",
    "date": "2023-03-29T07:35:14Z",
    "vote": 0
  },
  {
    "id": "ef255ca3a95cec45d2f1aa92c0532eb3",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_6",
    "resume": " \u003cp\u003eHi Christoph,\u003c/p\u003e\n\u003cp\u003eAs you said, I also found those options + compiling Go packages into C shared libraries(\u003ca href=\"https://medium.com/learning-the-go-programming-language/calling-go-functions-from-other-languages-4c7d8bcc69bf#.n73as5d6d\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eCalling Go Functions from Other Languages | by Vladimir Vivien | Learning the Go Programming Language | Medium\u003c/a\u003e) !\u003c/p\u003e\n\u003cp\u003eSo if any other better option doesn’t exist, it’d be better working deeply with one(or some) of them!\u003c/p\u003e\n\u003cp\u003eThank you all  \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e ",
    "date": "2023-03-29T07:19:17Z",
    "vote": 0
  },
  {
    "id": "97d1a5d4673cd6812bef2a65bf262ce5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang Command Line Arguments: Best Practices and Examples",
    "url": "https://www.reddit.com/r/golang/comments/125g5hw/golang_command_line_arguments_best_practices_and/",
    "resume": "",
    "date": "2023-03-29T07:17:26Z",
    "vote": 0
  },
  {
    "id": "797114bc51fe08ec11638b32c8762cef",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "how to send the http codes using grpc-gateway",
    "url": "https://www.reddit.com/r/golang/comments/125fpja/how_to_send_the_http_codes_using_grpcgateway/",
    "resume": "",
    "date": "2023-03-29T06:53:04Z",
    "vote": 0
  },
  {
    "id": "0101823862ede40fac75d7b60ab3cdc0",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_5",
    "resume": " \u003cp\u003eHave you already looked into\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGopherJS (ie, compiling Go to JS), or\u003c/li\u003e\n\u003cli\u003ecompiling Go to WASM?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWithout having looked deeper into any of these option, I would reckon that these could be suitable ways of calling Go libraries from JS.\u003c/p\u003e ",
    "date": "2023-03-29T06:48:45Z",
    "vote": 0
  },
  {
    "id": "307aebe98dbb62df91ab01a48861d027",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_4",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"hoodie\" data-post=\"3\" data-topic=\"31162\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/hoodie/40/13078_2.png\" class=\"avatar\"\u003e hoodie:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003esuch as use of functions of it or file itself with(in) JS\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI am also looking for ways to use Go with Javascript. But I have found no other way to communicate between an interpreted and compiled language (they do not share the same engine) than some sort of micro services. I e send messages back and forth. I should be glad proven wrong.\u003c/p\u003e ",
    "date": "2023-03-29T06:10:44Z",
    "vote": 0
  },
  {
    "id": "9b147a1f08cd29d25bc76c1a15bf094c",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_3",
    "resume": " \u003cp\u003eHi Sibert,\u003c/p\u003e\n\u003cp\u003eI want some much deeper use of the Go library, such as use of functions of it or file itself with(in) JS.\u003c/p\u003e\n\u003cp\u003eBut anyway, thanks!\u003c/p\u003e ",
    "date": "2023-03-29T05:51:01Z",
    "vote": 0
  },
  {
    "id": "199bcaa767db3f754a5b071eeac99122",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_2",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"hoodie\" data-post=\"1\" data-topic=\"31162\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/hoodie/40/13078_2.png\" class=\"avatar\"\u003e hoodie:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eany proper(efficient) way to use Go in JS or with JS ?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eOne way is to use Javascript fetch() to communicate with a Go http server with endpoints.\u003c/p\u003e\n\u003cp\u003eThis writes the desired Go output into a webpage by using innerHTML:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunction ask_go() {\n  let url = \"/askgo\"\n  fetch(url)\n    .then((res) =\u0026gt; res.text())\n    .then((response) =\u0026gt; {\n      document.getElementById(\"content\").innerHTML = response;\n    })\n    .catch((error) =\u0026gt; alert(\"Error:\", error));\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-29T05:25:16Z",
    "vote": 0
  },
  {
    "id": "30ad96d4282c15298163aeacf5779372",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Multi million, persistent, synchronous, horizontally scaling WebSockets in Go",
    "url": "https://www.reddit.com/r/golang/comments/125e05q/multi_million_persistent_synchronous_horizontally/",
    "resume": "",
    "date": "2023-03-29T05:19:20Z",
    "vote": 0
  },
  {
    "id": "9364ce585ac2afd552487b65144537de",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Not just another ChatGPT CLI, I promise!",
    "url": "https://www.reddit.com/r/golang/comments/125cu5n/not_just_another_chatgpt_cli_i_promise/",
    "resume": "",
    "date": "2023-03-29T04:19:07Z",
    "vote": 0
  },
  {
    "id": "4fe6e1d5132cba1918590467e7a767fe",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go library in JavaScript?",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-library-in-javascript/31162#post_1",
    "resume": " \u003cp\u003eHi guys!\u003c/p\u003e\n\u003cp\u003eI’m using a Go open source library with my project.\u003c/p\u003e\n\u003cp\u003eOur entire projects are written in JS, so I want to use the whole Go library in some JS codes.\u003c/p\u003e\n\u003cp\u003eIs there anyone who knows and recommends any proper(efficient) way to use Go in JS or with JS ?\u003c/p\u003e\n\u003cp\u003eThank you in advance,\u003c/p\u003e\n\u003cp\u003eHoodie\u003c/p\u003e ",
    "date": "2023-03-29T02:36:22Z",
    "vote": 0
  },
  {
    "id": "95c5c9c35c20ba31668540eb045b26c9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Detecting TCP/dial is connected or not with Golang http.client?",
    "url": "https://www.reddit.com/r/golang/comments/125aktz/detecting_tcpdial_is_connected_or_not_with_golang/",
    "resume": "",
    "date": "2023-03-29T02:33:15Z",
    "vote": 0
  },
  {
    "id": "bf64672f991f537c5cd23aef08e2a594",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "call the same grpc call several times in a single business process",
    "url": "https://www.reddit.com/r/golang/comments/125af0s/call_the_same_grpc_call_several_times_in_a_single/",
    "resume": "",
    "date": "2023-03-29T02:26:09Z",
    "vote": 0
  },
  {
    "id": "2a036062ce65902b94275d8c10024e2a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang Functional",
    "url": "https://www.reddit.com/r/golang/comments/1259fip/golang_functional/",
    "resume": "",
    "date": "2023-03-29T01:43:35Z",
    "vote": 0
  },
  {
    "id": "e639999eb20f65bd7614750720b20d4f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "gomobile not working properly",
    "url": "https://www.reddit.com/r/golang/comments/1255ror/gomobile_not_working_properly/",
    "resume": "",
    "date": "2023-03-28T23:12:08Z",
    "vote": 0
  },
  {
    "id": "72be64c2251460b131392f8d2ff10014",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Biginner in go need a help",
    "url": "https://forum.golangbridge.org/t/biginner-in-go-need-a-help/31155#post_6",
    "resume": " \u003cp\u003eI’d also go with some of the uDemy courses, actually.\u003c/p\u003e ",
    "date": "2023-03-28T22:26:28Z",
    "vote": 0
  },
  {
    "id": "d7cf70c97dcb6461939fc4a4fd285149",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Biginner in go need a help",
    "url": "https://forum.golangbridge.org/t/biginner-in-go-need-a-help/31155#post_5",
    "resume": " \u003cp\u003eThank you very much for your helping.\u003c/p\u003e ",
    "date": "2023-03-28T22:03:20Z",
    "vote": 0
  },
  {
    "id": "d2cb0c32d52f0e7eadb157a94e99f0d5",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Docker golang sdk issue when writing a `docker exec` look-alike",
    "url": "https://forum.golangbridge.org/t/docker-golang-sdk-issue-when-writing-a-docker-exec-look-alike/31159#post_1",
    "resume": " \u003cp\u003e(Sorry if it looks like I’ve cross-posted, I originally posted this in “Getting Help”, then found out about this sub-forum, so I deleted the original post, althought the Topic title still remains, for some reason)\u003c/p\u003e\n\u003cp\u003eI am writing a docker client using the official SDK; so far it works fine, but I have issues here with my own \u003ccode\u003edocker exec\u003c/code\u003e clone.\u003cbr\u003e\nLet us say that I run the equivalent of \u003ccode\u003edocker exec -tiuroot $CONTAINERNAME bash\u003c/code\u003e, and then proceed to send some commands to the allocated tty (ls, ps, etc), I get double output (see second extract). Another problem is the escape sequence: if I were to run \u003ccode\u003etail -f $SOME_FILE\u003c/code\u003e within the container, and then pressed CTRL+C it wouldn’t stop the tail command, but would kick me out of the container.\u003c/p\u003e\n\u003cp\u003eI do not see how to change both behavior.\u003c/p\u003e\n\u003cp\u003eFirst code extract is my actual method, attached image is an example where you see the “double output” when running dtools exec.\u003c/p\u003e\n\u003cp\u003eBoth issues (double-output and escape character) kind of drive me nuts and I’d appreciate comments here.\u003cbr\u003e\nOh, and another issue I’ve just found out while uploading the image, below (not shown in image) : TAB COMPLETION wouldn’t work in this implementation; using the “real” \u003ccode\u003edocker exec\u003c/code\u003e in the same container does work, so it’s an stdin/stdout issue in my implementation.\u003c/p\u003e\n\u003cp\u003eAbout the DockerExecConfig variable : it’s of types.ExecConfig and is prepopulated somewhere else.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc ContainerExec (uri string, args []string) string {\n\tcli, err := client.NewClientWithOpts(client.WithHost(uri), client.WithAPIVersionNegotiation())\n\tif err != nil {\n\t\tfmt.Printf(\"Unable to create docker client: %s\\n\", err)\n\t\tos.Exit(-1)\n\t}\n\n\tDockerExecConfig.AttachStderr = DockerExecConfig.AttachStdout\n\tDockerExecConfig.AttachStdin = DockerExecConfig.AttachStdout\n\tDockerExecConfig.Cmd = args[1:]\n\n\texecResponse, err := cli.ContainerExecCreate(ctx, args[0], DockerExecConfig)\n\tif err != nil {\n\t\treturn err.Error()\n\t}\n\n\texecAttachConfig := types.ExecStartCheck{\n\t\tTty: !DockerExecConfig.Tty,\n\t}\n\n\tresp, err := cli.ContainerExecAttach(ctx, execResponse.ID, execAttachConfig)\n\tif err != nil {\n\t\treturn err.Error()\n\t}\n\n\tdefer resp.Close()\n\n\terrChan := make(chan error, 1)\n\n\tgo func() {\n\t\t_, errorInContainer := stdcopy.StdCopy(os.Stdout, os.Stderr, resp.Reader)\n\t\terrChan \u0026lt;- errorInContainer\n\t}()\n\n\tgo func() {\n\t\t_, err := io.Copy(resp.Conn, os.Stdin)\n\t\terrChan \u0026lt;- err\n\t}()\n\n\tselect {\n\tcase errorInContainer := \u0026lt;-errChan:\n\t\tif errorInContainer != nil {\n\t\t\tfmt.Printf(\"dtools exec error: %s\\n\", errorInContainer.Error())\n\t\t\tos.Exit(-1)\n\t\t}\n\t\treturn \"\"\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/original/2X/5/5e94d994effc5ba86457f333d4fec400f85b1c30.png\" alt=\"image\" data-base62-sha1=\"duHN5nZFlX9XTr9Y54yHMkjScPC\" width=\"690\" height=\"122\"\u003e\u003c/p\u003e ",
    "date": "2023-03-28T21:33:29Z",
    "vote": 0
  },
  {
    "id": "c1f4c9f09db7ce1dcd49eb52ba2a5d20",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Docker sdk issue when writing a `docker exec` look-alike",
    "url": "https://forum.golangbridge.org/t/docker-sdk-issue-when-writing-a-docker-exec-look-alike/31158#post_1",
    "resume": " \u003cp\u003eI am writing a docker client using the official SDK; so far it works fine, but I have issues here with my own \u003ccode\u003edocker exec\u003c/code\u003e clone.\u003cbr\u003e\nLet us say that I run the equivalent of \u003ccode\u003edocker exec -tiuroot $CONTAINERNAME bash\u003c/code\u003e, and then proceed to send some commands to the allocated tty (ls, ps, etc), I get double output (see second extract). Another problem is the escape sequence: if I were to run \u003ccode\u003etail -f $SOME_FILE\u003c/code\u003e within the container, and then pressed CTRL+C it wouldn’t stop the tail command, but would kick me out of the container.\u003c/p\u003e\n\u003cp\u003eI do not see how to change both behavior.\u003c/p\u003e\n\u003cp\u003eFirst code extract is my actual method, attached image is an example where you see the “double output” when running dtools exec.\u003c/p\u003e\n\u003cp\u003eBoth issues (double-output and escape character) kind of drive me nuts and I’d appreciate comments here.\u003cbr\u003e\nOh, and another issue I’ve just found out while uploading the image, below (not shown in image) : TAB COMPLETION wouldn’t work in this implementation; using the “real” \u003ccode\u003edocker exec\u003c/code\u003e in the same container does work, so it’s an stdin/stdout issue in my implementation.\u003c/p\u003e\n\u003cp\u003eAbout the DockerExecConfig variable : it’s of types.ExecConfig and is prepopulated somewhere else.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc ContainerExec (uri string, args []string) string {\n\tcli, err := client.NewClientWithOpts(client.WithHost(uri), client.WithAPIVersionNegotiation())\n\tif err != nil {\n\t\tfmt.Printf(\"Unable to create docker client: %s\\n\", err)\n\t\tos.Exit(-1)\n\t}\n\n\tDockerExecConfig.AttachStderr = DockerExecConfig.AttachStdout\n\tDockerExecConfig.AttachStdin = DockerExecConfig.AttachStdout\n\tDockerExecConfig.Cmd = args[1:]\n\n\texecResponse, err := cli.ContainerExecCreate(ctx, args[0], DockerExecConfig)\n\tif err != nil {\n\t\treturn err.Error()\n\t}\n\n\texecAttachConfig := types.ExecStartCheck{\n\t\tTty: !DockerExecConfig.Tty,\n\t}\n\n\tresp, err := cli.ContainerExecAttach(ctx, execResponse.ID, execAttachConfig)\n\tif err != nil {\n\t\treturn err.Error()\n\t}\n\n\tdefer resp.Close()\n\n\terrChan := make(chan error, 1)\n\n\tgo func() {\n\t\t_, errorInContainer := stdcopy.StdCopy(os.Stdout, os.Stderr, resp.Reader)\n\t\terrChan \u0026lt;- errorInContainer\n\t}()\n\n\tgo func() {\n\t\t_, err := io.Copy(resp.Conn, os.Stdin)\n\t\terrChan \u0026lt;- err\n\t}()\n\n\tselect {\n\tcase errorInContainer := \u0026lt;-errChan:\n\t\tif errorInContainer != nil {\n\t\t\tfmt.Printf(\"dtools exec error: %s\\n\", errorInContainer.Error())\n\t\t\tos.Exit(-1)\n\t\t}\n\t\treturn \"\"\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eImage: example of double-output and then CTRL+C kicking me out of the container:\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://forum.golangbridge.org/uploads/default/original/2X/d/dc7f11c98378d31ff44c09f4b67fdbd9cb3f2a61.png\" data-download-href=\"https://forum.golangbridge.org/uploads/default/dc7f11c98378d31ff44c09f4b67fdbd9cb3f2a61\" title=\"image\"\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/optimized/2X/d/dc7f11c98378d31ff44c09f4b67fdbd9cb3f2a61_2_690x122.png\" alt=\"image\" data-base62-sha1=\"vsBhTp0e6lXU38rKB1LGUY8WxMd\" width=\"690\" height=\"122\" srcset=\"https://forum.golangbridge.org/uploads/default/optimized/2X/d/dc7f11c98378d31ff44c09f4b67fdbd9cb3f2a61_2_690x122.png, https://forum.golangbridge.org/uploads/default/original/2X/d/dc7f11c98378d31ff44c09f4b67fdbd9cb3f2a61.png 1.5x, https://forum.golangbridge.org/uploads/default/original/2X/d/dc7f11c98378d31ff44c09f4b67fdbd9cb3f2a61.png 2x\" data-dominant-color=\"423E3C\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cp\u003e\u003c/p\u003e ",
    "date": "2023-03-28T21:23:03Z",
    "vote": 0
  },
  {
    "id": "cc262f057a71de2e7207e58cb2e24a27",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Biginner in go need a help",
    "url": "https://forum.golangbridge.org/t/biginner-in-go-need-a-help/31155#post_4",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"mje\" data-post=\"3\" data-topic=\"31155\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/mje/40/10284_2.png\" class=\"avatar\"\u003e mje:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGoes for every book he (co)authored.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThat’s a good tip. I don’t believe I’ve read any other books but having the first documented “Hello World” program is some pretty legit nerd street cred. I just noticed he authored a book with Rob Pike as well, released back in 1999 (10 years before Go would first appear!). I might have to check that out.\u003c/p\u003e ",
    "date": "2023-03-28T21:23:02Z",
    "vote": 0
  },
  {
    "id": "770148ef4ed7dc4c3ccfb642df149378",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Logy is a fast, configurable, and easy-to-use logger library for Go applications",
    "url": "https://www.reddit.com/r/golang/comments/12529au/logy_is_a_fast_configurable_and_easytouse_logger/",
    "resume": "",
    "date": "2023-03-28T21:03:40Z",
    "vote": 0
  },
  {
    "id": "75d174860f59b7ee10d1a5805fdf09f2",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Biginner in go need a help",
    "url": "https://forum.golangbridge.org/t/biginner-in-go-need-a-help/31155#post_3",
    "resume": " \u003caside class=\"quote no-group quote-modified\" data-username=\"Dean_Davidson\" data-post=\"2\" data-topic=\"31155\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/dean_davidson/40/9685_2.png\" class=\"avatar\"\u003e Dean_Davidson:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBrian W. Kernighan…One of the best programming books I’ve ever read\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eGoes for every book he (co)authored.\u003c/p\u003e ",
    "date": "2023-03-28T20:59:52Z",
    "vote": 0
  },
  {
    "id": "ca755e08d1384b65c1027f054e214af7",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Convert python to go its important",
    "url": "https://forum.golangbridge.org/t/convert-python-to-go-its-important/31149#post_3",
    "resume": " \u003cp\u003eDean pointed you to examples for DynamoDB.  For the lambda function see:\u003c/p\u003e\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://docs.aws.amazon.com/lambda/latest/dg/golang-handler.html\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://docs.aws.amazon.com/assets/images/favicon.ico\" class=\"site-icon\" width=\"48\" height=\"48\"\u003e\n\n      \u003ca href=\"https://docs.aws.amazon.com/lambda/latest/dg/golang-handler.html\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003edocs.aws.amazon.com\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \n\n\u003ch3\u003e\u003ca href=\"https://docs.aws.amazon.com/lambda/latest/dg/golang-handler.html\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eAWS Lambda function handler in Go - AWS Lambda\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003eThe Lambda function handler is the method in your function code that processes events. A Lambda function written in SDK for Go is authored as a Go executable.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n ",
    "date": "2023-03-28T20:56:18Z",
    "vote": 0
  },
  {
    "id": "c5389f6f64fd514ad02f40d83adbdc8a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Any golang discussion/networking events happening in SF Bay Area?",
    "url": "https://www.reddit.com/r/golang/comments/1251k3k/any_golang_discussionnetworking_events_happening/",
    "resume": "",
    "date": "2023-03-28T20:40:11Z",
    "vote": 0
  },
  {
    "id": "e24a6c0876a7f0ab0acde33968a4955a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Convert python to go its important",
    "url": "https://forum.golangbridge.org/t/convert-python-to-go-its-important/31149#post_2",
    "resume": " \u003cp\u003eI’m not at all familiar with Python code so I’m not sure what this is doing. It looks like you’re loading a DynamoDB and attempting to insert something into a table. Check out the docs for the go SDK as a good starting point:\u003c/p\u003e\n\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://aws.amazon.com/sdk-for-go/\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://a0.awsstatic.com/libra-css/images/site/fav/favicon.ico\" class=\"site-icon\" width=\"16\" height=\"16\"\u003e\n\n      \u003ca href=\"https://aws.amazon.com/sdk-for-go/\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eAmazon Web Services, Inc.\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"aspect-image\" style=\"--aspect-ratio:690/362;\"\u003e\u003cimg src=\"https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png\" class=\"thumbnail\" width=\"690\" height=\"362\"\u003e\u003c/div\u003e\n\n\u003ch3\u003e\u003ca href=\"https://aws.amazon.com/sdk-for-go/\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eAWS SDK for Go\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003eThe AWS SDK for Go simpliﬁes use of AWS services by providing a set of libraries and higher level abstractions that are consistent and familiar for Go developers.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eAlso head over specifically to their DynamoDB examples:\u003c/p\u003e\n\u003caside class=\"onebox githubfolder\" data-onebox-src=\"https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/gov2/dynamodb\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\"\u003e\n\n      \u003ca href=\"https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/gov2/dynamodb\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003ch3\u003e\u003ca href=\"https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/gov2/dynamodb\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eaws-doc-sdk-examples/gov2/dynamodb at main · awsdocs/aws-doc-sdk-examples\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003e\u003ca href=\"https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/gov2/dynamodb\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003emain/gov2/dynamodb\u003c/a\u003e\u003c/p\u003e\n\n  \u003cp\u003e\u003cspan class=\"label1\"\u003eWelcome to the AWS Code Examples Repository.  This repo contains code examples used in the AWS documentation, AWS SDK Developer Guides, and more. For more information, see the Readme.md file below....\u003c/span\u003e\u003c/p\u003e\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eThere is an example that shows how to use \u003ccode\u003ePutItem\u003c/code\u003e specifically:\u003c/p\u003e\n\u003caside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/gov2/dynamodb/actions/table_basics.go#L119\"\u003e\n  \u003cheader class=\"source\"\u003e\n\n      \u003ca href=\"https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/gov2/dynamodb/actions/table_basics.go#L119\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003egithub.com\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003ch4\u003e\u003ca href=\"https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/gov2/dynamodb/actions/table_basics.go#L119\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eawsdocs/aws-doc-sdk-examples/blob/main/gov2/dynamodb/actions/table_basics.go#L119\u003c/a\u003e\u003c/h4\u003e\n\n\n\n    \u003cpre class=\"onebox\"\u003e\u003ccode class=\"lang-go\"\u003e\n      \u003col class=\"start lines\" start=\"109\" style=\"counter-reset: li-counter 108 ;\"\u003e\n          \u003cli\u003e\t\ttableNames = tables.TableNames\u003c/li\u003e\n          \u003cli\u003e\t}\u003c/li\u003e\n          \u003cli\u003e\treturn tableNames, err\u003c/li\u003e\n          \u003cli\u003e}\u003c/li\u003e\n          \u003cli\u003e\n          \u003c/li\u003e\n\u003cli\u003e// snippet-end:[gov2.dynamodb.ListTables]\u003c/li\u003e\n          \u003cli\u003e\n          \u003c/li\u003e\n\u003cli\u003e// snippet-start:[gov2.dynamodb.PutItem]\u003c/li\u003e\n          \u003cli\u003e\n          \u003c/li\u003e\n\u003cli\u003e// AddMovie adds a movie the DynamoDB table.\u003c/li\u003e\n          \u003cli class=\"selected\"\u003efunc (basics TableBasics) AddMovie(movie Movie) error {\u003c/li\u003e\n          \u003cli\u003e\titem, err := attributevalue.MarshalMap(movie)\u003c/li\u003e\n          \u003cli\u003e\tif err != nil {\u003c/li\u003e\n          \u003cli\u003e\t\tpanic(err)\u003c/li\u003e\n          \u003cli\u003e\t}\u003c/li\u003e\n          \u003cli\u003e\t_, err = basics.DynamoDbClient.PutItem(context.TODO(), \u0026amp;dynamodb.PutItemInput{\u003c/li\u003e\n          \u003cli\u003e\t\tTableName: aws.String(basics.TableName), Item: item,\u003c/li\u003e\n          \u003cli\u003e\t})\u003c/li\u003e\n          \u003cli\u003e\tif err != nil {\u003c/li\u003e\n          \u003cli\u003e\t\tlog.Printf(\"Couldn't add item to table. Here's why: %v\\n\", err)\u003c/li\u003e\n          \u003cli\u003e\t}\u003c/li\u003e\n      \u003c/ol\u003e\n    \u003c/code\u003e\u003c/pre\u003e\n\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eI believe you could modify that example code and accomplish what your code snippet above does.\u003c/p\u003e ",
    "date": "2023-03-28T18:32:22Z",
    "vote": 0
  },
  {
    "id": "4b3e36e7cb1ff6f8a3254d6bbd62d907",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Convert this node js code to golang",
    "url": "https://forum.golangbridge.org/t/convert-this-node-js-code-to-golang/31151#post_3",
    "resume": " \u003cp\u003eGreat advice. One more resource that will be useful: it looks like that node.js code is reading an environment variable for region. Check this go by example for a succinct example on how to do that in go:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://gobyexample.com/environment-variables\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ehttps://gobyexample.com/environment-variables\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThough I’m honestly not sure if it’s needed for \u003ccode\u003eAWS_REGION\u003c/code\u003e - since the AWS SDK will use that environment variable anyway so there’s no need to set it in the config. But for \u003ccode\u003eUploadBucket\u003c/code\u003e it might come in handy.\u003c/p\u003e ",
    "date": "2023-03-28T18:19:48Z",
    "vote": 0
  },
  {
    "id": "1515b8264555d49dde6440dce8372676",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Biginner in go need a help",
    "url": "https://forum.golangbridge.org/t/biginner-in-go-need-a-help/31155#post_2",
    "resume": " \u003cp\u003eStart here:\u003c/p\u003e\n\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://go.dev/learn/\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://go.dev/images/favicon-gopher.png\" class=\"site-icon\" width=\"288\" height=\"288\"\u003e\n\n      \u003ca href=\"https://go.dev/learn/\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ego.dev\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003cdiv class=\"aspect-image\" style=\"--aspect-ratio:690/400;\"\u003e\u003cimg src=\"https://go.dev/doc/gopher/gopher5logo.jpg\" class=\"thumbnail\" width=\"690\" height=\"400\"\u003e\u003c/div\u003e\n\n\u003ch3\u003e\u003ca href=\"https://go.dev/learn/\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003eGet Started - The Go Programming Language\u003c/a\u003e\u003c/h3\u003e\n\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eAnd here:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.gopl.io/\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ehttps://www.gopl.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eNote that the Go Programming Language by Alan A. A. Donovan and Brian W. Kernighan might be a tad outdated with regard to modules and generics, but it is an excellent book. One of the best programming books I’ve ever read on any language, in fact.\u003c/p\u003e ",
    "date": "2023-03-28T18:10:31Z",
    "vote": 0
  },
  {
    "id": "a10c5fe56d5625f51eb5452e4f9fa3b5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Redirect media resources through http.ReponseWriter",
    "url": "https://www.reddit.com/r/golang/comments/124vet1/redirect_media_resources_through_httpreponsewriter/",
    "resume": "",
    "date": "2023-03-28T17:06:33Z",
    "vote": 0
  },
  {
    "id": "9328309d85c69dab71409cf418841bfb",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "\"Integration\" testing",
    "url": "https://www.reddit.com/r/golang/comments/124v7zw/integration_testing/",
    "resume": "",
    "date": "2023-03-28T17:00:05Z",
    "vote": 0
  },
  {
    "id": "7741cd8894ec90873274a341b23f053f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Sorting of slice of custom type yields unexpected results",
    "url": "https://www.reddit.com/r/golang/comments/124tvwo/sorting_of_slice_of_custom_type_yields_unexpected/",
    "resume": "",
    "date": "2023-03-28T16:13:00Z",
    "vote": 0
  },
  {
    "id": "353808cab3efe221070c3c68b91b9a8a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Warrant - Open source application authorization and access control service",
    "url": "https://www.reddit.com/r/golang/comments/124t0o3/warrant_open_source_application_authorization_and/",
    "resume": "",
    "date": "2023-03-28T15:42:33Z",
    "vote": 0
  },
  {
    "id": "0f83026429550214ffd6363c7cbe10d4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Mapping json fields in api calls to a struct to store them in a database or cache",
    "url": "https://www.reddit.com/r/golang/comments/124sr30/mapping_json_fields_in_api_calls_to_a_struct_to/",
    "resume": "",
    "date": "2023-03-28T15:33:35Z",
    "vote": 0
  },
  {
    "id": "878b4f6b33d8ffee337d1f006afa4fc0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Handling two contexts",
    "url": "https://www.reddit.com/r/golang/comments/124qrin/handling_two_contexts/",
    "resume": "",
    "date": "2023-03-28T14:37:45Z",
    "vote": 0
  },
  {
    "id": "5a92a7fd8cc82bcf9065060a210f4a18",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "npu: Simple GO client for The Null Pointer file-sharing service",
    "url": "https://www.reddit.com/r/golang/comments/124qip8/npu_simple_go_client_for_the_null_pointer/",
    "resume": "",
    "date": "2023-03-28T14:29:47Z",
    "vote": 0
  },
  {
    "id": "339b26ef221367ce50b403c5254cf08d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Becoming a Go dev",
    "url": "https://www.reddit.com/r/golang/comments/124p9y3/becoming_a_go_dev/",
    "resume": "",
    "date": "2023-03-28T13:45:50Z",
    "vote": 0
  },
  {
    "id": "69a4225533531cb09ec02880d6a8eb0c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Benthos Code Review - Checkpointer (Go, Generics, sync.Cond)",
    "url": "https://www.reddit.com/r/golang/comments/124n6zh/benthos_code_review_checkpointer_go_generics/",
    "resume": "",
    "date": "2023-03-28T12:28:03Z",
    "vote": 0
  },
  {
    "id": "6227b97be9c726fa62e609fdacbd5e6f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Convert this node js code to golang",
    "url": "https://forum.golangbridge.org/t/convert-this-node-js-code-to-golang/31151#post_2",
    "resume": " \u003cp\u003eHello, Abhishek Kumar Gupta, and welcome to the forum!\u003c/p\u003e\n\u003cp\u003eIt is unlikely that anyone on this site will translate your entire node program into Go and give it to you. There are other web sites where you can pay people to do that for you, but the goal of the members on this site is to help guide you so you can solve the problem (mostly) yourself.\u003c/p\u003e\n\u003cp\u003eWith that goal in mind, at this time, my suggestions to you are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eRead the documentation for the \u003ca href=\"https://aws.amazon.com/sdk-for-go/\" rel=\"noopener nofollow ugc\"\u003eAWS SDK for Go\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eCheck out the \u003ca href=\"https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/gov2/s3\" rel=\"noopener nofollow ugc\"\u003eexamples\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eIf you have any specific questions (e.g.: “How do I set up a Lambda entry point in Go?” or “How do I specify an S3 upload timeout in Go?”, etc.), feel free to ask them here.\u003c/li\u003e\n\u003c/ol\u003e ",
    "date": "2023-03-28T12:11:12Z",
    "vote": 0
  },
  {
    "id": "add4f0b153b7d41f206d21f725777852",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Biginner in go need a help",
    "url": "https://forum.golangbridge.org/t/biginner-in-go-need-a-help/31155#post_1",
    "resume": " \u003cp\u003ehi everyone. i’m a beginner in programming and i’m starting with the go language. i’d like to know everything you need to master the language.\u003c/p\u003e ",
    "date": "2023-03-28T11:18:12Z",
    "vote": 0
  },
  {
    "id": "8cb76a90894021ad0e99edde0c1a2b07",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Text similarity analysis",
    "url": "https://www.reddit.com/r/golang/comments/124kk5n/text_similarity_analysis/",
    "resume": "",
    "date": "2023-03-28T10:40:39Z",
    "vote": 0
  },
  {
    "id": "c9d9873024a03f0798bf3a8e61f5af2d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How can I have error like `make()` if I pass more than two args",
    "url": "https://www.reddit.com/r/golang/comments/124k8zx/how_can_i_have_error_like_make_if_i_pass_more/",
    "resume": "",
    "date": "2023-03-28T10:25:18Z",
    "vote": 0
  },
  {
    "id": "4ebb7a4be6ac0bfd34e1e1c2ff6b2a8d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Very slow building time on WSL2",
    "url": "https://forum.golangbridge.org/t/very-slow-building-time-on-wsl2/31153#post_1",
    "resume": " \u003cp\u003eI have a rather small project that is building in native Windows in around ~10-20s. The same project takes minutes to build when using a WSL2 terminal.\u003c/p\u003e\n\u003cp\u003e → Yes, WSL is accessing the Windows filesystem (/mnt) and is therefore usually a bit slower. However, running\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ego build -x\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eshows that go is running\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003egit status --porcelaine\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewhich takes about 90% of the total build time.\u003c/p\u003e\n\u003cp\u003eAfter some research I found that issue: \u003ca href=\"https://github.com/microsoft/WSL/issues/4401\" rel=\"noopener nofollow ugc\"\u003ehttps://github.com/microsoft/WSL/issues/4401\u003c/a\u003e.\u003cbr\u003e\nIt basically says Git needs to refresh its index on every “git status”, because of the WSL and Windows filesystem mixture. The solution is to create an alias to the Windows wsl.exe inside of WSL. This works great, but unfortunately not for the Go build. “git status” still takes forever.\u003c/p\u003e\n\u003cp\u003eSo, is Go using some kind of “shielded” shell to prevent aliases to work? Is there any possibility to edit/configure the go building process (e.g. to use a different git command)?\u003c/p\u003e ",
    "date": "2023-03-28T08:42:52Z",
    "vote": 0
  },
  {
    "id": "f5caace922266d4d9a74c9b3fac86e82",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "The state of Go's type system",
    "url": "https://www.reddit.com/r/golang/comments/124i7j2/the_state_of_gos_type_system/",
    "resume": "",
    "date": "2023-03-28T08:40:35Z",
    "vote": 0
  },
  {
    "id": "b8d4f8c89bccc8d12feba32d2234a160",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How do you gomock test a method that is importing another package in the closure function?",
    "url": "https://www.reddit.com/r/golang/comments/124hybd/how_do_you_gomock_test_a_method_that_is_importing/",
    "resume": "",
    "date": "2023-03-28T08:27:29Z",
    "vote": 0
  },
  {
    "id": "8504e54bf2d4432f7a83281479ddf12c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A bit of a useful library, selling and boasting.",
    "url": "https://www.reddit.com/r/golang/comments/124hv4f/a_bit_of_a_useful_library_selling_and_boasting/",
    "resume": "",
    "date": "2023-03-28T08:22:47Z",
    "vote": 0
  },
  {
    "id": "9d92b059aed1efa325006fcc72b18169",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What is the preferred way to represent and check for an empty struct?",
    "url": "https://www.reddit.com/r/golang/comments/124hjhl/what_is_the_preferred_way_to_represent_and_check/",
    "resume": "",
    "date": "2023-03-28T08:06:17Z",
    "vote": 0
  },
  {
    "id": "2001f1050c4d9d650d06ee43f7b1f4ae",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Convert this node js code to golang",
    "url": "https://forum.golangbridge.org/t/convert-this-node-js-code-to-golang/31151#post_1",
    "resume": " \u003cp\u003e‘use strict’\u003c/p\u003e\n\u003cp\u003econst AWS = require(‘aws-sdk’)\u003cbr\u003e\nAWS.config.update({ region: process.env.AWS_REGION })\u003cbr\u003e\nconst s3 = new AWS.S3()\u003c/p\u003e\n\u003cp\u003e// Change this value to adjust the signed URL’s expiration\u003cbr\u003e\nconst URL_EXPIRATION_SECONDS = 300\u003c/p\u003e\n\u003cp\u003e// Main Lambda entry point\u003cbr\u003e\nexports.handler = async (event) =\u0026gt; {\u003cbr\u003e\nreturn await getUploadURL(event)\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003econst getUploadURL = async function(event) {\u003cbr\u003e\nconst randomID = parseInt(Math.random() * 10000000)\u003cbr\u003e\nconst Key = \u003ccode\u003e${randomID}.jpg\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e// Get signed URL from S3\u003cbr\u003e\nconst s3Params = {\u003cbr\u003e\nBucket: process.env.UploadBucket,\u003cbr\u003e\nKey,\u003cbr\u003e\nExpires: URL_EXPIRATION_SECONDS,\u003cbr\u003e\nContentType: ‘image/jpeg’,\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// This ACL makes the uploaded object publicly readable. You must also uncomment\n// the extra permission for the Lambda function in the SAM template.\n\n// ACL: 'public-read'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003econsole.log('Params: ', s3Params)\u003cbr\u003e\nconst uploadURL = await s3.getSignedUrlPromise(‘putObject’, s3Params)\u003c/p\u003e\n\u003cp\u003ereturn JSON.stringify({\u003cbr\u003e\nuploadURL: uploadURL,\u003cbr\u003e\nKey\u003cbr\u003e\n})\u003cbr\u003e\n}\u003c/p\u003e ",
    "date": "2023-03-28T07:43:32Z",
    "vote": 0
  },
  {
    "id": "0693c9dc5bfac507395a45f6051f616b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Any benefit to learning Python over Go for working with data?",
    "url": "https://www.reddit.com/r/golang/comments/124gvjv/any_benefit_to_learning_python_over_go_for/",
    "resume": "",
    "date": "2023-03-28T07:31:27Z",
    "vote": 0
  },
  {
    "id": "b5bd6c4be8177f54cec4910e6772b1be",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go linters configuration, the right version.",
    "url": "https://www.reddit.com/r/golang/comments/124gb2h/go_linters_configuration_the_right_version/",
    "resume": "",
    "date": "2023-03-28T07:02:47Z",
    "vote": 0
  },
  {
    "id": "16abafc27e20ac4a6de028409a38fd1a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Convert python to go its important",
    "url": "https://forum.golangbridge.org/t/convert-python-to-go-its-important/31149#post_1",
    "resume": " \u003cp\u003eimport json\u003cbr\u003e\nimport boto3\u003c/p\u003e\n\u003cp\u003edef lambda_handler(event,context):\u003cbr\u003e\n\u003cspan class=\"hashtag\"\u003e#TODO\u003c/span\u003e implement\u003cbr\u003e\nclient_dynamo=boto3.resource(‘dynamodb’)\u003cbr\u003e\ntable=client_dynamo.Table(‘testing’)\u003cbr\u003e\ntry:\u003cbr\u003e\nresponse=table.put_item(Item=event)\u003cbr\u003e\nreturn “Done”\u003cbr\u003e\nexcept:\u003cbr\u003e\nraise\u003c/p\u003e ",
    "date": "2023-03-28T06:47:30Z",
    "vote": 0
  },
  {
    "id": "c0c8a474fcd63b3e6f4c35e2e1cdbdbf",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "beginning in GO",
    "url": "https://www.reddit.com/r/golang/comments/1248ibu/beginning_in_go/",
    "resume": "",
    "date": "2023-03-28T01:40:27Z",
    "vote": 0
  },
  {
    "id": "5592dcf415a039b61600e90897194d4d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go Validation Playground",
    "url": "https://www.reddit.com/r/golang/comments/1243qut/go_validation_playground/",
    "resume": "",
    "date": "2023-03-27T22:49:36Z",
    "vote": 0
  },
  {
    "id": "7ccabcd15b3f5f896f99f978e9c6e9e5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "New ChatGPT library just dropped",
    "url": "https://www.reddit.com/r/golang/comments/1241eje/new_chatgpt_library_just_dropped/",
    "resume": "",
    "date": "2023-03-27T21:35:16Z",
    "vote": 0
  },
  {
    "id": "9e62e92aa7bc43dbbefba219716d09fc",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "github.com/colega/zeropool: zero-allocation type-safe sync.Pool alternative",
    "url": "https://www.reddit.com/r/golang/comments/123zhi7/githubcomcolegazeropool_zeroallocation_typesafe/",
    "resume": "",
    "date": "2023-03-27T20:35:01Z",
    "vote": 0
  },
  {
    "id": "467aba65ce7ed833026538b98b155c85",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Vec3 as [3]float32 is not as fast as a struct",
    "url": "https://forum.golangbridge.org/t/vec3-as-3-float32-is-not-as-fast-as-a-struct/31141#post_2",
    "resume": " \u003caside class=\"quote no-group quote-modified\" data-username=\"MoustaphaSaad\" data-post=\"1\" data-topic=\"31141\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/moustaphasaad/40/13065_2.png\" class=\"avatar\"\u003e MoustaphaSaad:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMy question here is, why doesn’t the go compiler treat the array version differently? couldn’t the compiler treat it like the struct version and pass it in registers?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eIt probably could, but it looks like the Go team might not have bothered with that based on my understanding of the \u003ca href=\"https://go.googlesource.com/go/+/refs/heads/dev.regabi/src/cmd/compile/internal-abi.md\" rel=\"noopener nofollow ugc\"\u003eGo internal ABI specification\u003c/a\u003e, specifically:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNon-trivial arrays are always passed on the stack because indexing into an array typically requires a computed offset, which generally isn’t possible with registers. Arrays in general are rare in function signatures (only 0.7% of functions in the Go 1.15 standard library and 0.2% in kubelet). We considered allowing array fields to be passed on the stack while the rest of an argument’s fields are passed in registers, but this creates the same problems as other large structs if the callee takes the address of an argument, and would benefit \u0026lt;0.1% of functions in kubelet (and even these very little).\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI’m not sure what they mean by “non-trivial,” as \u003ccode\u003efloat32\u003c/code\u003e arrays seem pretty “trivial” to me, but it does seem that going with structs may be the best solution here.\u003c/p\u003e ",
    "date": "2023-03-27T19:57:49Z",
    "vote": 0
  },
  {
    "id": "3bf7e9cd14ab870bf27a7497c537cbcb",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Vec3 as [3]float32 is not as fast as a struct",
    "url": "https://forum.golangbridge.org/t/vec3-as-3-float32-is-not-as-fast-as-a-struct/31141#post_1",
    "resume": " \u003cp\u003eI’m working on some graphics related project and I’ve noticed that my Go code is not as fast as it should be.\u003c/p\u003e\n\u003cp\u003eI did some investigation and had an educated guess that passing my Vec3 by value is the cause of the problem so I allocated all my Vec3 (defined as \u003ccode\u003e[3] float32\u003c/code\u003e) on the heap and worked with *Vec3 and that made my code a lot faster (2x faster)\u003c/p\u003e\n\u003cp\u003eThe next day I decided to inspect the generated assembly that’s when I noticed that my code is passing the Vec3 \u003ccode\u003e[3] float32\u003c/code\u003e on the stack, and by accident I converted my Vec3 to a \u003ccode\u003estruct { X, Y, Z float32 }\u003c/code\u003e and found out that Go compiler is not passing it on the stack anymore (probably passing it in registers) and that the struct version is as fast as the pointer to array version.\u003c/p\u003e\n\u003cp\u003eMy question here is, why doesn’t the go compiler treat the array version differently? couldn’t the compiler treat it like the struct version and pass it in registers?\u003c/p\u003e\n\u003cp\u003ehere’s my benchmark code\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage main\n\nimport (\n\t\"testing\"\n)\n\ntype ArrVec3 [3]float32\n\nfunc (v ArrVec3) Sub(u ArrVec3) (res ArrVec3) {\n\tres[0] = v[0] - u[0]\n\tres[1] = v[1] - u[1]\n\tres[2] = v[2] - u[2]\n\treturn\n}\n\nfunc (v ArrVec3) Mul(t float32) (res ArrVec3) {\n\tres[0] = v[0] - t\n\tres[1] = v[1] - t\n\tres[2] = v[2] - t\n\treturn\n}\n\nfunc (v ArrVec3) Dot(u ArrVec3) float32 {\n\treturn u[0]*v[0] + u[1]*v[1] + u[2]*v[2]\n}\n\ntype Vec3 struct {\n\tX, Y, Z float32\n}\n\nfunc (v Vec3) Sub(u Vec3) (res Vec3) {\n\tres.X = v.X - u.X\n\tres.Y = v.Y - u.Y\n\tres.Z = v.Z - u.Z\n\treturn\n}\n\nfunc (v Vec3) Mul(t float32) (res Vec3) {\n\tres.X = v.X * t\n\tres.Y = v.Y * t\n\tres.Z = v.Z * t\n\treturn\n}\n\nfunc (v Vec3) Dot(u Vec3) float32 {\n\treturn u.X*v.X + u.Y*v.Y + u.Z*v.Z\n}\n\nfunc BenchmarkArrVec3(b *testing.B) {\n\tv := ArrVec3{1, 2, 3}\n\tn := ArrVec3{0, 1, 0}\n\tfor i := 0; i \u0026lt; b.N; i++ {\n\t\tv.Sub(n.Mul(v.Dot(n) * 2))\n\t}\n}\n\n\nfunc BenchmarkVec3(b *testing.B) {\n\tv := Vec3{1, 2, 3}\n\tn := Vec3{0, 1, 0}\n\tfor i := 0; i \u0026lt; b.N; i++ {\n\t\tv.Sub(n.Mul(v.Dot(n) * 2))\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHere’s the godbolt link: \u003ca href=\"https://godbolt.org/z/665K8b3Ph\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eCompiler Explorer\u003c/a\u003e\u003cbr\u003e\nSorry if I made any mistake reading the assembly, this is my first time reading Go’s assembly\u003c/p\u003e ",
    "date": "2023-03-27T19:50:44Z",
    "vote": 0
  },
  {
    "id": "5d8f1a197dd6fac6041cc2a6155d4ea1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "RDF Libary in Golang",
    "url": "https://www.reddit.com/r/golang/comments/123xk6m/rdf_libary_in_golang/",
    "resume": "",
    "date": "2023-03-27T19:29:10Z",
    "vote": 0
  },
  {
    "id": "f2f55f6dcb9d8c77f6bb8db045410bcf",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does Go's lack of inheritance limit it in some domains?",
    "url": "https://www.reddit.com/r/golang/comments/123xge4/does_gos_lack_of_inheritance_limit_it_in_some/",
    "resume": "",
    "date": "2023-03-27T19:25:30Z",
    "vote": 0
  },
  {
    "id": "87a046cd77655dc05a372d0b8a8c4919",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Odigos now supports generating and sending OpenTelemetry data to all three major cloud providers: Google Cloud Storage, Microsoft Blob Storage and AWS S3",
    "url": "https://www.reddit.com/r/golang/comments/123xen8/odigos_now_supports_generating_and_sending/",
    "resume": "",
    "date": "2023-03-27T19:23:53Z",
    "vote": 0
  },
  {
    "id": "19a59e69e5b2c7aaf1ed87c44c6e68cc",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Release go strings pointers on the C",
    "url": "https://forum.golangbridge.org/t/release-go-strings-pointers-on-the-c/31135#post_4",
    "resume": " \u003cp\u003eAh, OK, in that case, assuming \u003ccode\u003egoDealloc\u003c/code\u003e is implemented as something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc goDealloc(p unsafe.Pointer) {\n    C.free(p)\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI would recommend \u003ccode\u003egoDealloc\u003c/code\u003e because then I would expect that whatever \u003ccode\u003emalloc\u003c/code\u003e the Go compiler uses to implement \u003ccode\u003eC.CString\u003c/code\u003e would pair together with whatever Go uses for \u003ccode\u003eC.free\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDisclaimer\u003c/strong\u003e (which I should have mentioned in my first response): I am not a C or Cgo (or Go, for that matter \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slightly_smiling_face.png?v=12\" title=\":slightly_smiling_face:\" class=\"emoji\" alt=\":slightly_smiling_face:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e) specialist, so my answers here are based on my intuition and limited knowledge of C’s separate compilation and linking steps.\u003c/p\u003e ",
    "date": "2023-03-27T18:48:09Z",
    "vote": 0
  },
  {
    "id": "5e8b32c7f6cf77380c7bcd221b7b16b1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Implementing Blockchain in Go!",
    "url": "https://www.reddit.com/r/golang/comments/123ti5v/implementing_blockchain_in_go/",
    "resume": "",
    "date": "2023-03-27T17:11:25Z",
    "vote": 0
  },
  {
    "id": "daab4b83abc861447b6df0332f61dbf9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why Golang beats other runtimes like V8 engine(Node JS) even when V8 is also compiled. Initially it would be slow but after that it should be fast enough.",
    "url": "https://www.reddit.com/r/golang/comments/123t4sq/why_golang_beats_other_runtimes_like_v8/",
    "resume": "",
    "date": "2023-03-27T16:59:10Z",
    "vote": 0
  },
  {
    "id": "cc14de01693dd27a9ab138830a42ad21",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Release go strings pointers on the C",
    "url": "https://forum.golangbridge.org/t/release-go-strings-pointers-on-the-c/31135#post_3",
    "resume": " \u003cp\u003eHi Sean,\u003c/p\u003e\n\u003cp\u003eThanks for info, unfortunately I have a bit different, the CString continues to live into the C world:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc goFunction() C.char* {\n   return  C.CString(\"abc\")\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand then into C\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evoid cFunction() \n{\n    char* ptr = goFunction();\n   // and now now to free ptr\n  goDealoc(ptr); // which will do C.free() internally?\n  // or\n  free(ptr);\n}\n\nThanks\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-27T16:48:12Z",
    "vote": 0
  },
  {
    "id": "744455ba32787afa617e42e36acfbca6",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Deploy Go applications in a managed environment",
    "url": "https://www.youtube.com/watch?v=pHCKVXUwceg",
    "resume": "",
    "date": "2023-03-27T16:00:34Z",
    "vote": 0
  },
  {
    "id": "5c557a7d1f19a7a85f1af7ac46480e7b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "OpenBLAS bindings for Go",
    "url": "https://www.reddit.com/r/golang/comments/123oswj/openblas_bindings_for_go/",
    "resume": "",
    "date": "2023-03-27T14:39:17Z",
    "vote": 0
  },
  {
    "id": "abd4bb3d8bc893ad6971dcfa4953b492",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "JSON array with two different json objects",
    "url": "https://www.reddit.com/r/golang/comments/123nud0/json_array_with_two_different_json_objects/",
    "resume": "",
    "date": "2023-03-27T14:04:21Z",
    "vote": 0
  },
  {
    "id": "c4d4b2f07b1c8dd00edc6e9dc113c4c2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "tint: 🌈 slog.Handler that writes tinted logs",
    "url": "https://www.reddit.com/r/golang/comments/123n77h/tint_sloghandler_that_writes_tinted_logs/",
    "resume": "",
    "date": "2023-03-27T13:38:43Z",
    "vote": 0
  },
  {
    "id": "993eb144e7189851589c920ce3f2d274",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Release go strings pointers on the C",
    "url": "https://forum.golangbridge.org/t/release-go-strings-pointers-on-the-c/31135#post_2",
    "resume": " \u003cp\u003eHi, Marius, and welcome to the forum!\u003c/p\u003e\n\u003cp\u003eMixing the allocation and freeing of pointers between potentially different \u003ccode\u003emalloc\u003c/code\u003e implementations can lead to problems.  It has been my experience that in Go, it’s a good idea to put the allocation and (deferred) freeing in the same spot rather than allocating in one place and freeing in another:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc callCFunction(parameter string) int {\n    cstr := C.CString(parameter)\n    defer C.free(cstr)\n    int(return C.function(cstr))\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-27T12:54:43Z",
    "vote": 0
  },
  {
    "id": "5b9505aa8153d54532ed9afccb63410e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Vim-go weirdness truncated docs?",
    "url": "https://www.reddit.com/r/golang/comments/123lvje/vimgo_weirdness_truncated_docs/",
    "resume": "",
    "date": "2023-03-27T12:42:30Z",
    "vote": 0
  },
  {
    "id": "9bf3dd8b6257b019bdd63ae7de51ca06",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Web Development em Go - Parte 07 - Block vs Template #golang #webdevelopment (PT-BR)",
    "url": "https://www.reddit.com/r/golang/comments/123l7nn/web_development_em_go_parte_07_block_vs_template/",
    "resume": "",
    "date": "2023-03-27T12:13:14Z",
    "vote": 0
  },
  {
    "id": "222f8afd1719c1e004644c3862927603",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "TUI Libs",
    "url": "https://www.reddit.com/r/golang/comments/123l4qv/tui_libs/",
    "resume": "",
    "date": "2023-03-27T12:09:28Z",
    "vote": 0
  },
  {
    "id": "aee3db8e29939e386aa87edd882922a9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "End to end example API written in Go",
    "url": "https://www.reddit.com/r/golang/comments/123ke83/end_to_end_example_api_written_in_go/",
    "resume": "",
    "date": "2023-03-27T11:34:20Z",
    "vote": 0
  },
  {
    "id": "f42cc8362b12d5b9d99f7b319d52635e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Freelance DevOps Content Writer Looking for Work Opportunities",
    "url": "https://www.reddit.com/r/golang/comments/123jy69/freelance_devops_content_writer_looking_for_work/",
    "resume": "",
    "date": "2023-03-27T11:18:32Z",
    "vote": 0
  },
  {
    "id": "7b1fa0fded7f60c3b8d6098a998ab8f4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Book recommendations for knowledge graphs and cryptography",
    "url": "https://www.reddit.com/r/golang/comments/123hua0/book_recommendations_for_knowledge_graphs_and/",
    "resume": "",
    "date": "2023-03-27T09:44:48Z",
    "vote": 0
  },
  {
    "id": "d8c261d6c7be7cb4f0ddf522c36abb4a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Kivi - Distributed dynamo-style database for educational purposes written in Go",
    "url": "https://www.reddit.com/r/golang/comments/123hqcg/kivi_distributed_dynamostyle_database_for/",
    "resume": "",
    "date": "2023-03-27T09:39:00Z",
    "vote": 0
  },
  {
    "id": "2c222bd351adddb32aa546f4a3ff7504",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Where exactly should I put my golang interface at?",
    "url": "https://www.reddit.com/r/golang/comments/123h3m9/where_exactly_should_i_put_my_golang_interface_at/",
    "resume": "",
    "date": "2023-03-27T09:05:01Z",
    "vote": 0
  },
  {
    "id": "b9708359b53957066e7f8ebbf3a26617",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Release go strings pointers on the C",
    "url": "https://forum.golangbridge.org/t/release-go-strings-pointers-on-the-c/31135#post_1",
    "resume": " \u003cp\u003eHi,\u003c/p\u003e\n\u003cp\u003eI don’t know go, just basic level, but I would need some help on how \u003ccode\u003ego\u003c/code\u003e interacts with \u003ccode\u003eC\u003c/code\u003e.\u003cbr\u003e\nI have a static library written in go which exports in a C header some functions, and they are used into a C program. The functions return \u003ccode\u003echar*\u003c/code\u003e and on \u003ccode\u003ego\u003c/code\u003e are created with \u003ccode\u003eC.CString\u003c/code\u003e. The documentation says that the created objects are on C heap, and I want to release them on \u003ccode\u003eC\u003c/code\u003e code. For this I’m using \u003ccode\u003efree\u003c/code\u003e.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIs this the correct way to do it(because documentation says the pointers on the C heap), or the objects must be sent back to \u003ccode\u003ego\u003c/code\u003e and release them with \u003ccode\u003eC.free\u003c/code\u003e?\u003c/li\u003e\n\u003cli\u003eCan there be any problems if the pointers created on \u003ccode\u003ego\u003c/code\u003e are freed on C, e.g. if the go static library is compiled with an OS version, but the final executable with another? Meaning maybe different libc(free/malloc) versions are used.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThank you\u003c/p\u003e ",
    "date": "2023-03-27T07:48:16Z",
    "vote": 0
  },
  {
    "id": "b636d1261f89783123812c4bb367c42a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go GUI vs. Browser",
    "url": "https://www.reddit.com/r/golang/comments/123fkup/go_gui_vs_browser/",
    "resume": "",
    "date": "2023-03-27T07:45:24Z",
    "vote": 0
  },
  {
    "id": "a54d1a7b66a46b97b10dee35839679b9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Which CPU to buy based on profiling",
    "url": "https://www.reddit.com/r/golang/comments/123dsx0/which_cpu_to_buy_based_on_profiling/",
    "resume": "",
    "date": "2023-03-27T06:28:23Z",
    "vote": 0
  },
  {
    "id": "d566beccb2309940ffe0d7e2695eb618",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What is the default timezone for Go’s log package? (For logged messages)",
    "url": "https://www.reddit.com/r/golang/comments/123d1c3/what_is_the_default_timezone_for_gos_log_package/",
    "resume": "",
    "date": "2023-03-27T05:49:30Z",
    "vote": 0
  },
  {
    "id": "51a0822d43cca09e5d9305421edf1b98",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What happens when Stanford Alpaca tries to create a Go program...",
    "url": "https://www.reddit.com/r/golang/comments/1236t8d/what_happens_when_stanford_alpaca_tries_to_create/",
    "resume": "",
    "date": "2023-03-27T01:30:06Z",
    "vote": 0
  },
  {
    "id": "69f00307550f100d27346b9ef85f3978",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Host used for Reverse Proxy throwing 404",
    "url": "https://www.reddit.com/r/golang/comments/1236slo/host_used_for_reverse_proxy_throwing_404/",
    "resume": "",
    "date": "2023-03-27T01:29:21Z",
    "vote": 0
  },
  {
    "id": "363e5c470117ac66c48060c184f4eee1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "httputil.ReverseProxy: Director vs Rewrite",
    "url": "https://www.reddit.com/r/golang/comments/1234vyd/httputilreverseproxy_director_vs_rewrite/",
    "resume": "",
    "date": "2023-03-27T00:14:22Z",
    "vote": 0
  },
  {
    "id": "b1fb846dffcd05a810b9f22d4da76b82",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How can I Get a Job as a Python Programmer?",
    "url": "https://blog.boot.dev/jobs/how-to-get-python-job/",
    "resume": "How to Get a Job as a Python Programmer 🔗\u0026ldquo;How much Python do I need to know to get a job?",
    "date": "2023-03-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3a94c31ab756a047a1b64721a20e3d0c",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Parsing Command Flags Ep. 9",
    "url": "https://www.ardanlabs.com/blog/2023/03/interfaces-101-parsing-command-flags-ep-9.html",
    "resume": "Introduction In episode 8, Miki developed a Go HTTP client that had a method to check the health of a theoretical API. The method would construct the request URL and return an error based on the response code received from the server. Miki then created a type that would mock Go’s http.RoundTripper interface and replace his client’s transport with said type to test it. To improve the efficacy, Miki’s stub will simulate an erroneous response to see if his client’s Health method is working as intended.",
    "date": "2023-03-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c5fa6708d2908c74d7b86c04257b27f2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Best Practice: Callback Return Values",
    "url": "https://www.reddit.com/r/golang/comments/1232a1d/best_practice_callback_return_values/",
    "resume": "",
    "date": "2023-03-26T22:36:20Z",
    "vote": 0
  },
  {
    "id": "bc73df53a8872db24f4d516d3b693381",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Running into some trouble with gazelle and proto imports",
    "url": "https://www.reddit.com/r/golang/comments/12314t0/running_into_some_trouble_with_gazelle_and_proto/",
    "resume": "",
    "date": "2023-03-26T21:55:47Z",
    "vote": 0
  },
  {
    "id": "c1add0427f962d018ede62135d8bd9ff",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to get Profiling Right with Go?",
    "url": "https://www.reddit.com/r/golang/comments/122yjbz/how_to_get_profiling_right_with_go/",
    "resume": "",
    "date": "2023-03-26T20:30:18Z",
    "vote": 0
  },
  {
    "id": "b824fd3527f0e3576628aadcb2ba649b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Immutable references in Go?",
    "url": "https://www.reddit.com/r/golang/comments/122yh0z/immutable_references_in_go/",
    "resume": "",
    "date": "2023-03-26T20:28:11Z",
    "vote": 0
  },
  {
    "id": "1ae6ad772c3e91405670a4276926f4a3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A template for creating a ChatGPT Plugin for Gophers",
    "url": "https://www.reddit.com/r/golang/comments/122wnbj/a_template_for_creating_a_chatgpt_plugin_for/",
    "resume": "",
    "date": "2023-03-26T19:27:13Z",
    "vote": 0
  },
  {
    "id": "f0c906c597dc9fab6cb8928bc12e2f6d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "API load testing with gin gonic",
    "url": "https://www.reddit.com/r/golang/comments/122vtwt/api_load_testing_with_gin_gonic/",
    "resume": "",
    "date": "2023-03-26T18:58:33Z",
    "vote": 0
  },
  {
    "id": "5ffe837066f3169bdcf25d9dfdc48548",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "new project with go - need inputs / boilerplate?",
    "url": "https://www.reddit.com/r/golang/comments/122srqt/new_project_with_go_need_inputs_boilerplate/",
    "resume": "",
    "date": "2023-03-26T17:10:24Z",
    "vote": 0
  },
  {
    "id": "d11387b1e3c858294f9bd3ba11973bd6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Simplify Your Programming Journey with These 3 Command-Line Aliases using the glow go package.",
    "url": "https://www.reddit.com/r/golang/comments/122sgvs/simplify_your_programming_journey_with_these_3/",
    "resume": "",
    "date": "2023-03-26T17:00:15Z",
    "vote": 0
  },
  {
    "id": "bf449435020e6802ab82112a7e60b9ba",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How do I decide between OOP and functional?",
    "url": "https://www.reddit.com/r/golang/comments/122sc92/how_do_i_decide_between_oop_and_functional/",
    "resume": "",
    "date": "2023-03-26T16:55:44Z",
    "vote": 0
  },
  {
    "id": "4ab53723e96b0bf732eb2410f8fee2a5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Tools besides Go for a newbie",
    "url": "https://www.reddit.com/r/golang/comments/122s8h5/tools_besides_go_for_a_newbie/",
    "resume": "",
    "date": "2023-03-26T16:51:56Z",
    "vote": 0
  },
  {
    "id": "cc9c4e99a0e99d6fb3cae056d796c0ae",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Database transaction management",
    "url": "https://www.reddit.com/r/golang/comments/122qv84/database_transaction_management/",
    "resume": "",
    "date": "2023-03-26T16:04:11Z",
    "vote": 0
  },
  {
    "id": "763c69fd819fc472dad6127e5d21108f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Error handling and Logging in a private backend api",
    "url": "https://forum.golangbridge.org/t/error-handling-and-logging-in-a-private-backend-api/31126#post_1",
    "resume": " \u003cp\u003eHi guys,\u003c/p\u003e\n\u003cp\u003eI’m working on my first microservices application that is a private backend api.\u003cbr\u003e\nI’ve developed something but I wanted your advice on this cause I don’t know the format requirements of the common log aggregators of the market and I’m pretty sure there’re savy people around to point out a lot a flaws in this trial.\u003c/p\u003e\n\u003cp\u003eTo make things easy to test, I’ve created a repo here:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/BigBoulard/api-error-handling-and-logging\" rel=\"noopener nofollow ugc\"\u003ehttps://github.com/BigBoulard/api-error-handling-and-logging\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThank you so much for your help.\u003c/p\u003e\n\u003ch1\u003e\n\u003ca name=\"readme-1\" class=\"anchor\" href=\"https://forum.golangbridge.org#readme-1\"\u003e\u003c/a\u003eREADME\u003c/h1\u003e\n\u003ch2\u003e\n\u003ca name=\"test-2\" class=\"anchor\" href=\"https://forum.golangbridge.org#test-2\"\u003e\u003c/a\u003eTest\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003ego run src/main.go\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003e\n\u003ca name=\"context-3\" class=\"anchor\" href=\"https://forum.golangbridge.org#context-3\"\u003e\u003c/a\u003eContext\u003c/h2\u003e\n\u003cp\u003eThis code is a simplified example of a private API that responds to a browser (client).\u003c/p\u003e\n\u003ch2\u003e\n\u003ca name=\"goals-4\" class=\"anchor\" href=\"https://forum.golangbridge.org#goals-4\"\u003e\u003c/a\u003eGoals\u003c/h2\u003e\n\u003cp\u003eIf an error happens, the client should be able to provide an appropriate error message to the end user based on the payload received by this server\u003cbr\u003e\nwithout leaking any sensitive data or giving any information about the backend code structure or the underlying technology stack.\u003c/p\u003e\n\u003cp\u003eError Logging should provide enough information to understand the origin of an error:\u003c/p\u003e\n\u003ch2\u003e\n\u003ca name=\"assumptions-to-be-challenged-5\" class=\"anchor\" href=\"https://forum.golangbridge.org#assumptions-to-be-challenged-5\"\u003e\u003c/a\u003eAssumptions (to be challenged)\u003c/h2\u003e\n\u003cp\u003e1 - An error must be created upon detection, in a controller, service, repository or http client\u003cbr\u003e\n2 - On the other hand, logging should only happens in the controller and should provide enough information to understand the path of the request that generated the error.\u003c/p\u003e\n\u003ch2\u003e\n\u003ca name=\"proposal-6\" class=\"anchor\" href=\"https://forum.golangbridge.org#proposal-6\"\u003e\u003c/a\u003eProposal\u003c/h2\u003e\n\u003cp\u003eA \u003ccode\u003erestErr\u003c/code\u003e struct is created and contains:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNecessary fields to give a correct HTTP Error Response:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003ethe \u003cstrong\u003eHTTTP Status\u003c/strong\u003e,\u003c/li\u003e\n\u003cli\u003ethe \u003cstrong\u003etitle\u003c/strong\u003e of the error\u003c/li\u003e\n\u003cli\u003ea potential \u003cstrong\u003ecause\u003c/strong\u003e (like the name of a missing/invalid field).\u003cbr\u003e\nThese fields are marshalled and presented to the client.\u003c/li\u003e\n\u003c/ul\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003eLogging information: these data may contain information sensitive information (db field names, db sytem name etc.) and therefore are not marshalled.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eErrPath\u003c/code\u003e: contains something like \u003ccode\u003eproductcontroller.GetProduct/productservice.GetProduct/productrepo.GetByID\u003c/code\u003e to inform that an error has been triggered by the \u003ccode\u003eGetByID\u003c/code\u003e function from the \u003cstrong\u003eproduct repository\u003c/strong\u003e, called by the \u003ccode\u003eGetProduct\u003c/code\u003e function from the \u003cstrong\u003eproduct service\u003c/strong\u003e etc.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eErrCode\u003c/code\u003e and \u003ccode\u003eErrMessage\u003c/code\u003e: the raw error code and message retrieved from MySQL, PostGres, an external API or another microservice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003etype restErr struct {\n\tErrStatus  int    `json:\"status\"`          // HTTP Status Code\n\tErrTitle   string `json:\"title\"`           // A string representation of the Status Code\n\tErrCause   string `json:\"cause,omitempty\"` // The cause of the error, can be empty\n\n\tErrPath    string `json:\"-\"`               // Only used for Logging: The path of the error. Ex: \"controller/controllerfunc/service/servicefunc/dbclient/dblientfunc\"\n\tErrMessage string `json:\"-\"`               // Only used for Logging: Raw error message returned by a DB, another Servive or whatever\n\tErrCode    string `json:\"-\"`               // Only used for Logging: Raw error code from the DB or another service\n}\n\ntype RestErr interface {\n\tStatus() int     // HTTP status code\n\tTitle() string   // A string representation of the Status Code\n\n\tPath() string    // Only used for Logging: The path of the error. Ex: \"controller/controllerfunc/service/servicefunc/dbclient/dblientfunc\"\n\tWrapPath(string) // Only used for Logging: Wrapper func to keep track of the path of the error\n\tCode() string    // Only used for Logging: Raw error code\n\tMessage() string // Only used for Logging: Raw error message not returned to the client\n\n\tError() string   // string representation of a restErr\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-26T15:42:53Z",
    "vote": 0
  },
  {
    "id": "097d714a03ab18422c23e125b8525f23",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is this Automatic Pointer Dereferencing?",
    "url": "https://www.reddit.com/r/golang/comments/122q6hd/is_this_automatic_pointer_dereferencing/",
    "resume": "",
    "date": "2023-03-26T15:41:01Z",
    "vote": 0
  },
  {
    "id": "af0e8647287917572c9194c8fc423847",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Convert between stdlib time format string and strftime format string?",
    "url": "https://www.reddit.com/r/golang/comments/122p5yx/convert_between_stdlib_time_format_string_and/",
    "resume": "",
    "date": "2023-03-26T15:07:28Z",
    "vote": 0
  },
  {
    "id": "c410e1489f51b5eff37a8df827912ff4",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Is this a secure query?",
    "url": "https://forum.golangbridge.org/t/is-this-a-secure-query/31125#post_1",
    "resume": " \u003cp\u003eI want to have a “dynamic” column in order to chose translation. Is this a safe way to do this?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eimport (\n    \"context\"\n    \"github.com/jackc/pgx/v4/pgxpool\"\n)\n\nfunc main() {\n    language := \"en_US\"\n    translationKey := \"co\"\n\n    // create a database connection pool\n    dbpool, err := pgxpool.Connect(context.Background(), \"postgres://user:password@host:port/database\")\n    if err != nil {\n        panic(err)\n    }\n    defer dbpool.Close()\n\n    // prepare the query statement with placeholders for parameters\n    stmt, err := dbpool.Prepare(context.Background(), \"SELECT $1 FROM lang WHERE column = $2 AND key = $3\")\n    if err != nil {\n        panic(err)\n    }\n    defer stmt.Close()\n\n    // execute the prepared statement with the translation key and language as parameters\n    var translation string\n    err = stmt.QueryRow(context.Background(), language, \"en_US\", \"co\").Scan(\u0026amp;translation)\n    if err != nil {\n        panic(err)\n    }\n\n    fmt.Println(translation)\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-26T15:03:52Z",
    "vote": 0
  },
  {
    "id": "b87ee9ab6471e4825a14e3e3f60c794e",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Encore.Dev AuthHandler with Auth0 and VueJS",
    "url": "https://forum.golangbridge.org/t/encore-dev-authhandler-with-auth0-and-vuejs/31122#post_2",
    "resume": " \u003cp\u003eHey Colton, the example code provided is using net/http middleware to do JWT validation, which doesn’t map 1:1 with Encore’s authentication handlers. Fortunately the middleware is only a convenience method for plain net/http services; it’s equally easy (or arguably even easier) to use the underlying validation function, which should work great with Encore.\u003c/p\u003e\n\u003cp\u003eFrom the code snippet you provided, the core validation logic happens in \u003ccode\u003ejwtValidator.ValidateToken\u003c/code\u003e which is the validation function passed to \u003ccode\u003ejwtmiddleware.New\u003c/code\u003e. In the case of Encore, you can call that function directly from the Encore authentication handler, like so (rough sketch):\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003eimport (\n    \"encore.dev/beta/auth\"\n    \"github.com/auth0/go-jwt-middleware/v2/validator\"\n)\n\n//encore:authhandler\nfunc AuthHandler(ctx context.Context, token string) (auth.UID, error) {\n    validatedToken, err := jwtValidator.ValidateToken(ctx, token)\n    if err != nil {\n        return \"\", err\n    }\n    claims := validatedToken.(*validator.ValidatedClaims)\n\n    // ... check claims for the permissions you care about ....\n   \n    // Finally return the subject as the Encore user id\n    return auth.UID(claims.RegisteredClaims.Subject), nil\n}\n\nvar jwtValidator *validator.Validator\n\nfunc init() {\n    // Set up jwtValidator in the same was in the example code provided, calling validator.New\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHope that helps. Let me know if you can’t get it to work and I’d be happy to jump on a video call to go through it together!\u003c/p\u003e ",
    "date": "2023-03-26T14:12:36Z",
    "vote": 0
  },
  {
    "id": "fd42590dd98043957f16f77a1cb1b917",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "6 ways to boost the performance of your Go applications",
    "url": "https://www.reddit.com/r/golang/comments/122jnay/6_ways_to_boost_the_performance_of_your_go/",
    "resume": "",
    "date": "2023-03-26T11:45:49Z",
    "vote": 0
  },
  {
    "id": "11cc3f70b4bd512806d4d96a9e2f2e47",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A proper documenation/tutorial for Go in web development",
    "url": "https://www.reddit.com/r/golang/comments/122j972/a_proper_documenationtutorial_for_go_in_web/",
    "resume": "",
    "date": "2023-03-26T11:27:11Z",
    "vote": 0
  },
  {
    "id": "25ba3cd0bd0406b5a5b5d8b548b30e72",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "The Importance of gRPC Monitoring for High-Performance Systems",
    "url": "https://www.reddit.com/r/golang/comments/122hzd0/the_importance_of_grpc_monitoring_for/",
    "resume": "",
    "date": "2023-03-26T10:22:16Z",
    "vote": 0
  },
  {
    "id": "6f8fd6a1c002e0e90db6005f61e455d6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Might you not know: Go has a strange data type: Array",
    "url": "https://www.reddit.com/r/golang/comments/122hmvu/might_you_not_know_go_has_a_strange_data_type/",
    "resume": "",
    "date": "2023-03-26T10:03:08Z",
    "vote": 0
  },
  {
    "id": "5b5b51e1e169e7733acc7a7090999d68",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "shift: high-performance HTTP router for Go",
    "url": "https://www.reddit.com/r/golang/comments/122gzep/shift_highperformance_http_router_for_go/",
    "resume": "",
    "date": "2023-03-26T09:27:34Z",
    "vote": 0
  },
  {
    "id": "733fb3c50bac223222dfcae66fb4282b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "RedisJson record:uuid format",
    "url": "https://www.reddit.com/r/golang/comments/122dlsi/redisjson_recorduuid_format/",
    "resume": "",
    "date": "2023-03-26T06:42:16Z",
    "vote": 0
  },
  {
    "id": "435ff2fa3125d805f891f96e8afa2e77",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Web application in local network displaying multiple RTSP streams in Go?",
    "url": "https://www.reddit.com/r/golang/comments/122cwqq/web_application_in_local_network_displaying/",
    "resume": "",
    "date": "2023-03-26T06:06:25Z",
    "vote": 0
  },
  {
    "id": "83f99557c2c19089148b4a95bb92d921",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "in which directory should i keep my application package",
    "url": "https://www.reddit.com/r/golang/comments/1229m4h/in_which_directory_should_i_keep_my_application/",
    "resume": "",
    "date": "2023-03-26T03:25:56Z",
    "vote": 0
  },
  {
    "id": "88012472e5a0a8cdac06a09f9bc3e69c",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Encore.Dev AuthHandler with Auth0 and VueJS",
    "url": "https://forum.golangbridge.org/t/encore-dev-authhandler-with-auth0-and-vuejs/31122#post_1",
    "resume": " \u003cp\u003eTL;DR: The documentation suggests that JWT validation is sufficient for authentication in Encore, but there seems to be a conflict with implementing RBAC, as Auth0 requires a handler to be returned and Encore doesnt seem to work with that.\u003c/p\u003e\n\u003cp\u003eBeen stuck on this for about 2 days, i understand that based on the documentation all that should be done technically is JWTValidation which entails decoding, if it can decode than it is validated otherwise it is not: \u003ca href=\"https://encore.dev/docs/develop/auth\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eAdding authentication to APIs to auth users — Encore Docs\u003c/a\u003e However, the problem is for me that the documentation states:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eEncore applications can designate a special function to handle authentication, by defining a function and annotating it with //encore:authhandler. This annotation tells Encore to run the function whenever an incoming API call contains an authentication token.\n\nThe auth handler is responsible for validating the incoming authentication token and returning an auth.UID (a string type representing a user id). The auth.UID can be whatever you wish, but in practice it usually maps directly to the primary key stored in a user table (either defined in the Encore service or in an external service like Firebase or Okta).\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhich means i cannot return a handler. According to the documentation for Auth0 states when implementing RBAC that it must be a handler that is returned. Does anyone have any ideas? Here is the working code according to Auth0 Documentation:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage middleware\n \nimport (\n    \"context\"\n    \"log\"\n    \"net/http\"\n    \"net/url\"\n    \"time\"\n \n    \"encore.app/auth/helpers\"\n    jwtmiddleware \"github.com/auth0/go-jwt-middleware/v2\"\n    \"github.com/auth0/go-jwt-middleware/v2/jwks\"\n    \"github.com/auth0/go-jwt-middleware/v2/validator\"\n    \"github.com/pkg/errors\"\n)\n \n// Declare constants for error messages\nconst (\n    missingJWTErrorMessage       = \"Requires authentication\"\n    invalidJWTErrorMessage       = \"Bad credentials\"\n    permissionDeniedErrorMessage = \"Permission denied\"\n)\n \n// CustomClaims is a struct representing additional permissions in the JWT\ntype CustomClaims struct {\n    Permissions []string `json:\"permissions\"`\n}\n \n// Validate is a method for validating custom claims (currently a no-op)\nfunc (c CustomClaims) Validate(ctx context.Context) error {\n    return nil\n}\n \n// HasPermissions is a method for checking if the custom claims contain all expected permissions\nfunc (c CustomClaims) HasPermissions(expectedClaims []string) bool {\n    if len(expectedClaims) == 0 {\n        return false\n    }\n    for _, scope := range expectedClaims {\n        if !helpers.Contains(c.Permissions, scope) {\n            return false\n        }\n    }\n    return true\n}\n \n// ValidatePermissions is a middleware function for checking if the JWT has the expected permissions\nfunc ValidatePermissions(expectedClaims []string, next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        token := r.Context().Value(jwtmiddleware.ContextKey{}).(*validator.ValidatedClaims)\n        claims := token.CustomClaims.(*CustomClaims)\n        if !claims.HasPermissions(expectedClaims) {\n            errorMessage := ErrorMessage{Message: permissionDeniedErrorMessage}\n            helpers.WriteJSON(w, http.StatusForbidden, errorMessage)\n            return\n        }\n        next.ServeHTTP(w, r)\n    })\n}\n \n// ValidateJWT is a factory function that returns a middleware for validating JWTs with a given audience and domain\nfunc ValidateJWT(audience, domain string) func(next http.Handler) http.Handler {\n    issuerURL, err := url.Parse(\"https://\" + domain + \"/\")\n    if err != nil {\n        log.Fatalf(\"Failed to parse the issuer url: %v\", err)\n    }\n \n    provider := jwks.NewCachingProvider(issuerURL, 5*time.Minute)\n \n    //Setting up validator\n    jwtValidator, err := validator.New(\n        provider.KeyFunc,\n        validator.RS256,\n        issuerURL.String(),\n        []string{audience},\n        validator.WithCustomClaims(\n            func() validator.CustomClaims {\n                return \u0026amp;CustomClaims{}\n            },\n        ),\n    )\n    if err != nil {\n        log.Fatalf(\"Failed to set up the jwt validator\")\n    }\n \n    errorHandler := func(w http.ResponseWriter, r *http.Request, err error) {\n        log.Printf(\"Encountered error while validating JWT: %v\", err)\n        if errors.Is(err, jwtmiddleware.ErrJWTMissing) {\n            errorMessage := ErrorMessage{Message: missingJWTErrorMessage}\n            helpers.WriteJSON(w, http.StatusUnauthorized, errorMessage)\n            return\n        }\n        if errors.Is(err, jwtmiddleware.ErrJWTInvalid) {\n            errorMessage := ErrorMessage{Message: invalidJWTErrorMessage}\n            helpers.WriteJSON(w, http.StatusUnauthorized, errorMessage)\n            return\n        }\n        ServerError(w, err)\n    }\n \n    middleware := jwtmiddleware.New(\n        jwtValidator.ValidateToken,\n        jwtmiddleware.WithErrorHandler(errorHandler),\n    )\n \n    return func(next http.Handler) http.Handler {\n        return middleware.CheckJWT(next)\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-26T02:38:01Z",
    "vote": 0
  },
  {
    "id": "34dcaecb85067febcb2a93ae2906a365",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Data storage speed comparisons?",
    "url": "https://www.reddit.com/r/golang/comments/1223elx/data_storage_speed_comparisons/",
    "resume": "",
    "date": "2023-03-25T23:34:45Z",
    "vote": 0
  },
  {
    "id": "89cadd65ec800f8607048377b3bba22a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang Api development issue",
    "url": "https://www.reddit.com/r/golang/comments/12224tv/golang_api_development_issue/",
    "resume": "",
    "date": "2023-03-25T22:49:50Z",
    "vote": 0
  },
  {
    "id": "7b93cef527bbdbeaac0e2671ad436cee",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "My believe that Golang will grow in demand and how maybe this is ruining my pay increase",
    "url": "https://www.reddit.com/r/golang/comments/1221z1i/my_believe_that_golang_will_grow_in_demand_and/",
    "resume": "",
    "date": "2023-03-25T22:44:07Z",
    "vote": 0
  },
  {
    "id": "966d78a8d54f954228ea854c82e30390",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Hi, I am new to go, I wanna ask if I can test gin framework on some repl or playground?",
    "url": "https://www.reddit.com/r/golang/comments/1221ys8/hi_i_am_new_to_go_i_wanna_ask_if_i_can_test_gin/",
    "resume": "",
    "date": "2023-03-25T22:43:52Z",
    "vote": 0
  },
  {
    "id": "30f86f3e66e6f52202448de125b8a878",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Bruter v.1.0.0b -- https://github.com/CyberRoute/bruter",
    "url": "https://www.reddit.com/r/golang/comments/121vzt0/bruter_v100b_httpsgithubcomcyberroutebruter/",
    "resume": "",
    "date": "2023-03-25T19:14:18Z",
    "vote": 0
  },
  {
    "id": "9eed26be1a97292bd052139d673ca3f6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "why I cannot write post request to local json file?",
    "url": "https://www.reddit.com/r/golang/comments/121ru93/why_i_cannot_write_post_request_to_local_json_file/",
    "resume": "",
    "date": "2023-03-25T16:56:39Z",
    "vote": 0
  },
  {
    "id": "1e3078edadf6a24e0fb5a062a37be2dd",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to land an entry-level backend Golang job remotely",
    "url": "https://www.reddit.com/r/golang/comments/121qxx4/how_to_land_an_entrylevel_backend_golang_job/",
    "resume": "",
    "date": "2023-03-25T16:25:18Z",
    "vote": 0
  },
  {
    "id": "c7140a42df7ae04b1702250dbbdd203f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Can you use a pointer in a struct?",
    "url": "https://www.reddit.com/r/golang/comments/121q1lx/can_you_use_a_pointer_in_a_struct/",
    "resume": "",
    "date": "2023-03-25T15:52:43Z",
    "vote": 0
  },
  {
    "id": "c011e21a4c7d17804c72f9b8c4700fe4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GitHub - orijtech/structslop: structslop is a static analyzer for Go that recommends struct field rearrangements to provide for maximum space/allocation efficiency.",
    "url": "https://www.reddit.com/r/golang/comments/121pagg/github_orijtechstructslop_structslop_is_a_static/",
    "resume": "",
    "date": "2023-03-25T15:25:04Z",
    "vote": 0
  },
  {
    "id": "7d5617ed03bb5321f61b873ffbc84448",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I think I'm going crazy refactoring my web app",
    "url": "https://www.reddit.com/r/golang/comments/121ln4t/i_think_im_going_crazy_refactoring_my_web_app/",
    "resume": "",
    "date": "2023-03-25T13:19:32Z",
    "vote": 0
  },
  {
    "id": "897b1ebf6d3966b63fa556f748599fd8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Image digest of Go 1.19.7 changed?",
    "url": "https://www.reddit.com/r/golang/comments/121jxa5/image_digest_of_go_1197_changed/",
    "resume": "",
    "date": "2023-03-25T12:08:02Z",
    "vote": 0
  },
  {
    "id": "4731c5b536407af06c0d37b6c578149b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Detect @RD /q /s",
    "url": "https://www.reddit.com/r/golang/comments/121jvs3/detect_rd_q_s/",
    "resume": "",
    "date": "2023-03-25T12:06:14Z",
    "vote": 0
  },
  {
    "id": "6664997aceacaa8e913942fd6e04e1b5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GitHub - go-aie/gptbot: Question Answering Bot powered by OpenAI GPT models.",
    "url": "https://www.reddit.com/r/golang/comments/121jsqo/github_goaiegptbot_question_answering_bot_powered/",
    "resume": "",
    "date": "2023-03-25T12:02:44Z",
    "vote": 0
  },
  {
    "id": "89fa2b3d79da3caf605fcebe52432e42",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Handling auth tokens with a SPA frontend",
    "url": "https://www.reddit.com/r/golang/comments/121iija/handling_auth_tokens_with_a_spa_frontend/",
    "resume": "",
    "date": "2023-03-25T11:06:22Z",
    "vote": 0
  },
  {
    "id": "573a71cb58297b987a9aa173a467eff1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Long form Vs Short form videos",
    "url": "https://www.reddit.com/r/golang/comments/121gqvf/long_form_vs_short_form_videos/",
    "resume": "",
    "date": "2023-03-25T09:37:55Z",
    "vote": 0
  },
  {
    "id": "a1f20c995b01bd6a575d39ca7b887e92",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "My first Golang project )",
    "url": "https://www.reddit.com/r/golang/comments/121enky/my_first_golang_project/",
    "resume": "",
    "date": "2023-03-25T07:44:15Z",
    "vote": 0
  },
  {
    "id": "8449a6132d03cfad90b2e5397982b424",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Connecting to https server with SSL cert",
    "url": "https://www.reddit.com/r/golang/comments/121d60c/connecting_to_https_server_with_ssl_cert/",
    "resume": "",
    "date": "2023-03-25T06:28:44Z",
    "vote": 0
  },
  {
    "id": "b0823e39061b05f012d09fb768598999",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Question about context propagation through the network - Go beginner",
    "url": "https://www.reddit.com/r/golang/comments/121b3n8/question_about_context_propagation_through_the/",
    "resume": "",
    "date": "2023-03-25T04:52:18Z",
    "vote": 0
  },
  {
    "id": "acb961928b9e576d9d65a1e177ac287c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to unit test your database interactions with Docker",
    "url": "https://www.reddit.com/r/golang/comments/1219jri/how_to_unit_test_your_database_interactions_with/",
    "resume": "",
    "date": "2023-03-25T03:46:09Z",
    "vote": 0
  },
  {
    "id": "ff8fd4c74219a7e640e98cab3936097d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang seems overwhelming, any tips",
    "url": "https://www.reddit.com/r/golang/comments/1214myf/golang_seems_overwhelming_any_tips/",
    "resume": "",
    "date": "2023-03-25T00:32:44Z",
    "vote": 0
  },
  {
    "id": "da59573640730d6cd2098e90784c9004",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Good patterns for preventing implementation detail leakage through wrapped errors?",
    "url": "https://www.reddit.com/r/golang/comments/120uw2u/good_patterns_for_preventing_implementation/",
    "resume": "",
    "date": "2023-03-24T19:18:22Z",
    "vote": 0
  },
  {
    "id": "20e4bb8df56c09b71d3567ae9a2f3d03",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I like Go so far...but...",
    "url": "https://www.reddit.com/r/golang/comments/120uuak/i_like_go_so_farbut/",
    "resume": "",
    "date": "2023-03-24T19:17:10Z",
    "vote": 0
  },
  {
    "id": "03525f7bdddebacb8a4947bfda8c5e93",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does go have a better way to handle x.a, x.b, x.c, etc..",
    "url": "https://www.reddit.com/r/golang/comments/120slqu/does_go_have_a_better_way_to_handle_xa_xb_xc_etc/",
    "resume": "",
    "date": "2023-03-24T18:06:04Z",
    "vote": 0
  },
  {
    "id": "0c83b99c6ed82e0b6a8ec3c121f4c2c1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GoCrest v1.0.8 released",
    "url": "https://www.reddit.com/r/golang/comments/120s4ln/gocrest_v108_released/",
    "resume": "",
    "date": "2023-03-24T17:49:59Z",
    "vote": 0
  },
  {
    "id": "7081f2855c42508aff3a501c177c3ad7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Concurrency in Go - A deeper look into Go's runtime scheduler",
    "url": "https://www.reddit.com/r/golang/comments/120q1rr/concurrency_in_go_a_deeper_look_into_gos_runtime/",
    "resume": "",
    "date": "2023-03-24T16:48:19Z",
    "vote": 0
  },
  {
    "id": "bbab1083d9547fd9271f32c2062e3608",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "GoLand 2023.1 Release Candidate Is Out!",
    "url": "https://blog.jetbrains.com/go/2023/03/24/goland-2023-1-release-candidate-is-out/",
    "resume": "GoLand 2023.1 Release Candidate is now available. Please note that to use GoLand 2023.1 RC, you need to have an active subscription or start a 30-day trial. In this build, we have fixed some bugs. We’ve also updated the Code Vision feature.\u0026#160; Please read this Beta 2 blog post if you want to find out [\u0026#8230;]",
    "date": "2023-03-24T16:38:26Z",
    "vote": 0
  },
  {
    "id": "27f5526e9cc938ac65817a5e17d89f8f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Reddit Post Exporter — my first serious project",
    "url": "https://www.reddit.com/r/golang/comments/120msz1/reddit_post_exporter_my_first_serious_project/",
    "resume": "",
    "date": "2023-03-24T14:56:05Z",
    "vote": 0
  },
  {
    "id": "5b65e54d15d13c611360bdce0659e221",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Authentification Microsoft",
    "url": "https://forum.golangbridge.org/t/authentification-microsoft/31109#post_1",
    "resume": " \u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI am a young developer who is trying to create a Go web service for Microsoft authentication in my projects. I am having a lot of trouble finding the right package for this, between the new and old versions, as well as my requirements like \u003ccode\u003egithub.com/AzureAD/microsoft-authentication-library-for-go v0.9.0\u003c/code\u003e which are underlined in warning. I do not understand well and I would need to be guided in the right direction.\u003c/p\u003e\n\u003cp\u003eThank you for your kindness.\u003c/p\u003e ",
    "date": "2023-03-24T14:37:20Z",
    "vote": 0
  },
  {
    "id": "9c1e809c33de3d49806bd50c96fd379d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is Subsequence",
    "url": "https://www.reddit.com/r/golang/comments/120lra8/is_subsequence/",
    "resume": "",
    "date": "2023-03-24T14:19:29Z",
    "vote": 0
  },
  {
    "id": "09b3eed9d52b7cee02435d5fbc2d5c20",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Ultimate config for Go applications",
    "url": "https://www.reddit.com/r/golang/comments/120lia4/ultimate_config_for_go_applications/",
    "resume": "",
    "date": "2023-03-24T14:10:24Z",
    "vote": 0
  },
  {
    "id": "ef1744a2cc439da242cb739cd52982e7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Fun: Switching to Rust, switching to FreeBSD",
    "url": "https://www.reddit.com/r/golang/comments/120ldzr/fun_switching_to_rust_switching_to_freebsd/",
    "resume": "",
    "date": "2023-03-24T14:06:16Z",
    "vote": 0
  },
  {
    "id": "c172a93f5ccaae5778ddb8e0d002a050",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why does os.LookupEnv(\"LANG\") pick the wrong language?",
    "url": "https://forum.golangbridge.org/t/why-does-os-lookupenv-lang-pick-the-wrong-language/31094#post_3",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"Sibert\" data-post=\"1\" data-topic=\"31094\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/letter_avatar_proxy/v4/letter/s/7bcc69/40.png\" class=\"avatar\"\u003e Sibert:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis gives \u003cstrong\u003een_US.UTF-8\u003c/strong\u003e which is far from my computer language setting. How can I get accurate computer default language?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eIt turned out that the terminal in VS Code deliver another result than the raw terminal. So VS Code is to blame in this case. I assumed that VS Code gives a correct result. A special thank you to \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/hollowaykeanho\"\u003e@hollowaykeanho\u003c/a\u003e for enlighten me about this.\u003c/p\u003e ",
    "date": "2023-03-24T10:42:16Z",
    "vote": 0
  },
  {
    "id": "c69ee9ae71f213a658e50511c04d08b2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Fastest way to encode []int8 to bytes hash ?",
    "url": "https://www.reddit.com/r/golang/comments/120fyv6/fastest_way_to_encode_int8_to_bytes_hash/",
    "resume": "",
    "date": "2023-03-24T10:17:20Z",
    "vote": 0
  },
  {
    "id": "3c3de0552d5a5c292926290263e58e01",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What is your opinion about \"argument structs\"?",
    "url": "https://www.reddit.com/r/golang/comments/120fh2n/what_is_your_opinion_about_argument_structs/",
    "resume": "",
    "date": "2023-03-24T09:51:43Z",
    "vote": 0
  },
  {
    "id": "915e992e26f4e806556bf8811a9d730f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "PASETO authentication, auth middleware - and testing them! Part 5 of ON is ready!",
    "url": "https://www.reddit.com/r/golang/comments/120dwi2/paseto_authentication_auth_middleware_and_testing/",
    "resume": "",
    "date": "2023-03-24T08:28:37Z",
    "vote": 0
  },
  {
    "id": "87ff39975a63b1fc3e916f5b8536b66d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Safely Load Environment Variables",
    "url": "https://www.reddit.com/r/golang/comments/120cyyv/safely_load_environment_variables/",
    "resume": "",
    "date": "2023-03-24T07:41:23Z",
    "vote": 0
  },
  {
    "id": "88bb0a23d4d37596eff9ca728ec49828",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why RuneCountInString return invalid length",
    "url": "https://forum.golangbridge.org/t/why-runecountinstring-return-invalid-length/31105#post_2",
    "resume": " \u003cp\u003eHi \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/javacode123\"\u003e@javacode123\u003c/a\u003e,\u003c/p\u003e\n\u003cp\u003eWelcome to the forum.\u003c/p\u003e\n\u003cp\u003eIn the Go Playground, \u003ca href=\"https://go.dev/play/p/e24Tt2S8his\" rel=\"noopener nofollow ugc\"\u003ethe result is 1\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eDid you post the original code that returns 2 on your end?\u003cbr\u003e\nWhat Go version do you use?\u003cbr\u003e\nCan you replicate the wrong result on more than one operating system?\u003c/p\u003e ",
    "date": "2023-03-24T07:09:14Z",
    "vote": 0
  },
  {
    "id": "5645832501c52852140d709b8baeb1b7",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is the below RestAPI auth secure and foolproof?",
    "url": "https://www.reddit.com/r/golang/comments/120bsqe/is_the_below_restapi_auth_secure_and_foolproof/",
    "resume": "",
    "date": "2023-03-24T06:43:00Z",
    "vote": 0
  },
  {
    "id": "07d5d869bbcdd5563e735c3696018130",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Creating structs to format return value",
    "url": "https://www.reddit.com/r/golang/comments/120bq4p/creating_structs_to_format_return_value/",
    "resume": "",
    "date": "2023-03-24T06:39:24Z",
    "vote": 0
  },
  {
    "id": "58527ab1b73b76279d1573195e9d0f97",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Nifty pattern for having a struct with default behavior but allow it to be overriden",
    "url": "https://www.reddit.com/r/golang/comments/120b9se/nifty_pattern_for_having_a_struct_with_default/",
    "resume": "",
    "date": "2023-03-24T06:16:48Z",
    "vote": 0
  },
  {
    "id": "ced505db0ab2c7ecb5a9ef80c299e3f9",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why RuneCountInString return invalid length",
    "url": "https://forum.golangbridge.org/t/why-runecountinstring-return-invalid-length/31105#post_1",
    "resume": " \u003cp\u003et := “\u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/u6709.png?v=12\" title=\":u6709:\" class=\"emoji\" alt=\":u6709:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e”\u003cbr\u003e\nfmt.Println(utf8.RuneCountInString(t)) // 2\u003c/p\u003e ",
    "date": "2023-03-24T06:16:34Z",
    "vote": 0
  },
  {
    "id": "b8e3b7202af9267e9cbb5199f7e52017",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Interior Designers in Chennai",
    "url": "https://forum.golangbridge.org/t/interior-designers-in-chennai/31103#post_1",
    "resume": " \u003cp\u003eD’LIFE is a renowned juggernaut in the world of home interiors. Our tailor-made, cutting-edge style is a perfect reflection of modern lifestyles, spanning across modular kitchens, bedrooms, and living and dining spaces. Over almost two decades, D’LIFE has sharpened our skills to complete over 9000 interior projects, thanks to our talented team of 1000+ employees and top-notch factories. The best part? D’LIFE has thoughtfully positioned 20 experience centres in Bengaluru, Kerala, Chennai, Coimbatore, Mangaluru, Nagassandra and Nagercoil to offer the best possible service to every single customer. For more details, please visit us at - \u003ca href=\"https://dlifeinteriors.com/location/chennai/\" rel=\"noopener nofollow ugc\"\u003eInterior Contractors in Chennai\u003c/a\u003e\u003c/p\u003e ",
    "date": "2023-03-24T05:01:38Z",
    "vote": 0
  },
  {
    "id": "7e75dbdef8d8b5eb6c9e0231b90d4e51",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "A Golang based open-source, self-hosted feature flag application",
    "url": "https://golang.ch/a-golang-based-open-source-self-hosted-feature-flag-application/",
    "resume": "\u003cp\u003eFlipt is an open-source, self-hosted feature flag application that allows you to run experiments across services in\u0026#160;your\u0026#160;environment. Flipt can be deployed within your existing infrastructure so that you don\u0026#8217;t have to worry about your information being sent to a third party or the latency required to communicate across the internet. Usecases Flipt supports use cases [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/a-golang-based-open-source-self-hosted-feature-flag-application/\"\u003eA Golang based open-source, self-hosted feature flag application\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/a-golang-based-open-source-self-hosted-feature-flag-application/\"\u003eA Golang based open-source, self-hosted feature flag application\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-03-24T04:05:17Z",
    "vote": 0
  },
  {
    "id": "b044ed675ad8850b1d53ac8b37631dcf",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What would be most interesting to learn? (testing, instrumenting, interfaces, etc..)",
    "url": "https://www.reddit.com/r/golang/comments/1205s72/what_would_be_most_interesting_to_learn_testing/",
    "resume": "",
    "date": "2023-03-24T02:10:13Z",
    "vote": 0
  },
  {
    "id": "19498f3ec21a7a861cf73267e02bfc42",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "RFID music box written mostly in Go",
    "url": "https://www.reddit.com/r/golang/comments/12053yw/rfid_music_box_written_mostly_in_go/",
    "resume": "",
    "date": "2023-03-24T01:43:29Z",
    "vote": 0
  },
  {
    "id": "f7fc9db085dc8fbeb6fbdee5e8fed611",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Vendored dependencies in libraries",
    "url": "https://www.reddit.com/r/golang/comments/12041d3/vendored_dependencies_in_libraries/",
    "resume": "",
    "date": "2023-03-24T01:02:00Z",
    "vote": 0
  },
  {
    "id": "009ee6f8ebb0c2a6fa9bbc3ed901d5eb",
    "source": {
      "path": "golang",
      "name": "Golang Weekly",
      "url": "https://cprss.s3.amazonaws.com/golangweekly.com.xml"
    },
    "name": "Go on the Xbox?",
    "url": "https://golangweekly.com/issues/453",
    "resume": "\u003ctable border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\"\u003e\n  \u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003cdiv\u003e    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\n\u003ctd align=\"left\" style=\"padding-left: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e#​453 — March 24, 2023\u003c/p\u003e\u003c/td\u003e\n\u003ctd align=\"right\" style=\"padding-right: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137326/rss\" style=\" color: #0099b4;\"\u003eUnsub\u003c/a\u003e  |  \u003ca href=\"https://golangweekly.com/link/137327/rss\" style=\" color: #0099b4;\"\u003eWeb Version\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003c/table\u003e\n    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 12px;  padding-left: 12px;\"\u003e\u003cp\u003eThe \u003cem\u003eGo Weekly\u003c/em\u003e Newsletter\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/137329/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/cr4veozufpexbvtofnav.jpg\" width=\"640\" style=\"    line-height: 100%;       \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137329/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.1em; line-height: 1.4em;\"\u003eMake Your Go Programs Use Less Memory.. Maybe\u003c/a\u003e\u003c/span\u003e — betteralign is a tool to detect structs that would use less memory if their fields were sorted and to then, optionally, sort such fields. It’s a fork of Go’s own \u003ca href=\"https://golangweekly.com/link/137330/rss\" style=\" color: #0099b4;   \"\u003efieldalignment\u003c/a\u003e tool that skips generated or test files, skips specially marked structs, doesn’t drop comments, and similar DX enhancements.\u003c/p\u003e\n  \u003cp\u003eDinko Korunic \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137331/rss\" title=\"bitfieldconsulting.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eImplementing a Generic Set Type\u003c/a\u003e\u003c/span\u003e — To celebrate the first anniversary of generics in Go (Go 1.18 was released in March 2022), John decided to build something useful with them: a generic Set type, complete with useful methods.\u003c/p\u003e\n  \u003cp\u003eJohn Arundel \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003ca href=\"https://golangweekly.com/link/137328/rss\" style=\" color: #0099b4;   \"\u003e\u003cimg src=\"https://copm.s3.amazonaws.com/bcc68a3c.png\" width=\"110\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%;    \"\u003e\u003c/a\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137328/rss\" title=\"www.ardanlabs.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGo! Experts at Your Service\u003c/a\u003e\u003c/span\u003e — Do you need help filling skill gaps, speeding up development \u0026amp; creating high performing software with Go, Docker, K8s, Terraform and Rust? We’ll help you maximize your architecture, structure, tech-debt and human capital.\u003c/p\u003e\n  \u003cp\u003eArdan Labs Consulting \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137332/rss\" title=\"eli.thegreenplace.net\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eThe Power of Single-Method Interfaces\u003c/a\u003e\u003c/span\u003e — Eli shows why single-method interfaces (sometimes called SMIs) can do whatever higher order functions can do and more, and why they provide a more general and powerful approach even if they’re more verbose in some cases.\u003c/p\u003e\n  \u003cp\u003eEli Bendersky \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003cspan\u003e🕹 \u003c/span\u003e \u003ca href=\"https://golangweekly.com/link/137333/rss\" title=\"ebitengine.org\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eEbitengine 2.5: The 2D Game Engine for Go\u003c/a\u003e\u003c/span\u003e — v2.5 of the long standing library includes \u003cstrong\u003einitial, limited Xbox support,\u003c/strong\u003e extra vector drawing functions, improved control over the blending of graphics and colors, and more. \u003ca href=\"https://golangweekly.com/link/137334/rss\" style=\" color: #0099b4;   \"\u003eProject homepage\u003c/a\u003e.\u003c/p\u003e\n  \u003cp\u003eEbitengine Team \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137335/rss\" title=\"build-your-own.org\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003e\u003ccode\u003ea[low:high:max]\u003c/code\u003e — An Uncommon Slice Trick\u003c/a\u003e\u003c/span\u003e — You might be used to seeing a slice like \u003ccode\u003ea[low:high]\u003c/code\u003e but what about one with a \u003cem\u003ethird\u003c/em\u003e index? This third index can be used for setting the capacity of a slice and James quickly shows it off here.\u003c/p\u003e\n  \u003cp\u003eJames Smith \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eIN BRIEF:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGo cryptography expert Filippo Valsorda has outlined \u003ca href=\"https://golangweekly.com/link/137336/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ethe plans around cryptography work in Go 1.21.\u003c/a\u003e It's detailed but essential stuff.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBe aware that GitHub has \u003ca href=\"https://golangweekly.com/link/137337/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003echanged their RSA SSH host key\u003c/a\u003e so you may see a warning when pushing, pulling or cloning.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCongratulations to the \u003ca href=\"https://golangweekly.com/link/137338/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eLondon Gophers group\u003c/a\u003e celebrating their \u003ca href=\"https://golangweekly.com/link/137339/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003etenth anniversary\u003c/a\u003e this week.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePreslav Rachev wonders \u003ca href=\"https://golangweekly.com/link/137340/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ewhy Go hasn't got an equivalent of Spring\u003c/a\u003e (a large scale app framework in the Java world).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137341/rss\" title=\"t.mp\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eReplay 2023: Call for Presenters Is Now Open!\u003c/a\u003e\u003c/span\u003e — It’s our 2nd year of Replay and we want you to be a part of it! Check out our blog post on why you should submit your exciting talk today.\u003c/p\u003e\n  \u003cp\u003eTemporal Technologies \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137342/rss\" title=\"code-pilot.me\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eSynchronization Patterns in Go\u003c/a\u003e\u003c/span\u003e — A concise article that plays a little with mutexes, semaphores, channels, and problems that can occur like race conditions.\u003c/p\u003e\n  \u003cp\u003eNoam Yadgar \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137343/rss\" title=\"dzone.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eHow We Solved an OOM Issue in TiDB with \u003ccode\u003eGOMEMLIMIT\u003c/code\u003e\u003c/a\u003e\u003c/span\u003e — \u003ccode\u003eGOMEMLIMIT\u003c/code\u003e, introduced in Go 1.19, is a variable for setting a soft memory limit for the Go runtime.\u003c/p\u003e\n  \u003cp\u003eXiqian Shao \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137344/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eThe Simplicity of Single-File Go Deployments\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eStephan Schmidt\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e🛠 Code \u0026amp; Tools\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137345/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eParticiple 2.0: A Simple Parser Package\u003c/a\u003e\u003c/span\u003e — Aims to provide a straightforward and idiomatic way to define parsers in Go using a familiar approach of using struct field tags to define a grammar, so if you’ve used \u003ccode\u003eencoding/json\u003c/code\u003e before, you’re well on your way.\u003c/p\u003e\n  \u003cp\u003eAlec Thomas \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137346/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ev8go 0.9.0: Execute JavaScript from Go\u003c/a\u003e\u003c/span\u003e — Lets you create V8 contexts and run code \u003ccode\u003eeval\u003c/code\u003e-style. v0.9 updates the V8 versions supported (10.9 and 11.1).\u003c/p\u003e\n  \u003cp\u003eRoger Chapman \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137347/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGo OpenAI: Use OpenAI's APIs from Go\u003c/a\u003e\u003c/span\u003e — Provides access to ChatGPT, GPT-3, GPT-4, DALL-E, and Whisper. Formerly known as \u003ccode\u003ego-gpt3\u003c/code\u003e.\u003c/p\u003e\n  \u003cp\u003eSasha Baranov \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137348/rss\" title=\"goteleport.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eO’Reilly’s Identity-Native Infrastructure Access for Kubernetes\u003c/a\u003e\u003c/span\u003e — Get your free copy to learn about identity-based infrastructure access and how it differs from secret-based approaches.\u003c/p\u003e\n  \u003cp\u003eTELEPORT | goteleport․com \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137349/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ehot-reload: Hot Reload Development for Go in Docker Containers\u003c/a\u003e\u003c/span\u003e — Just a bit of configuration, and you’re off. (Also, we love that a hospital open-sourced this.)\u003c/p\u003e\n  \u003cp\u003eDepartement of Clinical Research, University Hospital Basel \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137350/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eFrenzy: Postgres Wire Protocol Aware Mirroring Proxy\u003c/a\u003e\u003c/span\u003e — It’s early days for this Go-based Postgres proxy, but it’s fun to see something at this stage that does actually work and may be useful if you need to build something similar of your own.. \u003cem\u003e“It’s suuuuuper hacky but in 2 hours of work I was able to proxy some queries!”\u003c/em\u003e\u003c/p\u003e\n  \u003cp\u003eKelly Sommers \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137351/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eChroma 2.7\u003c/a\u003e\u003cbr\u003e\n↳ Pure Go general purpose syntax highlighter.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137352/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eListmonk 2.4\u003c/a\u003e\u003cbr\u003e\n↳ Newsletter and mailing list manager.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137353/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGo Micro 4.10\u003c/a\u003e\u003cbr\u003e\n↳ Microservices framework.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137354/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGitea 1.19\u003c/a\u003e\u003cbr\u003e\n↳ Go-powered self-hosted Git forge.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137355/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eSSE 2.10\u003c/a\u003e\u003cbr\u003e\n↳ Server Sent Events server and client library.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137356/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ego-github 50.2\u003c/a\u003e\u003cbr\u003e\n↳ GitHub API v3 client library.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137357/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eWish 1.1\u003c/a\u003e\u003cbr\u003e\n↳ Build custom SSH server apps.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137358/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eLog 0.2\u003c/a\u003e\u003cbr\u003e\n↳ Minimal, colorful logging library.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 0px;  padding-left: 0px;\"\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eJobs\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137359/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eSite Reliability Engineer\u003c/a\u003e\u003c/span\u003e — Join our \"kick ass\" team. Our software team operates from 17 countries and we're always looking for more exceptional engineers.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eSticker Mule\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137360/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eFind a Job Through Hired\u003c/a\u003e\u003c/span\u003e — Hired makes job hunting easy-instead of chasing recruiters, companies approach you with salary details up front. Create a free profile now.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eHired\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e🧑‍💻 Got a job listing to share? \u003cem\u003e\u003ca href=\"https://golangweekly.com/link/137361/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eHere's how\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003e🕰 ICYMI\u003c/strong\u003e \u003cem\u003e(Older stuff we may have missed...)\u003c/em\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eJonathan Hall shows us \u003ca href=\"https://golangweekly.com/link/137362/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003e▶️ how to bootstrap a Go project for CI/CD with GitLab\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA benchmark from Markus Wüstenberg extolls \u003ca href=\"https://golangweekly.com/link/137363/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ethe production virtues of SQLite performance\u003c/a\u003e in Go.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDerek Parker looks at \u003ca href=\"https://golangweekly.com/link/137364/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ehow debugging Go programs with Delve and EBPF\u003c/a\u003e \"is faster\" (than ptrace).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA golden-oldie \u003ca href=\"https://golangweekly.com/link/137365/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003e▶️ 20-minute talk from Bryan Boreham\u003c/a\u003e on how to measure the performance of your Go code, garbage collection, and reducing memory allocations.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eKevin Kelche shares a diagram heavy explanation of \u003ca href=\"https://golangweekly.com/link/137366/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ehow the runtime scheduler works\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n  \u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n\n\n\n\u003cimg src=\"https://golangweekly.com/open/453/rss\" width=\"1\" height=\"1\" /\u003e",
    "date": "2023-03-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "582a10b3ea0ba52b70767f56d43091e5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Reason I like Go",
    "url": "https://www.reddit.com/r/golang/comments/120274o/reason_i_like_go/",
    "resume": "",
    "date": "2023-03-23T23:54:56Z",
    "vote": 0
  },
  {
    "id": "c65b6a3501619c5718697063f9d5ba37",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is passing a child struct to a child struct wrong AND evil?",
    "url": "https://www.reddit.com/r/golang/comments/1201vby/is_passing_a_child_struct_to_a_child_struct_wrong/",
    "resume": "",
    "date": "2023-03-23T23:42:29Z",
    "vote": 0
  },
  {
    "id": "9411135d4d054113da1412fb4e6be378",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "When to mock and what to mock in a Web API?",
    "url": "https://www.reddit.com/r/golang/comments/1201dd0/when_to_mock_and_what_to_mock_in_a_web_api/",
    "resume": "",
    "date": "2023-03-23T23:24:15Z",
    "vote": 0
  },
  {
    "id": "8af1e95cb8f969650eb96fe2537eb8c6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Gorss v0.4 released",
    "url": "https://www.reddit.com/r/golang/comments/11zzhoa/gorss_v04_released/",
    "resume": "",
    "date": "2023-03-23T22:17:25Z",
    "vote": 0
  },
  {
    "id": "df48db3d9455868c7da4876b5d64a566",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "cariddi v1.3.1 is out🥳",
    "url": "https://www.reddit.com/r/golang/comments/11zv0xz/cariddi_v131_is_out/",
    "resume": "",
    "date": "2023-03-23T19:44:48Z",
    "vote": 0
  },
  {
    "id": "2912f4a8265cf51104c78a971ab84162",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Planning Go 1.21 Cryptography Work",
    "url": "https://www.reddit.com/r/golang/comments/11zuvoo/planning_go_121_cryptography_work/",
    "resume": "",
    "date": "2023-03-23T19:39:22Z",
    "vote": 0
  },
  {
    "id": "ca5000dec61ee0725cad9ee6479fb844",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A Go implementation of the Delta Lake Transaction Log Protocol.",
    "url": "https://www.reddit.com/r/golang/comments/11zql6w/a_go_implementation_of_the_delta_lake_transaction/",
    "resume": "",
    "date": "2023-03-23T17:05:51Z",
    "vote": 0
  },
  {
    "id": "27ee747e5ed642e835bb143a677fec12",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Gomaxprocs in k8s with vpa",
    "url": "https://www.reddit.com/r/golang/comments/11zptkf/gomaxprocs_in_k8s_with_vpa/",
    "resume": "",
    "date": "2023-03-23T16:39:04Z",
    "vote": 0
  },
  {
    "id": "65bac5e69907dad6352ec7700af0cf3a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Where Is the Spring Framework for Go?",
    "url": "https://www.reddit.com/r/golang/comments/11zpr5s/where_is_the_spring_framework_for_go/",
    "resume": "",
    "date": "2023-03-23T16:36:37Z",
    "vote": 0
  },
  {
    "id": "64102408515c3ba580cd821e9ad5db74",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hacking with Go: Part 4",
    "url": "https://changelog.com/gotime/270",
    "resume": "Our “Hacking with Go” series continues! This time Natalie \u0026 Johnny are joined by Ivan Kwiatkowski \u0026 Juan Andrés Guerrero-Saade and the conversation is we’re focused around generics and AI.",
    "date": "2023-03-23T16:30:00Z",
    "vote": 0
  },
  {
    "id": "88a78e2640b56bbf9b0c1dd5114cc4ae",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "New Xcode plugin for highlighting Go syntax",
    "url": "https://www.reddit.com/r/golang/comments/11zp1es/new_xcode_plugin_for_highlighting_go_syntax/",
    "resume": "",
    "date": "2023-03-23T16:11:01Z",
    "vote": 0
  },
  {
    "id": "de500f531341b1dc37c98a1c25c8d1ff",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Would this be a useful feature?",
    "url": "https://www.reddit.com/r/golang/comments/11znw46/would_this_be_a_useful_feature/",
    "resume": "",
    "date": "2023-03-23T15:31:07Z",
    "vote": 0
  },
  {
    "id": "f39cc36c6a58e5df8cf3745eb5f395f0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Announcing Atlas v0.10: Cloud Community Preview",
    "url": "https://www.reddit.com/r/golang/comments/11zl1cw/announcing_atlas_v010_cloud_community_preview/",
    "resume": "",
    "date": "2023-03-23T13:50:29Z",
    "vote": 0
  },
  {
    "id": "9687b6f087e22758c89628a3a0274b1a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why does os.LookupEnv(\"LANG\") pick the wrong language?",
    "url": "https://forum.golangbridge.org/t/why-does-os-lookupenv-lang-pick-the-wrong-language/31094#post_2",
    "resume": " \u003cp\u003eFor Posix, a convention seems to be to use any of these environment variables, so maybe check for some other ones:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLANGUAGE\u003c/li\u003e\n\u003cli\u003eLC_ALL\u003c/li\u003e\n\u003cli\u003eLC_MESSAGES, LC_NUMERIC, LC_TIME, LC_COLLATE, and others\u003c/li\u003e\n\u003cli\u003eLANG\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e(\u003ca href=\"https://stackoverflow.com/a/43935417\" rel=\"noopener nofollow ugc\"\u003eSource\u003c/a\u003e)\u003c/p\u003e\n\u003cp\u003eOn Windows, I see LC_CTYPE=“en_US.UTF-8”, but there’s also a Windows API function to get that information: \u003ca href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-getsystemdefaultuilanguage\" rel=\"noopener nofollow ugc\"\u003eGetSystemDefaultUILanguage\u003c/a\u003e.  I’m not sure if there’s an equivalent for other OSes\u003c/p\u003e ",
    "date": "2023-03-23T13:34:10Z",
    "vote": 0
  },
  {
    "id": "8c0f527feda88ba7c9c5ab6ad6178a53",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "defaults on parsing",
    "url": "https://www.reddit.com/r/golang/comments/11zir60/defaults_on_parsing/",
    "resume": "",
    "date": "2023-03-23T12:25:14Z",
    "vote": 0
  },
  {
    "id": "255b79641816e1da0f1e6f6131528dae",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to Hire Mobile App Developers in Los Angeles",
    "url": "https://forum.golangbridge.org/t/how-to-hire-mobile-app-developers-in-los-angeles/31096#post_1",
    "resume": " \u003cp\u003eYou’re in luck if you want to \u003cstrong\u003e\u003ca href=\"https://devtechnosys.com/hire-mobile-app-developers.php\" rel=\"noopener nofollow ugc\"\u003ehire dedicated mobile app developers\u003c/a\u003e\u003c/strong\u003e in Los Angeles. The city is home to a vibrant tech scene with a large pool of talented developers specializing in App Development. However, with so many options available, it can be overwhelming to know where to start. In this guide, we’ll provide tips to help you find the right app developer for your needs.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDefine Your Needs\u003c/strong\u003e\u003cbr\u003e\nBefore you search for Mobile App developers, it’s important to define your needs. What kind of project are you working on? What are your specific requirements? By clearly understanding what you need, you’ll be able to narrow down your search to developers with experience in the areas that are most important to you.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCheck Portfolios and Reviews\u003c/strong\u003e\u003cbr\u003e\nWhen looking for App developers in Los Angeles, checking their portfolios and reviews is important. A portfolio will give you an idea of the projects they’ve worked on and their level of expertise. Reviews from previous clients will give you an idea of their work ethic, communication skills, and overall professionalism.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAssess Communication Skills\u003c/strong\u003e\u003cbr\u003e\nCommunication is key when it comes to working with a developer. You want to ensure that you hire someone who can communicate clearly and effectively and is responsive to your needs. When interviewing potential candidates, pay attention to how they communicate with you. Do they listen carefully to your needs and ask questions to clarify their understanding? Are they prompt in their responses?\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConsider Availability and Timezone\u003c/strong\u003e\u003cbr\u003e\nWhen working with a developer, it’s important to consider their availability and timezone. If you’re based in Los Angeles, you’ll want to hire someone who is in a similar timezone so that you can communicate in real time. You’ll also want to ensure the developer is available to meet your project deadlines.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUse Job Boards and Networking\u003c/strong\u003e\u003cbr\u003e\nJob boards and networking can be a great way to find Mobile App developers in Los Angeles. Platforms like LinkedIn, Upwork, and \u003ca href=\"http://Freelancer.com\" rel=\"noopener nofollow ugc\"\u003eFreelancer.com\u003c/a\u003e are great places to start. You can also check local job boards, attend tech meetups and conferences, or contact your network to see if anyone has recommendations.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConduct Interviews\u003c/strong\u003e\u003cbr\u003e\nOnce you’ve narrowed your list of potential candidates, it’s time to conduct interviews. It is your chance to get to know the developer and assess their skills and experience. Prepare a list of questions in advance, and be sure to ask about their experience with communication skills, and availability.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConsider Working with an Agency\u003c/strong\u003e\u003cbr\u003e\nIf you’re struggling to find the right App developer, consider working with an agency. An agency can help you find qualified candidates, conduct interviews, and manage your hiring process. It can save you time and help you find the right developer for your needs.\u003c/p\u003e ",
    "date": "2023-03-23T11:37:39Z",
    "vote": 0
  },
  {
    "id": "8ac413d009c60535768ac199fd7188ef",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Oncevery: A simple Go pkg to run a function lazily every specific duration and returns the result with every `Pull`.",
    "url": "https://www.reddit.com/r/golang/comments/11zhcaz/oncevery_a_simple_go_pkg_to_run_a_function_lazily/",
    "resume": "",
    "date": "2023-03-23T11:22:29Z",
    "vote": 0
  },
  {
    "id": "b1df580b5e2cbb777954bad3491f2c20",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why is b2s is slower than an alloc?",
    "url": "https://www.reddit.com/r/golang/comments/11zg78y/why_is_b2s_is_slower_than_an_alloc/",
    "resume": "",
    "date": "2023-03-23T10:30:37Z",
    "vote": 0
  },
  {
    "id": "9fc659b8970ae047bb40f6b8c2cce4cd",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Creating orderbook Using VueJs and Go",
    "url": "https://www.reddit.com/r/golang/comments/11zffn2/creating_orderbook_using_vuejs_and_go/",
    "resume": "",
    "date": "2023-03-23T09:54:56Z",
    "vote": 0
  },
  {
    "id": "3a4c5ae719fb87cc9b13b9c6062d4cd4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Free as in freedom, open source Google Analytics alternative written in Go",
    "url": "https://www.reddit.com/r/golang/comments/11zfd9f/free_as_in_freedom_open_source_google_analytics/",
    "resume": "",
    "date": "2023-03-23T09:51:22Z",
    "vote": 0
  },
  {
    "id": "c670ce11c787a96270ccf30f7f5994c1",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Why does os.LookupEnv(\"LANG\") pick the wrong language?",
    "url": "https://forum.golangbridge.org/t/why-does-os-lookupenv-lang-pick-the-wrong-language/31094#post_1",
    "resume": " \u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\ts, _ := os.LookupEnv(\"LANG\")\n\tfmt.Println(s)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis gives \u003cstrong\u003een_US.UTF-8\u003c/strong\u003e which is far from my computer language setting. How can I get accurate computer language?\u003c/p\u003e ",
    "date": "2023-03-23T09:35:34Z",
    "vote": 0
  },
  {
    "id": "028580658a994087682ac74b19ef64f5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to extract single return value inline from a function",
    "url": "https://www.reddit.com/r/golang/comments/11zf2bb/how_to_extract_single_return_value_inline_from_a/",
    "resume": "",
    "date": "2023-03-23T09:35:31Z",
    "vote": 0
  },
  {
    "id": "3366c7c5b0d59e1d34f0488fee639f68",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Write a Microservice in Golang with MongoDB from scratch",
    "url": "https://www.reddit.com/r/golang/comments/11zeore/write_a_microservice_in_golang_with_mongodb_from/",
    "resume": "",
    "date": "2023-03-23T09:17:00Z",
    "vote": 0
  },
  {
    "id": "e5fa41634f9208ea0116fffd7d167132",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang Weekly Issue 452: March 17, 2023",
    "url": "https://www.reddit.com/r/golang/comments/11zdvi2/golang_weekly_issue_452_march_17_2023/",
    "resume": "",
    "date": "2023-03-23T08:35:40Z",
    "vote": 0
  },
  {
    "id": "2bac8b84253e346b8914181ba81882a5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Running a Js file inside Go",
    "url": "https://www.reddit.com/r/golang/comments/11zdci2/running_a_js_file_inside_go/",
    "resume": "",
    "date": "2023-03-23T08:08:50Z",
    "vote": 0
  },
  {
    "id": "fa383ce1d960fcf509f3ebddfbf56c5f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Looking to learn more of Go, does it require third party libraries like Spring/ASP.NET, etc?",
    "url": "https://www.reddit.com/r/golang/comments/11z7la9/looking_to_learn_more_of_go_does_it_require_third/",
    "resume": "",
    "date": "2023-03-23T03:40:37Z",
    "vote": 0
  },
  {
    "id": "1b0b5804d0fce22ff8974d56ae58df67",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to hide Go standard library package suggestions when using 'go run' and TAB in terminal?",
    "url": "https://www.reddit.com/r/golang/comments/11z6nag/how_to_hide_go_standard_library_package/",
    "resume": "",
    "date": "2023-03-23T03:02:38Z",
    "vote": 0
  },
  {
    "id": "84ab7dbf9fbce2e5de7711238b17286e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How We Solved an OOM Issue in TiDB with GOMEMLIMIT",
    "url": "https://www.reddit.com/r/golang/comments/11z5ppk/how_we_solved_an_oom_issue_in_tidb_with_gomemlimit/",
    "resume": "",
    "date": "2023-03-23T02:26:12Z",
    "vote": 0
  },
  {
    "id": "fd6be5ccce8ffb1cf54879f20fa78b8a",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Are there any advantages to private repos in GitLab vs GitHub in the Go workflow?",
    "url": "https://www.reddit.com/r/golang/comments/11z5h9d/are_there_any_advantages_to_private_repos_in/",
    "resume": "",
    "date": "2023-03-23T02:17:23Z",
    "vote": 0
  },
  {
    "id": "c1f8cab852093088807af7578e14aec9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Tarmac new release v0.4.0 - Microservices with WebAssembly Functions",
    "url": "https://www.reddit.com/r/golang/comments/11z495j/tarmac_new_release_v040_microservices_with/",
    "resume": "",
    "date": "2023-03-23T01:30:20Z",
    "vote": 0
  },
  {
    "id": "8dbded32f844beb71e901a5b01ed3cb3",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go build output zip file says it is invalid",
    "url": "https://www.reddit.com/r/golang/comments/11z2fuk/go_build_output_zip_file_says_it_is_invalid/",
    "resume": "",
    "date": "2023-03-23T00:22:53Z",
    "vote": 0
  },
  {
    "id": "1b414c12cb204f462e7d5e7114054676",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Confused by contexts.",
    "url": "https://www.reddit.com/r/golang/comments/11yze5h/confused_by_contexts/",
    "resume": "",
    "date": "2023-03-22T22:36:31Z",
    "vote": 0
  },
  {
    "id": "3c5b08fa4fae1bb437e06856b319e391",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to Authenticate a CLI Using OAuth and GitHub in Golang",
    "url": "https://www.reddit.com/r/golang/comments/11yz2in/how_to_authenticate_a_cli_using_oauth_and_github/",
    "resume": "",
    "date": "2023-03-22T22:25:40Z",
    "vote": 0
  },
  {
    "id": "b6dda0ff470f8f7b9940d9055fde523b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Optimism | Get free $OP | drop right now!",
    "url": "https://www.reddit.com/r/golang/comments/11yveix/optimism_get_free_op_drop_right_now/",
    "resume": "",
    "date": "2023-03-22T20:23:40Z",
    "vote": 0
  },
  {
    "id": "eeabf734e3873e3de1eb19b6affe1c42",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Cfnctl - Terraform cli experience for AWS Cloudformation",
    "url": "https://www.reddit.com/r/golang/comments/11yv7op/cfnctl_terraform_cli_experience_for_aws/",
    "resume": "",
    "date": "2023-03-22T20:17:11Z",
    "vote": 0
  },
  {
    "id": "376ea64bf0d586118d7ce91a4684d8d4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "calculator modules in go",
    "url": "https://www.reddit.com/r/golang/comments/11ytjxh/calculator_modules_in_go/",
    "resume": "",
    "date": "2023-03-22T19:21:38Z",
    "vote": 0
  },
  {
    "id": "869b78900cbf20c694138ca7236ad12d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "With Go 20, are enums now safe to directly compare and equality check across the vendor/ boundary?",
    "url": "https://www.reddit.com/r/golang/comments/11yrpba/with_go_20_are_enums_now_safe_to_directly_compare/",
    "resume": "",
    "date": "2023-03-22T18:20:55Z",
    "vote": 0
  },
  {
    "id": "a41d4144d33b7a77d65e6edbe9688de5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "betteralign - structs field alignment static analyzer for Go",
    "url": "https://www.reddit.com/r/golang/comments/11yr3lh/betteralign_structs_field_alignment_static/",
    "resume": "",
    "date": "2023-03-22T18:01:42Z",
    "vote": 0
  },
  {
    "id": "ea933d3aba56e8eced6f515efce93ec0",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Using genproto to generate our Go SDK from existing protobuf defs",
    "url": "https://www.reddit.com/r/golang/comments/11yqd64/using_genproto_to_generate_our_go_sdk_from/",
    "resume": "",
    "date": "2023-03-22T17:37:22Z",
    "vote": 0
  },
  {
    "id": "41575e6c6aef7c634ee6db6c8dde844e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "GitHub - go-skynet/llama-cli: self-hosted, Simple LLaMA/alpaca API \u0026 CLI written in go",
    "url": "https://www.reddit.com/r/golang/comments/11yqagr/github_goskynetllamacli_selfhosted_simple/",
    "resume": "",
    "date": "2023-03-22T17:34:52Z",
    "vote": 0
  },
  {
    "id": "08f798f261cd190c5f596470517d2d9e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Creating an API",
    "url": "https://www.reddit.com/r/golang/comments/11yp3w0/creating_an_api/",
    "resume": "",
    "date": "2023-03-22T16:57:05Z",
    "vote": 0
  },
  {
    "id": "29e1c0fe102c0f41c42d8ec06e5f4cbc",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "help converting int32 to []byte with unsafe",
    "url": "https://www.reddit.com/r/golang/comments/11yohr2/help_converting_int32_to_byte_with_unsafe/",
    "resume": "",
    "date": "2023-03-22T16:36:33Z",
    "vote": 0
  },
  {
    "id": "82023987e6d704c048a84118bd535e38",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Celebrating 25 Years of cURL! 🎂",
    "url": "https://www.reddit.com/r/golang/comments/11ynji4/celebrating_25_years_of_curl/",
    "resume": "",
    "date": "2023-03-22T16:04:28Z",
    "vote": 0
  },
  {
    "id": "82620783a0c3e3b14c5016518812d5a9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Network Error Handling",
    "url": "https://www.reddit.com/r/golang/comments/11ylxyo/network_error_handling/",
    "resume": "",
    "date": "2023-03-22T15:09:50Z",
    "vote": 0
  },
  {
    "id": "34d94a51639c817a168eb9cfc3104011",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "logtail api client for go",
    "url": "https://www.reddit.com/r/golang/comments/11yl5e1/logtail_api_client_for_go/",
    "resume": "",
    "date": "2023-03-22T14:42:41Z",
    "vote": 0
  },
  {
    "id": "980797cfb6d820c79cc3b1e47d623849",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Golang Webapp",
    "url": "https://www.reddit.com/r/golang/comments/11yjn5o/golang_webapp/",
    "resume": "",
    "date": "2023-03-22T13:47:44Z",
    "vote": 0
  },
  {
    "id": "c2464aec73a772162951129d5aee9649",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "OpenZiti test kitchen go-http",
    "url": "https://www.reddit.com/r/golang/comments/11yhfjz/openziti_test_kitchen_gohttp/",
    "resume": "",
    "date": "2023-03-22T12:22:39Z",
    "vote": 0
  },
  {
    "id": "f6bd44602bec56987448e956e2009a31",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Generics: Making Go more Pythonic?",
    "url": "https://www.reddit.com/r/golang/comments/11yh4i4/generics_making_go_more_pythonic/",
    "resume": "",
    "date": "2023-03-22T12:10:52Z",
    "vote": 0
  },
  {
    "id": "3182b7539b7ff9c2612e9d503d4f1392",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Need some suggestions or a rodemap",
    "url": "https://www.reddit.com/r/golang/comments/11ybdv7/need_some_suggestions_or_a_rodemap/",
    "resume": "",
    "date": "2023-03-22T07:56:09Z",
    "vote": 0
  },
  {
    "id": "e43616ce025b5b9788866cd1aa70658c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "github.com/cardrank/cardrank v0.11.0: poker hand evaluator",
    "url": "https://www.reddit.com/r/golang/comments/11y6ejx/githubcomcardrankcardrank_v0110_poker_hand/",
    "resume": "",
    "date": "2023-03-22T04:08:37Z",
    "vote": 0
  },
  {
    "id": "a660b9c5efc05c0f8bdc22e72fe11b0e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Synchronize / generate enums from a SQL table",
    "url": "https://www.reddit.com/r/golang/comments/11y15vk/synchronize_generate_enums_from_a_sql_table/",
    "resume": "",
    "date": "2023-03-22T00:49:10Z",
    "vote": 0
  },
  {
    "id": "a3daa596616c1479a9ddee1e7630826c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Writing unit tests for an a library that needs to perform internet related tasks?",
    "url": "https://www.reddit.com/r/golang/comments/11xx3al/writing_unit_tests_for_an_a_library_that_needs_to/",
    "resume": "",
    "date": "2023-03-21T22:27:02Z",
    "vote": 0
  },
  {
    "id": "ba8c4727a4ea111bf2db5948de1d110e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Subarashi golang pooling with connectors",
    "url": "https://www.reddit.com/r/golang/comments/11xpzzm/subarashi_golang_pooling_with_connectors/",
    "resume": "",
    "date": "2023-03-21T18:38:06Z",
    "vote": 0
  },
  {
    "id": "5c0b45f9996b6b80cc012e0a75b6c9b5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Moderation on Command-Line GPT Clients",
    "url": "https://www.reddit.com/r/golang/comments/11xp8p6/moderation_on_commandline_gpt_clients/",
    "resume": "",
    "date": "2023-03-21T18:13:31Z",
    "vote": 0
  },
  {
    "id": "3bdf4626e0ff853794b6b286a5f1d243",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Open source alternative to MongoDB Atlas written in Go",
    "url": "https://www.reddit.com/r/golang/comments/11xoiac/open_source_alternative_to_mongodb_atlas_written/",
    "resume": "",
    "date": "2023-03-21T17:49:54Z",
    "vote": 0
  },
  {
    "id": "9a29899110d6d37bffefe7772ce5bc76",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Learn Web Servers in Go! a free course launch",
    "url": "https://www.reddit.com/r/golang/comments/11xnl5g/learn_web_servers_in_go_a_free_course_launch/",
    "resume": "",
    "date": "2023-03-21T17:19:01Z",
    "vote": 0
  },
  {
    "id": "3e6108cc09bf4c9aa6769e8ac6c90e8d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_11",
    "resume": " \u003cp\u003e(post deleted by author)\u003c/p\u003e ",
    "date": "2023-03-21T17:03:57Z",
    "vote": 0
  },
  {
    "id": "aa3d17eb7577f5492b9e4c872df75298",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to cleanup request.Body from Trailing headers?",
    "url": "https://www.reddit.com/r/golang/comments/11xn0k5/how_to_cleanup_requestbody_from_trailing_headers/",
    "resume": "",
    "date": "2023-03-21T17:00:33Z",
    "vote": 0
  },
  {
    "id": "dc3688447f1e159d5fe9f5e84ae36f90",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "The Go Learning Path - Request for Feedback!",
    "url": "https://www.reddit.com/r/golang/comments/11xmusn/the_go_learning_path_request_for_feedback/",
    "resume": "",
    "date": "2023-03-21T16:55:06Z",
    "vote": 0
  },
  {
    "id": "dcf6d1420f056ab7e54c9003ed219a2d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Go Playground Improved",
    "url": "https://www.reddit.com/r/golang/comments/11xm4hn/go_playground_improved/",
    "resume": "",
    "date": "2023-03-21T16:31:06Z",
    "vote": 0
  },
  {
    "id": "b429d89b80f41a9162986dd828bd8c67",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Portal: a CLI file transfer utility from any computer to another 🌌",
    "url": "https://www.reddit.com/r/golang/comments/11xl48w/portal_a_cli_file_transfer_utility_from_any/",
    "resume": "",
    "date": "2023-03-21T15:58:46Z",
    "vote": 0
  },
  {
    "id": "c9776049ffedccf70fc6c96dd03d3d48",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "gptc - Supercharge your CLI with OpenAI's GPT model, written by GPT-4",
    "url": "https://www.reddit.com/r/golang/comments/11xkzpx/gptc_supercharge_your_cli_with_openais_gpt_model/",
    "resume": "",
    "date": "2023-03-21T15:54:36Z",
    "vote": 0
  },
  {
    "id": "1ba956a213e9af7a497172f90944d22c",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Generics stability",
    "url": "https://www.reddit.com/r/golang/comments/11xknf8/generics_stability/",
    "resume": "",
    "date": "2023-03-21T15:43:28Z",
    "vote": 0
  },
  {
    "id": "c8b7616735d6481d2fcebd96fde37395",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "accio: track dev dependencies",
    "url": "https://www.reddit.com/r/golang/comments/11xke0m/accio_track_dev_dependencies/",
    "resume": "",
    "date": "2023-03-21T15:34:45Z",
    "vote": 0
  },
  {
    "id": "6b3e1098581a653c31cfd8a983338ed4",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "We just migrated our Open Source Terraform Cloud alternative from Python to Golang - looking for feedback!",
    "url": "https://www.reddit.com/r/golang/comments/11xk06u/we_just_migrated_our_open_source_terraform_cloud/",
    "resume": "",
    "date": "2023-03-21T15:21:23Z",
    "vote": 0
  },
  {
    "id": "0bb02fb1d6ec5a79c56c7f37fb990ae1",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to use AnyCable-Go: building a phone call monitoring app with Hanami to analyze Twilio streams, see calls in real-time, and “peek” at them—with real-time transcripts of what’s been said.",
    "url": "https://www.reddit.com/r/golang/comments/11xjoni/how_to_use_anycablego_building_a_phone_call/",
    "resume": "",
    "date": "2023-03-21T15:10:14Z",
    "vote": 0
  },
  {
    "id": "59c1cbc2beed9094dcb1d75025a641b6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "tempwd: a really simple golang package for temporarily change your directory",
    "url": "https://www.reddit.com/r/golang/comments/11xirmf/tempwd_a_really_simple_golang_package_for/",
    "resume": "",
    "date": "2023-03-21T14:38:19Z",
    "vote": 0
  },
  {
    "id": "30ca2a25cf6ba3a0151a2dce2ea2eb99",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What have you been up to the last few months?!",
    "url": "https://www.reddit.com/r/golang/comments/11xiqzp/what_have_you_been_up_to_the_last_few_months/",
    "resume": "",
    "date": "2023-03-21T14:37:40Z",
    "vote": 0
  },
  {
    "id": "5d3f6f030589d1d36e5b6cf56a3af307",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_10",
    "resume": " \u003cp\u003eThat error seems to indicate that you’re scanning your \u003ccode\u003etitles\u003c/code\u003e column into your \u003ccode\u003e\u0026amp;job.Date\u003c/code\u003e field.  I would recommend instead of writing \u003ccode\u003eselect * from ...\u003c/code\u003e that you select the columns explicitly so that adding/removing/reordering columns in the future is less likely to produce errors like these.\u003c/p\u003e ",
    "date": "2023-03-21T14:29:12Z",
    "vote": 0
  },
  {
    "id": "1d358d0ed2cf6f648752b6528f92afce",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_9",
    "resume": " \u003cp\u003esorry i just saw this in debugging\u003c/p\u003e\n\u003cp\u003e2023/03/21 17:25:21 Error scanning job from database: sql: Scan error on column index 3, name “titles”: unsupported Scan, storing driver.Value type string into type *time.Time\u003c/p\u003e ",
    "date": "2023-03-21T14:26:50Z",
    "vote": 0
  },
  {
    "id": "46c2759876000c2162319a351504de71",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_8",
    "resume": " \u003cp\u003eSorry, \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/coding_yaz\"\u003e@Coding_Yaz\u003c/a\u003e, I’m having a hard time understanding:\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003elog.Print\u003c/code\u003e change I suggested wasn’t to fix an issue, it was just to get more information about the cause of the SQL statement failing.  Did you see an error and make a change to address it, or are you saying that after adding a call to \u003ccode\u003elog.Print\u003c/code\u003e, now you’re \u003cem\u003enot\u003c/em\u003e getting an error, but the site is somehow hanging?  Are you getting any output to your console when you run your Go program?\u003c/p\u003e\n\u003caside class=\"quote no-group\" data-username=\"Coding_Yaz\" data-post=\"7\" data-topic=\"31081\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/coding_yaz/40/11492_2.png\" class=\"avatar\"\u003e Coding_Yaz:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eblank page but 200 freezes\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI’m not sure what you mean here:  Are you getting a blank page and/or a 200 response, or is the page “freezing?”  I would think “freezing” means that you’re \u003cem\u003enot\u003c/em\u003e getting a response at all; is that happening?  Or are you perhaps running some client-side javascript that’s supposed to do something with the response but it’s freezing?\u003c/p\u003e ",
    "date": "2023-03-21T14:24:44Z",
    "vote": 0
  },
  {
    "id": "4a70b19a506ca2710bf53cb95a09c3a9",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How I structure idiomatic go services using domain-driven design",
    "url": "https://www.reddit.com/r/golang/comments/11xie58/how_i_structure_idiomatic_go_services_using/",
    "resume": "",
    "date": "2023-03-21T14:24:37Z",
    "vote": 0
  },
  {
    "id": "3bc252e9a1d0ce5cd7473a3eeb54d86d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_7",
    "resume": " \u003cp\u003eValues ​​are not coming when I get it, blank page but 200 freezes\u003c/p\u003e ",
    "date": "2023-03-21T14:15:02Z",
    "vote": 0
  },
  {
    "id": "451b29a5aeb5494d7ee143455a95500a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_6",
    "resume": " \u003cp\u003eCan you clarify which values are empty?\u003c/p\u003e ",
    "date": "2023-03-21T14:14:09Z",
    "vote": 0
  },
  {
    "id": "a3469486bb3fb60dc950ca8f305e83b8",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Visualizing Kubernetes traffic, the non-invasive way",
    "url": "https://www.reddit.com/r/golang/comments/11xi38p/visualizing_kubernetes_traffic_the_noninvasive_way/",
    "resume": "",
    "date": "2023-03-21T14:13:21Z",
    "vote": 0
  },
  {
    "id": "5033bab37d017341aae5ccf713f49d9f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "what does \"panic: runtime error: index out of range [0] with length 0\" mean",
    "url": "https://www.reddit.com/r/golang/comments/11xi34f/what_does_panic_runtime_error_index_out_of_range/",
    "resume": "",
    "date": "2023-03-21T14:13:13Z",
    "vote": 0
  },
  {
    "id": "b91be2626533e24f995996d47117aea7",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_5",
    "resume": " \u003cp\u003eit works but the values ​​are empty\u003c/p\u003e ",
    "date": "2023-03-21T14:11:52Z",
    "vote": 0
  },
  {
    "id": "d6d95127d979f9d27df02913ef3158ff",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_4",
    "resume": " \u003cp\u003eWhat I mean is your select statement returns \u003ccode\u003erows\u003c/code\u003e and an \u003ccode\u003eerr\u003c/code\u003e.  That \u003ccode\u003eerr\u003c/code\u003e likely has information in it explaining why your SQL statement failed.  When you check \u003ccode\u003eif err != nil\u003c/code\u003e, you should log \u003ccode\u003eerr\u003c/code\u003e itself so you know what the problem is:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003erows, err := db.Query(\"SELECT * FROM table\")\nif err != nil {\n    c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"failed to retrieve jobs\"})\n    // Returning a general \"failed to retrieve jobs\" message here\n    // is fine for your API, but you should log `err` itself\n    // somewhere in here:\n    //\n    // TODO: import \"log\"\n    log.Print(\"error getting jobs: %v\", err)\n    return\n}\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-21T14:01:09Z",
    "vote": 0
  },
  {
    "id": "93c49b51811ecb24d812bcf3c6ec97c3",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_3",
    "resume": " \u003cp\u003eThis error comes in error section  : \" failed to retrieve jobs\"\u003c/p\u003e\n\u003cp\u003ejobs := []Job{}\u003cbr\u003e\nfor rows.Next() {\u003cbr\u003e\nvar job Job\u003cbr\u003e\nerr := rows.Scan(\u0026amp;job.ID, \u0026amp;job.Title, \u0026amp;job.Body, \u0026amp;job.Date, \u0026amp;job.Titles, \u0026amp;job.Contents)\u003cbr\u003e\nif err != nil {\u003cbr\u003e\nc.JSON(http.StatusInternalServerError, gin.H{“error”: “failed to retrieve jobs”})\u003cbr\u003e\nreturn\u003cbr\u003e\n}\u003cbr\u003e\njobs = append(jobs, job)\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e// Debugging statements\nfmt.Printf(\"Retrieved job with ID %d\\n\", job.ID)\nfmt.Printf(\"Title: %s\\n\", job.Title)\nfmt.Printf(\"Body: %s\\n\", job.Body)\nfmt.Printf(\"Date: %s\\n\", job.Date)\nfmt.Printf(\"Titles: %v\\n\", job.Titles)\nfmt.Printf(\"Contents: %v\\n\", job.Contents)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e}\u003c/p\u003e ",
    "date": "2023-03-21T13:55:59Z",
    "vote": 0
  },
  {
    "id": "e2668d4400437096912e90e92e061451",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_2",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"Coding_Yaz\" data-post=\"1\" data-topic=\"31081\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/coding_yaz/40/11492_2.png\" class=\"avatar\"\u003e Coding_Yaz:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003erows, err := db.Query(\"SELECT * FROM table\")\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eYou should log the \u003ccode\u003eerr\u003c/code\u003e somewhere so you know the underlying cause.\u003c/p\u003e ",
    "date": "2023-03-21T13:45:38Z",
    "vote": 0
  },
  {
    "id": "aed726eb0b7b642dcf97a5be2a7f7250",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang gin rest api post and get",
    "url": "https://forum.golangbridge.org/t/golang-gin-rest-api-post-and-get/31081#post_1",
    "resume": " \u003cp\u003eWith golang gin rest api I create title, body, date, titles and contents fields, send to postman and save database. The post operation is running successfully, but when I receive the data, I get an error like this: “error”: “failed to import jobs” get doesn’t work but post works code parts are as follows\u003c/p\u003e\n\u003cp\u003emain.go:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003etype Job struct {\n    ID       int       `db:\"id\" json:\"id\"`\n    Title    string    `db:\"title\" json:\"title\"`\n    Body     string    `db:\"body\" json:\"body\"`\n    Date     time.Time `db:\"date\" json:\"date\"`\n    Titles   [4]string `db:\"titles\" json:\"titles\"`\n    Contents [4]string `db:\"contents\" json:\"contents\"`\n}\n\nfunc main() {\nr.POST(\"/job\", func(c *gin.Context) {\n    var job Job\n    if err := c.ShouldBindJSON(\u0026amp;job); err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n        return\n    }\n\n    // insert job into database\n    query := \"INSERT INTO table (title, body,  titles, contents ,date) VALUES ($1, $2, $3,  $4, $5) RETURNING id\"\n    var id int\n    err := db.QueryRow(query, job.Title, job.Body, pq.Array(job.Titles), pq.Array(job.Contents), time.Now()).Scan(\u0026amp;id)\n    if err != nil {\n        c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"failed to create job\"})\n        return\n    }\n\n    job.ID = id\n\n    c.JSON(http.StatusOK, job)\n})\n\nr.GET(\"/jobs\", func(c *gin.Context) {\n    // retrieve all jobs from database\n    rows, err := db.Query(\"SELECT * FROM table\")\n    if err != nil {\n        c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"failed to retrieve jobs\"})\n        return\n    }\n    defer rows.Close()\n\n    // iterate over rows and store in slice of Jobs\n    jobs := []Job{}\n    for rows.Next() {\n        var job Job\n        err := rows.Scan(\u0026amp;job.ID, \u0026amp;job.Title, \u0026amp;job.Body, \u0026amp;job.Date, \u0026amp;job.Titles, \u0026amp;job.Contents)\n        if err != nil {\n            c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"failed to retrieve jobs\"})\n            return\n        }\n        jobs = append(jobs, job)\n    }\n\n    c.JSON(http.StatusOK, jobs)\n})`\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-21T13:43:31Z",
    "vote": 0
  },
  {
    "id": "9ca4e985539be8df88ac70b62bebf067",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Is it a good practice to split your code in functions?",
    "url": "https://www.reddit.com/r/golang/comments/11xg635/is_it_a_good_practice_to_split_your_code_in/",
    "resume": "",
    "date": "2023-03-21T13:01:11Z",
    "vote": 0
  },
  {
    "id": "19585b357866e631258bb850e067e6b1",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Gojq modify query",
    "url": "https://forum.golangbridge.org/t/gojq-modify-query/31077#post_2",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"Walter_Policarpio\" data-post=\"1\" data-topic=\"31077\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/walter_policarpio/40/13027_2.png\" class=\"avatar\"\u003e Walter_Policarpio:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBut I do not know how to modify this part.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eCan you elaborate on what you don’t know how to modify?  Are you asking how to get that example code from the readme so that you can modify it, or what the syntax of \u003ccode\u003emap\u003c/code\u003es / slices are in Go, or maybe how to deserialize your example JSON into a \u003ccode\u003emap[string]any\u003c/code\u003e?  Perhaps something else?\u003c/p\u003e ",
    "date": "2023-03-21T12:59:23Z",
    "vote": 0
  },
  {
    "id": "2143f5b26be59d6c9887d7cfee83056b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Where to define functions used only by test cases",
    "url": "https://www.reddit.com/r/golang/comments/11xepcj/where_to_define_functions_used_only_by_test_cases/",
    "resume": "",
    "date": "2023-03-21T11:59:47Z",
    "vote": 0
  },
  {
    "id": "40b786cace3e1cc4aed27d2821a839a2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Clean Architecture and Go",
    "url": "https://www.reddit.com/r/golang/comments/11xe7yn/clean_architecture_and_go/",
    "resume": "",
    "date": "2023-03-21T11:36:41Z",
    "vote": 0
  },
  {
    "id": "b0ee0e71deb881c6cc9c4472dc0b0d01",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How to make semantic token highlighting work with gopls in neovim?",
    "url": "https://www.reddit.com/r/golang/comments/11xe63t/how_to_make_semantic_token_highlighting_work_with/",
    "resume": "",
    "date": "2023-03-21T11:34:01Z",
    "vote": 0
  },
  {
    "id": "91b19dc951f6b7461ff7d76893c7db0c",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "What is the right approach or Roadmap to learn Go",
    "url": "https://forum.golangbridge.org/t/what-is-the-right-approach-or-roadmap-to-learn-go/31079#post_2",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"godev\" data-post=\"1\" data-topic=\"31079\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/letter_avatar_proxy/v4/letter/g/a5b964/40.png\" class=\"avatar\"\u003e godev:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhat do you think about this\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003e\u003ca href=\"https://www.freecodecamp.org/news/2019-web-developer-roadmap/\" rel=\"noopener nofollow ugc\"\u003eFreecodecamp\u003c/a\u003e has a roadmap that are divided into “backend” and “fronted” etc. One roadmap that fits all seems to be hard to create and understand IMHO.\u003c/p\u003e ",
    "date": "2023-03-21T10:38:49Z",
    "vote": 0
  },
  {
    "id": "b5a65acf792540582a76993aa05e2346",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Free workshop: Build a GymApp on AWS w/ chatGPT + Twilio",
    "url": "https://www.reddit.com/r/golang/comments/11xcl5b/free_workshop_build_a_gymapp_on_aws_w_chatgpt/",
    "resume": "",
    "date": "2023-03-21T10:06:51Z",
    "vote": 0
  },
  {
    "id": "e08d60c2c2787e2a50a2a7dc51ee984a",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "What is the right approach or Roadmap to learn Go",
    "url": "https://forum.golangbridge.org/t/what-is-the-right-approach-or-roadmap-to-learn-go/31079#post_1",
    "resume": " \u003cp\u003eI have created a \u003ca href=\"https://learngolangonline.com/posts/golang-roadmap\" rel=\"noopener nofollow ugc\"\u003eroadmap\u003c/a\u003e on my blog to learn Golang for beginners. What do you think about this and is there anything you feel that is missed or something which is not required.\u003c/p\u003e ",
    "date": "2023-03-21T09:20:12Z",
    "vote": 0
  },
  {
    "id": "dbd6552b3828c8afe7edc403a54d9101",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Github Actions and Go",
    "url": "https://www.reddit.com/r/golang/comments/11xaw79/github_actions_and_go/",
    "resume": "",
    "date": "2023-03-21T08:24:03Z",
    "vote": 0
  },
  {
    "id": "59f5c153585461d1f29c89b324773c57",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "What is the common log library which is industry standard that is used in server applications?",
    "url": "https://www.reddit.com/r/golang/comments/11xa9ip/what_is_the_common_log_library_which_is_industry/",
    "resume": "",
    "date": "2023-03-21T07:57:17Z",
    "vote": 0
  },
  {
    "id": "1a914ab288406734f9a488f4ecc62e1d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Handler functions, testing, httptest, custom mock matching, and some antipatterns - Part 4 of OZ is ready!",
    "url": "https://www.reddit.com/r/golang/comments/11xa1kx/handler_functions_testing_httptest_custom_mock/",
    "resume": "",
    "date": "2023-03-21T07:43:20Z",
    "vote": 0
  },
  {
    "id": "7cbfa667e5791ab1ce662eaef4fec3b3",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Help with Stringer interface",
    "url": "https://forum.golangbridge.org/t/help-with-stringer-interface/31067#post_4",
    "resume": " \u003cp\u003eYou have a good point here. \u003ca href=\"https://go.dev/play/p/L6VN8MqPwpV\" rel=\"noopener nofollow ugc\"\u003eThis playground code\u003c/a\u003e demonstrates that \u003ccode\u003eString()\u003c/code\u003e works fine on a variable of type \u003ccode\u003eMilliliters\u003c/code\u003e but not on a return value of type \u003ccode\u003eMilliliters\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003e\tmvol := vol.ToMilliliters()\n\tfmt.Println(mvol.String())                // 2000.00 ml\n\tfmt.Println(vol.ToMilliliters().String()) // error: cannot call pointer method String on Milliliters\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo my initial analysis was too quick.\u003c/p\u003e\n\u003cp\u003e\u003cs\u003eAnd I have no reasonable explanation for this behavior at the moment. The term „compiler bug“ comes to mind.\u003c/s\u003e~\u003c/p\u003e\n\u003cp\u003eEdit: My fault for not looking closer.\u003c/p\u003e\n\u003cp\u003eThe problem is that the variable is \u003cem\u003eaddressable\u003c/em\u003e but a return value isn‘t.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003e.\u003c/code\u003e operator is smart and works on both value types and pointer types. For pointers, it automatically dereferences the pointer.\u003c/p\u003e\n\u003cp\u003eThis does not work with a non-addressable return value.\u003c/p\u003e\n\u003cp\u003eThis is what happens when a language contains convenience features. These features can help but also can introduce unexpected behavior like this one.\u003c/p\u003e\n\u003cp\u003eSee also: \u003ca href=\"https://stackoverflow.com/questions/44543374/cannot-take-the-address-of-and-cannot-call-pointer-method-on\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003ego - \"cannot take the address of\" and \"cannot call pointer method on\" - Stack Overflow\u003c/a\u003e\u003c/p\u003e ",
    "date": "2023-03-21T07:07:37Z",
    "vote": 0
  },
  {
    "id": "bbaa020e8b6b8d0289eb31eb782711d0",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Bug (fixed in 1.20?) concerning func variables",
    "url": "https://forum.golangbridge.org/t/bug-fixed-in-1-20-concerning-func-variables/31026#post_4",
    "resume": " \u003cp\u003eFor the records: \u003ca href=\"https://github.com/golang/go/issues/59108\" rel=\"noopener nofollow ugc\"\u003ecmd/compile: incorrect inlining of function swapping two funcs · Issue #59108 · golang/go\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eFrom a comment on that issue:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe bug is introduced with 1.16, 1.15 still has both functions, starting with 1.16 to 1.19 the inlined b function is optimized away.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eA backport of the fix to 1.19 is on the way.\u003c/p\u003e\n\u003cp\u003eThank you \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/fabe-xx\"\u003e@fabe-xx\u003c/a\u003e for moving this issue forward.\u003c/p\u003e ",
    "date": "2023-03-21T07:04:01Z",
    "vote": 0
  },
  {
    "id": "8435a046859239354c3df3569b806f00",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Make tool for building go applications and docker/podman containers",
    "url": "https://www.reddit.com/r/golang/comments/11x8u0c/make_tool_for_building_go_applications_and/",
    "resume": "",
    "date": "2023-03-21T06:26:53Z",
    "vote": 0
  },
  {
    "id": "21331f49f8a51136586bd376a7545896",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "A Guide to Embedding Static Files in Go using go:embed",
    "url": "https://www.reddit.com/r/golang/comments/11x73uz/a_guide_to_embedding_static_files_in_go_using/",
    "resume": "",
    "date": "2023-03-21T04:48:50Z",
    "vote": 0
  },
  {
    "id": "5b8a836140c045a9de4ac81396915aba",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "which orm should i use for mongodb",
    "url": "https://www.reddit.com/r/golang/comments/11x5u0a/which_orm_should_i_use_for_mongodb/",
    "resume": "",
    "date": "2023-03-21T03:43:36Z",
    "vote": 0
  },
  {
    "id": "afb760efa7b5f84b58885a58c60e56a5",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why does Go HTML templates look like LISP?",
    "url": "https://www.reddit.com/r/golang/comments/11x5mmj/why_does_go_html_templates_look_like_lisp/",
    "resume": "",
    "date": "2023-03-21T03:33:39Z",
    "vote": 0
  },
  {
    "id": "a2c6ab26ecc08791d999ea3d3f558c13",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect information in each package's source code directory when building a project",
    "url": "https://forum.golangbridge.org/t/how-to-collect-information-in-each-packages-source-code-directory-when-building-a-project/31018#post_4",
    "resume": " \u003cp\u003eI have figured out why I didn’t merge \u003ccode\u003einfo2.txt\u003c/code\u003e under \u003ccode\u003emypkg\u003c/code\u003e directory into the \u003ccode\u003einfo1.txt\u003c/code\u003e under \u003ccode\u003epkg_export\u003c/code\u003e directory. The reason is that when compiling using \u003ccode\u003ego build -a -gcflags=all=-s .\u003c/code\u003e under \u003ccode\u003epkg_export\u003c/code\u003e directory, the \u003ccode\u003epkgs\u003c/code\u003e slice in the following code only contains one package(i.e. \u003ccode\u003emain\u003c/code\u003e package)\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\t\tb.Do(ctx, a)\n\t\tvar main_path string\n\t\tfor _, p := range pkgs {\n\t\t\tif p.Name == \"main\" {\n\t\t\t\tmain_path = p.Dir  // get the main package's path\n\t\t\t}\n\t\t}\n        // collect information under each pkg.Dir and move files from pkg.Dir to \n\t\tcollect(pkgs, main_path)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe Action \u003ccode\u003ea\u003c/code\u003e in \u003ccode\u003eb.Do(ctx, a)\u003c/code\u003e is a \u003ca href=\"https://github.com/golang/go/blob/master/src/cmd/go/internal/work/action.go#L565\" rel=\"noopener nofollow ugc\"\u003e\u003ccode\u003eLinkAction\u003c/code\u003e\u003c/a\u003e generated by \u003ca href=\"https://github.com/golang/go/blob/master/src/cmd/go/internal/work/action.go#L424\" rel=\"noopener nofollow ugc\"\u003e\u003ccode\u003eAutoAction\u003c/code\u003e\u003c/a\u003e due to \u003ccode\u003emain\u003c/code\u003e package. Action \u003ccode\u003ea\u003c/code\u003e contains a \u003ca href=\"https://github.com/golang/go/blob/master/src/cmd/go/internal/work/action.go#L573\" rel=\"noopener nofollow ugc\"\u003e\u003ccode\u003eCompileAction\u003c/code\u003e\u003c/a\u003e and the \u003ca href=\"https://github.com/golang/go/blob/master/src/cmd/go/internal/work/action.go#L573\" rel=\"noopener nofollow ugc\"\u003e\u003ccode\u003eCompileAction\u003c/code\u003e\u003c/a\u003e will append all\u003cbr\u003e\nactions to compile the imported packages as its dependency. The code is at \u003ca href=\"https://github.com/golang/go/blob/master/src/cmd/go/internal/work/action.go#L459\" rel=\"noopener nofollow ugc\"\u003ego/action.go#L459\u003cbr\u003e\n\u003c/a\u003e as following.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003efor _, p1 := range p.Internal.Imports {\n\ta.Deps = append(a.Deps, b.CompileAction(depMode, depMode, p1))\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo what I need to do is to use \u003ccode\u003ep.Internal.Imports\u003c/code\u003e to collect imported packages, use \u003ccode\u003epkg.Dir\u003c/code\u003e to get source code directories and finally merge information under \u003ccode\u003epkg.Dir\u003c/code\u003e to \u003ccode\u003emain_path\u003c/code\u003e, like the following code.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003efunc collectImportPackages(a *Action, pkg_set map[*load.Package]bool) {\n\tfor _, dep := range a.Deps {\n\t\tif pkg_set[dep.Package] || dep.Package.Standard {\n\t\t\tcontinue\n\t\t} else {\n\t\t\tpkg_set[dep.Package] = true\n\t\t}\n\t\tfmt.Println(dep.Package.Name)\n\t\tcollectImportPackages(dep, pkg_set)\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eall imported packages excluding standard packages will be collected as keys of the \u003ccode\u003ekey_set\u003c/code\u003e map\u003c/p\u003e\n\u003c/blockquote\u003e ",
    "date": "2023-03-21T01:41:42Z",
    "vote": 0
  },
  {
    "id": "8c15b10b90effd0ec30eb0f6da3c5bee",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect information in each package's source code directory when building a project",
    "url": "https://forum.golangbridge.org/t/how-to-collect-information-in-each-packages-source-code-directory-when-building-a-project/31018#post_3",
    "resume": " \u003cp\u003eI’m not sure whether \u003ca href=\"https://pkg.go.dev/golang.org/x/tools/go/packages\" rel=\"noopener nofollow ugc\"\u003egolang.org/x/tools/go/packages\u003c/a\u003e can get accurate import graph, so I don’t try it. Besides, In the \u003ccode\u003ePackage\u003c/code\u003e struct in \u003ca href=\"https://pkg.go.dev/golang.org/x/tools/go/packages\" rel=\"noopener nofollow ugc\"\u003egolang.org/x/tools/go/packages\u003c/a\u003e, there is no \u003ccode\u003estd\u003c/code\u003e related field, as I also want to filter out standard packages.\u003c/p\u003e\n\u003cp\u003eAnyway, thanks for your advice. I will try this package next time when I need the import information as this package is lightweight.\u003c/p\u003e ",
    "date": "2023-03-21T01:22:55Z",
    "vote": 0
  },
  {
    "id": "97ebee846d76b01d6b8e3daae34011e6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Hello gophers, show me your concurrent code",
    "url": "https://www.reddit.com/r/golang/comments/11x1oek/hello_gophers_show_me_your_concurrent_code/",
    "resume": "",
    "date": "2023-03-21T00:40:58Z",
    "vote": 0
  },
  {
    "id": "36f934b48fdcab5ea7eef66f7c6c4d32",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Empty ValidationException when trying to write records to AWS Timeseries",
    "url": "https://www.reddit.com/r/golang/comments/11wxxz3/empty_validationexception_when_trying_to_write/",
    "resume": "",
    "date": "2023-03-20T22:15:07Z",
    "vote": 0
  },
  {
    "id": "38e5fbfb1be3dce133a4948345e3f801",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Gojq modify query",
    "url": "https://forum.golangbridge.org/t/gojq-modify-query/31077#post_1",
    "resume": " \u003cp\u003eHello Everyone,\u003c/p\u003e\n\u003cp\u003eLearning how to program in Go and tried using \u003ca href=\"https://github.com/itchyny/gojq\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\"\u003eGitHub - itchyny/gojq: Pure Go implementation of jq\u003c/a\u003e. I am having challenges on how to extract id from an api call below\u003c/p\u003e\n\u003cp\u003e{“id”: 1553,\u003cbr\u003e\n“node_id”: “xxxxx”,\u003cbr\u003e\n“name”: “xxxx-actions”,\u003cbr\u003e\n“full_name”: “xxxx/xxxxx-actions”,\u003cbr\u003e\n“private”: false,\u003cbr\u003e\n“owner”: {\u003cbr\u003e\n“login”: “xxxx”,\u003cbr\u003e\n“id”: 4,\u003cbr\u003e\n“node_id”: “xxxxxx”\u003cbr\u003e\n}\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003cp\u003eBut I do not know how to modify this part.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003einput := map[string]any{\"foo\": []any{1, 2, 3}}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI know this might look easy for others but I would appreciate any help the community can provide. Thank you in advance.\u003c/p\u003e\n\u003cp\u003eRegards,\u003cbr\u003e\nWalter\u003c/p\u003e ",
    "date": "2023-03-20T21:33:17Z",
    "vote": 0
  },
  {
    "id": "cc91cf23f0aa404b112a26f2e218a226",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go to parse text files",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-to-parse-text-files/31074#post_2",
    "resume": " \u003cp\u003eFirst off, check out:\u003c/p\u003e\n\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://pkg.go.dev/net/http#example-Get\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://pkg.go.dev/static/shared/icon/favicon.ico\" class=\"site-icon\" width=\"32\" height=\"32\"\u003e\n\n      \u003ca href=\"https://pkg.go.dev/net/http#example-Get\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003epkg.go.dev\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \n\n\u003ch3\u003e\u003ca href=\"https://pkg.go.dev/net/http#example-Get\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ehttp package - net/http - Go Packages\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003ePackage http provides HTTP client and server implementations.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eAnd you could get pretty far with a naïve implementation using \u003ccode\u003estrings.Split\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc main() {\n\t// Download a book\n\tres, err := http.Get(\"https://www.gutenberg.org/cache/epub/1513/pg1513.txt\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\t// Read the body\n\tbody, err := io.ReadAll(res.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tres.Body.Close()\n\t// Make into a string\n\tconverted := string(body)\n\t// Split based on space to get all words in the book\n\tlines := strings.Split(converted, \"\\n\")\n\t// Keep track of the longest word.\n\tlongest := \"\"\n\tfor _, line := range lines {\n\t\tallWords := strings.Split(line, \" \")\n\t\tfor _, v := range allWords {\n\t\t\tif len(v) \u0026gt; len(longest) {\n\t\t\t\tlongest = v\n\t\t\t}\n\t\t}\n\t}\n\n\tfmt.Println(\"Longest word:\", longest)\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNote this is completely untested and meant to be used as a starting point to get you going. It’s also pretty inefficient. So once you get going with this, check out the following examples of scanners. Scan lines:\u003c/p\u003e\n\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://pkg.go.dev/bufio#example-Scanner-Lines\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://pkg.go.dev/static/shared/icon/favicon.ico\" class=\"site-icon\" width=\"32\" height=\"32\"\u003e\n\n      \u003ca href=\"https://pkg.go.dev/bufio#example-Scanner-Lines\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003epkg.go.dev\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \n\n\u003ch3\u003e\u003ca href=\"https://pkg.go.dev/bufio#example-Scanner-Lines\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ebufio package - bufio - Go Packages\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003ePackage bufio implements buffered I/O. It wraps an io.Reader or io.Writer object, creating another object (Reader or Writer) that also implements the interface but provides buffering and some help for textual I/O.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eAnd how to scan words:\u003c/p\u003e\n\u003caside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://pkg.go.dev/bufio#example-Scanner-Words\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://pkg.go.dev/static/shared/icon/favicon.ico\" class=\"site-icon\" width=\"32\" height=\"32\"\u003e\n\n      \u003ca href=\"https://pkg.go.dev/bufio#example-Scanner-Words\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003epkg.go.dev\u003c/a\u003e\n  \u003c/header\u003e\n\n  \u003carticle class=\"onebox-body\"\u003e\n    \n\n\u003ch3\u003e\u003ca href=\"https://pkg.go.dev/bufio#example-Scanner-Words\" target=\"_blank\" rel=\"noopener nofollow ugc\"\u003ebufio package - bufio - Go Packages\u003c/a\u003e\u003c/h3\u003e\n\n  \u003cp\u003ePackage bufio implements buffered I/O. It wraps an io.Reader or io.Writer object, creating another object (Reader or Writer) that also implements the interface but provides buffering and some help for textual I/O.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eSo you could do the get, and then as you’re scanning lines/words into strings do your processing then instead of converting the entire thing to a string then using strings.Split (again - that is a pretty memory-intensive way of doing things). Will efficiency matter in this case? Probably not - but if you run into memory problems you could try a scanner. Anyway, hope this gets you going on the right path!\u003c/p\u003e ",
    "date": "2023-03-20T21:00:15Z",
    "vote": 0
  },
  {
    "id": "6c7171509e4e4cfdb72896245afeb2e5",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Creating array with go rest api",
    "url": "https://forum.golangbridge.org/t/creating-array-with-go-rest-api/31072#post_2",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"Coding_Yaz\" data-post=\"1\" data-topic=\"31072\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/coding_yaz/40/11492_2.png\" class=\"avatar\"\u003e Coding_Yaz:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor example, there is a job posting on a page, when you click on the title of the job posting, it will direct you to the detail page and 4 content will be in the form of 4 titles. How can I do this?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eMaster \u0026gt; Details can be done in many ways. \u003ca href=\"https://task3.go4webdev.org/tsk\" rel=\"noopener nofollow ugc\"\u003eHere is my approach.\u003c/a\u003e I discovered a technique that writes the page to the buffer and then fetched into innerHTML by Javascript. By using this technique the detailed page is updated with minimal flickering.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// write card to desk\nfunc get_card(w http.ResponseWriter, module string, mode string, val string) {\n\tpage := module + \"_\" + mode + \".html\"\n\tdata := json2map4id(module, val)\n\tvar buf bytes.Buffer\n\ttpl.ExecuteTemplate(\u0026amp;buf, page, data)\n\tfmt.Fprint(w, buf.String())\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cbr\u003e\n\u003cp\u003e\u003c/p\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://forum.golangbridge.org/uploads/default/original/2X/e/ed6838cb85d93d070eda1e9ad6a3974aa1dfd9b8.jpeg\" data-download-href=\"https://forum.golangbridge.org/uploads/default/ed6838cb85d93d070eda1e9ad6a3974aa1dfd9b8\" title=\"image\"\u003e\u003cimg src=\"https://forum.golangbridge.org/uploads/default/optimized/2X/e/ed6838cb85d93d070eda1e9ad6a3974aa1dfd9b8_2_608x500.jpeg\" alt=\"image\" data-base62-sha1=\"xScscdFXRorucXkpsqwTTltGl16\" width=\"608\" height=\"500\" srcset=\"https://forum.golangbridge.org/uploads/default/optimized/2X/e/ed6838cb85d93d070eda1e9ad6a3974aa1dfd9b8_2_608x500.jpeg, https://forum.golangbridge.org/uploads/default/optimized/2X/e/ed6838cb85d93d070eda1e9ad6a3974aa1dfd9b8_2_912x750.jpeg 1.5x, https://forum.golangbridge.org/uploads/default/optimized/2X/e/ed6838cb85d93d070eda1e9ad6a3974aa1dfd9b8_2_1216x1000.jpeg 2x\" data-dominant-color=\"EAE5F2\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cp\u003e\u003c/p\u003e\n\u003caside class=\"quote no-group\"\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHow can I make content in the form of 4 titles and 4 lists with go rest api gin framework?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eBasically you can do a normal html template using lists, divs or other common html stuff. Populating the list (or whatever) by using JSON into the html template.\u003c/p\u003e ",
    "date": "2023-03-20T20:38:23Z",
    "vote": 0
  },
  {
    "id": "eff63099f4d6f39798b596fa559f6595",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang app memory requirement",
    "url": "https://forum.golangbridge.org/t/golang-app-memory-requirement/30844#post_7",
    "resume": " \u003cp\u003e\u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/mikejackson\"\u003e@MikeJackson\u003c/a\u003e thanks for help, i got a brief idea on memory footprint of golang\u003cbr\u003e\nthanks\u003c/p\u003e ",
    "date": "2023-03-20T18:26:43Z",
    "vote": 0
  },
  {
    "id": "7922be5a595fba93f4024100bc046834",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to use Go to parse text files",
    "url": "https://forum.golangbridge.org/t/how-to-use-go-to-parse-text-files/31074#post_1",
    "resume": " \u003cp\u003eI am new to Go programming.\u003c/p\u003e\n\u003cp\u003eWatching the invention of Go story by Rob Pike and Go discussions involving Ken Thompson, I believe I have a good overview of what purposes they expect Go to be used for. Go is both a low level compile to native machine code language as well as a server-side production environment project language. Where the C language syntax is difficult to understand, Go syntax was simplified (I assume versus C) to be easier to understand.\u003c/p\u003e\n\u003cp\u003eMy takeaway from this research, Go is based on the power of the C language, simplifying the syntax, and including features that would benefit where many developers work, the “server room”. As if C and Erlang got married and had a Go child.\u003c/p\u003e\n\u003cp\u003eI would like to learn how to work with files, open,read,close.\u003c/p\u003e\n\u003cp\u003eThis is an example from Clojure in a Nutshell talk.\u003c/p\u003e\n\u003cp\u003eDownload a book as text, Project Gutenberg\u003cbr\u003e\nConvert Book to string\u003cbr\u003e\nProvide a result containing word characters only including apostrophies for possessives\u003cbr\u003e\nReturn the first 20 words in the book\u003cbr\u003e\n20 most frequently used words\u003cbr\u003e\n20 longest words\u003cbr\u003e\nLongest palindrome\u003c/p\u003e\n\u003cp\u003eHow would this program function when run on non-English texts? What results do you expect?\u003c/p\u003e ",
    "date": "2023-03-20T18:09:55Z",
    "vote": 0
  },
  {
    "id": "29b2ff93516bd70f9cc5b2bb2c1ea69d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Context and defer",
    "url": "https://forum.golangbridge.org/t/context-and-defer/31068#post_2",
    "resume": " \u003cp\u003eIt’s up to the function to decide what to return.  Usually it’s \u003ca href=\"https://pkg.go.dev/context#Canceled\" rel=\"noopener nofollow ugc\"\u003e\u003ccode\u003econtext.Canceled\u003c/code\u003e\u003c/a\u003e or something that wraps \u003ccode\u003econtext.Canceled\u003c/code\u003e.\u003c/p\u003e ",
    "date": "2023-03-20T18:00:18Z",
    "vote": 0
  },
  {
    "id": "ada9bc5442dade32bcc589f1fdf77952",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "I know JavaScript and looking for Go learning resource",
    "url": "https://www.reddit.com/r/golang/comments/11wov4e/i_know_javascript_and_looking_for_go_learning/",
    "resume": "",
    "date": "2023-03-20T17:16:47Z",
    "vote": 0
  },
  {
    "id": "1595ae0a2fbe1f07b2a896990690c6f2",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Creating array with go rest api",
    "url": "https://forum.golangbridge.org/t/creating-array-with-go-rest-api/31072#post_1",
    "resume": " \u003cp\u003eHow can I make content in the form of 4 titles and 4 lists with go rest api gin framework?\u003cbr\u003e\nFor example, there is a job posting on a page, when you click on the title of the job posting, it will direct you to the detail page and 4 content will be in the form of 4 titles. How can I do this?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003etype Job struct {\n\tID    int       `db:\"id\" json:\"id\"`\n\tTitle string    `db:\"title\" json:\"title\"`\n\tBody  string    `db:\"body\" json:\"body\"`\n\tDate  time.Time `db:\"date\" json:\"date\"`\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-20T17:13:46Z",
    "vote": 0
  },
  {
    "id": "ddfc76fdc6d88f2e576a30c002c72e73",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "How does the Go garbage collector recycle memory?",
    "url": "https://www.reddit.com/r/golang/comments/11work7/how_does_the_go_garbage_collector_recycle_memory/",
    "resume": "",
    "date": "2023-03-20T17:13:19Z",
    "vote": 0
  },
  {
    "id": "1ef08131d80b01dce71fdb0bb2fd25ce",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Speeding up a Go cli application with concurrency",
    "url": "https://www.reddit.com/r/golang/comments/11wok50/speeding_up_a_go_cli_application_with_concurrency/",
    "resume": "",
    "date": "2023-03-20T17:06:04Z",
    "vote": 0
  },
  {
    "id": "cd73a8bf7e7ffc9ffe87b65420a2b86b",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Introducing wazero from Tetrate",
    "url": "https://www.reddit.com/r/golang/comments/11wmshw/introducing_wazero_from_tetrate/",
    "resume": "",
    "date": "2023-03-20T16:03:16Z",
    "vote": 0
  },
  {
    "id": "5d6869e19d11fa866e3eeef6bdf81a5f",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Ebitengine v2.5.0 Released: Xbox Support (Limited), Vector Graphics, and More",
    "url": "https://www.reddit.com/r/golang/comments/11wlqfb/ebitengine_v250_released_xbox_support_limited/",
    "resume": "",
    "date": "2023-03-20T15:26:12Z",
    "vote": 0
  },
  {
    "id": "26b28cf7ee482886e03b6a2c06f4bb26",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Help with Stringer interface",
    "url": "https://forum.golangbridge.org/t/help-with-stringer-interface/31067#post_3",
    "resume": " \u003cp\u003eHi! Thanks for the reply. Didn’t really get this point.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe method set of a \u003ca href=\"https://go.dev/ref/spec#Type_definitions\" rel=\"noopener nofollow ugc\"\u003edefined type\u003c/a\u003e \u003ccode\u003eT\u003c/code\u003e consists of all \u003ca href=\"https://go.dev/ref/spec#Method_declarations\" rel=\"noopener nofollow ugc\"\u003emethods\u003c/a\u003e declared with receiver type \u003ccode\u003eT\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn my example, \u003ccode\u003eLiters\u003c/code\u003e and \u003ccode\u003eMilliliters\u003c/code\u003e are defined types. But ain’t I still able to call \u003ccode\u003eToMilliliters()\u003c/code\u003e that has pointer receiver on \u003ccode\u003evol\u003c/code\u003e which is \u003ccode\u003eLiters type\u003c/code\u003e without use of pointer?\u003c/p\u003e ",
    "date": "2023-03-20T14:19:08Z",
    "vote": 0
  },
  {
    "id": "41be5ad368740b20655af77283ded71c",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Go compiler; go run commnad",
    "url": "https://forum.golangbridge.org/t/go-compiler-go-run-commnad/31061#post_3",
    "resume": " \u003cp\u003eHi \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/oluwatobi_giwa\"\u003e@Oluwatobi_Giwa\u003c/a\u003e,\u003c/p\u003e\n\u003cp\u003eTry \u003ccode\u003ego run cmd/web/main.go cmd/web/routes.go cmd/web/handler.go\u003c/code\u003e (or simply \u003ccode\u003ego cmd/web/*.go\u003c/code\u003e if it is ok to include all .go files in /cmd/web).\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ego run\u003c/code\u003e does not actively search for files; it only uses the files it receives as arguments.\u003c/p\u003e ",
    "date": "2023-03-20T14:12:16Z",
    "vote": 0
  },
  {
    "id": "5d76aca57da5e2383747d503aea01098",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Context and defer",
    "url": "https://forum.golangbridge.org/t/context-and-defer/31068#post_1",
    "resume": " \u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ectx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n defer cancel()\n _, err := m.DB.Exec(ctx, stmt, email, username, password)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf the containing function gets cancelled by the context defer cancel() , what get return to the caller?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003edefer func(ctx context.CancelFunc) error {\nerr := errors.New(\"timeout\")\nctx()\n}(cancel\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eor is this my only option?\u003c/p\u003e ",
    "date": "2023-03-20T14:06:00Z",
    "vote": 0
  },
  {
    "id": "a9f221c9f5f1756d98b980ddadd8ec45",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Help with Stringer interface",
    "url": "https://forum.golangbridge.org/t/help-with-stringer-interface/31067#post_2",
    "resume": " \u003cp\u003eHi \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/void5253\"\u003e@void5253\u003c/a\u003e,\u003c/p\u003e\n\u003cp\u003eOnly a pointer type has access to methods with pointer receivers. See \u003ca href=\"https://go.dev/ref/spec#Method_sets\" rel=\"noopener nofollow ugc\"\u003eMethod Sets\u003c/a\u003e in the language spec for details on this, especially:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eThe method set of a \u003ca href=\"https://go.dev/ref/spec#Type_definitions\" rel=\"noopener nofollow ugc\"\u003edefined type\u003c/a\u003e \u003ccode\u003eT\u003c/code\u003e consists of all \u003ca href=\"https://go.dev/ref/spec#Method_declarations\" rel=\"noopener nofollow ugc\"\u003emethods\u003c/a\u003e declared with receiver type \u003ccode\u003eT\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eThe method set of a pointer to a defined type \u003ccode\u003eT\u003c/code\u003e (where \u003ccode\u003eT\u003c/code\u003e is neither a pointer nor an interface) is the set of all methods declared with receiver \u003ccode\u003e*T\u003c/code\u003e or \u003ccode\u003eT\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ccode\u003evol\u003c/code\u003e is not a pointer type, hence its method set does not include String() methods that are defined on pointer receivers. Thus, the standard string representation of \u003ccode\u003efloat64(2)\u003c/code\u003e applies.\u003c/p\u003e\n\u003cp\u003eA String() method that is available for both \u003ccode\u003eMilliliters\u003c/code\u003e and \u003ccode\u003e*Milliliters\u003c/code\u003e therefore needs a value receiver.\u003c/p\u003e ",
    "date": "2023-03-20T14:02:39Z",
    "vote": 0
  },
  {
    "id": "c55fdd2c19904c51b1c8cbf82e27d407",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Help with Stringer interface",
    "url": "https://forum.golangbridge.org/t/help-with-stringer-interface/31067#post_1",
    "resume": " \u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e //convert.go\n    package convert\n    \n    type Liters float64\n    type Milliliters float64\n    \n    func (l *Liters) ToMilliliters() Milliliters{\n        return Milliliters(*l * 1000)\n    }\n    \n    func (m *Milliliters) ToLiters() Liters{\n        return Liters(*m / 1000)\n    }\n    \n    func (m *Milliliters) String() string {\n        return fmt.Sprintf(\"%0.2f ml\", *m)\n    }\n    \n    func (l *Liters) String() string {\n        return fmt.Sprintf(\"%0.2f l\", *l)\n    }\n    \n    //main.go\n    package main\n    \n    import (\n        \"fmt\"\n        \"convert\"\n    )\n    \n    func main() {\n        vol := Liters(2)\n        fmt.Println(vol.ToMilliliters())  //output 2000, i want 2000.00 ml\n    }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ePS: I got correct output when method had value receivers, i.e when I replaced this\u003ccode\u003efunc (l *Liters) String() string\u003c/code\u003e by this \u003ccode\u003efunc (l Liters) String() string\u003c/code\u003e.\u003c/p\u003e ",
    "date": "2023-03-20T13:43:45Z",
    "vote": 0
  },
  {
    "id": "294b1d896faec557372437292679c313",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Confused about packages",
    "url": "https://forum.golangbridge.org/t/confused-about-packages/30978#post_9",
    "resume": " \u003cp\u003eThanks for the reply. The issue is solved, it was a vscode intellisense issue.\u003c/p\u003e ",
    "date": "2023-03-20T13:40:54Z",
    "vote": 0
  },
  {
    "id": "7b11500e9a5c2f6bb4d4d3047503e39e",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Why's this happening?",
    "url": "https://www.reddit.com/r/golang/comments/11whl8l/whys_this_happening/",
    "resume": "",
    "date": "2023-03-20T12:29:43Z",
    "vote": 0
  },
  {
    "id": "842ffa3f147e9ba72746319bf5d04c8c",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Missing syntax? comparable receiver",
    "url": "https://forum.golangbridge.org/t/missing-syntax-comparable-receiver/31063#post_2",
    "resume": " \u003cp\u003eAhum… My colleague corrected me with the obvious and elegant solution:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003etype List[T comparable] struct {\n\tnext *List[T]\n\tval  T\n}\nfunc (l *List[T]) delete(t T) bool {\n...\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-20T12:14:49Z",
    "vote": 0
  },
  {
    "id": "e4eae8aa7db85bede3fa99d99e0a47f6",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Missing syntax? comparable receiver",
    "url": "https://forum.golangbridge.org/t/missing-syntax-comparable-receiver/31063#post_1",
    "resume": " \u003cp\u003eI was doing the Tour of Go, and got to \u003ca href=\"https://go.dev/tour/generics/2\" rel=\"noopener nofollow ugc\"\u003egeneric/2\u003c/a\u003e\u003cbr\u003e\nI wanted to write a \u003cem\u003edelete\u003c/em\u003e method, and found that I needed T to be comparable.\u003cbr\u003e\nThen I tried the following syntax:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc (l *List[T comparable]) delete(t T) bool\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ebut found that it is not legal, so that I could only produce:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc delete[T comparable](l *List[T], t T) bool\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAny reason why my intention would be ‘wrong’?\u003cbr\u003e\nAny pending attempt to support something similar?\u003cbr\u003e\nThanks\u003c/p\u003e ",
    "date": "2023-03-20T11:17:35Z",
    "vote": 0
  },
  {
    "id": "dea6452f8a3307f93e2db26855bf2f97",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect values from a channel into a slice in Go? (I want a utility method, maybe from go-funk)",
    "url": "https://forum.golangbridge.org/t/how-to-collect-values-from-a-channel-into-a-slice-in-go-i-want-a-utility-method-maybe-from-go-funk/31046#post_6",
    "resume": " \u003cp\u003eGo-funk couldn’t work for channels because what you want is unpredictable by design. Which channel did you pass? How you prevent channel blocks ? The external context matters here. From what I see go-funk is a group of standalone functions which do exactly what a functional language does with pipe operator , declarative style.\u003c/p\u003e ",
    "date": "2023-03-20T07:33:58Z",
    "vote": 0
  },
  {
    "id": "f22091354b6337a15add900b1de20118",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Go compiler; go run commnad",
    "url": "https://forum.golangbridge.org/t/go-compiler-go-run-commnad/31061#post_2",
    "resume": " \u003cp\u003eThe \u003ccode\u003emain\u003c/code\u003e package does not “consolidate” the files into a single package as it is done for other packages.\u003c/p\u003e\n\u003cp\u003eYou want to either have all the code in a single file, or create a proper project and move the handler and routes to another package that you then import from the \u003ccode\u003emain\u003c/code\u003e package.\u003c/p\u003e ",
    "date": "2023-03-20T06:27:34Z",
    "vote": 0
  },
  {
    "id": "2e0946fc9a2eb512181535842811812d",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Webstorm vs Golang",
    "url": "https://www.reddit.com/r/golang/comments/11w6yz9/webstorm_vs_golang/",
    "resume": "",
    "date": "2023-03-20T03:18:36Z",
    "vote": 0
  },
  {
    "id": "c096de04f5a276011b969742b7a360d6",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Build contraints blocking package sys/windows/svc on mac",
    "url": "https://www.reddit.com/r/golang/comments/11w6f9w/build_contraints_blocking_package_syswindowssvc/",
    "resume": "",
    "date": "2023-03-20T02:54:53Z",
    "vote": 0
  },
  {
    "id": "264f04b4318ec70480d5afb857b19dbd",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Go compiler; go run commnad",
    "url": "https://forum.golangbridge.org/t/go-compiler-go-run-commnad/31061#post_1",
    "resume": " \u003cp\u003eI have a folder structure \u003ccode\u003ecmd/web/main.go\u003c/code\u003e and \u003ccode\u003ehandler.go\u003c/code\u003e, \u003ccode\u003eroutes.go\u003c/code\u003e are also present in the same level as \u003ccode\u003emain.go\u003c/code\u003e, all declared as \u003ccode\u003epackage main\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003emain.go\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage main\ntype WebApp struct {\n\tdbModel *models.UserModel\n}\n\nfunc main() {\n\tdb, err := dbSetUp()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tapp := \u0026amp;WebApp{\n\t\tdbModel: \u0026amp;models.UserModel{DB: db},\n\t}\n\n\twebServer := \u0026amp;http.Server{\n\t\tAddr:         \":5030\",\n\t\tHandler:      app.Routes(),\n\t\tIdleTimeout:  time.Minute,\n\t\tReadTimeout:  5 * time.Second,\n\t\tWriteTimeout: 10 * time.Second,\n\t}\n\tfmt.Println(\"server running...\")\n\terr = webServer.ListenAndServe()\n\tlog.Fatal(err)\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eroutes.go\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003epackage main\nfunc (a *WebApp) Routes() *http.ServeMux {\n\n\tmux := http.NewServeMux()\n\n\tmux.HandleFunc(\"/signup\", a.Signup)\n\n\treturn mux\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003ego run cmd/web/main.go\u003c/code\u003e, compiler complains \u003ccode\u003eapp.Routes undefiend (type *WebApp has no field or method Routes)\u003c/code\u003e, but the go tools(formatter) does not complain such in the IDE.\u003cbr\u003e\nIf rearrange, putting the methods in the \u003ccode\u003emain.go\u003c/code\u003e file, all goes fine. When i research online, i found something similar suggesting it my improper use of \u003ccode\u003ego run\u003c/code\u003e command. what am i doing wrongly?. thanks.\u003c/p\u003e ",
    "date": "2023-03-20T02:07:54Z",
    "vote": 0
  },
  {
    "id": "bf827cf49a66100cf9e44a51e82f9267",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "After struggling to install Go using asdf for vscode on macOS I decided to document the entire process",
    "url": "https://www.reddit.com/r/golang/comments/11w4g7b/after_struggling_to_install_go_using_asdf_for/",
    "resume": "",
    "date": "2023-03-20T01:31:07Z",
    "vote": 0
  },
  {
    "id": "ef00d59227e8d2c4a0a61d0ebcad3aaf",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Get a Job as a Golang Developer",
    "url": "https://blog.boot.dev/jobs/how-to-get-golang-job/",
    "resume": "Step 1: Learn Golang. Step 2: Apply for jobs. Step 3: Get accepted.\nWhen I started researching this article, that was the first answer that came up on Reddit.",
    "date": "2023-03-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8381ab3d16fa53d87fdbe850e5532b23",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🫶 The 'main()' function, 'main' package and 'main.go' file in Go",
    "url": "https://gosamples.dev/main-function-package-file/",
    "resume": "\u003cp\u003eTo run an application in Go as an executable program you need an entry point - the place where the program execution begins. Such an entry point is the \u003ccode\u003emain()\u003c/code\u003e function in the package named \u003ccode\u003emain\u003c/code\u003e. When you compile your Go program, the \u003ccode\u003emain()\u003c/code\u003e function in the \u003ccode\u003emain\u003c/code\u003e package is automatically compiled into an executable file. This executable file can then be executed on any machine that has a compatible operating system and architecture.\u003c/p\u003e\n\u003ch2 id=\"the-main-package\"\u003eThe \u003ccode\u003emain\u003c/code\u003e package\u003c/h2\u003e\n\u003cp\u003eIn Go, every \u003ccode\u003e.go\u003c/code\u003e file starts with a package declaration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// the rest of the .go file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe package name is arbitrary, but a package named \u003ccode\u003emain\u003c/code\u003e has a special meaning. When you name your package like this, it is an indicator to the Go environment that it should be compiled into an executable program. In this package, the compiler will look for the \u003ccode\u003emain()\u003c/code\u003e function, which is the entry point of the application.\u003c/p\u003e\n\u003ch2 id=\"the-main-function\"\u003eThe \u003ccode\u003emain()\u003c/code\u003e function\u003c/h2\u003e\n\u003cp\u003eThe \u003ccode\u003emain()\u003c/code\u003e function is the entry point of any executable program. It is the function that the Go runtime calls to start the program. The \u003ccode\u003emain()\u003c/code\u003e function must have no arguments and no return values.\u003c/p\u003e\n\u003cp\u003eHere is an example of a basic \u003ccode\u003emain()\u003c/code\u003e function in Go:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e7\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello, world!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn this example, the \u003ccode\u003emain()\u003c/code\u003e function is the starting point of the program. It simply prints out \u003ccode\u003e\u0026quot;Hello, world!\u0026quot;\u003c/code\u003e to the console using the \u003ca href=\"https://pkg.go.dev/fmt#Println\" target=\"_blank\"\u003e\u003ccode\u003efmt.Println()\u003c/code\u003e\u003c/a\u003e function. As you already know, the \u003ccode\u003emain()\u003c/code\u003e function must be defined in a file with a package \u003ccode\u003emain\u003c/code\u003e. This tells the Go compiler that the file contains the entry point for an executable program.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003emain()\u003c/code\u003e function can include any Go code that you want to execute when the program starts. It is the first function that is executed when you run the app. Typically, it sets up the initial state of the program, performs any necessary initialization, and then starts the program’s main loop.\u003c/p\u003e\n\u003ch2 id=\"the-maingo-file\"\u003eThe \u003ccode\u003emain.go\u003c/code\u003e file\u003c/h2\u003e\n\u003cp\u003eThe file \u003ccode\u003emain.go\u003c/code\u003e is the conventional name of the file in which the entry point to the program is located, that is, the \u003ccode\u003emain()\u003c/code\u003e function in the \u003ccode\u003emain\u003c/code\u003e package. In fact, this file can have any name you like, e.g. \u003ccode\u003estart.go\u003c/code\u003e, but it is good to follow the convention and always call such a file \u003ccode\u003emain.go\u003c/code\u003e. This makes it easier to find the starting point in the project.\u003c/p\u003e\n\u003ch2 id=\"run-the-maingo-file\"\u003eRun the \u003ccode\u003emain.go\u003c/code\u003e file\u003c/h2\u003e\n\u003cp\u003eOnce you have the \u003ccode\u003emain()\u003c/code\u003e function defined in the \u003ccode\u003emain\u003c/code\u003e package in the \u003ccode\u003emain.go\u003c/code\u003e file, you can go ahead and run your program. To run a \u003ccode\u003emain.go\u003c/code\u003e file, you can follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen your Terminal or command prompt.\u003c/li\u003e\n\u003cli\u003eNavigate to the directory where your \u003ccode\u003emain.go\u003c/code\u003e file is located.\u003c/li\u003e\n\u003cli\u003eType the command \u003ccode\u003ego run main.go\u003c/code\u003e in the Terminal and press Enter. This command will compile and run your Go program. If there are no errors in your code, you should see the output in the Terminal.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAlternatively, if you want to compile your Go program into an executable file, you can follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOpen your Terminal and navigate to the directory where your \u003ccode\u003emain.go\u003c/code\u003e file is located.\u003c/li\u003e\n\u003cli\u003eUse the command \u003ccode\u003ego build\u003c/code\u003e in the Terminal. This will generate an executable with the same name as your source code directory. You can then run this file by typing \u003ccode\u003e./myapp\u003c/code\u003e in the Terminal.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"faq\"\u003eFAQ\u003c/h2\u003e\n\u003cp\u003eWe cover more advanced topics in the form of answers to frequently asked questions.\u003c/p\u003e\n\u003ch3 id=\"main-go-location\"\u003eWhere to put the \u003ccode\u003emain.go\u003c/code\u003e file in the project?\u003c/h3\u003e\n\u003cp\u003eThe location of the \u003ccode\u003emain.go\u003c/code\u003e file can vary depending on the specific project and development environment you are using. In theory, the location inside the project can be whatever you want, the only thing to remember is that all files in the directory where \u003ccode\u003emain.go\u003c/code\u003e is located must be of the \u003ccode\u003emain\u003c/code\u003e package.\u003c/p\u003e\n\u003cp\u003eIn practice, however, there are two common approaches to locating the \u003ccode\u003emain.go\u003c/code\u003e file.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePutting the \u003ccode\u003emain.go\u003c/code\u003e file in the root directory of the project - if you are creating a small project or a single-file Go program.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emyapp/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── somecode.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── main.go\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eFor larger projects, it is common to organize code into packages and subdirectories. Commands (executable programs) are usually placed in a directory named \u003ccode\u003ecmd\u003c/code\u003e. In the \u003ccode\u003ecmd\u003c/code\u003e directory, you can create a subdirectory for each command you want to build, and each subdirectory contains a \u003ccode\u003emain.go\u003c/code\u003e file with the \u003ccode\u003emain\u003c/code\u003e package and \u003ccode\u003emain()\u003c/code\u003e function.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emyapp/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── cmd\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ ├── app1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ \u003cspan class=\"p\"\u003e|\u003c/span\u003e └── main.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ └── app2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ └── main.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── pkg/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ └── ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── internal/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ └── ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── ...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"is-the-maingo-file-the-main-package-and-the-main-function-required-in-a-go-project\"\u003eIs the \u003ccode\u003emain.go\u003c/code\u003e file, the \u003ccode\u003emain\u003c/code\u003e package and the \u003ccode\u003emain()\u003c/code\u003e function required in a Go project?\u003c/h3\u003e\n\u003cp\u003eNo, a Go project does not need to have a file, package and function \u003ccode\u003emain\u003c/code\u003e. Then it is not intended to be built as an executable program, but rather as a package (library) that can be imported and used by other programs.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003emain()\u003c/code\u003e function in the \u003ccode\u003emain\u003c/code\u003e package is required in a Go project that is intended to be built as an executable program. This function is the entry point of the program and it is where the execution of the program begins.\u003c/p\u003e\n\u003ch3 id=\"is-it-possible-to-import-the-main-package\"\u003eIs it possible to import the \u003ccode\u003emain\u003c/code\u003e package?\u003c/h3\u003e\n\u003cp\u003eNo, you cannot import the \u003ccode\u003emain\u003c/code\u003e package in Go. The \u003ccode\u003emain\u003c/code\u003e is a special package that is used to create executable programs. It is not intended to be imported by other packages. Trying to do this you will get an error from the compiler: \u003ccode\u003eimport \u0026quot;\u0026lt;package-name\u0026gt;\u0026quot; is a program, not an importable package\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eOther packages that you create can be imported by the \u003ccode\u003emain\u003c/code\u003e package, but the \u003ccode\u003emain\u003c/code\u003e itself cannot be imported by any other package.\u003c/p\u003e\n\u003ch3 id=\"what-is-the-difference-between-the-main-and-init-functions-in-go\"\u003eWhat is the difference between the \u003ccode\u003emain()\u003c/code\u003e and \u003ccode\u003einit()\u003c/code\u003e functions in Go?\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003einit()\u003c/code\u003e and \u003ccode\u003emain()\u003c/code\u003e are two distinct functions with different purposes.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003einit()\u003c/code\u003e is a special function that is executed automatically when a Go program starts. Its purpose is to perform any initialization tasks that need to be done before the \u003ccode\u003emain()\u003c/code\u003e function runs. The \u003ccode\u003einit()\u003c/code\u003e can be defined in any package, and multiple such functions can be defined in the same package. They are then run all before the \u003ccode\u003emain()\u003c/code\u003e function.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003emain()\u003c/code\u003e function is the entry point of a Go program. It is the function that is executed when the application starts. It can be defined only once in a program, and it must be defined in the \u003ccode\u003emain\u003c/code\u003e package.\u003c/p\u003e\n\u003cp\u003eTo summarize, the \u003ccode\u003einit()\u003c/code\u003e function is used for initialization tasks, and it is executed automatically before the \u003ccode\u003emain()\u003c/code\u003e function. The \u003ccode\u003emain()\u003c/code\u003e is the entry point of a Go program, and it is executed after the \u003ccode\u003einit()\u003c/code\u003e function (if it exists).\u003c/p\u003e\n\u003ch3 id=\"can-i-have-multiple-main-functions-in-one-project\"\u003eCan I have multiple \u003ccode\u003emain()\u003c/code\u003e functions in one project?\u003c/h3\u003e\n\u003cp\u003eIn Go, it is not possible to have multiple \u003ccode\u003emain()\u003c/code\u003e functions in the same \u003ccode\u003emain\u003c/code\u003e package. This is because the \u003ccode\u003emain()\u003c/code\u003e is a special function that serves as the entry point for the executable program.\u003c/p\u003e\n\u003cp\u003eHowever, you can have multiple \u003ccode\u003emain\u003c/code\u003e packages in the same project, each with its own \u003ccode\u003emain()\u003c/code\u003e function. The only requirement is that each of these \u003ccode\u003emain\u003c/code\u003e packages be in a separate folder. This is how you organize the code in projects that have multiple executables. Each command (executable program) is placed in a separate subfolder in the \u003ccode\u003ecmd\u003c/code\u003e directory. Each such subfolder contains the \u003ccode\u003emain.go\u003c/code\u003e file with the \u003ccode\u003emain()\u003c/code\u003e function in the \u003ccode\u003emain\u003c/code\u003e package. See the answer to the question \u003ca href=\"https://gosamples.dev/main-function-package-file/#main-go-location\"\u003e\u0026ldquo;Where to put the main.go file in the project?\u0026rdquo;\u003c/a\u003e for more details.\u003c/p\u003e\n\u003ch3 id=\"can-the-main-package-in-go-consist-of-multiple-files\"\u003eCan the \u003ccode\u003emain\u003c/code\u003e package in Go consist of multiple files?\u003c/h3\u003e\n\u003cp\u003eYes, the \u003ccode\u003emain\u003c/code\u003e package in Go can consist of multiple files. The only disadvantage you need to keep in mind is that you need to specify all the files containing the \u003ccode\u003emain\u003c/code\u003e package when running through the \u003ccode\u003ego run\u003c/code\u003e command. Also, a multi-file \u003ccode\u003emain\u003c/code\u003e package, like a single-file package, can only contain one \u003ccode\u003emain()\u003c/code\u003e function.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s assume that you want to split the \u003ccode\u003emain\u003c/code\u003e package into two files: \u003ccode\u003emain.go\u003c/code\u003e and \u003ccode\u003efoo.go\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emyapp/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── foo.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── main.go\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAn example code of the \u003ccode\u003emain.go\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAn example code of the \u003ccode\u003efoo.go\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see, both files belong to the \u003ccode\u003emain\u003c/code\u003e package.\u003c/p\u003e\n\u003cp\u003eIf you run the above program with the \u003ccode\u003ego run main.go\u003c/code\u003e command, you will get an error: \u003ccode\u003e./main.go:4:2: undefined: foo\u003c/code\u003e. This is because you have not specified all the \u003ccode\u003emain\u003c/code\u003e package files that are needed to run the application. If you run this program with the \u003ccode\u003ego run main.go foo.go\u003c/code\u003e command, then it will run without errors:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efoo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eProviding a list of all the files of the \u003ccode\u003emain\u003c/code\u003e package to the \u003ccode\u003ego run\u003c/code\u003e can be troublesome especially if this package is split into many files. Therefore, some simplification has been made and the multi-file \u003ccode\u003emain\u003c/code\u003e package can also be run via the \u003ccode\u003ego run .\u003c/code\u003e command, which runs all the files in the current folder.\u003c/p\u003e\n\u003cp\u003eIf you run the \u003ccode\u003ego build\u003c/code\u003e or \u003ccode\u003ego install\u003c/code\u003e commands you must also remember to specify all the files of the \u003ccode\u003emain\u003c/code\u003e package: \u003ccode\u003ego build main.go foo.go\u003c/code\u003e or use the default versions of these commands that build/install files from the current directory: \u003ccode\u003ego build\u003c/code\u003e and \u003ccode\u003ego install\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"does-the-main-package-have-to-contain-the-main-function\"\u003eDoes the \u003ccode\u003emain\u003c/code\u003e package have to contain the \u003ccode\u003emain()\u003c/code\u003e function?\u003c/h3\u003e\n\u003cp\u003eYes, in Go, the \u003ccode\u003emain\u003c/code\u003e package must contain a function named \u003ccode\u003emain()\u003c/code\u003e. When you run a program, the Go compiler looks for the \u003ccode\u003emain()\u003c/code\u003e function in the \u003ccode\u003emain\u003c/code\u003e package and executes it. If the \u003ccode\u003emain()\u003c/code\u003e function is not present or has a different signature, the compiler will not be able to execute the program, and you will get a compile-time error: \u003ccode\u003eruntime.main_main·f: function main is undeclared in the main package\u003c/code\u003e.\u003c/p\u003e",
    "date": "2023-03-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "af42eda6ae8d3a690afe7a89870c96bb",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Testing with a Mock Interface Ep. 8",
    "url": "https://www.ardanlabs.com/blog/2023/03/interfaces-101-testing-with-a-mock-interface-ep-8.html",
    "resume": "Introduction In episode 7, Miki discussed design considerations to keep in mind while creating interfaces in Go with the first idea he proposed being that an interface should represent what we need from a type, and not what is stored on the type. To add some clarity to this thought, Miki explained how the io.Reader and io.Writer interfaces each require one method to be implemented although the underlying concrete type may store more information.",
    "date": "2023-03-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6464d2484ca0fed70cabc8beda5b1683",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Synchronization Patterns in Go",
    "url": "https://www.reddit.com/r/golang/comments/11vtbod/synchronization_patterns_in_go/",
    "resume": "",
    "date": "2023-03-19T18:29:13Z",
    "vote": 0
  },
  {
    "id": "63ce972019ed02c4c27fedc43e9dff52",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Boolean Satisfiability (SAT) Solver In 68 Lines of Go",
    "url": "https://www.reddit.com/r/golang/comments/11vrov5/boolean_satisfiability_sat_solver_in_68_lines_of/",
    "resume": "",
    "date": "2023-03-19T17:39:31Z",
    "vote": 0
  },
  {
    "id": "e7d215ad9d09ea2ee30a7268387b20d2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Does using HTML template inheritance lead to copying the same base template in memory? How can this be improved?",
    "url": "https://www.reddit.com/r/golang/comments/11vo3jr/does_using_html_template_inheritance_lead_to/",
    "resume": "",
    "date": "2023-03-19T15:22:26Z",
    "vote": 0
  },
  {
    "id": "dfcc5c98aecaa646774302fb4f98300f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Fetch data with golang api",
    "url": "https://forum.golangbridge.org/t/fetch-data-with-golang-api/31054#post_4",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"Coding_Yaz\" data-post=\"3\" data-topic=\"31054\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/coding_yaz/40/11492_2.png\" class=\"avatar\"\u003e Coding_Yaz:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003ebut the display shows an invalid date\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003e\u003ccode\u003eSELECT * FROM blogs\u003c/code\u003e indicates that you could fetch several rows. But your Go code indicates that only one row is fetched. And your template indicates no .range of rows is displayed.\u003c/p\u003e\n\u003cp\u003eSo if you split your questions into three\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDoes the query works in pgAdmin (or similar)? How many rows?\u003c/li\u003e\n\u003cli\u003eDoes Go fetches the data correct?\u003c/li\u003e\n\u003cli\u003eDoes the template shows the data correct? Does it iterate (.range) over the rows correctly?\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eOr do I miss something?\u003c/p\u003e ",
    "date": "2023-03-19T10:47:33Z",
    "vote": 0
  },
  {
    "id": "f75fc0c5f3da076f88374d1b76fbed33",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Fetch data with golang api",
    "url": "https://forum.golangbridge.org/t/fetch-data-with-golang-api/31054#post_3",
    "resume": " \u003cp\u003eno error it works fine but the display shows an invalid date\u003c/p\u003e ",
    "date": "2023-03-19T10:25:34Z",
    "vote": 0
  },
  {
    "id": "8e8ef4924005968aeeec3010337d07e0",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "The power of single-method interfaces in Go",
    "url": "https://golang.ch/the-power-of-single-method-interfaces-in-go/",
    "resume": "\u003cp\u003eThe other day I was pondering the prevalence of single-method interfaces (SMI) in Go, and what makes them so practical and helpful. SMIs have proven to be a very successful software modeling tool for Go programmers, and you find them all over Go code-bases. I tried to think about the fundamentals, which brought me to [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/the-power-of-single-method-interfaces-in-go/\"\u003e\u003ca href=\"https://eli.thegreenplace.net/2023/the-power-of-single-method-interfaces-in-go/\"\u003eThe power of single-method interfaces in Go\u003c/a\u003e\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/the-power-of-single-method-interfaces-in-go/\"\u003e\u0026lt;a href=\u0026quot;https://eli.thegreenplace.net/2023/the-power-of-single-method-interfaces-in-go/\u0026quot;\u0026gt;The power of single-method interfaces in Go\u0026lt;/a\u0026gt;\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-03-19T04:28:14Z",
    "vote": 0
  },
  {
    "id": "06bdf66041589aaa45b80e604a395da7",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "The power of single-method interfaces in Go",
    "url": "https://golang.ch/?p=1739",
    "resume": "\u003cp\u003eThe other day I was pondering the prevalence of single-method interfaces (SMI) in Go, and what makes them so practical and helpful. SMIs have proven to be a very successful software modeling tool for Go programmers, and you find them all over Go code-bases. I tried to think about the fundamentals, which brought me to [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/?p=1739\"\u003e\u003ca href=\"https://eli.thegreenplace.net/2023/the-power-of-single-method-interfaces-in-go/\"\u003eThe power of single-method interfaces in Go\u003c/a\u003e\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/?p=1739\"\u003e\u0026lt;a href=\u0026quot;https://eli.thegreenplace.net/2023/the-power-of-single-method-interfaces-in-go/\u0026quot;\u0026gt;The power of single-method interfaces in Go\u0026lt;/a\u0026gt;\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-03-19T04:28:14Z",
    "vote": 0
  },
  {
    "id": "5b09da5b990014c40c56f4e31c99db47",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Fetch data with golang api",
    "url": "https://forum.golangbridge.org/t/fetch-data-with-golang-api/31054#post_2",
    "resume": " \u003cp\u003eAnd the error is…\u003cbr\u003e\nJust show it with\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eerr := db.Select(\u0026amp;blogs, “SELECT * FROM blogs”)\u003cbr\u003e\nif err != nil {\u003cbr\u003e\nlog.Println(“Error getting blogs:”, err)\u003cbr\u003e\nc.JSON(http.StatusInternalServerError, gin.H{“error”: “failed to get blogs”})\u003cbr\u003e\nreturn\u003cbr\u003e\n}\u003c/p\u003e\n\u003c/blockquote\u003e ",
    "date": "2023-03-19T00:07:02Z",
    "vote": 0
  },
  {
    "id": "3bf4d7b65c8906bd2ebfbf0fd4454ee5",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect values from a channel into a slice in Go? (I want a utility method, maybe from go-funk)",
    "url": "https://forum.golangbridge.org/t/how-to-collect-values-from-a-channel-into-a-slice-in-go-i-want-a-utility-method-maybe-from-go-funk/31046#post_5",
    "resume": " \u003cp\u003e\u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/skillian\"\u003e@skillian\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThere are pros and cons to both options. I think this is a spot where each developer, or team decides on its own on a case by case situation.\u003c/p\u003e\n\u003cp\u003eAnyways, what is the solution ? I had hopes for go-funk but indeed it seems that it cannot do this.\u003c/p\u003e\n\u003cp\u003eIs the author of go-funk reading this forum ? I could lend you a hand.\u003c/p\u003e ",
    "date": "2023-03-18T20:37:04Z",
    "vote": 0
  },
  {
    "id": "38841fe9efb54ea1fcba9e5d75aeff3e",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Fetch data with golang api",
    "url": "https://forum.golangbridge.org/t/fetch-data-with-golang-api/31054#post_1",
    "resume": " \u003cp\u003eI am creating a blog with golang gin framework rest api. When I call the block with id, my block is displayed without error on the screen, but when I call all the blogs in the data, it gives an invalid date error\u003c/p\u003e\n\u003cp\u003emain.go:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003etype Blog struct {\n\tID       int        `db:\"id\" json:\"id\"`\n\tTitle    string     `db:\"title\" json:\"title\"`\n\tBody     string     `db:\"body\" json:\"body\"`\n\tImageURL string     `db:\"image\" json:\"image\"`\n\tDate     *time.Time `db:\"date\" json:\"date\"`\n}\n\n\n// get blog by ID\n\tr.GET(\"/blog/:id\", func(c *gin.Context) {\n\t\tvar blog Blog\n\t\tid := c.Param(\"id\")\n\n\t\t// get blog from database\n\t\terr := db.Get(\u0026amp;blog, \"SELECT * FROM blogs WHERE id=$1\", id)\n\t\tif err != nil {\n\t\t\tif err == sql.ErrNoRows {\n\t\t\t\tc.JSON(http.StatusNotFound, gin.H{\"error\": \"blog not found\"})\n\t\t\t} else {\n\t\t\t\tc.JSON(http.StatusInternalServerError, gin.H{\"error\": \"failed to get blog\"})\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tc.JSON(http.StatusOK, blog)\n\t})\n\n\t// get all blogs\n\tr.GET(\"/blogs\", func(c *gin.Context) {\n\t\tvar blogs []Blog\n\n\t\t// get all blogs from database\n\t\terr := db.Select(\u0026amp;blogs, \"SELECT * FROM blogs\")\n\t\tif err != nil {\n\t\t\tc.JSON(http.StatusInternalServerError, gin.H{\"error\": \"failed to get blogs\"})\n\t\t\treturn\n\t\t}\n\n\t\tc.JSON(http.StatusOK, blogs)\n\t})\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eapp.js:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003euseEffect(() =\u0026gt; {\n    async function fetchData() {\n      try {\n        const response = await axios.get('http://localhost:8000/blog/1'); //this is working\n\n        setFirstPost(response.data);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    fetchData();\n\n    async function fetchSecondData() {\n      try {\n        const response = await axios.get('http://localhost:8000/blogs');//not working\n\n        setSecondPost(response.data);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    fetchSecondData();\n  }, []);\n\n  return (\n    \u0026lt;div className=\"blog\"\u0026gt;\n           \u0026lt;div className='blog-page'\u0026gt; \n                \u0026lt;h1\u0026gt; BLOG\u0026lt;/h1\u0026gt;\n            \u0026lt;/div\u0026gt;\n\n      {firstPost \u0026amp;\u0026amp; (\n        \u0026lt;div className=\"blog-first\"\u0026gt;\n          \u0026lt;div className=\"blog-firstpage\"\u0026gt;\n            \u0026lt;img src={firstPost.image} alt={firstPost.title} /\u0026gt;\n          \u0026lt;/div\u0026gt;\n          \u0026lt;div className=\"blog-text\"\u0026gt;\n            \u0026lt;h2\u0026gt;{firstPost.title}\u0026lt;/h2\u0026gt;\n            \u0026lt;h3\u0026gt;{new Date(firstPost.date).toLocaleString('en-US', { dateStyle: 'medium' })}\u0026lt;/h3\u0026gt;\n            \u0026lt;p\u0026gt;{firstPost.body}\u0026lt;/p\u0026gt;\n          \u0026lt;/div\u0026gt;\n          \n        \u0026lt;/div\u0026gt;\n      )}\n\n      {secondPost \u0026amp;\u0026amp; (\n        \u0026lt;div className=\"blog\"\u0026gt;\n          \u0026lt;div className=\"blog-secondpage\"\u0026gt;\n            \u0026lt;img src={secondPost.image} alt={secondPost.title} /\u0026gt;\n          \u0026lt;/div\u0026gt;\n          \u0026lt;div className=\"blog-text\"\u0026gt;\n            \u0026lt;h2\u0026gt;{secondPost.title}\u0026lt;/h2\u0026gt;\n            \u0026lt;h3\u0026gt;{new Date(secondPost.date).toLocaleString('en-US', { dateStyle: 'medium' })}\u0026lt;/h3\u0026gt;\n            \u0026lt;p\u0026gt;{secondPost.body}\u0026lt;/p\u0026gt;\n          \u0026lt;/div\u0026gt;\n         \n        \u0026lt;/div\u0026gt;\n      )}\n\n      {error \u0026amp;\u0026amp; \u0026lt;p\u0026gt;{error}\u0026lt;/p\u0026gt;}\n    \u0026lt;/div\u0026gt;\n  );\n}\n\nexport default Blog;\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-18T18:38:03Z",
    "vote": 0
  },
  {
    "id": "670c7a4640db02ec3c36ea7d5c459394",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Honest advice for New Golang devs",
    "url": "https://forum.golangbridge.org/t/honest-advice-for-new-golang-devs/30980#post_6",
    "resume": " \u003cp\u003eIf you enjoy it, then it is not hard.\u003c/p\u003e ",
    "date": "2023-03-18T18:15:27Z",
    "vote": 0
  },
  {
    "id": "7557c5e8de20e2bf592152102a96f8de",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect information in each package's source code directory when building a project",
    "url": "https://forum.golangbridge.org/t/how-to-collect-information-in-each-packages-source-code-directory-when-building-a-project/31018#post_2",
    "resume": " \u003cp\u003eHi, \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/lslightly\"\u003e@Lslightly\u003c/a\u003e, is there a reason you’re modifying the compiler to do this instead of using a package like \u003ca href=\"https://pkg.go.dev/golang.org/x/tools/go/packages\" rel=\"noopener nofollow ugc\"\u003egolang.org/x/tools/go/packages\u003c/a\u003e?\u003c/p\u003e ",
    "date": "2023-03-18T17:52:59Z",
    "vote": 0
  },
  {
    "id": "ee24158292a685f74ae161efac557f7c",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect values from a channel into a slice in Go? (I want a utility method, maybe from go-funk)",
    "url": "https://forum.golangbridge.org/t/how-to-collect-values-from-a-channel-into-a-slice-in-go-i-want-a-utility-method-maybe-from-go-funk/31046#post_4",
    "resume": " \u003cp\u003eI guess we all have different opinions.  From my perspective, the question would be “why depend on a library when I can write seven lines?”\u003c/p\u003e\n\u003cp\u003eNot to get into an argument, but considering that in \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/heidi\"\u003e@heidi\u003c/a\u003e’s last post, they said:\u003c/p\u003e\n\u003caside class=\"quote no-group\" data-username=\"heidi\" data-post=\"7\" data-topic=\"31024\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/heidi/40/11592_2.png\" class=\"avatar\"\u003e\u003ca href=\"https://forum.golangbridge.org/t/how-many-levels-of-pointer-indirection-can-you-have-at-runtime-is-there-no-limit/31024/7\"\u003eHow many levels of pointer indirection can you have at runtime? Is there no limit?\u003c/a\u003e\n\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003emost of the time I play around philosophical questions.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eI think it might be relevant to quote one of the Go proverbs:  \u003ca href=\"https://tip.golang.org/blog/supply-chain#a-little-copying-is-better-than-a-little-dependency\" rel=\"noopener nofollow ugc\"\u003e“A little copying is better than a little dependency”\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThat being said, I am not aware of any library that does this, but some of the projects that aim to make Go more functional might accept a PR.  In Go 1.18 and later, you could create your own package and put a generic version of the code I put above and then reference it from your other projects so that you don’t have to write it again.\u003c/p\u003e ",
    "date": "2023-03-18T17:44:31Z",
    "vote": 0
  },
  {
    "id": "86e427e8b5c9892b60fb12b319c6a348",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect values from a channel into a slice in Go? (I want a utility method, maybe from go-funk)",
    "url": "https://forum.golangbridge.org/t/how-to-collect-values-from-a-channel-into-a-slice-in-go-i-want-a-utility-method-maybe-from-go-funk/31046#post_3",
    "resume": " \u003cp\u003eHi \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/skillian\"\u003e@skillian\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ewhy write 7 more lines into a file, every time you need to solve the same problem ?  Is there a library that already does this ?\u003c/p\u003e ",
    "date": "2023-03-18T13:21:43Z",
    "vote": 0
  },
  {
    "id": "235132a86a820e66a583ac7b6f699615",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Error handling and Logging in a microservices architecture",
    "url": "https://forum.golangbridge.org/t/error-handling-and-logging-in-a-microservices-architecture/31052#post_1",
    "resume": " \u003cp\u003eHi guys,\u003c/p\u003e\n\u003cp\u003eI’m working on my first microservices application.\u003c/p\u003e\n\u003cp\u003eI’ve followed a training in which REST error are created like below:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003erest_errors.NewUnauthorizedError(\"invalid access token\")\nrest_errors.NewBadRequestError(\"invalid user id\")\nrest_errors.NewNotFoundError(\"item to delete not found\")\nrest_errors.NewInternalServerError(\"error when trying to unmarshal user login response\", errors.New(\"json parsing error\"))\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e… and it uses the below package:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003epackage rest_errors\n\nimport (\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n\t\"net/http\"\n)\n\ntype RestErr interface {\n\tMessage() string\n\tStatus() int\n\tError() string\n\tCauses() []interface{}\n}\n\ntype restErr struct {\n\tErrMessage string        `json:\"message\"`\n\tErrStatus  int           `json:\"status\"`\n\tErrError   string        `json:\"error\"`\n\tErrCauses  []interface{} `json:\"causes\"`\n}\n\nfunc (e restErr) Error() string {\n\treturn fmt.Sprintf(\"message: %s - status: %d - error: %s - causes: %v\",\n\t\te.ErrMessage, e.ErrStatus, e.ErrError, e.ErrCauses)\n}\n\nfunc (e restErr) Message() string {\n\treturn e.ErrMessage\n}\n\nfunc (e restErr) Status() int {\n\treturn e.ErrStatus\n}\n\nfunc (e restErr) Causes() []interface{} {\n\treturn e.ErrCauses\n}\n\nfunc NewRestError(message string, status int, err string, causes []interface{}) RestErr {\n\treturn restErr{\n\t\tErrMessage: message,\n\t\tErrStatus:  status,\n\t\tErrError:   err,\n\t\tErrCauses:  causes,\n\t}\n}\n\n\nfunc NewUnauthorizedError(message string) RestErr {\n\treturn restErr{\n\t\tErrMessage: message,\n\t\tErrStatus:  http.StatusUnauthorized,\n\t\tErrError:   \"unauthorized\",\n\t}\n}\n\nfunc NewBadRequestError(message string) RestErr {\n\treturn restErr{\n\t\tErrMessage: message,\n\t\tErrStatus:  http.StatusBadRequest,\n\t\tErrError:   \"bad_request\",\n\t}\n}\n\nfunc NewNotFoundError(message string) RestErr {\n\treturn restErr{\n\t\tErrMessage: message,\n\t\tErrStatus:  http.StatusNotFound,\n\t\tErrError:   \"not_found\",\n\t}\n}\n\n\nfunc NewInternalServerError(message string, err error) RestErr {\n\tresult := restErr{\n\t\tErrMessage: message,\n\t\tErrStatus:  http.StatusInternalServerError,\n\t\tErrError:   \"internal_server_error\",\n\t}\n\tif err != nil {\n\t\tresult.ErrCauses = append(result.ErrCauses, err.Error())\n\t}\n\treturn result\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis generates JSON responses like the one below:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003e{\n   \"message\":\"invalid access token\",\n   \"status\":401,\n   \"error\":\"unauthorized\",\n   \"causes\":\"\" // ALWAYS EMPTY EXCEPT FOR 500 errors\n}\n...\n{\n   \"message\":\"invalid user id\",\n   \"status\":400,\n   \"error\":\"bad_request\",\n   \"causes\":\"\" // ALWAYS EMPTY EXCEPT FOR 500 errors\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eQuestion 1\u003c/strong\u003e: When there’s an Internal Server Error (500), the \u003cstrong\u003ecauses\u003c/strong\u003e is returned and contains the raw error message. What do you think about that knowing that it is returned to the frontend?\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eQuestion 2\u003c/strong\u003e: In case of a Bad Request Error (400), my understanding is that the frontend must check the message text to figure out which param causes problem by doing something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-javascript\"\u003e// js here\n}catch(err){\n  if(err.code == 400){\n     if(err.msg == \"invalid user id\"){ // do something}\n     if(err.msg == \"invalid xxx xx\"){ // do something else}\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWouldn’t it be more appropriate to change the \u003ccode\u003erestErr\u003c/code\u003e struct by adding \u003ccode\u003eFields\u003c/code\u003e like below ?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003etype restErr struct {\n     ErrMessage string        `json:\"message\"`\n     ErrStatus  int           `json:\"status\"`\n     ErrError   string        `json:\"error\"`\n     ErrFields   []string `json:\"fields\"`.   // HERE\n     ErrCauses  []interface{} `json:\"causes\"`\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003e\n\u003ca name=\"part-2-i-need-to-set-up-logging-at-a-production-level-1\" class=\"anchor\" href=\"https://forum.golangbridge.org#part-2-i-need-to-set-up-logging-at-a-production-level-1\"\u003e\u003c/a\u003ePart 2: I need to set up logging at a production level.\u003c/h2\u003e\n\u003cp\u003eToday, I’m logging the requests by using a Zerolog middleware for Gin:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-go\"\u003efunc Middleware() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tt := time.Now()\n\n\t\t// before request\n\t\tc.Next()\n\t\t// after request\n\t\tlatency := time.Since(t)\n\t\tmsg := c.Errors.String()\n\t\tif msg == \"\" {\n\t\t\tmsg = \"Request\"\n\t\t}\n\n\t\tswitch status := c.Writer.Status(); {\n\t\tcase status \u0026gt;= 400:\n\t\t\tl.logger.Error().\n\t\t\t\tStr(\"method\", c.Request.Method).\n\t\t\t\tStr(\"host\", c.Request.Host).\n\t\t\t\tStr(\"url\", c.Request.URL.Path).\n\t\t\t\tInt(\"status\", c.Writer.Status()).\n\t\t\t\tDur(\"lat\", latency).\n\t\t\t\tMsg(msg)\n\t\t\tbreak\n\t\tcase status \u0026gt;= 300:\n\t\t\tl.logger.Warn().\n\t\t\t\tStr(\"method\", c.Request.Method).\n\t\t\t\tStr(\"host\", c.Request.Host).\n\t\t\t\tStr(\"url\", c.Request.URL.Path).\n\t\t\t\tInt(\"status\", c.Writer.Status()).\n\t\t\t\tDur(\"lat\", latency).\n\t\t\t\tMsg(msg)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tl.logger.Info().\n\t\t\t\tStr(\"method\", c.Request.Method).\n\t\t\t\tStr(\"host\", c.Request.Host).\n\t\t\t\tStr(\"url\", c.Request.URL.Path).\n\t\t\t\tInt(\"status\", c.Writer.Status()).\n\t\t\t\tDur(\"lat\", latency).\n\t\t\t\tMsg(msg)\n\t\t}\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand in case of an error (\u003cstrong\u003ethe tricky part for me\u003c/strong\u003e), I just log the following as soon as the error occurs (controller, service, httpclient or persistence layer):\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe service name,\u003c/li\u003e\n\u003cli\u003ethe host name,\u003c/li\u003e\n\u003cli\u003ethe package name,\u003c/li\u003e\n\u003cli\u003ethe function name,\u003c/li\u003e\n\u003cli\u003ethe raw error message\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have a couple of questions here:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI’ve read that logging should only occur in the controller. Is-it a correct assumption?\u003c/li\u003e\n\u003cli\u003eIf so, in case an error occurs at the persistance layer, then I need to pass the error up to the controller along with some information like the package and function name in which the error occurred…but today all my methods across services, repositories and clients are using a \u003ccode\u003erestErr\u003c/code\u003e struct as an error response. So, I guess that I should find a way to add these info into the \u003ccode\u003erestErr\u003c/code\u003e struct (and add \u003ccode\u003ejson:\"-\"\u003c/code\u003e in the JSON tag to prevent it from being exposed to the frontend). What do you think?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-golang\"\u003etype UserRepository interface {\n  Create(*userdom.CreateRequest) (*userdom.User, rest_errors.RestErr)\n  GetById(string) (*userdom.User, rest_errors.RestErr)\n  Delete(string) rest_errors.RestErr\n} \n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-18T13:18:43Z",
    "vote": 0
  },
  {
    "id": "8976620c35b11fa37714f8399903ea52",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Bug (fixed in 1.20?) concerning func variables",
    "url": "https://forum.golangbridge.org/t/bug-fixed-in-1-20-concerning-func-variables/31026#post_3",
    "resume": " \u003cp\u003eThanks! Inlining does seem to be the culprit somehow, doesn’t it? I had already considered asking Reddit; guess you helped me decide \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/slightly_smiling_face.png?v=12\" title=\":slightly_smiling_face:\" class=\"emoji\" alt=\":slightly_smiling_face:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e\u003c/p\u003e ",
    "date": "2023-03-18T00:11:51Z",
    "vote": 0
  },
  {
    "id": "d59eea15241969981b70ee6c33ec169f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Bug (fixed in 1.20?) concerning func variables",
    "url": "https://forum.golangbridge.org/t/bug-fixed-in-1-20-concerning-func-variables/31026#post_2",
    "resume": " \u003cp\u003eThis is a really interesting question that is driving me \u003cem\u003e\u003cstrong\u003einsane\u003c/strong\u003e\u003c/em\u003e!  In 1.19, when your empty struct variables line is commented out, \u003ccode\u003etest\u003c/code\u003e is inlined but the compiler is somehow missing/ignoring the \u003ccode\u003ea, b = b, a\u003c/code\u003e swap.  I can’t tell how that’s happening, though!  I tried compiling with \u003ccode\u003eGOSSAFUNC=main\u003c/code\u003e but even the AST at the beginning is already rewritten to inline the loop which drops the body of the second function!?\u003c/p\u003e\n\u003cp\u003eI \u003cem\u003e\u003cstrong\u003ehighly\u003c/strong\u003e\u003c/em\u003e recommend asking on Reddit.  If you don’t, I will!  I’d love to understand what’s happening here!\u003c/p\u003e ",
    "date": "2023-03-17T23:09:20Z",
    "vote": 0
  },
  {
    "id": "621dd3c4910b765ce7d59882e534a605",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Honest advice for New Golang devs",
    "url": "https://forum.golangbridge.org/t/honest-advice-for-new-golang-devs/30980#post_5",
    "resume": " \u003cp\u003eThanks for your advice and contributions. Kubernetes is a long way buh don’t you think learning stuff like DevOps without actually been in the industry is hard?. Someone actually mentioned that to me one time.\u003c/p\u003e ",
    "date": "2023-03-17T21:58:11Z",
    "vote": 0
  },
  {
    "id": "c183938b4004a3a0a8ef0ee94f11cbb9",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect values from a channel into a slice in Go? (I want a utility method, maybe from go-funk)",
    "url": "https://forum.golangbridge.org/t/how-to-collect-values-from-a-channel-into-a-slice-in-go-i-want-a-utility-method-maybe-from-go-funk/31046#post_2",
    "resume": " \u003cp\u003eWhy do you not want to implement this yourself?  It seems you could just do this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003efunc readEverythingFromChannel(ch chan *Something) []*Something {\n    somethings := make([]*Something)\n    for s := range ch {\n        somethings = append(somethings, s)\n    }\n    return somethings\n}\n\u003c/code\u003e\u003c/pre\u003e ",
    "date": "2023-03-17T20:22:09Z",
    "vote": 0
  },
  {
    "id": "9227966a32dd8b2c6173dd337e3f96a8",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How to collect values from a channel into a slice in Go? (I want a utility method, maybe from go-funk)",
    "url": "https://forum.golangbridge.org/t/how-to-collect-values-from-a-channel-into-a-slice-in-go-i-want-a-utility-method-maybe-from-go-funk/31046#post_1",
    "resume": " \u003cp\u003eDoes go-funk have anything to collect values from a channel into a slice in Go? Any library that has ?\u003c/p\u003e\n\u003cp\u003eI do not want to implement this myself-\u003c/p\u003e ",
    "date": "2023-03-17T18:48:26Z",
    "vote": 0
  },
  {
    "id": "dfdb393ce6f5f7e576936288b81ee9be",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Some confussion on Slice",
    "url": "https://forum.golangbridge.org/t/some-confussion-on-slice/31044#post_2",
    "resume": " \u003cp\u003eA \u003ccode\u003enil\u003c/code\u003e slice will not reference any array; its underlying pointer will be \u003ccode\u003enil\u003c/code\u003e.  If you make a zero-sized slice, it is implementation defined what will happen.  The current Go compiler will point the underlying array to a shared 0-size memory location.\u003c/p\u003e ",
    "date": "2023-03-17T17:42:39Z",
    "vote": 0
  },
  {
    "id": "c86e643992fe94c2801510e4543704af",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Some confussion on Slice",
    "url": "https://forum.golangbridge.org/t/some-confussion-on-slice/31044#post_1",
    "resume": " \u003cp\u003eHi , Am a beginner in go. when i use to know about Slice its quite interesting.\u003cbr\u003e\nActually , Slice is dynamic and will have references to its original array. but what if we declare an empty slice. what will they reference to ? . Am wondering on that , if anyone knows it . please share your answer.\u003c/p\u003e ",
    "date": "2023-03-17T16:27:49Z",
    "vote": 0
  },
  {
    "id": "7e728c323c321bbb2c5ce6f10b9d3a2d",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Moving from 1.19.x to 1.20.x",
    "url": "https://forum.golangbridge.org/t/moving-from-1-19-x-to-1-20-x/30927#post_7",
    "resume": " \u003cp\u003eI think I recognise this style of error. My thought is on the lines of some code (the flux package?) setting up command line flags in an init() function, thus hijacking the flag handling of the test.\u003c/p\u003e ",
    "date": "2023-03-17T12:37:08Z",
    "vote": 0
  },
  {
    "id": "c9291f72dc19dc462682b8e44d1833e5",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Honest advice for New Golang devs",
    "url": "https://forum.golangbridge.org/t/honest-advice-for-new-golang-devs/30980#post_4",
    "resume": " \u003cp\u003eA language is just a small part of a job.\u003c/p\u003e\n\u003cp\u003eGolang is used heavily in the Kubernetes environment.\u003c/p\u003e\n\u003cp\u003eAfter learning Go I would learn Kubernetes, and after that combine the knowledge by writing Kubernetes operators. That’s a lot to learn, but I think it’s worth it. Kubernetes is open source, while AWS, Google cloud, Azure are closed source. You can run your own Kubernetes (for learning) via minikube easily.\u003c/p\u003e\n\u003cp\u003eGood luck\u003c/p\u003e ",
    "date": "2023-03-17T12:30:03Z",
    "vote": 0
  },
  {
    "id": "e0f2dd650c6825ac348b521310410c43",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How many levels of pointer indirection can you have at runtime? Is there no limit?",
    "url": "https://forum.golangbridge.org/t/how-many-levels-of-pointer-indirection-can-you-have-at-runtime-is-there-no-limit/31024#post_7",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"skillian\" data-post=\"6\" data-topic=\"31024\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/skillian/40/7876_2.png\" class=\"avatar\"\u003e skillian:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI think we would \u003cem\u003ereally\u003c/em\u003e like to see what you’re coding!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eso would I, most of the time I play around philosophical questions.\u003c/p\u003e ",
    "date": "2023-03-17T12:25:41Z",
    "vote": 0
  },
  {
    "id": "de3806246b6496e27ed3e235e6101f5f",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How many levels of pointer indirection can you have at runtime? Is there no limit?",
    "url": "https://forum.golangbridge.org/t/how-many-levels-of-pointer-indirection-can-you-have-at-runtime-is-there-no-limit/31024#post_6",
    "resume": " \u003caside class=\"quote no-group\" data-username=\"heidi\" data-post=\"5\" data-topic=\"31024\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/heidi/40/11592_2.png\" class=\"avatar\"\u003e heidi:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBy the way, why is that ? More details please.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThe \u003ccode\u003e\u0026amp;\u003c/code\u003e operator takes the address of its operand, but that only works if the value you’re taking the address of is \u003cem\u003eaddressable\u003c/em\u003e.  So you can do this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evar i int = 5\nvar p *int = \u0026amp;i\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBecause that means to store 5 into \u003ccode\u003ei\u003c/code\u003e and then take the address of \u003ccode\u003ei\u003c/code\u003e and store it into \u003ccode\u003ep\u003c/code\u003e.  You cannot, however, do this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evar p *int = \u0026amp;5\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBecause you’re asking to take the address of \u003ccode\u003e5\u003c/code\u003e, but what would that even mean?  The pointer has to point to \u003cem\u003esomething\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThere’s an exception to this:  \u003ccode\u003evar s *MyStruct  = \u0026amp;MyStruct{...}\u003c/code\u003e.  This is a special case in Go that essentially translates to:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003evar s *MyStruct = new(MyStruct)\n*s = MyStruct{\"hello\", 42}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI suspect the language designers saw the use of pointers to structs as common enough that they were OK with adding the “magic” that allows you to take the address of a struct literal, but they did not go as far as allowing you to take the address \u003cem\u003eof the address\u003c/em\u003e of a struct literal, just like they don’t let you take the address of other literal values.\u003c/p\u003e\n\u003caside class=\"quote no-group\" data-username=\"heidi\" data-post=\"5\" data-topic=\"31024\"\u003e\n\u003cdiv class=\"title\"\u003e\n\u003cdiv class=\"quote-controls\"\u003e\u003c/div\u003e\n\u003cimg loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://forum.golangbridge.org/user_avatar/forum.golangbridge.org/heidi/40/11592_2.png\" class=\"avatar\"\u003e heidi:\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhy is it, that in your playground example, the limit is 1023 ? why can I not indirect 1024 times ?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/aside\u003e\n\u003cp\u003eThere are 1024 indirections:  The final indirection is stored into \u003ccode\u003ep\u003c/code\u003e itself.  You could keep copying and pasting the \u003ccode\u003e*\u003c/code\u003es and increment the count to as many as you want as far as I can tell.  I meant for the example to be silly, though.  If you need 1024+ indirections, I think we would \u003cem\u003ereally\u003c/em\u003e like to see what you’re coding!\u003c/p\u003e ",
    "date": "2023-03-17T12:24:34Z",
    "vote": 0
  },
  {
    "id": "feb2e9adb78176c2851df31a6032b8ea",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Plain SQL or Query builder",
    "url": "https://forum.golangbridge.org/t/plain-sql-or-query-builder/30939#post_4",
    "resume": " \u003cp\u003eThere is a Go package called Bob. It generates Go code for accessing the database. I like this way because you get autocomplete in the IDE and the basic crud operations are easier.\u003c/p\u003e ",
    "date": "2023-03-17T12:20:26Z",
    "vote": 0
  },
  {
    "id": "d9d06586da3dd84db7f58b8e8a0cf2b1",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "Golang app memory requirement",
    "url": "https://forum.golangbridge.org/t/golang-app-memory-requirement/30844#post_6",
    "resume": " \u003cp\u003eThe actual memory requirement of your Golang app will depend on various factors, including the size of your codebase, the number of concurrent requests, and the amount of data you’re working with. It’s always a good idea to monitor the memory usage of your app and optimize it as needed to ensure optimal performance. You can ask for help from a company that specializes in application development, for example \u003ca href=\"https://smartengines.com/\" rel=\"noopener nofollow ugc\"\u003ehttps://smartengines.com/\u003c/a\u003e. I am sure that their experience and knowledge will be useful for you.\u003c/p\u003e ",
    "date": "2023-03-17T12:19:58Z",
    "vote": 0
  },
  {
    "id": "d390b0ed30040af27327c64426510603",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How many levels of pointer indirection can you have at runtime? Is there no limit?",
    "url": "https://forum.golangbridge.org/t/how-many-levels-of-pointer-indirection-can-you-have-at-runtime-is-there-no-limit/31024#post_5",
    "resume": " \u003cp\u003eHi all, but especially \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/skillian\"\u003e@skillian\u003c/a\u003e  and \u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/metalymph\"\u003e@Metalymph\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI just remembered the notions I was confusing. Look at this code:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003etype MyStruct struct {\n    Field1 string\n    Field2 int\n}\n\nvar s *MyStruct = \u0026amp;MyStruct{\"hello\", 42} // compiles\nvar t **MyStruct = \u0026amp;\u0026amp;MyStruct{\"hello\", 42} // does NOT compile\nvar u **MyStruct = \u0026amp;(\u0026amp;MyStruct{\"hello\", 42}) // does NOT compile\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis is the limit I was thinking about. So you can have an “infinite” pointer indirection, but you cannot user the address operator twice in a row.\u003c/p\u003e\n\u003cp\u003eBy the way, why is that ? More details please.\u003c/p\u003e\n\u003cp\u003e\u003ca class=\"mention\" href=\"https://forum.golangbridge.org/u/skillian\"\u003e@skillian\u003c/a\u003e\u003cbr\u003e\nWhy is it, that in your playground example, the limit is 1023 ? why can I not indirect 1024 times ?\u003c/p\u003e ",
    "date": "2023-03-17T12:09:09Z",
    "vote": 0
  },
  {
    "id": "936965afda07bd08434fba4da14f1b81",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How many levels of pointer indirection can you have at runtime? Is there no limit?",
    "url": "https://forum.golangbridge.org/t/how-many-levels-of-pointer-indirection-can-you-have-at-runtime-is-there-no-limit/31024#post_4",
    "resume": " \u003cp\u003eHi guys,\u003c/p\u003e\n\u003cp\u003eI vaguely remember there is such a limitation in Go, clearly it is not about pointers. Then what is it about ? Maybe a pointer to an interface, or interface casting related.\u003c/p\u003e\n\u003cp\u003eThere was a post, on this forum, last year (months ago) discussing this. There is a limit of 2 but I cannot remember for what.\u003c/p\u003e ",
    "date": "2023-03-17T12:02:37Z",
    "vote": 0
  },
  {
    "id": "ba77a0a1c4df0fd02373f4d1e8ce4ec9",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How many levels of pointer indirection can you have at runtime? Is there no limit?",
    "url": "https://forum.golangbridge.org/t/how-many-levels-of-pointer-indirection-can-you-have-at-runtime-is-there-no-limit/31024#post_3",
    "resume": " \u003cp\u003eAt least 1024 \u003cimg src=\"https://forum.golangbridge.org/images/emoji/google/grin.png?v=12\" title=\":grin:\" class=\"emoji\" alt=\":grin:\" loading=\"lazy\" width=\"20\" height=\"20\"\u003e \u003ca href=\"https://go.dev/play/p/GfplrZdO1cT\" rel=\"noopener nofollow ugc\"\u003eGo Playground - The Go Programming Language\u003c/a\u003e\u003c/p\u003e ",
    "date": "2023-03-17T11:18:07Z",
    "vote": 0
  },
  {
    "id": "9f618154c15fb433d256d3082d12c5b3",
    "source": {
      "path": "golang",
      "name": "Golang Weekly",
      "url": "https://cprss.s3.amazonaws.com/golangweekly.com.xml"
    },
    "name": "Structured logging is a go",
    "url": "https://golangweekly.com/issues/452",
    "resume": "\u003ctable border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\"\u003e\n  \u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003cdiv\u003e    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\n\u003ctd align=\"left\" style=\"padding-left: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e#​452 — March 17, 2023\u003c/p\u003e\u003c/td\u003e\n\u003ctd align=\"right\" style=\"padding-right: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136984/rss\" style=\" color: #0099b4;\"\u003eUnsub\u003c/a\u003e  |  \u003ca href=\"https://golangweekly.com/link/136985/rss\" style=\" color: #0099b4;\"\u003eWeb Version\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003c/table\u003e\n    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 12px;  padding-left: 12px;\"\u003e\u003cp\u003eThe \u003cem\u003eGo Weekly\u003c/em\u003e Newsletter\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136987/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/mtipoebf4iiwhkej1rq1.jpg\" width=\"640\" style=\"    line-height: 100%;       \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136987/rss\" title=\"blog.felixge.de\" style=\" color: #0099b4;    font-size: 1.1em; line-height: 1.4em;\"\u003eFlameScope: Visualize CPU Samples from Go Execution Traces\u003c/a\u003e\u003c/span\u003e — FlameScope is a performance visualization tool from Netflix using flame graphs that can now be used with Go 1.19 thanks to a patch and this work from Felix. \u003cem\u003e“Please note that this is still relatively experimental..”\u003c/em\u003e\u003c/p\u003e\n  \u003cp\u003eFelix Geisendörfer \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136988/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eThe \u003ccode\u003eslog\u003c/code\u003e / Structured Logging Proposal is Accepted\u003c/a\u003e\u003c/span\u003e — Russ Cox has marked the \u003ca href=\"https://golangweekly.com/link/136989/rss\" style=\" color: #0099b4;   \"\u003estructured logging with levels proposal\u003c/a\u003e (a.k.a. ‘slog’) as accepted – nonetheless, discussion continues.\u003c/p\u003e\n  \u003cp\u003eRuss Cox \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eIn other proposal related news, Russ also ticked the \u003ca href=\"https://golangweekly.com/link/136990/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eWebAssembly System Interface / WASI target proposal.\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136986/rss\" style=\" color: #0099b4;   \"\u003e\u003cimg src=\"https://copm.s3.amazonaws.com/d6817365.png\" width=\"146\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%;    \"\u003e\u003c/a\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136986/rss\" title=\"shortcut.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eDon’t Let Your Issue Tracker Be a Four-Letter Word. Use Shortcut\u003c/a\u003e\u003c/span\u003e — The best issue tracking software is one that software developers are actually happy to use.\u003c/p\u003e\n  \u003cp\u003eShortcut (formerly Clubhouse.io) \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136991/rss\" title=\"betterstack.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eA Comprehensive Guide to Structured Logging in Go\u003c/a\u003e\u003c/span\u003e — Further to the recently accepted proposal (above), this post takes a practical approach comparing the structured logging approach to \u003ccode\u003elog\u003c/code\u003e, how \u003ccode\u003eslog\u003c/code\u003e addresses its limitations, how to get started with slog, as well as some alternatives you might still want to consider.\u003c/p\u003e\n  \u003cp\u003eBetter Stack Team \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136992/rss\" title=\"appliedgo.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eThe One-and-Only, Must-Have, Eternal Go Project Layout?\u003c/a\u003e\u003c/span\u003e — The author notes this is a misleading title because there’s \u003cem\u003eno such thing\u003c/em\u003e as a single way to do it. Nonetheless, there are some things you can do to structure projects well, he says.\u003c/p\u003e\n  \u003cp\u003eChristoph Berger \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eIN BRIEF:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThe \u003cem\u003eGo Time Podcast\u003c/em\u003e tackles \u003ca href=\"https://golangweekly.com/link/136993/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003e▶️ the bits of Go we avoid\u003c/a\u003e (and why).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBrandur Leach has \u003ca href=\"https://golangweekly.com/link/136994/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ea new policy around \u003ccode\u003eutil\u003c/code\u003e packages\u003c/a\u003e – he doesn't want to see a single, 'catch all' util package, but instead have multiple such packages oriented around common features.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136995/rss\" title=\"www.dolthub.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eReal World Go Concurrency Examples\u003c/a\u003e\u003c/span\u003e — Not sure we can ever have enough of these examples, and here you’ll see blocked select statements, \u003ccode\u003etime.Sleep\u003c/code\u003e deadlocks, and how easy the new atomic types can make your concurrent life.\u003c/p\u003e\n  \u003cp\u003eJason Fulghum (DoltHub) \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136996/rss\" title=\"www.artur-rodrigues.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eReverse Proxy with Dynamic Backend Selection\u003c/a\u003e\u003c/span\u003e — The example uses Caddy and encodes information into a JWT to route customers to the appropriate backend server, all in just a few lines of code.\u003c/p\u003e\n  \u003cp\u003eArtur Rodrigues \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136997/rss\" title=\"bit.ly\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eRun Your First Temporal Application with the Go SDK\u003c/a\u003e\u003c/span\u003e — Enjoy this 10-minute tutorial to explore several runs of a Temporal Workflow application using Temporal and the Go SDK.\u003c/p\u003e\n  \u003cp\u003eTemporal Technologies \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136998/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eAdvanced Markdown Processing in Go\u003c/a\u003e\u003c/span\u003e — Using \u003ca href=\"https://golangweekly.com/link/136999/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003egomarkdown/markdown\u003c/a\u003e.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eKrzysztof Kowalczyk\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137000/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eHow to Embed a Tailscale Funnel in Your App\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eTailscale\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e🛠 Code \u0026amp; Tools\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137001/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eTask 3.22.0: Task Runner / \u003ccode\u003ecode\u003c/code\u003e Alternative\u003c/a\u003e\u003c/span\u003e — This week’s notable addition is the \u003ca href=\"https://golangweekly.com/link/137002/rss\" style=\" color: #0099b4;   \"\u003esupport for \u003cem\u003eglobal\u003c/em\u003e tasks\u003c/a\u003e defined in your home directory, letting you have automations you can run from anywhere on your system. \u003ca href=\"https://golangweekly.com/link/137003/rss\" style=\" color: #0099b4;   \"\u003eOfficial homepage.\u003c/a\u003e\u003c/p\u003e\n  \u003cp\u003eAndrey Nering \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137004/rss\" title=\"loopholelabs.io\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eScale: Write-Once, Run Anywhere Functions via WebAssembly\u003c/a\u003e\u003c/span\u003e — \u003ca href=\"https://golangweekly.com/link/137005/rss\" style=\" color: #0099b4;   \"\u003eScale\u003c/a\u003e is a new WASM-powered function runtime that wants to eventually open up an agnostic development model across languages and clouds (so imagine building a function that could work locally, on CloudFlare Workers, \u003cem\u003eor\u003c/em\u003e AWS Lambda without changes). \u003cem\u003eGo\u003c/em\u003e is the first language supported both as a client and runtime.\u003c/p\u003e\n  \u003cp\u003eLoophole Labs \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137006/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eRevive 1.3: A Fast(er), Configurable, Flexible Linter for Go\u003c/a\u003e\u003c/span\u003e — A drop-in replacement of golint that aims to provide a little more structure, configurability, and performance.\u003c/p\u003e\n  \u003cp\u003eMinko Gechev \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137007/rss\" title=\"www.linode.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eNew Trending Content: Try Knative (Free Course)\u003c/a\u003e\u003c/span\u003e — In this free course, you'll learn how to deploy serverless containerized applications on Kubernetes by using Knative.\u003c/p\u003e\n  \u003cp\u003eAkamai Connected Cloud \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137008/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eChi: Popular Composable Router for Go HTTP Services\u003c/a\u003e\u003c/span\u003e — Good at helping you write large REST API services that are kept maintainable as your project grows and changes.\u003c/p\u003e\n  \u003cp\u003ego-chi \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137009/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003edynamodbav: Marshal/Unmarshal Utility Functions for DynamoDB\u003c/a\u003e\u003c/span\u003e — A (very) simple complement to the official AWS SDK v2 for Go. Using generics lets you save a lot of boilerplate code when marshalling and unmarshalling Go types into their DynamoDB representations.\u003c/p\u003e\n  \u003cp\u003eRyan Collingham \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137010/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eLogarithmotechnia: R-Inspired Dataframe Library for Go\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eDee\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 0px;  padding-left: 0px;\"\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eJobs\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137011/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eSoftware Engineer C++\u003c/a\u003e\u003c/span\u003e — Join our \"kick ass\" team. Our software team operates from 17 countries and we're always looking for more exceptional engineers.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eSticker Mule\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/137012/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eFind a Job Through Hired\u003c/a\u003e\u003c/span\u003e — Hired makes job hunting easy-instead of chasing recruiters, companies approach you with salary details up front. Create a free profile now.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eHired\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e🧑‍💻 Got a job listing to share? \u003cem\u003e\u003ca href=\"https://golangweekly.com/link/137013/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eHere's how\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137014/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003echromedp 0.9\u003c/a\u003e\u003cbr\u003e\n↳ Drive browsers via the Chrome DevTools Protocol.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e🔊 \u003ca href=\"https://golangweekly.com/link/137015/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eOto 2.4\u003c/a\u003e\u003cbr\u003e\n↳ Play sound on multiple platforms.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137016/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eko 0.13\u003c/a\u003e\u003cbr\u003e\n↳ Container image builder for Go apps.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137017/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eIris 12.2\u003c/a\u003e\u003cbr\u003e\n↳ Fast HTTP/2 web framework.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e🎨 \u003ca href=\"https://golangweekly.com/link/137018/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eColor 1.15\u003c/a\u003e\u003cbr\u003e\n↳ Color text output via ANSI escape codes.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137019/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003egolang-lru 2.0.2\u003c/a\u003e\u003cbr\u003e\n↳ Fixed-size thread safe LRU cache.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137020/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eFerretDB 0.9.3\u003c/a\u003e\u003cbr\u003e\n↳ MongoDB alternative using Postgres for storage.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137021/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eSonic 1.1\u003c/a\u003e – Go blogging platform.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/137022/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003egolang-set 2.3\u003c/a\u003e – Generic set type.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n  \u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n\n\n\n\u003cimg src=\"https://golangweekly.com/open/452/rss\" width=\"1\" height=\"1\" /\u003e",
    "date": "2023-03-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "449dddefadaed1b3c8c251cb54e5c01c",
    "source": {
      "path": "forums",
      "name": "Golang Bridge",
      "url": "https://forum.golangbridge.org/posts.rss"
    },
    "name": "How many levels of pointer indirection can you have at runtime? Is there no limit?",
    "url": "https://forum.golangbridge.org/t/how-many-levels-of-pointer-indirection-can-you-have-at-runtime-is-there-no-limit/31024#post_2",
    "resume": " \u003cp\u003eI think you can have as many levels of pointer as you want, at least until runtime safety check doesn’t panic due to out of memory. Of course in order to read the origin pointed value you need to create the same number of variables called \u003ccode\u003ea\u003c/code\u003e, \u003ccode\u003eb\u003c/code\u003e, \u003ccode\u003ec\u003c/code\u003e, etc…each with a reference to the previous. Is it really useful/clear/idiomatic?\u003c/p\u003e ",
    "date": "2023-03-16T20:50:10Z",
    "vote": 0
  },
  {
    "id": "a519e748014bb808b5d4355a64796dd1",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The bits of Go we avoid (and why)",
    "url": "https://changelog.com/gotime/269",
    "resume": "The panel discuss the parts of Go they never use. Do they avoid them because of pain in the past? Were they overused? Did they always end up getting refactoring out? Is there a preferred alternative?",
    "date": "2023-03-16T16:30:00Z",
    "vote": 0
  },
  {
    "id": "d6c9e041d337b6e4412e5fd6a1cee5dc",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Interface Design Considerations Ep. 7",
    "url": "https://www.ardanlabs.com/blog/2023/03/interfaces-101-interface-design-considerations.html",
    "resume": "Introduction In episode 6, Miki built a logger package with the aim of making it as versatile as possible. To achieve this, he constructed his logger object with a function that would: accept the io.Writer interface as a parameter and perform type assertions to retrieve other interface types as needed. By building this, Miki demonstrated how polymorphism is achieved with Go by changing the type of a variable with type assertions.",
    "date": "2023-03-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7514d1d83b6ece33833c5311c3ee3edf",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "This will blow your docs off",
    "url": "https://changelog.com/gotime/268",
    "resume": "In a world where most documentation sucks, large language models write better than humans, and people won’t be bothered to type full sentences with actual punctuation. Two men… against all odds… join an award-worthy podcast… hosted by a coin-operated, singing code monkey (?)… to convince the developer world they’re doing it ALL wrong. Grab your code-generator and heat up that cold cup of coffee on your desk. Because this episode of Go Time is about to blow your docs off!",
    "date": "2023-03-10T16:00:00Z",
    "vote": 0
  },
  {
    "id": "74402b5cb8a266a07771ca6e64d7f286",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "GoLand 2023.1 Beta 2 Is Out!",
    "url": "https://blog.jetbrains.com/go/2023/03/10/goland-2023-1-beta2/",
    "resume": "GoLand 2023.1 has reached Beta 2! This is the last build in our EAP cycle that doesn’t require a license. You can get the Beta 2 build via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select Check IDE updates for: Early Access Program in [\u0026#8230;]",
    "date": "2023-03-10T14:47:58Z",
    "vote": 0
  },
  {
    "id": "cbbcedd4dc55ea3e9b7f788081de970d",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "A type-safe, expressive, and extensible validator library for Golang",
    "url": "https://golang.ch/a-type-safe-expressive-and-extensible-validator-library-for-golang/",
    "resume": "\u003cp\u003eValgo is a type-safe, expressive, and extensible validator library for Golang. Supports localization and is built with generics. Getting started Install in your project: Import in your code: Note: You can use any other aliases instead of\u0026#160;v\u0026#160;or just reference the package\u0026#160;valgo\u0026#160;directly. Using Valgo Validation\u0026#160;session The\u0026#160;Validation\u0026#160;session in Valgo is the main structure for validating one or [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/a-type-safe-expressive-and-extensible-validator-library-for-golang/\"\u003eA type-safe, expressive, and extensible validator library for Golang\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/a-type-safe-expressive-and-extensible-validator-library-for-golang/\"\u003eA type-safe, expressive, and extensible validator library for Golang\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-03-10T04:10:25Z",
    "vote": 0
  },
  {
    "id": "3441f82602eaebcc0943d678337b920d",
    "source": {
      "path": "golang",
      "name": "Golang Weekly",
      "url": "https://cprss.s3.amazonaws.com/golangweekly.com.xml"
    },
    "name": "The journey to faster JSON parsing",
    "url": "https://golangweekly.com/issues/451",
    "resume": "\u003ctable border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\"\u003e\n  \u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003cdiv\u003e    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\n\u003ctd align=\"left\" style=\"padding-left: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e#​451 — March 10, 2023\u003c/p\u003e\u003c/td\u003e\n\u003ctd align=\"right\" style=\"padding-right: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136637/rss\" style=\" color: #0099b4;\"\u003eUnsub\u003c/a\u003e  |  \u003ca href=\"https://golangweekly.com/link/136638/rss\" style=\" color: #0099b4;\"\u003eWeb Version\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003c/table\u003e\n    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 12px;  padding-left: 12px;\"\u003e\u003cp\u003eThe \u003cem\u003eGo Weekly\u003c/em\u003e Newsletter\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136640/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/vextjc4w4eazkhptfni2.jpg\" width=\"640\" style=\"    line-height: 100%;       \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136640/rss\" title=\"vercel.com\" style=\" color: #0099b4;    font-size: 1.1em; line-height: 1.4em;\"\u003eWhy Turborepo is Migrating From Go to Rust\u003c/a\u003e\u003c/span\u003e — \u003ca href=\"https://golangweekly.com/link/136641/rss\" style=\" color: #0099b4;   \"\u003eTurborepo\u003c/a\u003e is a high performance JavaScript build system built upon Go but.. perhaps not for much longer. Why? It mostly seems subjective, but you might find their arguments interesting.\u003c/p\u003e\n  \u003cp\u003eVercel Engineering Team \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136642/rss\" title=\"go.dev\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eCode Coverage for Go Integration Tests\u003c/a\u003e\u003c/span\u003e — While Go has had coverage support at the package test level for almost ten years, coverage for integration tests run outside of the \u003ccode\u003ego test\u003c/code\u003e mechanism has been non-existent. With Go 1.20, it’s possible to instrument a binary and generate coverage files for both the module code and dependent packages.\u003c/p\u003e\n  \u003cp\u003eThan Macintosh \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136639/rss\" style=\" color: #0099b4;   \"\u003e\u003cimg src=\"https://copm.s3.amazonaws.com/bcc68a3c.png\" width=\"110\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%;    \"\u003e\u003c/a\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136639/rss\" title=\"www.ardanlabs.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGo! Experts at Your Service\u003c/a\u003e\u003c/span\u003e — Do you need help filling skill gaps, speeding up development \u0026amp; creating high performing software with Go, Docker, K8s, Terraform and Rust? We’ll help you maximize your architecture, structure, tech-debt and human capital.\u003c/p\u003e\n  \u003cp\u003eArdan Labs Consulting \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136643/rss\" title=\"www.cockroachlabs.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eA Journey to High-Perf JSON Parsing in Go\u003c/a\u003e\u003c/span\u003e — A distributed SQL database needs to maximize data parsing, so CockroachDB’s (very successful) story about doing so is worth the read. The answer came from a somewhat unexpected place and benefits anyone looking to speed up JSON parsing.\u003c/p\u003e\n  \u003cp\u003eYevgeniy Miretskiy (CockroachDB) \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136644/rss\" title=\"go.dev\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGetting Started with Multi-Module Workspaces\u003c/a\u003e\u003c/span\u003e — Potentially overlooked in Go 1.18 because they \u003cem\u003eweren’t\u003c/em\u003e generics, workspaces let you tell the Go command you’re writing code in multiple modules at the same time and easily build and run code in those modules.\u003c/p\u003e\n  \u003cp\u003eOfficial Go Docs \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eIN BRIEF:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e⭐️ InfoWorld's Paul Krill reports that \u003ca href=\"https://golangweekly.com/link/136645/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGo has rejoined the top 10 most popular programming languages\u003c/a\u003e in the latest \u003ca href=\"https://golangweekly.com/link/136646/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eTIOBE index\u003c/a\u003e ranking (for what it's worth).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136647/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGo 1.20.2 and 1.19.7\u003c/a\u003e have been released with a \u003ccode\u003ecrypto/elliptic\u003c/code\u003e security fix.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you want to speak at this year's GopherCon UK, you'll \u003ca href=\"https://golangweekly.com/link/136648/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ewant to submit your proposal quickly\u003c/a\u003e as it closes on Friday evening.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe Go team meets regularly to discuss developments in the Go compiler, etc, and \u003ca href=\"https://golangweekly.com/link/136649/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ehere are some of the recent meeting notes\u003c/a\u003e if you're interested in such details.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAfter all the discussion about telemetry in Go, Russ Cox has now \u003ca href=\"https://golangweekly.com/link/136650/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003efiled the \u003cem\u003eproposal\u003c/em\u003e for adding the opt-in telemetry feature.\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136651/rss\" title=\"preslav.me\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eThings to Consider When Going with \u003ccode\u003esqlc\u003c/code\u003e\u003c/a\u003e\u003c/span\u003e — \u003ca href=\"https://golangweekly.com/link/136652/rss\" style=\" color: #0099b4;   \"\u003esqlc\u003c/a\u003e (the SQL to type-safe code generator) is a handy time and boilerplate saver, but isn’t a one-size-fits-all solution.\u003c/p\u003e\n  \u003cp\u003ePreslav Rachev \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136653/rss\" title=\"event.on24.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eTerraforming Kubernetes (Free Course)\u003c/a\u003e\u003c/span\u003e — Lead by Udemy instructor, Justin Mitchel, this course shows you how to spin up a K8s cluster using Terraform.\u003c/p\u003e\n  \u003cp\u003eAkamai Connected Cloud \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136654/rss\" title=\"wstrm.dev\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003e\u003ccode\u003eerrors.Join\u003c/code\u003e Loves \u003ccode\u003edefer\u003c/code\u003e?\u003c/a\u003e\u003c/span\u003e — In Go 1.20, you can join errors so that original errors aren’t overridden. William looks at how nicely this meshes with the use case of handling close errors in a \u003ccode\u003edefer\u003c/code\u003e.\u003c/p\u003e\n  \u003cp\u003eWilliam Wennerström \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136655/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eHow \u003cem\u003eNot\u003c/em\u003e to Use \u003ccode\u003econtext.WithValue\u003c/code\u003e\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eVishnu Bharathi\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136656/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eHigher-Order Functions in Go\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eEli Bendersky\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e🛠 Code \u0026amp; Tools\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136657/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/ax8cm4aaw81km4ga5t73.jpg\" width=\"640\" style=\"        line-height: 100%;     \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136657/rss\" title=\"blog.ngrok.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003engrok-go: Ingress to Your Go Apps as a \u003ccode\u003enet.Listener\u003c/code\u003e\u003c/a\u003e\u003c/span\u003e — \u003ca href=\"https://golangweekly.com/link/136658/rss\" style=\" color: #0099b4;   \"\u003engrok\u003c/a\u003e is a long standing tool (and, increasingly, commercial service) for opening up a locally hosted service to the public Internet  and now there’s an idiomatically Go way to embed ngrok-style ingress into apps.\u003c/p\u003e\n  \u003cp\u003eAlan Shreve (ngrok) \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136659/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eValgo: An Expressive Validator Library\u003c/a\u003e\u003c/span\u003e — Type-safe and extensible validator library that supports localization and is built upon generics. \u003cem\u003e“Valgo differs from other validation libraries in that the rules are written in functions and not in struct tags. This allows greater flexibility and freedom when it comes to where and how data is validated.”\u003c/em\u003e\u003c/p\u003e\n  \u003cp\u003eCohesive Stack \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136660/rss\" title=\"shortcut.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eDon’t Let Your Issue Tracker Be a Four-Letter Word. Use Shortcut\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n  \u003cp\u003eShortcut (formerly Clubhouse.io) \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136661/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGool: A Generic Goroutine Pool\u003c/a\u003e\u003c/span\u003e — If you’re familiar with Python’s ThreadPoolExecutor, you might like this as it provides sync and async versions of \u003ccode\u003eSubmit\u003c/code\u003e and \u003ccode\u003eMap\u003c/code\u003e to run tasks.\u003c/p\u003e\n  \u003cp\u003eTommy Tian \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136662/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ego-ssaviz: SSA Visualization with Graphviz\u003c/a\u003e\u003c/span\u003e — You won’t need this unless you’re doing some \u003cem\u003ereally\u003c/em\u003e low level work, but this tool lets you see Go’s internal use of \u003ca href=\"https://golangweekly.com/link/136663/rss\" style=\" color: #0099b4;   \"\u003estatic single-assignment\u003c/a\u003e in your Go package of choice.\u003c/p\u003e\n  \u003cp\u003eShengyu Zhang \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136664/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eConvolutional Encoder and Viterbi Decoder for Go\u003c/a\u003e\u003c/span\u003e — If you need this, you’ll know. The author explains the error-correcting nature of such encoders and decoders \u003ca href=\"https://golangweekly.com/link/136665/rss\" style=\" color: #0099b4;   \"\u003ein this comment.\u003c/a\u003e\u003c/p\u003e\n  \u003cp\u003e8FF \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 0px;  padding-left: 0px;\"\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eJobs\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136666/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eSite Reliability Engineer\u003c/a\u003e\u003c/span\u003e — Join our \"kick ass\" team. Our software team operates from 17 countries and we're always looking for more exceptional engineers.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eSticker Mule\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136667/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eFind a Job Through Hired\u003c/a\u003e\u003c/span\u003e — Hired makes job hunting easy-instead of chasing recruiters, companies approach you with salary details up front. Create a free profile now.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eHired\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e🧑‍💻 Got a job listing to share? \u003cem\u003e\u003ca href=\"https://golangweekly.com/link/136668/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eHere's how\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136669/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGlog 1.1\u003c/a\u003e\u003cbr\u003e\n↳ Leveled execution log library.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136670/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003egolang-set 2.2\u003c/a\u003e\u003cbr\u003e\n↳ Generic set type.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136671/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eWails 2.4\u003c/a\u003e\u003cbr\u003e\n↳ Go + web technologies == desktop apps.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136672/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003erqlite 7.14\u003c/a\u003e\u003cbr\u003e\n↳ Distributed relational database atop SQLite.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136673/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGoose 3.10\u003c/a\u003e\u003cbr\u003e\n↳ Database migration with SQL and/or Go functions.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136674/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eGinkgo 2.9\u003c/a\u003e\u003cbr\u003e\n↳ Modern testing framework.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136675/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003efq 0.4\u003c/a\u003e\u003cbr\u003e\n↳ Like \u003ccode\u003ejq\u003c/code\u003e for binary formats.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136676/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eClickHouse Go 2.7\u003c/a\u003e\u003cbr\u003e\n↳ Go driver for ClickHouse.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n  \u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n\n\n\n\u003cimg src=\"https://golangweekly.com/open/451/rss\" width=\"1\" height=\"1\" /\u003e",
    "date": "2023-03-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f90567a38b639caefd7771c4269fab40",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Introduction to Asynchronous Flows and Webhooks",
    "url": "https://blog.boot.dev/stories/asynchronous-flows-and-webhooks/",
    "resume": "In this post, we\u0026rsquo;ll be talking about coding with a common integration pattern with an external API called a webhook.",
    "date": "2023-03-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1b2aa876d6131ba69a1bc2069bf68637",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Calculating Download MD5 Hash",
    "url": "https://www.ardanlabs.com/blog/2023/03/calculating-download-md5-in-go.html",
    "resume": "Introduction One of the exercises I give to students is to download a single big file over HTTP concurrently using several goroutines using HTTP Range requests. An extra part of the exercise is to validate the downloaded file from a known MD5 signature. This extra part turns out to be interesting, let\u0026rsquo;s have a look.\nGetting Download Information Let\u0026rsquo;s make an HTTP HEAD request to get information about a file located in a public dataset stored on Google Cloud Storage (GCS).",
    "date": "2023-03-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "82f159c92f15e14981b0f2dbe505df77",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "A Golang based fast and secure open-source backup/restore tool",
    "url": "https://golang.ch/a-golang-based-fast-and-secure-open-source-backup-restore-tool/",
    "resume": "\u003cp\u003eKopia is a fast and secure open-source backup/restore tool that allows you to create encrypted snapshots of your data and save the snapshots to remote or cloud storage of your choice, to network-attached storage or server, or locally on your machine. Kopia does not \u0026#8216;image\u0026#8217; your whole machine. Rather, Kopia allows you to backup/restore any and all files/directories that you deem [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/a-golang-based-fast-and-secure-open-source-backup-restore-tool/\"\u003eA Golang based fast and secure open-source backup/restore tool\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/a-golang-based-fast-and-secure-open-source-backup-restore-tool/\"\u003eA Golang based fast and secure open-source backup/restore tool\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-03-08T03:52:30Z",
    "vote": 0
  },
  {
    "id": "cc9c17ed5e68440dfab59453a86e13fc",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Code coverage for Go integration tests",
    "url": "https://go.dev/blog/integration-test-coverage",
    "resume": "Code coverage for integration tests, available in Go 1.20.",
    "date": "2023-03-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bc4c52bdf67bcfc8ce68785893806022",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Rust Programming Language: Simple Game",
    "url": "https://www.ardanlabs.com/blog/2023/03/rust-programming-language-simple-game.html",
    "resume": "with Cheikh Seck\nIntroduction This is the first in a series of posts that will explore the Rust programming language. I am going to take the same approach I did with Go and write little programs that explore the different features of the language. Before I begin that work, I thought it would be fun to write a program that does something fun.\nIn this post and my first ever Rust program, I’m going to use a Rust library called bracket-lib that provides a cross-platform terminal emulator.",
    "date": "2023-03-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "531f1b99674b676c523370f279ef0507",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Interface Type Assertion Ep. 6",
    "url": "https://www.ardanlabs.com/blog/2023/03/interfaces-101-interface-type-assertions.html",
    "resume": "Introduction In episode 5, Miki wrote a function that counted the number of lines in a file with interfaces. The first thing his function did was to open a file with Go’s os.Open function. Miki chose this method because the variable returned by said function implements the io.Reader interface which is crucial for the next step. The remaining parts of this function consisted of a primitive type alias that satisfied the io.",
    "date": "2023-03-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f9219cde6bc42d888a6b2f1692a6845d",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Convert an array of int or numbers to string in Go (Golang)",
    "url": "https://golangbyexample.com/array-int-string-golang/",
    "resume": "\u003cp\u003eOverview In this tutorial, we will see how to convert an array of ints or numbers to a string in Go. Below is the program for the same. Program Here is the...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/array-int-string-golang/\"\u003eConvert an array of int or numbers to string in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-03-06T17:39:47Z",
    "vote": 0
  },
  {
    "id": "f130c880d84bdd3e420a69b5170c08ac",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Introducing Boots, the Artificially Intelligent Bear that Explains Code",
    "url": "https://blog.boot.dev/news/introducing-boots-ai-code-explainer/",
    "resume": "Learning to code isn’t easy; frankly, I’d be wary of anyone who tells you that it is.",
    "date": "2023-03-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d0a3be4166b375cfcc14ce1614e8d517",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "GoLand 2023.1 Beta Is Available!",
    "url": "https://blog.jetbrains.com/go/2023/03/03/goland-2023-1-beta-is-available/",
    "resume": "GoLand 2023.1 has reached Beta! We’ve stopped adding new features and are now concentrating on fixing bugs and preparing GoLand for the major release at the end of March. You can get the Beta build via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select [\u0026#8230;]",
    "date": "2023-03-03T14:59:20Z",
    "vote": 0
  },
  {
    "id": "bcb661470612c6ff4c679c65c46df509",
    "source": {
      "path": "golang",
      "name": "Golang Weekly",
      "url": "https://cprss.s3.amazonaws.com/golangweekly.com.xml"
    },
    "name": "Google's new distributed Go app framework",
    "url": "https://golangweekly.com/issues/450",
    "resume": "\u003ctable border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\"\u003e\n  \u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003cdiv\u003e    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\n\u003ctd align=\"left\" style=\"padding-left: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e#​450 — March 3, 2023\u003c/p\u003e\u003c/td\u003e\n\u003ctd align=\"right\" style=\"padding-right: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136303/rss\" style=\" color: #0099b4;\"\u003eUnsub\u003c/a\u003e  |  \u003ca href=\"https://golangweekly.com/link/136304/rss\" style=\" color: #0099b4;\"\u003eWeb Version\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003c/table\u003e\n    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 12px;  padding-left: 12px;\"\u003e\u003cp\u003eThe \u003cem\u003eGo Weekly\u003c/em\u003e Newsletter\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136306/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/f9magaazzokmum6ulrop.jpg\" width=\"640\" style=\"    line-height: 100%;       \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136306/rss\" title=\"research.swtch.com\" style=\" color: #0099b4;    font-size: 1.1em; line-height: 1.4em;\"\u003e\u003cem\u003eOpting In\u003c/em\u003e to Transparent Telemetry in Go\u003c/a\u003e\u003c/span\u003e — A debate around \u003ca href=\"https://golangweekly.com/link/136307/rss\" style=\" color: #0099b4;   \"\u003eadding telemetry to the Go toolchain\u003c/a\u003e has been rolling for the past few weeks. Now there’s a new development: \u003cem\u003e“By far the most common suggestion was to make the system opt-in (default off) instead of opt-out (default on). I have revised the design to do that.”\u003c/em\u003e There are some downsides to that, of course.\u003c/p\u003e\n  \u003cp\u003eRuss Cox \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136308/rss\" title=\"opensource.googleblog.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eService Weaver: Google's Framework for Writing Distributed Go Apps\u003c/a\u003e\u003c/span\u003e — A new open-source framework from Google that lets you \u003cem\u003e“write your (Go) application as a modular monolith and deploy it as a set of microservices”\u003c/em\u003e to get the best of both worlds, namely: \u003cem\u003e“the development velocity of a monolith, with the scalability, security, and fault-tolerance of microservices.”\u003c/em\u003e If you fancy something more technical and less salesy, Robert Grandl has \u003ca href=\"https://golangweekly.com/link/136309/rss\" style=\" color: #0099b4;   \"\u003ea quick introduction here\u003c/a\u003e.\u003c/p\u003e\n  \u003cp\u003eGoogle Open Source \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136305/rss\" style=\" color: #0099b4;   \"\u003e\u003cimg src=\"https://copm.s3.amazonaws.com/e0920bf2.png\" width=\"190\" height=\"61\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%;    \"\u003e\u003c/a\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136305/rss\" title=\"tailscale.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eReview Changes Made to Your Tailscale Network\u003c/a\u003e\u003c/span\u003e — Staying on top of what’s happening in your network is easier than ever with Tailscale’s configuration audit logs, which let admins review changes made to your Tailscale network, such as added devices, updated ACLs, or new DNS settings.\u003c/p\u003e\n  \u003cp\u003eTailscale \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136310/rss\" title=\"entgo.io\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eA Beginner's Guide to Creating a Webapp with Ent\u003c/a\u003e\u003c/span\u003e — A practical introduction to using \u003ca href=\"https://golangweekly.com/link/136311/rss\" style=\" color: #0099b4;   \"\u003eEnt,\u003c/a\u003e an open-source entity framework for Go for modelling and querying data, by way of building a simple content management system.\u003c/p\u003e\n  \u003cp\u003eRotem Tamir \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136312/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eUber's Go Style Guide\u003c/a\u003e\u003c/span\u003e — Want to know how a large Go organization writes Go? Take a ride with this guide that covers guidelines, some performance issues, and stylistic concerns.\u003c/p\u003e\n  \u003cp\u003eUber \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eIN BRIEF:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eIf you want to use \u003ca href=\"https://golangweekly.com/link/136313/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eTinyGo\u003c/a\u003e, the small Go compiler for embedded systems and WebAssembly, you might find \u003ca href=\"https://golangweekly.com/link/136314/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ethis list of supported packages\u003c/a\u003e useful.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEfron Licht is back with \u003ca href=\"https://golangweekly.com/link/136315/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003emore Go quirks and tricks\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136316/rss\" title=\"benhoyt.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eFrom Go on EC2 to Fly.io: More Fun, Less Cost?\u003c/a\u003e\u003c/span\u003e — Ben talks about switching a couple of side projects from an EC2 instance to up and coming no-ops platform \u003ca href=\"https://golangweekly.com/link/136317/rss\" style=\" color: #0099b4;   \"\u003eFly\u003c/a\u003e, and how he resolved some sticking points like running background jobs in Go without cron.\u003c/p\u003e\n  \u003cp\u003eBen Hoyt \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136318/rss\" title=\"arriqaaq.substack.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eUnlocking the Power of Zero Knowledge Proofs with Gnark\u003c/a\u003e\u003c/span\u003e — \u003ca href=\"https://golangweekly.com/link/136319/rss\" style=\" color: #0099b4;   \"\u003egnark\u003c/a\u003e is a library for creating zkSNARK (Zero-Knowledge Succinct Non-Interactive Argument of Knowledge) \u003ca href=\"https://golangweekly.com/link/136320/rss\" style=\" color: #0099b4;   \"\u003ezero knowledge proof\u003c/a\u003e applications.\u003c/p\u003e\n  \u003cp\u003eFarhan \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136321/rss\" title=\"t.mp\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eTry Temporal 101 in Go\u003c/a\u003e\u003c/span\u003e — In this beginner’s course, you’ll learn the basic building blocks of Temporal to develop an app that communicates with an external service.\u003c/p\u003e\n  \u003cp\u003eTemporal Technologies \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136322/rss\" title=\"build-your-own.org\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eBuild Your Own Database From Scratch\u003c/a\u003e\u003c/span\u003e — A book that’s still under development that uses Go but is language agnostic. A few chapters are ready to read, including on \u003ca href=\"https://golangweekly.com/link/136323/rss\" style=\" color: #0099b4;   \"\u003eimplementing B-trees in Go\u003c/a\u003e.\u003c/p\u003e\n  \u003cp\u003eJames Smith \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136324/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eWhy to Defer Your Mutex Unlocks\u003c/a\u003e\u003c/span\u003e — One for the best practice list?\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eEmir Ribic\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136325/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eImport Leads From Google Forms Into Your CRM with OpenFaaS\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eAlex Ellis\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e🛠 Code \u0026amp; Tools\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/136326/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/ckbrv20xuzbchzexa4a6.jpg\" width=\"640\" style=\"    line-height: 100%;         \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136326/rss\" title=\"proton.me\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGluon: A High-Performance IMAP (Server-Side) Library\u003c/a\u003e\u003c/span\u003e — This is aimed at mail system implementers and server-side IMAP management, but this post digs into the details about why that’s a tricky thing to build and how Proton, the folks behind the privacy-first email platform Proton Mail, pulled it off. \u003ca href=\"https://golangweekly.com/link/136327/rss\" style=\" color: #0099b4;   \"\u003eGitHub repo\u003c/a\u003e.\u003c/p\u003e\n  \u003cp\u003eProton \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e✉️ \u003cstrong\u003eYou've Got Mail:\u003c/strong\u003e If you'd prefer a complete 'out of the box' mail server experience with a Go-powered system, check out \u003ca href=\"https://golangweekly.com/link/136328/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eMox\u003c/a\u003e which implements SMTP, IMAP4, and numerous email specs in a single open source mail server.\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136329/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ealgnhsa 1.0: AWS Lambda \u003ccode\u003enet/http\u003c/code\u003e Server Adapter\u003c/a\u003e\u003c/span\u003e — Enables running Go webapps on AWS Lambda and API Gateway/ALB without changing existing HTTP handlers.\u003c/p\u003e\n  \u003cp\u003eArtem Krylysov \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136330/rss\" title=\"\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eTuple, a Lightning-Fast Pairing Tool Built for Remote Developers\u003c/a\u003e\u003c/span\u003e — High-resolution, crystal-clear screen sharing, low-latency remote control, and less CPU usage than you'd think possible.\u003c/p\u003e\n  \u003cp\u003eTuple \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136331/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGraph 0.16: Generic Library for Creating Graph Data Structures\u003c/a\u003e\u003c/span\u003e — Supports different kinds of graphs such as directed graphs, acyclic graphs, or trees. This week’s \u003ca href=\"https://golangweekly.com/link/136332/rss\" style=\" color: #0099b4;   \"\u003e0.16.0\u003c/a\u003e release adds support for \u003ca href=\"https://golangweekly.com/link/136333/rss\" style=\" color: #0099b4;   \"\u003eintegrating storage backends of your choice\u003c/a\u003e by implementing a Store interface.\u003c/p\u003e\n  \u003cp\u003eDominik Braun \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136334/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ePNGR: Dockerized (Postgres + Nginx + Go + React)\u003c/a\u003e\u003c/span\u003e — Starter kit for a webapp that includes user and session management, JWT authentication, and a basic CRUD example.\u003c/p\u003e\n  \u003cp\u003eKarl Keefer \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136335/rss\" title=\"blog.alexellis.io\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eFind Your Total Build Minutes with GitHub Actions and Go\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n  \u003cp\u003eAlex Ellis \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 0px;  padding-left: 0px;\"\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eJobs\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136345/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eSite Reliability Engineer\u003c/a\u003e\u003c/span\u003e — Join our \"kick ass\" team. Our software team operates from 17 countries and we're always looking for more exceptional engineers.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eSticker Mule\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/136336/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eFind a Job Through Hired\u003c/a\u003e\u003c/span\u003e — Hired makes job hunting easy-instead of chasing recruiters, companies approach you with salary details up front. Create a free profile now.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eHired\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e🧑‍💻 Got a job listing to share? \u003cem\u003e\u003ca href=\"https://golangweekly.com/link/136346/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eHere's how\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136337/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003epdfcpu 0.4\u003c/a\u003e\u003cbr\u003e\n↳ PDF processing library. \u003cem\u003e(Great logo!)\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136338/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003econc 0.3\u003c/a\u003e\u003cbr\u003e\n↳ Better structured concurrency for Go.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136339/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eRender 1.6\u003c/a\u003e\u003cbr\u003e\n↳ Easily render JSON, XML, HTML \u0026amp; more.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136340/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eMacaron 1.5\u003c/a\u003e\u003cbr\u003e\n↳ Modular Web framework.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136341/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eMiller 6.7\u003c/a\u003e\u003cbr\u003e\n↳ Swiss army knife for name-indexed data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136342/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eBuf CLI 1.15\u003c/a\u003e\u003cbr\u003e\n↳ Tool for working with Protocol Buffers.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/136343/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ego-git 5.6\u003c/a\u003e\u003cbr\u003e\n↳ Extensible pure Go Git implementation.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n  \u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n\n\n\n\u003cimg src=\"https://golangweekly.com/open/450/rss\" width=\"1\" height=\"1\" /\u003e",
    "date": "2023-03-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "05f9de11edb72326de6f974f47dd6d58",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Do Backend Developers Need to Know SQL?",
    "url": "https://blog.boot.dev/backend/do-backend-devs-need-sql/",
    "resume": "A while back, one of my friends bragged that he bagged a six-figure backend developer job after watching a few YouTube videos on APIs and reading parts a bit of the PostgreSQL documentation.",
    "date": "2023-03-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c6ea886831164255eb2bf3144648e19e",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🆔 Generate UUID in Go",
    "url": "https://gosamples.dev/generate-uuid/",
    "resume": "\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\" target=\"_blank\"\u003eUUID (Universally Unique Identifier)\u003c/a\u003e is a 128-bit value used to uniquely identify information in computer systems. UUIDs are generated using algorithms that guarantee that each of them is unique.\u003c/p\u003e\n\u003cp\u003eThey are commonly used in programming languages to uniquely identify objects or data. UUIDs can be represented in various formats, but the most commonly used is the hyphenated format, which looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e53aa35c8-e659-44b2-882f-f6056e443c99\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp\u003eIn Go, there are many packages with which you can generate a UUID. Some of the more popular ones are \u003ca href=\"https://github.com/google/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/google/uuid\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://github.com/gofrs/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/gofrs/uuid\u003c/code\u003e\u003c/a\u003e. Both of these are based on \u003ca href=\"https://www.rfc-editor.org/info/rfc4122\" target=\"_blank\"\u003eRFC 4122\u003c/a\u003e specification and support UUID generation in various versions. In this article, we provide examples of how to generate UUIDs with them in the default way, as well as using more advanced UUID version selection options.\u003c/p\u003e\n\u003ch2 id=\"generate-uuid-using-the-githubcomgoogleuuidhttpsgithubcomgoogleuuid-package\"\u003eGenerate UUID using the \u003ca href=\"https://github.com/google/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/google/uuid\u003c/code\u003e\u003c/a\u003e package\u003c/h2\u003e\n\u003cp\u003eTo generate a UUID using the \u003ca href=\"https://github.com/google/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/google/uuid\u003c/code\u003e\u003c/a\u003e package, you must first download and install it using the \u003ccode\u003ego get\u003c/code\u003e Terminal command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego get github.com/google/uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, you can use this package in your code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/google/uuid\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/github.com/google/uuid#NewString\" target=\"_blank\"\u003e\u003ccode\u003euuid.NewString()\u003c/code\u003e\u003c/a\u003e is the simplest function to generate UUID using the \u003ca href=\"https://github.com/google/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/google/uuid\u003c/code\u003e\u003c/a\u003e package. It returns a random (Version 4) UUID as a string ready to use or print.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUUIDs are standardized and come in many variants and versions. If you want to know them all, a good place to start is to read the Wikipedia article \u003ca href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier#Versions\" target=\"_blank\"\u003ehere\u003c/a\u003e. Different versions of UUIDs are based on different information:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eVersion 1 UUIDs are generated from a time and the MAC address.\u003c/li\u003e\n\u003cli\u003eVersion 2 UUIDs are generated from an identifier (usually user ID), time, and the MAC address.\u003c/li\u003e\n\u003cli\u003eVersion 3 and 5 UUIDs are generated based on hashing a namespace identifier and name.\u003c/li\u003e\n\u003cli\u003eVersion 4 UUIDs are based on a randomly generated number.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAfter running the application, you will see a randomly generated UUID in the output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e8cfb429e-0220-42a9-919c-54d6886d5128\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"generate-uuid-using-the-githubcomgofrsuuidhttpsgithubcomgofrsuuid-package\"\u003eGenerate UUID using the \u003ca href=\"https://github.com/gofrs/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/gofrs/uuid\u003c/code\u003e\u003c/a\u003e package\u003c/h2\u003e\n\u003cp\u003eTo get and install the \u003ca href=\"https://github.com/gofrs/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/gofrs/uuid\u003c/code\u003e\u003c/a\u003e package, you need to execute the command below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego get github.com/gofrs/uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAfter that, you can generate UUID using this package in your app:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/gofrs/uuid\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewV4\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatalf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;failed to generate UUID: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe example above shows how to generate version 4 UUID. All you need to do is use the \u003ca href=\"https://pkg.go.dev/github.com/gofrs/uuid#NewV4\" target=\"_blank\"\u003e\u003ccode\u003euuid.NewV4()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cp\u003eAs before, the output of the app is a randomly generated ID:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ea40d6058-069e-4a7a-b873-41e3bff827be\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"generate-a-uuid-of-a-specific-version\"\u003eGenerate a UUID of a specific version\u003c/h2\u003e\n\u003cp\u003eIf you are curious about how you can generate a UUID in a different version than the most popular Version 4, here is how you can do it using both packages.\u003c/p\u003e\n\u003ch3 id=\"with-the-githubcomgoogleuuidhttpsgithubcomgoogleuuid-package\"\u003eWith the \u003ca href=\"https://github.com/google/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/google/uuid\u003c/code\u003e\u003c/a\u003e package\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/google/uuid\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 1 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewUUID\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cannot generate v1 uuid\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v1 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 2 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewDCEGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cannot generate v2 uuid\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v2 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 3 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewMD5\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eNameSpaceURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v3 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 4 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRandom\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cannot generate v4 uuid\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v4 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 5 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev5\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewSHA1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eNameSpaceURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v5 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"with-the-githubcomgofrsuuidhttpsgithubcomgofrsuuid-package\"\u003eWith the \u003ca href=\"https://github.com/gofrs/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/gofrs/uuid\u003c/code\u003e\u003c/a\u003e package\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/gofrs/uuid\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 1 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewV1\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cannot generate v1 uuid\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v1 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 3 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewV3\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eNamespaceURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v3 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 4 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewV4\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cannot generate v4 uuid\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v4 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// version 5 uuid\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ev5\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewV5\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euuid\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eNamespaceURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;v5 uuid: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNote that the \u003ca href=\"https://github.com/gofrs/uuid\" target=\"_blank\"\u003e\u003ccode\u003egithub.com/gofrs/uuid\u003c/code\u003e\u003c/a\u003e package does not support UUID generation in version 2, but instead supports experimental versions 6 and 7 (not present in the example above).\u003c/p\u003e\n\u003ch2 id=\"which-uuid-version-to-use\"\u003eWhich UUID version to use?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eIf you simply need a unique random UUID without going into details, use Version 4.\u003c/li\u003e\n\u003cli\u003eIf you need a unique random UUID and want to know which one was generated from your computer, use Version 1. The IDs in Version 1 are generated based on time and MAC address and contain both a random and a constant element to identify the computer from which they were generated.\u003c/li\u003e\n\u003cli\u003eUse Version 3 or 5 UUID generation if you need reproducible results, i.e. you want to always get the same ID for a given string. Because Version 5 uses the \u003ca href=\"https://en.wikipedia.org/wiki/SHA-1\" target=\"_blank\"\u003eSHA-1\u003c/a\u003e hashing algorithm, it is generally more secure and recommended than Version 3 which uses \u003ca href=\"https://en.wikipedia.org/wiki/MD5\" target=\"_blank\"\u003eMD5\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e",
    "date": "2023-03-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8696804b45d63048d30924a2d43651f2",
    "source": {
      "path": "forums",
      "name": "Reddit",
      "url": "https://www.reddit.com/r/golang.rss"
    },
    "name": "Who's Hiring? - March 2023",
    "url": "https://www.reddit.com/r/golang/comments/11fijrn/whos_hiring_march_2023/",
    "resume": "",
    "date": "2023-03-01T21:23:41Z",
    "vote": 0
  },
  {
    "id": "3c3ea955a78f509a64f18b32e8858b83",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev Beat. February 2023",
    "url": "https://blog.boot.dev/news/bootdev-beat-2023-02/",
    "resume": "I\u0026rsquo;m back from paternity leave! My new son is healthy, and my daughter is\u0026hellip; busy. It\u0026rsquo;s good to be back writing code, writing courses and filming videos.",
    "date": "2023-03-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0c5a3657a65b34552e009ee56a30ef04",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📝 Convert date or time to string in Go",
    "url": "https://gosamples.dev/time-to-string/",
    "resume": "\u003cp\u003eTo convert \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e to a string in Go, you can use the \u003ca href=\"https://pkg.go.dev/time#Time.String\" target=\"_blank\"\u003e\u003ccode\u003eTime.String()\u003c/code\u003e\u003c/a\u003e method, which outputs the time in a default format, or \u003ca href=\"https://pkg.go.dev/time#Time.Format\" target=\"_blank\"\u003e\u003ccode\u003eTime.Format()\u003c/code\u003e\u003c/a\u003e method if you need a custom format.\u003c/p\u003e\n\u003cp\u003eLook at the example below where we convert the current time in UTC timezone: \u003ccode\u003et := time.Now().UTC()\u003c/code\u003e to a string. The \u003ccode\u003es1\u003c/code\u003e string is created by calling the \u003ca href=\"https://pkg.go.dev/time#Time.String\" target=\"_blank\"\u003e\u003ccode\u003et.String()\u003c/code\u003e\u003c/a\u003e method, and as you can see in the output, it is formatted using the default format: \u003ccode\u003e2006-01-02 15:04:05.999999999 -0700 MST\u003c/code\u003e. On the other hand, the second string \u003ccode\u003es2\u003c/code\u003e is formatted by \u003ca href=\"https://pkg.go.dev/time#Time.Format\" target=\"_blank\"\u003e\u003ccode\u003et.Format()\u003c/code\u003e\u003c/a\u003e method with the year-month-day format as an argument: \u003ccode\u003e2006-01-02\u003c/code\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you are unfamiliar with the Go time format layout, also called the \u003cem\u003ereference time\u003c/em\u003e, check out our \u003ca href=\"https://gosamples.dev/date-time-format-cheatsheet\"\u003echeatsheet about date and time format in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es1\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s1: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;2006-01-02\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s2: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es1: 2022-12-13 05:32:03.27335197 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es2: 2022-12-13\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2023-03-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f719854dda1a6ad33fa9eeeb89929aae",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Getting Started with The database/sql Package",
    "url": "https://blog.jetbrains.com/go/2023/02/28/getting-started-with-the-database-sql-package/",
    "resume": "This article was written by an external contributor. The database/sql package is a standard library that provides an interface for interacting with SQL databases. The package enables applications to query and update databases and provides a portable interface that works with various SQL databases. The database/sql package is typically used in conjunction with a database [\u0026#8230;]",
    "date": "2023-02-28T14:10:25Z",
    "vote": 0
  },
  {
    "id": "d000200cb9b0554ad4fc776afbea4bae",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "Migrate from Hashicorps go-multierror to standard library multierror (Golang 1.20)",
    "url": "https://golang.ch/migrate-from-hashicorps-go-multierror-to-standard-library-multierror-golang-1-20/",
    "resume": "\u003cp\u003eA migration guide from\u0026#160;github.com/hashicorp/go-multierror\u0026#160;to the std library errors package. In\u0026#160;go1.20\u0026#160;support for \u0026#8220;multierrors\u0026#8221; was added. Why migrate?\u0026#160;# Migrating from community go modules to standard library implementations is almost always a no-brainer if it provides like for like functionality. Packages in the core go standard library such as\u0026#160;errors\u0026#160;are covered by the go1.0 backwards compatibility guarantee [0].Because of [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/migrate-from-hashicorps-go-multierror-to-standard-library-multierror-golang-1-20/\"\u003eMigrate from Hashicorps go-multierror to standard library multierror (Golang 1.20)\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/migrate-from-hashicorps-go-multierror-to-standard-library-multierror-golang-1-20/\"\u003eMigrate from Hashicorps go-multierror to standard library multierror (Golang 1.20)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-28T06:24:46Z",
    "vote": 0
  },
  {
    "id": "d580b7d228b860609c6560ef1502f430",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Determine LOC with io.Writer Ep. 5",
    "url": "https://www.ardanlabs.com/blog/2023/02/interfaces-101-determine-loc-with-iowriter.html",
    "resume": "Introduction In episode 4, Miki defined an enumerated type that satisfied Go’s fmt.Stringer interface. By implementing the fmt.Stringer interface, Miki can specify how his enumerators were printed within a formatted string and in this case, he expected the values to be displayed as a predetermined text value. Miki also pointed out how using the value of the method’s receiver within the Stringer method can result in a recursive loop.",
    "date": "2023-02-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5220d8e4613b53049fa65fe7b50f2c10",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "✨ 5 different ways to loop over a time.Ticker in Go",
    "url": "https://gosamples.dev/range-over-ticker/",
    "resume": "\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e is a very popular structure in Go that provides clock ticks at fixed intervals. Internally, it contains a channel that delivers subsequent ticks. Using this channel, we can create several different variants of the loop depending on the needs, for example, whether the loop should start immediately, whether we need a ticker value, or whether we want to stop the ticker properly while the program is running. All these cases will be described in this article 😊.\u003c/p\u003e\n\u003ch2 id=\"simple-loop-over-a-timetickerhttpspkggodevtimeticker\"\u003eSimple loop over a \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWhen you want to perform some task every fixed period of time, use the standard \u003ccode\u003efor\u003c/code\u003e loop over the \u003ccode\u003eC\u003c/code\u003e channel of \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e. Such a loop allows you to schedule cron-like tasks or worker functions, where some code executes every specified time. Check out the example and the output. We receive a tick in the loop every second and print its time. After 5 seconds of the main thread sleeping, the ticker stops, and the app finishes.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis type of \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e loop is suitable for endless goroutines. However, if in a production application you allow a goroutine to terminate before the end of the program, it is better to use \u003ca href=\"https://gosamples.dev/range-over-ticker/#correct-finish-goroutine\"\u003ean example that guarantees that the goroutine will terminate correctly\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewTicker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eC\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Tick at: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// do something\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 07:05:49 Tick at: 2022-12-06 06:05:49.450700257 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 07:05:50 Tick at: 2022-12-06 06:05:50.450801838 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 07:05:51 Tick at: 2022-12-06 06:05:51.450907566 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 07:05:52 Tick at: 2022-12-06 06:05:52.451003677 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"a-loop-without-getting-the-tick-value\"\u003eA loop without getting the tick value\u003c/h2\u003e\n\u003cp\u003eIn many cases, you do not need to print the tick value or use it in any other way. So you can ignore it by using the \u003ca href=\"https://go.dev/ref/spec#Blank_identifier\" target=\"_blank\"\u003eblank identifier\u003c/a\u003e in the loop: \u003ccode\u003efor _ := range ticker.C\u003c/code\u003e or skip the assignment in the loop altogether: \u003ccode\u003efor range ticker.C\u003c/code\u003e. Check out the example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewTicker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eC\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hey!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e2022/12/06 19:11:13 Hey!\n2022/12/06 19:11:14 Hey!\n2022/12/06 19:11:15 Hey!\n2022/12/06 19:11:16 Hey!\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"run-timetickerhttpspkggodevtimeticker-loop-with-immediate-start\"\u003eRun \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e loop with immediate start\u003c/h2\u003e\n\u003cp\u003eSometimes you may want the \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e loop to return a tick immediately, without waiting for the first tick from the \u003ccode\u003eC\u003c/code\u003e channel. It can be useful in applications that do some work every certain amount of time, but the same work should also be done right after startup. For example, an application that fills a cache with data should do this right after the start and then at equal intervals, such as every hour. Although the \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e does not support such an option by default, we can simulate this using the classic \u003ccode\u003efor\u003c/code\u003e loop form:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003einitialization\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eloopBody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhen we leave the \u003ccode\u003e\u0026lt;condition\u0026gt;\u003c/code\u003e empty, meaning that it will be \u003ccode\u003etrue\u003c/code\u003e, we assure that this loop will execute at least once immediately. Subsequent executions should take place according to incoming ticks, so we need to set reading from the \u003ccode\u003eTicker.C\u003c/code\u003e channel as \u003ccode\u003e\u0026lt;post-condition\u0026gt;\u003c/code\u003e. Run the example and look at its output. The first execution of the loop is immediate because there are no additional conditions in the \u003ccode\u003e\u0026lt;initialization\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;condition\u0026gt;\u003c/code\u003e sections, and subsequent executions happen every second according to the \u003ccode\u003e\u0026lt;post-condition\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewTicker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eC\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hey!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 19:50:37 Hey!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 19:50:38 Hey!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 19:50:39 Hey!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 19:50:40 Hey!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/06 19:50:41 Hey!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"run-timetickerhttpspkggodevtimeticker-loop-with-an-immediate-start-and-get-the-ticker-value\"\u003eRun \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e loop with an immediate start and get the ticker value\u003c/h2\u003e\n\u003cp\u003eWhen you want to create a \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e loop with the immediate first tick and use its value, you must first initialize the variable in the \u003ccode\u003efor\u003c/code\u003e loop and then assign successive tick values obtained from the \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e to it. Read the example to find out how to do it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewTicker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eC\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Tick at: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/07 06:08:24 Tick at: 2022-12-07 05:08:24.189026328 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/07 06:08:25 Tick at: 2022-12-07 05:08:25.189313138 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/07 06:08:26 Tick at: 2022-12-07 05:08:26.189548386 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/07 06:08:27 Tick at: 2022-12-07 05:08:27.189798708 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/12/07 06:08:28 Tick at: 2022-12-07 05:08:28.190043492 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"correct-finish-goroutine\"\u003eProperly finish the \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e goroutine\u003c/h2\u003e\n\u003cp\u003eWhen you run the \u003ca href=\"https://pkg.go.dev/time#Ticker\" target=\"_blank\"\u003e\u003ccode\u003etime.Ticker\u003c/code\u003e\u003c/a\u003e loop in a goroutine, and at some point, you want to stop processing, you need to perform two steps:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003estop the \u003ccode\u003eTicker\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eensure that the goroutine in which the \u003ccode\u003eTicker\u003c/code\u003e was operating terminated correctly\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo stop the \u003ccode\u003eTicker\u003c/code\u003e, you need to run the \u003ca href=\"https://pkg.go.dev/time#Ticker.Stop\" target=\"_blank\"\u003e\u003ccode\u003eStop()\u003c/code\u003e\u003c/a\u003e method. However, the \u003ca href=\"https://pkg.go.dev/time#Ticker.Stop\" target=\"_blank\"\u003e\u003ccode\u003eStop()\u003c/code\u003e\u003c/a\u003e does not close the \u003ccode\u003eC\u003c/code\u003e channel. It only prevents new ticks from being sent. Thus, it does not automatically exit the loop and the goroutine. To close the goroutine, you need an additional signal that, when read, will cause it to close. So to achieve all this, we will use a \u003ccode\u003efor\u003c/code\u003e loop with a \u003ccode\u003eselect\u003c/code\u003e statement. The \u003ccode\u003eselect\u003c/code\u003e blocks and waits until one of its cases can run. In our situation, it should wait either for the value of the new tick from the \u003ccode\u003eC\u003c/code\u003e channel or for the signal to terminate the goroutine.\u003c/p\u003e\n\u003cp\u003eLook at the \u003ccode\u003emain()\u003c/code\u003e function in the example. After 5 seconds of goroutine processing, we stop the \u003ccode\u003eTicker\u003c/code\u003e using the \u003ca href=\"https://pkg.go.dev/time#Ticker.Stop\" target=\"_blank\"\u003e\u003ccode\u003eStop()\u003c/code\u003e\u003c/a\u003e method and send a new signal to the \u003ccode\u003edone\u003c/code\u003e channel. As a result, the \u003ccode\u003eTicker\u003c/code\u003e stops receiving new ticks in the \u003ccode\u003eC\u003c/code\u003e channel, and the \u003ccode\u003eselect\u003c/code\u003e statement reads the value from the \u003ccode\u003edone\u003c/code\u003e, which causes the goroutine to \u003ccode\u003ereturn\u003c/code\u003e. In the first 5 seconds of the app, there are only messages in the \u003ccode\u003eticker.C\u003c/code\u003e channel, so the \u003ccode\u003eselect\u003c/code\u003e always chooses the case with a read from this channel.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewTicker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edone\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003echan\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eselect\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan class=\"nx\"\u003edone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hey!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eticker\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edone\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e\u003cspan class=\"p\"\u003e{}{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Done\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e2022/12/07 06:09:59 Hey!\n2022/12/07 06:10:00 Hey!\n2022/12/07 06:10:01 Hey!\n2022/12/07 06:10:02 Hey!\n2022/12/07 06:10:03 Hey!\n2022/12/07 06:10:03 Done\n\u003c/code\u003e\u003c/pre\u003e",
    "date": "2023-02-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8f48f56148a6ad7f50fa40107252a983",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "An authorization backend that comes with a UI for RBAC and ABAC permission – Golang based",
    "url": "https://golang.ch/an-authorization-backend-that-comes-with-a-ui-for-rbac-and-abac-permission-golang-based/",
    "resume": "\u003cp\u003eThis project brings a backend server with its frontend for managing authorizations. You can use both Role-Based Acccess Control (RBAC) and Attribute-Based Access Control (ABAC). Why use it? \u0026#160;A centralized backend for all your applications authorizations \u0026#160;Supports Role-Based Access Control (RBAC) \u0026#160;Supports Attribute-Based Access Control (ABAC) \u0026#160;Multiple language SDKs available \u0026#160;Reliable: Authz uses Authz itself [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/an-authorization-backend-that-comes-with-a-ui-for-rbac-and-abac-permission-golang-based/\"\u003eAn authorization backend that comes with a UI for RBAC and ABAC permission – Golang based\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/an-authorization-backend-that-comes-with-a-ui-for-rbac-and-abac-permission-golang-based/\"\u003eAn authorization backend that comes with a UI for RBAC and ABAC permission \u0026#8211; Golang based\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-26T11:44:24Z",
    "vote": 0
  },
  {
    "id": "7b52ef418936c3bf1f652a72d7abb447",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "A Golang-based, scalable, high-performance, high availability distributed time series database",
    "url": "https://golang.ch/a-golang-based-scalable-high-performance-high-availability-distributed-time-series-database/",
    "resume": "\u003cp\u003eLinDB is an open-source Time Series Database that Admin UI Some admin ui snapshots. Overview Monitoring Dashboard Replication State Data Explore Explain Contributing Contributions are welcomed and greatly appreciated. See\u0026#160;CONTRIBUTING\u0026#160;for details on submitting patches and the contribution workflow. CI Pull requests should be appropriately labeled, and linked to any relevant\u0026#160;bug or feature tracking issues. All [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/a-golang-based-scalable-high-performance-high-availability-distributed-time-series-database/\"\u003eA Golang-based, scalable, high-performance, high availability distributed time series database\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/a-golang-based-scalable-high-performance-high-availability-distributed-time-series-database/\"\u003eA Golang-based, scalable, high-performance, high availability distributed time series database\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-25T15:32:27Z",
    "vote": 0
  },
  {
    "id": "ccef13f55af0a61c0a08adfdce0ca6fc",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "New Editor Settings, Actions on Save for New Projects, and Web Development features in GoLand 2023.1 EAP #6",
    "url": "https://blog.jetbrains.com/go/2023/02/24/new-editor-settings-actions-on-save-for-new-projects-and-web-development-features-in-goland-2023-1-eap-6/",
    "resume": "The sixth GoLand 2023.1 EAP build is out! You can get it via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select Check IDE updates for: Early Access Program in Settings \u0026#124; Appearance \u0026#38; Behavior \u0026#124; System Settings \u0026#124; Updates.\u0026#160; Download GoLand 2023.1 EAP Editor [\u0026#8230;]",
    "date": "2023-02-24T17:10:57Z",
    "vote": 0
  },
  {
    "id": "1b5b0c16f7634dc1b79555f10c5824c9",
    "source": {
      "path": "golang",
      "name": "Golang Weekly",
      "url": "https://cprss.s3.amazonaws.com/golangweekly.com.xml"
    },
    "name": "A particularly Charming issue",
    "url": "https://golangweekly.com/issues/449",
    "resume": "\u003ctable border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\"\u003e\n  \u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003cdiv\u003e    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\n\u003ctd align=\"left\" style=\"padding-left: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e#​449 — February 24, 2023\u003c/p\u003e\u003c/td\u003e\n\u003ctd align=\"right\" style=\"padding-right: 4px; font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135931/rss\" style=\" color: #0099b4;\"\u003eUnsub\u003c/a\u003e  |  \u003ca href=\"https://golangweekly.com/link/135932/rss\" style=\" color: #0099b4;\"\u003eWeb Version\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eI'm not sure what's up, but \u003ca href=\"https://golangweekly.com/link/135933/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003eCharm's\u003c/a\u003e projects have popped up all over the place this week, so get ready for the most \u003cem\u003eCharm-ing\u003c/em\u003e issue we've ever sent.. 🤭\u003cbr\u003e__\u003cbr\u003e\u003cem\u003ePeter Cooper, your editor\u003c/em\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n    \n    \u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 12px;  padding-left: 12px;\"\u003e\u003cp\u003eThe \u003cem\u003eGo Weekly\u003c/em\u003e Newsletter\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/135935/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/zamx5n18olmkduhgmyxz.jpg\" width=\"640\" style=\"    line-height: 100%;       \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135935/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.1em; line-height: 1.4em;\"\u003eLog: A Minimal, Colorful Go Logging Library\u003c/a\u003e\u003c/span\u003e — A library from the same folks who brought us \u003ca href=\"https://golangweekly.com/link/135936/rss\" style=\" color: #0099b4;   \"\u003eBubble Tea\u003c/a\u003e and \u003ca href=\"https://golangweekly.com/link/135937/rss\" style=\" color: #0099b4;   \"\u003eGum\u003c/a\u003e so you know it’s from a good place. It provides \u003cem\u003e“customizable colorful human readable logging with batteries included.”\u003c/em\u003e\u003c/p\u003e\n  \u003cp\u003eCharm \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135938/rss\" title=\"go.dev\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eAll Your Comparable Types\u003c/a\u003e\u003c/span\u003e — The introduction of generics was bound to create edge cases. One is described here around interface implementation vs. constraint satisfaction. \u003cem\u003e“As we’ll see in a bit, in Go 1.20 constraint satisfaction is not quite constraint implementation anymore.”\u003c/em\u003e\u003c/p\u003e\n  \u003cp\u003eRobert Griesemer \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003ca href=\"https://golangweekly.com/link/135934/rss\" style=\" color: #0099b4;   \"\u003e\u003cimg src=\"https://copm.s3.amazonaws.com/bcc68a3c.png\" width=\"110\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%;    \"\u003e\u003c/a\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135934/rss\" title=\"www.ardanlabs.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGo! Experts at Your Service\u003c/a\u003e\u003c/span\u003e — Do you need help filling skill gaps, speeding up development \u0026amp; creating high performing software with Go, Docker, K8s, Terraform and Rust? We’ll help you maximize your architecture, structure, tech-debt and human capital.\u003c/p\u003e\n  \u003cp\u003eArdan Labs Consulting \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135939/rss\" title=\"www.dolthub.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eType Embedding: Go's Fake 'Inheritance'\u003c/a\u003e\u003c/span\u003e — Inspired by a \u003cem\u003e“Keep Your Java Out of My Go”\u003c/em\u003e Reddit post, Zach shows how leaning too hard on object oriented ideas can cause hard-to-track-down bugs. But if you’re probably going to do it anyway.. read this to help debug later.\u003c/p\u003e\n  \u003cp\u003eZach Musgrave (DoltHub) \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eIf you're curious, the not-particularly-edifying Reddit post that inspired the above was \u003ca href=\"https://golangweekly.com/link/135940/rss\" style=\" color: #0099b4; font-weight: 600;\"\u003e'How to deal with Java developers polluting the Go code?'\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cp\u003e\u003cstrong\u003eIN BRIEF:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135941/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003e▶️ A developer explains\u003c/a\u003e how he picked up a $3,133.70 bounty for finding a XSS vulnerability in Go's \u003ccode\u003ex/net/html\u003c/code\u003e package. There's \u003ca href=\"https://golangweekly.com/link/135942/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ea code example\u003c/a\u003e of the problem and the \u003ca href=\"https://golangweekly.com/link/135943/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eresulting patch.\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGenerics have been in Go for roughly a year now, so \u003ca href=\"https://golangweekly.com/link/135944/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003e🐦 what have you been using them for\u003c/a\u003e, asks Kelsey Hightower?\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBrandur Leach has some findings from \u003ca href=\"https://golangweekly.com/link/135945/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003esix months of running \u003ccode\u003egovulncheck\u003c/code\u003e in CI.\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135946/rss\" title=\"bryce.is\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003e\u003ccode\u003ego test\u003c/code\u003e and Parallelism\u003c/a\u003e\u003c/span\u003e — \u003cem\u003e“Because I feel the concurrency behavior of \u003ccode\u003ego test\u003c/code\u003e is non-obvious .. I wanted to write something up here.”\u003c/em\u003e\u003c/p\u003e\n  \u003cp\u003eBryce Neal \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135947/rss\" title=\"www.kosli.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eHow to Publish Go Binaries with Goreleaser\u003c/a\u003e\u003c/span\u003e — \u003ca href=\"https://golangweekly.com/link/135948/rss\" style=\" color: #0099b4;   \"\u003eGoreleaser\u003c/a\u003e is a helpful tool if you need to cross-compile and publish binaries for multiple architectures, different operating systems, package managers, etc.\u003c/p\u003e\n  \u003cp\u003eRexford A Nyarko \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135949/rss\" title=\"preslav.me\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ePartially-Implemented Interfaces\u003c/a\u003e\u003c/span\u003e — When you just want to implement one or two methods … but be careful.\u003c/p\u003e\n  \u003cp\u003ePreslav Rachev \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135950/rss\" title=\"teleport.registration.goldcast.io\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eSecurely Deploy Kubernetes Clusters with GitHub Actions\u003c/a\u003e\u003c/span\u003e — Managing identity for Kubernetes \u0026amp; CI/CD workflows relies on dated security mechanisms, learn more in our new episode.\u003c/p\u003e\n  \u003cp\u003eTELEPORT | goteleport.com \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e▶  \u003ca href=\"https://golangweekly.com/link/135951/rss\" title=\"changelog.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eWhat's New in Go 1.20 with Carl Johnson\u003c/a\u003e\u003c/span\u003e — An hour of exactly what it says on the can..\u003c/p\u003e\n  \u003cp\u003eThe Go Time Podcast \u003cspan style=\"text-transform: uppercase; margin-left: 4px; padding-top: 1px; padding-right: 4px;  padding-left: 4px; font-size: 0.9em;             \"\u003epodcast\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135952/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eThe Complete Guide to OpenTelemetry in Go\u003c/a\u003e\u003c/span\u003e\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eKomu Wairagu\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e🛠 Code \u0026amp; Tools\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/135953/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/lyqvupyaacmtjr9896zc.jpg\" width=\"640\" style=\"        line-height: 100%;     \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135953/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eOpossum: A Basic Web Browser Written in Go\u003c/a\u003e\u003c/span\u003e — A fun project, though you might need to have (or set up) a Plan 9-derived OS to get it running (though someone \u003ca href=\"https://golangweekly.com/link/135954/rss\" style=\" color: #0099b4;   \"\u003eclaims success\u003c/a\u003e on macOS). As user \u003cem\u003eliotier\u003c/em\u003e \u003ca href=\"https://golangweekly.com/link/135955/rss\" style=\" color: #0099b4;   \"\u003esaid\u003c/a\u003e on Hacker News, though: \u003cem\u003e“any sufficiently brave or delusional soul that ventures into even the most rudimentary web browser development is a hero to me”\u003c/em\u003e.\u003c/p\u003e\n  \u003cp\u003ePhilip Silva \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135956/rss\" title=\"gin-gonic.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eGin 1.9: A Fast HTTP Web Framework\u003c/a\u003e\u003c/span\u003e — We don’t often link to Gin because a) it doesn’t often get big updates, and b) it’s hugely popular and you probably use it already ;-) If you do, \u003ca href=\"https://golangweekly.com/link/135957/rss\" style=\" color: #0099b4;   \"\u003ev1.9 is out\u003c/a\u003e, and if you don’t, it’s worth being on your radar.\u003c/p\u003e\n  \u003cp\u003eGin Web Framework \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135958/rss\" title=\"shortcut.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eDon’t Let Your Issue Tracker Be a Four-Letter Word. Use Shortcut\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n  \u003cp\u003eShortcut (formerly Clubhouse.io) \u003cspan style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #885 !important; padding-top: 1px; padding-right: 4px;  padding-left: 4px;            \"\u003esponsor\u003c/span\u003e\u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135959/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eSoft Serve: A Self-Hostable Git Server\u003c/a\u003e\u003c/span\u003e — Soft is configurable via \u003ccode\u003egit\u003c/code\u003e itself and comes with a nice terminal UI (TUI). Another interesting release from the Charm project.\u003c/p\u003e\n  \u003cp\u003eCharm \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135960/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003ekoanf: Configuration Management Library\u003c/a\u003e\u003c/span\u003e — Support for JSON, TOML, YAML, env, command line, file, S3 etc. Alternative to Viper.\u003c/p\u003e\n  \u003cp\u003eKailash Nadh \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135961/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eVHS 0.3: The 'Home Video Recorder' for Your CLI\u003c/a\u003e\u003c/span\u003e — A tool plus scripting language for performing actions on the terminal which are then recorded into an animated GIF (or an MP4, webm file, or series of PNG frames). \u003cem\u003e“Write terminal GIFs as code for integration testing and demoing your CLI tools.”\u003c/em\u003e \u003ca href=\"https://golangweekly.com/link/135962/rss\" style=\" color: #0099b4;   \"\u003ev0.3\u003c/a\u003e adds support for hosting said GIFs on Charm’s own \u003ccode\u003evhs.charm․sh\u003c/code\u003e service.\u003c/p\u003e\n  \u003cp\u003eCharm \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003e\u003cem\u003e.. Is this the last mention of a Charm project this week..?\u003c/em\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135963/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eHoverFly 2.0\u003c/a\u003e\u003cbr\u003e\n↳ Lightweight API simulation tool.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135964/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eMulti Progress Bar / mpb 8.2\u003c/a\u003e\u003cbr\u003e\n↳ Multi progress bar for CLI apps.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135965/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eimagor 1.4.1\u003c/a\u003e\u003cbr\u003e\n↳ libvips-based image processing.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135966/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003ePie 2.4\u003c/a\u003e\u003cbr\u003e\n↳ Common operations for slices and maps.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135967/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003epgweb 0.14\u003c/a\u003e\u003cbr\u003e\n↳ Web-based explorer for Postgres.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135968/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eDefine 0.3\u003c/a\u003e\u003cbr\u003e\n↳ Command line dictionary and thesaurus.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://golangweekly.com/link/135969/rss\" style=\" color: #0099b4; font-weight: 600;   \"\u003eLefthook 1.3\u003c/a\u003e\u003cbr\u003e\n↳ Polyglot Git hooks manager.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 0px;  padding-left: 0px;\"\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\u003cp\u003eJobs\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135972/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eSite Reliability Engineer\u003c/a\u003e\u003c/span\u003e — Join our \"kick ass\" team. Our software team operates from 17 countries and we're always looking for more exceptional engineers.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eSticker Mule\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.0em; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135970/rss\" style=\" color: #0099b4; font-size: 1.0em !important; font-weight: 500;   \"\u003eFind a Job Through Hired\u003c/a\u003e\u003c/span\u003e — Hired makes job hunting easy-instead of chasing recruiters, companies approach you with salary details up front. Create a free profile now.\n  \u003cbr\u003e\u003cspan style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.3em;\"\u003eHired\u003c/span\u003e \n  \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0; padding-right: 0;  padding-left: 0;\"\u003e\u003cp\u003e♣️ \u003cem\u003eSolitaire's the only game in town..\u003c/em\u003e\u003c/p\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\n  \u003ca href=\"https://golangweekly.com/link/135971/rss\" style=\" color: #0099b4;\"\u003e\u003cimg src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60,q_auto/wxsk6atb4jd25ejezlut.jpg\" width=\"640\" style=\"        line-height: 100%;     \"\u003e\u003c/a\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em;  padding-top: 0px; padding-right: 15px;  padding-left: 15px;\"\u003e\n  \n  \u003cp\u003e\u003cspan style=\"font-weight: 600; font-size: 1.2em !important; color: #000;\"\u003e\u003ca href=\"https://golangweekly.com/link/135971/rss\" title=\"github.com\" style=\" color: #0099b4;    font-size: 1.05em;\"\u003eSolitaire TUI: Klondike Solitaire on the Terminal\u003c/a\u003e\u003c/span\u003e — If you, like me, \u003cstrike\u003ewasted\u003c/strike\u003espent much time in Windows 3.x playing the solitaire game, this \u003ca href=\"https://golangweekly.com/link/135936/rss\" style=\" color: #0099b4;   \"\u003eBubble Tea\u003c/a\u003e-powered creation (\u003cem\u003eTHAT'S THE FINAL CHARM PROJECT THIS WEEK!\u003c/em\u003e) might appeal to you now in 2023 too. Bonus points to anyone who can file a pull request to add the Windows-style \u003ca href=\"https://golangweekly.com/link/135974/rss\" style=\" color: #0099b4;   \"\u003eending animation\u003c/a\u003e ;-)\u003c/p\u003e\n  \u003cp\u003eBrian Strauch \u003c/p\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003ctable border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0\u003e\u003ctr\u003e\u003ctd style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.48em; \"\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n  \u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n\n\n\n\u003cimg src=\"https://golangweekly.com/open/449/rss\" width=\"1\" height=\"1\" /\u003e",
    "date": "2023-02-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c5b29f76066313b5b30f678d90730eaa",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "Building conc: Better structured concurrency for Golang",
    "url": "https://golang.ch/building-conc-better-structured-concurrency-for-golang/",
    "resume": "\u003cp\u003eGo is designed to make concurrency easier than it is in other languages, but at Sourcegraph, I still found myself running into the same problems repeatedly when writing concurrent code. In particular, it is difficult to write concurrent code that operates reasonably in the face of panics. We don\u0026#8217;t want the entire process to crash [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/building-conc-better-structured-concurrency-for-golang/\"\u003eBuilding conc: Better structured concurrency for Golang\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/building-conc-better-structured-concurrency-for-golang/\"\u003eBuilding conc: Better structured concurrency for Golang\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-23T05:03:28Z",
    "vote": 0
  },
  {
    "id": "f1a24fbe266b8a6edf8ea67d328c14bc",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Become a Golang Engineer (on the Back-End)",
    "url": "https://blog.boot.dev/golang/become-golang-backend-dev/",
    "resume": "\u0026ldquo;Guys, I’ve got an idea. What if we could design a language that\u0026rsquo;s easy to read like Python, but fast?",
    "date": "2023-02-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4d55b9fea24f0baf99e6df8cb0789740",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "Build a RESTful API service in Golang without repetitive boilerplate",
    "url": "https://golang.ch/build-a-restful-api-service-in-golang-without-repetitive-boilerplate/",
    "resume": "\u003cp\u003eThere are a lot of materials about how to write services, where at first you need to choose some framework to use, then comes wiring of handlers, configs, logs, storage, etc, not to mention deploying that service somewhere. We’ve been writing services for quite some time and more often than not you’d just want to [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/build-a-restful-api-service-in-golang-without-repetitive-boilerplate/\"\u003eBuild a RESTful API service in Golang without repetitive boilerplate\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/build-a-restful-api-service-in-golang-without-repetitive-boilerplate/\"\u003eBuild a RESTful API service in Golang without repetitive boilerplate\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-22T04:39:51Z",
    "vote": 0
  },
  {
    "id": "7f4ef7e52167ed112607e9a462986df1",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "A pure Golang, cross-platform, MIT-licensed UI toolkit for developers",
    "url": "https://golang.ch/a-pure-golang-cross-platform-mit-licensed-ui-toolkit-for-developers/",
    "resume": "\u003cp\u003eduit is a pure Golang (*), cross platform, MIT-licensed ui toolkit for developers. the api is small and uncomplicated. duit works on the bsd\u0026#8217;s, linux and macos. it should be easy to get running on plan 9. for now, use the windows subsystem for linux on windows. (*) duit currently needs a helper tool called [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/a-pure-golang-cross-platform-mit-licensed-ui-toolkit-for-developers/\"\u003eA pure Golang, cross-platform, MIT-licensed UI toolkit for developers\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/a-pure-golang-cross-platform-mit-licensed-ui-toolkit-for-developers/\"\u003eA pure Golang, cross-platform, MIT-licensed UI toolkit for developers\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-21T04:43:58Z",
    "vote": 0
  },
  {
    "id": "dc8094f7b23c2022beccffcea77ad827",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Go's Logging Interface Ep. 4",
    "url": "https://www.ardanlabs.com/blog/2023/02/interfaces-101-go-logging-interface.html",
    "resume": "Introduction In episode 3, Miki implemented a type that satisfied Go’s error interface. The odd thing about his type was it would be considered not-nil although no value was set for it. To get a better understanding of the situation, Miki gives a brief explanation of how Go determines if an error value is nil, and in this case, Miki specified the type of the variable returned to be a pointer of his custom error type which blindsided Go’s mechanism to determine a nil value.",
    "date": "2023-02-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1849f86d16ad97cf7a2d70afa273c82c",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Improvements to the Go Playground Integration and Additional New UI Enhancements in GoLand 2023.1 EAP #5",
    "url": "https://blog.jetbrains.com/go/2023/02/17/improvements-for-go-playground-integration-and-additional-new-ui-enhancements-in-goland-2023-1-eap-5/",
    "resume": "The fifth GoLand 2023.1 EAP build is out! You can get it via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select Check IDE updates for: Early Access Program in Settings \u0026#124; Appearance \u0026#38; Behavior \u0026#124; System Settings \u0026#124; Updates. Download GoLand 2023.1 EAP Go [\u0026#8230;]",
    "date": "2023-02-17T17:20:46Z",
    "vote": 0
  },
  {
    "id": "bd52e5edca0fd566d11f6c457720c2d1",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "All your comparable types",
    "url": "https://go.dev/blog/comparable",
    "resume": "type parameters, type sets, comparable types, constraint satisfaction",
    "date": "2023-02-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1a199635af2dcc39a2df7b7a4974d2f1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Want to Become a Python Back-end Developer? Start Here.",
    "url": "https://blog.boot.dev/python/learn-python-backend/",
    "resume": "Myth #1: \u0026ldquo;Python is too slow for back-end development.\u0026rdquo;\nMyth #2: \u0026ldquo;Nowadays, you should do all back-end development in JavaScript/TypeScript.",
    "date": "2023-02-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ec90c610143f916dc351b94ac02b7a85",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "What's new in Go 1.20",
    "url": "https://changelog.com/gotime/267",
    "resume": "Our “what’s new in Go” correspondent Carl Johnson joins Mat \u0026 Johnny to discuss… what’s new in Go 1.20, of course! What’d you expect, an episode about Rust?! That’s preposterous…",
    "date": "2023-02-16T23:00:00Z",
    "vote": 0
  },
  {
    "id": "bb3785330e79b1fa8ce220340c3fb049",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "Generate boilerplate for Gin / Fiber / Echo / Chi Golang REST servers",
    "url": "https://golang.ch/generate-boilerplate-for-gin-fiber-echo-chi-golang-rest-servers/",
    "resume": "\u003cp\u003eGenerate Golang Rest Server: from one config file. Documentation Install # go version \u0026#62;= 1.17 go install github.com/tompston/gomarvin@latest # go version \u0026#60; 1.17 go get github.com/tompston/gomarvin # or clone the repo and run go run main.go git clone https://github.com/tompston/gomarvin.git # run this in the same dir as the config file, if the name of the [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/generate-boilerplate-for-gin-fiber-echo-chi-golang-rest-servers/\"\u003eGenerate boilerplate for Gin / Fiber / Echo / Chi Golang REST servers\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/generate-boilerplate-for-gin-fiber-echo-chi-golang-rest-servers/\"\u003eGenerate boilerplate for Gin / Fiber / Echo / Chi Golang REST servers\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-15T03:34:07Z",
    "vote": 0
  },
  {
    "id": "549fc2d960c1f23a2913ee808cd06ad4",
    "source": {
      "path": "blogs",
      "name": "Goland.ch",
      "url": "https://golang.ch/feed/"
    },
    "name": "Fast and dynamic encoding of Protocol Buffers in Go",
    "url": "https://golang.ch/fast-and-dynamic-encoding-of-protocol-buffers-in-go/",
    "resume": "\u003cp\u003eProtocol Buffers\u0026#160;are a popular choice for\u0026#160;serializing structured data\u0026#160;due to their compact size, fast processing speed, language independence, and compatibility. There exist other alternatives, including\u0026#160;Cap’n Proto,\u0026#160;CBOR, and\u0026#160;Avro. Usually, data structures are described in a\u0026#160;proto definition file\u0026#160;(.proto). The\u0026#160;protoc\u0026#160;compiler and a language-specific plugin convert it into code: $ head flow-4.proto syntax = \"proto3\"; package decoder; option go_package = [\u0026#8230;]\u003c/p\u003e\n\u003cp\u003eThe post \u003ca href=\"https://golang.ch/fast-and-dynamic-encoding-of-protocol-buffers-in-go/\"\u003eFast and dynamic encoding of Protocol Buffers in Go\u003c/a\u003e first appeared on \u003ca href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golang.ch/fast-and-dynamic-encoding-of-protocol-buffers-in-go/\"\u003eFast and dynamic encoding of Protocol Buffers in Go\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golang.ch\"\u003eGolang Libraries, Apps, Golang Jobs and Go Tutorials\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-13T12:04:08Z",
    "vote": 0
  },
  {
    "id": "c1b1d5d8125392e5405d16a6d6b57d6f",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Error Handling With Go Ep. 3",
    "url": "https://www.ardanlabs.com/blog/2023/02/interfaces-101-error-handling-with-go.html",
    "resume": "Introduction In episode 2, Miki examined the impact interfaces have on the performance of a Go program. To perform this experiment, Miki invoked a type’s method in two ways: with the concrete type and as an interface function to measure the difference in execution time. The conclusion of this experiment was that calling a method with the concrete type is faster than using an interface. During the experiment, Miki made use of the build flag -gcflag=’-m’ to display which variables were being allocated on the heap and where the compiler was automatically inlining function calls.",
    "date": "2023-02-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e6707325aa7cfa07dd4853f7853d883e",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Check if a string contains single or multiple whitespaces in Go (Golang)",
    "url": "https://golangbyexample.com/string-whitespace-golang/",
    "resume": "\u003cp\u003eOverview A simple regex can be used to check if a string contains single or multiple white spaces in Go. Here is the program for the same Program Output Note: Check out...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/string-whitespace-golang/\"\u003eCheck if a string contains single or multiple whitespaces in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-10T14:55:10Z",
    "vote": 0
  },
  {
    "id": "c1c4abe8b4bb2464feb1d7590233cbb5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is in a Back-End Developer’s Job Description?",
    "url": "https://blog.boot.dev/backend/backend-job-description/",
    "resume": "What’s it like being a back-end developer? Well, it’s different depending on which developer you ask.",
    "date": "2023-02-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b1505cb5caa42acfb4d46f1c646f2d93",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Your Architecture is Bad, So Make It Easy to Change",
    "url": "https://blog.boot.dev/clean-code/make-architecture-easy-to-change/",
    "resume": "Have you ever started a new software development job and thought:\n\u0026ldquo;Wow, what a beautifully architected system!",
    "date": "2023-02-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fb68becad117d3da24f215588b699940",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Is htmx the way to Go?",
    "url": "https://changelog.com/gotime/266",
    "resume": "A quick look at the history of building web apps, followed by a discussion of htmx and how it compares to both modern and traditional ways of building.",
    "date": "2023-02-09T17:30:00Z",
    "vote": 0
  },
  {
    "id": "6c6010ffea10659a31bb71da0735a42a",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Project Tabs in the New UI on macOS, No Spell Checks for Hashes and Special Values in GoLand 2023.1 EAP #4",
    "url": "https://blog.jetbrains.com/go/2023/02/09/project-tabs-in-the-new-ui-on-macos-no-spell-checks-for-hashes-and-special-values-in-goland-2023-1-eap-4/",
    "resume": "The fourth GoLand 2023.1 EAP build is out! You can get it via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select Check IDE updates for: Early Access Program in Settings \u0026#124; Appearance \u0026#38; Behavior \u0026#124; System Settings \u0026#124; Updates.\u0026#160; Download GoLand 2023.1 EAP Project [\u0026#8230;]",
    "date": "2023-02-09T16:25:10Z",
    "vote": 0
  },
  {
    "id": "15749c20cec2b27a521e9c26dd8d4f9b",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Profile-guided optimization preview",
    "url": "https://go.dev/blog/pgo-preview",
    "resume": "Introduction to profile-guided optimization, available as a preview in Go 1.20.",
    "date": "2023-02-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0fa2e55e666b9ec5099a2f2e86a784bf",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Heap Escape Ep. 2",
    "url": "https://www.ardanlabs.com/blog/2023/02/interfaces-101-heap-escape.html",
    "resume": "Introduction In episode 1, Miki had two functions that performed the similar operation, but returned different types. To refactor this, Miki rewrote both functions as a generic function that allowed him to specify the type to be returned during invocation. In some cases, the compiler may not recognise a type, thus, Miki gives a few pointers on manually telling a generic function which type to use. After demonstrating how to return different types with a generic function, Miki limited the types his generic function would accept with an interface.",
    "date": "2023-02-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "82a764dffb98aa3b3a556821277e4e4c",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Create or initialize a new string in Go (Golang)",
    "url": "https://golangbyexample.com/create-string-golang/",
    "resume": "\u003cp\u003eOverview Below is a simple way to initialize or create a string in Go. In the below program, we have simply declared as well as defined a string named sample Notice the...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/create-string-golang/\"\u003eCreate or initialize a new string in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-02-07T08:48:04Z",
    "vote": 0
  },
  {
    "id": "ed7eaed4af6b9bb9ad29913ad0267e31",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Compact Mode for the New UI, Better Performance With Windows Defender, and Docker and Kubernetes Updates in GoLand 2023.1 EAP #3",
    "url": "https://blog.jetbrains.com/go/2023/02/03/compact-mode-for-the-new-ui-better-performance-with-windows-defender-and-docker-and-kubernetes-updates-in-goland-2023-1-eap-3/",
    "resume": "The third GoLand 2023.1 EAP build is now available!\u0026#160; You can get it via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select Check IDE updates for: Early Access Program in Settings \u0026#124; Appearance \u0026#38; Behavior \u0026#124; System Settings \u0026#124; Updates. Download GoLand 2023.1 EAP [\u0026#8230;]",
    "date": "2023-02-03T10:39:15Z",
    "vote": 0
  },
  {
    "id": "57931b5238dbe111a7af33f918e8da0c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "How to ace that CFP",
    "url": "https://changelog.com/gotime/265",
    "resume": "It’s “Call For Papers” (CFP) season in Go land, so we gathered some seriously experienced conference organizers to help YOUR submission be the best ever.",
    "date": "2023-02-02T18:00:00Z",
    "vote": 0
  },
  {
    "id": "7fd52eae3d51676fd1960651beb0494c",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Profiling Go Code with GoLand",
    "url": "https://blog.jetbrains.com/go/2023/02/02/profiling-go-code-with-goland/",
    "resume": "This article was written by an external contributor. Modern software stacks contain many moving pieces. With each piece potentially relying on a different set of dependencies, it can be difficult to identify bottlenecks in your application\u0026#8217;s performance. Profiling can provide insights into how the application is running and where improvements can be made. Profiling applications [\u0026#8230;]",
    "date": "2023-02-02T11:36:23Z",
    "vote": 0
  },
  {
    "id": "4b081f048e54527a77738284b22ac7dc",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Customer Stories: Spark by Readdle",
    "url": "https://blog.jetbrains.com/go/2023/02/01/customer-stories-spark-by-readdle/",
    "resume": "Hello everyone,\u0026#160; As part of our continued celebration of GoLand’s fifth anniversary, we’d like to talk about the most meaningful part of our job – you! Today is a day for customer stories! Before we start, we want to let you know that we’ve hidden a small gift designed especially for you inside GoLand! All [\u0026#8230;]",
    "date": "2023-02-01T16:15:46Z",
    "vote": 0
  },
  {
    "id": "4a55f378982ed28a412d4b1938572e27",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Go 1.20 is released!",
    "url": "https://go.dev/blog/go1.20",
    "resume": "Go 1.20 brings PGO, faster builds, and various tool, language, and library improvements.",
    "date": "2023-02-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0c18b5e479d29e33ad3210a62eb40983",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev Beat. January 2023",
    "url": "https://blog.boot.dev/news/bootdev-beat-jan-2023/",
    "resume": "If you can\u0026rsquo;t tell from my absurd profile photo below, I\u0026rsquo;ve been having too much fun with AI art this month.",
    "date": "2023-02-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9805d35dcda7e9b217bc94be6f248146",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interfaces 101 : Implementing Generics with Interfaces Ep. 1",
    "url": "https://www.ardanlabs.com/blog/2023/01/interfaces-101-implementing-generics-with-interfaces.html",
    "resume": "Introduction Go interfaces are beneficial to Go developers because they:\nAllow interfaces to separate mechanism from behavior. Increase flexibility of function parameters. Enable mocking of function parameters. With the addition of generics in Go 1.18, interfaces can be used to constrain the types of values a generic function will accept. To dive deeper into Go interfaces, we invite you to join Miki in his latest series dedicated to Go interfaces.",
    "date": "2023-01-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "45c633e8c57a7393745cf8b335d0f00b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "5 Critical Differences Between DevOps and SRE Jobs",
    "url": "https://blog.boot.dev/devops/devops-vs-sre/",
    "resume": "To someone who isn’t familiar with these roles, it’s easy to think that DevOps and systems reliability engineers (SREs) might have the same job.",
    "date": "2023-01-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dc8d2342979f8ef5d72f9c170e036c24",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Long-term code maintenance",
    "url": "https://changelog.com/gotime/264",
    "resume": "Ole Bulbuk \u0026 Sandor Szücs join Natalie to discuss the ins \u0026 outs of long-term code maintenance. What does it take to maintain a codebase for a decade or more? How do you plan for that? What about inheriting a codebase for the long term? Oh, and (how) can AI help?",
    "date": "2023-01-27T20:00:00Z",
    "vote": 0
  },
  {
    "id": "44dbe99c8b6405f8e69f88bca1a47b5f",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "Run Scratch Files With Non-Standard-Library Packages, Remove Spaces from Go Directives, and More in GoLand 2023.1 EAP #2",
    "url": "https://blog.jetbrains.com/go/2023/01/27/run-scratch-files-with-non-standard-library-packages-remove-spaces-from-go-directives-and-more-in-goland-2023-1-eap-2/",
    "resume": "The second GoLand 2023.1 EAP build is now available!\u0026#160; You can get it via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select Check IDE updates for: Early Access Program in Settings \u0026#124; Appearance \u0026#38; Behavior \u0026#124; System Settings \u0026#124; Updates. Download GoLand 2023.1 EAP [\u0026#8230;]",
    "date": "2023-01-27T17:14:01Z",
    "vote": 0
  },
  {
    "id": "24a09016dbac5775db24e4042c0f746b",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 20",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-20.html",
    "resume": "Introduction In episode 19, Bill designed and implemented the data structure for an account on his blockchain. This type will have a nonce field to ensure incoming transactions are valid and performed in order. Since the database will be stored in memory and not on disk, the balances in these accounts are reconstructed with information from previous transactions and the genesis block.\nIn this video, Bill takes all the theories discussed in this series and applies them by launching his first blockchain node.",
    "date": "2023-01-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "af79becfff995851a92445bb53606191",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How does HTTPS encryption work?",
    "url": "https://blog.boot.dev/cryptography/how-does-https-work/",
    "resume": "Hypertext Transfer Protocol Secure or HTTPS is an extension of the HTTP protocol. HTTPS secures the data transfer between client and server by encrypting all of the information communicated.",
    "date": "2023-01-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "23f9f22ff165a2ae5a506226ba20b665",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Cryptography Course Released on Boot.dev",
    "url": "https://blog.boot.dev/news/learn-cryptography-course-released/",
    "resume": "Greetings! We\u0026rsquo;re excited to announce that we\u0026rsquo;ve unveiled a brand-new cryptography course on Boot.dev. We\u0026rsquo;re convinced that this new experience is truly one of a kind.",
    "date": "2023-01-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "eadc2315ba7ae9c4a7440ba2082127d3",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 18",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-18.html",
    "resume": "Introduction In episode 17, Bill began to design an in-memory accounting database that will store the account balances on his blockchain. To build this database, Bill will add a memory pool on each node that stores a list of public addresses with their respective balances. The balances on these addresses are reconstructed by reading the previous transaction records found on his blockchain.\nIn this video, Bill will define the types of transactions his blockchain will support.",
    "date": "2023-01-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "08deb85ef99922b825dc82f3c2aa06f5",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 19",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-19.html",
    "resume": "Introduction In episode 18, Bill defined the Go type that will represent a transaction and implemented the methods to validate one. While developing the transaction type, Bill states that he’ll be borrowing concepts from Ethereum to ensure that he’s building a reference implementation. Bill’s transaction type has a field named nonce, similar to Ethereum, that ensures transactions are executed in order. The nonce value of the last transaction is stored in his accounting database and later compared for additional verification.",
    "date": "2023-01-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d66ef2acfa80e9cb6d0888e3d91b5f0c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "4 Key Differences Between DevOps and DevSecOps",
    "url": "https://blog.boot.dev/devops/devops-vs-devsecops/",
    "resume": "Doesn’t it seem like every day there’s a new mishmash of responsibilities into a job title?",
    "date": "2023-01-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "36d3853935825841bc074ab7b8b9ed65",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "The GoLand 2023.1 Early Access Program Is Open!",
    "url": "https://blog.jetbrains.com/go/2023/01/20/the-goland-2023-1-early-access-program-is-open/",
    "resume": "Today we’re starting our first Early Access Program for 2023! Check out the GoLand Roadmap 2023.1 to see what we have planned for the upcoming release. You can get this EAP build via the Toolbox App, download it from our website, use a snap package (for Ubuntu), or from inside GoLand, select Check IDE updates [\u0026#8230;]",
    "date": "2023-01-20T10:36:09Z",
    "vote": 0
  },
  {
    "id": "bca208b4a2fab2ce56207fb71a98271e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Who owns our code? Part 2",
    "url": "https://changelog.com/gotime/263",
    "resume": "Tech lawyer Luis Villa returns to Go Time to school us once again on the intellectual property concerns of software creators in this crazy day we live in. This time around, we’re focusing on the implications of Large Language Models, code generation, and crazy stuff like that.",
    "date": "2023-01-19T22:00:00Z",
    "vote": 0
  },
  {
    "id": "7fd8b701e41a76fbfb36cf028d5004ca",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Table driven tests in Go",
    "url": "https://www.ardanlabs.com/blog/2023/01/table-driven-tests-in-go.html",
    "resume": "Introduction Table tests are a great way to test different inputs and associated outputs for a function in Go. To write a table test, you define a slice of some data struct with fields of the input data you’ll need and the expected outcome. Then you can loop through this slice and pass the data stored for each element to your function. One disadvantage of table tests is as the data set in your slice grows, the harder it is to find the failing case.",
    "date": "2023-01-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9232ffe6078aefa2d5fa494928584aee",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 17",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-17.html",
    "resume": "Introduction In episode 16, Bill implemented additional means of verification for his blockchain’s transactions. The first update he made was to verify if a transaction is destined for his blockchain by reading the first byte of the signature. The next one Bill made was to recalculate the public address from a signature and compare it with the from field of the transaction to verify if the request is valid. While building this, Bill demonstrates how a user’s private key transforms into their public address.",
    "date": "2023-01-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d5222f4caaa44a82e61faf4e3a97feb0",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Share your feedback about developing with Go",
    "url": "https://go.dev/blog/survey2023-q1",
    "resume": "Help shape the future of Go by sharing your thoughts via the Go Developer Survey",
    "date": "2023-01-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "40da3a9265c1ce199be44ee8d293c41e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "6 Differences Between DevOps and Cloud Engineers",
    "url": "https://blog.boot.dev/devops/devops-vs-cloud-engineers/",
    "resume": "The deeper you get into the tech sphere, the more unintelligible the job titles seem to be.",
    "date": "2023-01-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d7aad2c507f2ef758d16f90e8eee0a9b",
    "source": {
      "path": "tools",
      "name": "GoLand",
      "url": "https://blog.jetbrains.com/go/feed/"
    },
    "name": "What’s New in Go: The Developer Ecosystem Report 2022",
    "url": "https://blog.jetbrains.com/go/2023/01/17/what-s-new-in-go-the-developer-ecosystem-report-2022/",
    "resume": "Every year JetBrains asks thousands of developers all around the world different questions about how they use programming languages. We then publish the results that show the current trends in various communities, including the Go ecosystem.\u0026#160; Today, we’re happy to share the State of Developer Ecosystem 2022 report!  EXPLORE THE STATE OF DEVELOPER ECOSYSTEM 2022 [\u0026#8230;]",
    "date": "2023-01-17T16:11:58Z",
    "vote": 0
  },
  {
    "id": "eba12680ac79f5983025abdb0f3a3310",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "I Didn't Explain Clearly, but Still Don't Learn Frameworks First",
    "url": "https://blog.boot.dev/backend/wrong-about-abstractions/",
    "resume": "I wrote an article about not starting with frameworks that got some attention from /r/programming on Reddit yesterday.",
    "date": "2023-01-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "393d741edc9d888aa843885393acb0d2",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 16",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-16.html",
    "resume": "Introduction In episode 15, Bill architected a solution to ensure all the users on his blockchain were given a unique identifier. His approach consisted of essentially leveraging the randomness of a user\u0026rsquo;s private key to ensure each identifier is unique. A disadvantage Bill pointed out with this is that a user may forget their private key and ultimately lose access to their account. To circumvent this issue, Bill proposed the usage of a mnemonic, that is composed of 12 to 24 words, to act as the private key since it’s simpler to keep track of and hard to guess.",
    "date": "2023-01-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c49cfcbcfa760dc5a6b8e236c004f622",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Writing an HTTP handler function in Go",
    "url": "https://www.ardanlabs.com/blog/2023/01/writing-an-http-handler-function-in-go.html",
    "resume": "Introduction When an API requires implementation details from the user, many developers use an interface for help. However, another way to allow developers to provide implementation details for an API is to accept a function instead. Go supports declaring function types which can be used to define a contract similar to how interfaces define a contract. A good example of an API that uses functions over an interface is the HTTP package.",
    "date": "2023-01-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5c260c8473694cd0bfce45bbdb0b0a0d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "If You're Learning Back-end, Don't Start with Frameworks",
    "url": "https://blog.boot.dev/backend/dont-start-with-frameworks/",
    "resume": "Look, I don\u0026rsquo;t hate frameworks. I\u0026rsquo;m not as starry-eyed as some other developers, especially when it comes to back-end frameworks, but I don\u0026rsquo;t think there\u0026rsquo;s anything wrong with using tools that make you productive.",
    "date": "2023-01-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9c3834110a401a4ee49e41a41d11b22f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "How Go helped save HealthCare.gov ♻️",
    "url": "https://changelog.com/gotime/262",
    "resume": "Paul Smith (from “Obama’s Trauma Team”) tells us the tale of how Go played a big role in the rescuing and rebuilding of the HealthCare.gov website. Along the way we learn what the original team did wrong, how the rescue team kept it afloat during huge traffic spikes, and what they’ve done since to rebuild it to serve the people’s needs.",
    "date": "2023-01-12T22:45:00Z",
    "vote": 0
  },
  {
    "id": "74c642ee531db36ad7ab3868c58585c3",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 15",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-15.html",
    "resume": "Introduction In episode 14, Bill architected a solution to digitally sign the transactions on his blockchain. His solution retrieved the private key by : loading private key data from disk, parsing the key data and returning the ECDSA private key. The private key is then used to generate the signature of a transaction. While writing the code to perform this functionality, Bill highlighted how a blockchain node can use a transaction’s signature to extrapolate the public key.",
    "date": "2023-01-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0b09002b3e55309418798d51543f9741",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Writing testable examples in Go",
    "url": "https://www.ardanlabs.com/blog/2023/01/writing-testable-examples-in-go.html",
    "resume": "Introduction Google developed Go to be an alternative to C++ with the internet and scale in mind. Go’s toolchain automates tasks that are easily overlooked, and amongst those tasks is generating documentation. Go has the ability to generate documentation based on comments written in your source code. As the end user, you have the choice to view this documentation in your terminal or, if your code is publicly accessible, on pkg.",
    "date": "2023-01-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "65aeb354f48455c5e4739789f852dd7a",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 13",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-13.html",
    "resume": "Introduction In episode 12, Bill laid out his strategy to handle data hashing on his blockchain. The first step he took was to create a package to handle the cryptographical aspects of his blockchain. After that, he wrote a hash function that met the requirements outlined in his strategy. This function took transaction data as a parameter and returned a hexadecimal representation of the hash. To implement this function, Bill imported packages from the Go standard library and Ethereum API.",
    "date": "2023-01-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7a8b68f634ff4944905d5d0c57646a0e",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 14",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-14.html",
    "resume": "Introduction In episode 13, Bill discussed the idea of adding salt to a hash and how modern crypto-currency blockchains use it to better interpret requests sent to nodes. He continued by defining a function called stamp that embeds a salt within a hash. While writing the function, Bill stated that he would use keccak256 as it’s the same algorithm used by Ethereum to generate hash values. Bill will use the APIs provided with Go Ethereum to generate a keccak256 hash.",
    "date": "2023-01-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cfbe3d06db8bd71705064cf3545382bd",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How the Boot.dev Game Works",
    "url": "https://blog.boot.dev/wiki/the-game/",
    "resume": "Greetings, dear student! In our courses, we have crafted a multitude of tasks, projects and challenges for you to undertake.",
    "date": "2023-01-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f3677aa894bbdfd1dcf5d2885fe85f92",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev Beat. December 2022",
    "url": "https://blog.boot.dev/news/bootdev-beat-dec-2022/",
    "resume": "I hope you\u0026rsquo;ve been able to enjoy some time with family! I took (almost) an entire week off from writing code, which I haven\u0026rsquo;t done in a long time.",
    "date": "2023-01-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "333397f1cc0c382b80002ac51d7766fb",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "A special New Year's fireside chat",
    "url": "https://changelog.com/gotime/261",
    "resume": "Mat and the gang ring in the new year by gathering around a make believe fireplace and discussing what they’re excited about in 2023, their new years resolutions \u0026 a little bit of Go talk, too. But only a little.",
    "date": "2023-01-05T23:00:00Z",
    "vote": 0
  },
  {
    "id": "bd57ee94bba8108bd838923e97ba0530",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 12",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-12.html",
    "resume": "Introduction In episode 11, Bill highlighted the issue of identity verification and provided a solution to this problem. The solution proposed was to cryptographically sign a transaction to verify its authenticity. Bill chose to implement a solution making use of the Elliptic Curve Digital Signature Algorithm (ECDSA) as the public key can be extracted from a signature. Although a small distinction, the ability to re-compute a public key is essential in a decentralized and distributed environment.",
    "date": "2023-01-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5308f9e7366b3206e4883cd8cc853989",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 10",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-10.html",
    "resume": "Introduction In episode 9, Bill introduced the idea of the genesis record and its role in his blockchain. As a recap, the genesis record will be used to customize the settings of his blockchain. The approach Bill takes here is similar to how Ethereum operates because he is storing the record in JSON format.\nIn this video, Bill starts by defining the Go types his blockchain will use. The first type he defines will represent the genesis record.",
    "date": "2023-01-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a372e6dc40ab739033b99b70a89d7a05",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 11",
    "url": "https://www.ardanlabs.com/blog/2023/01/ultimate-go-advanced-engineering-episode-11.html",
    "resume": "Introduction In episode 10, Bill dove into the technical implementation of his genesis record and defined a custom Go type representing the record. While doing so, he provided an in-depth look at the reasoning behind the fields he included.. After declaring this type, Bill wrote a function that loads the genesis record from disk and onto memory. His function will use the standard library encoding/json package to load JSON data from a hard-coded file path.",
    "date": "2023-01-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "517d4d2733c3ce0eabf28a18fe623b1f",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Delete or Remove a key from a map in Go (Golang)",
    "url": "https://golangbyexample.com/delete-key-map-golang/",
    "resume": "\u003cp\u003eOverview Below is the format to delete a given key from a map There are two cases Let’s see an example of both the cases Key exists in the Map Below is...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/delete-key-map-golang/\"\u003eDelete or Remove a key from a map in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2023-01-02T14:41:04Z",
    "vote": 0
  },
  {
    "id": "a509455d8cf508a5969a156fd0523e82",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Smart Contracts Using Solidity and Go: Basic Contract",
    "url": "https://www.ardanlabs.com/blog/2022/12/smart-contract-solidity-go-basic.html",
    "resume": "Introduction I made it my mission in 2022 to learn everything I could about blockchain and as the year ends, I feel like I accomplished my goal. Love it, hate it, or don’t want to know nothing about it, I think it’s important to push your opinions aside and understand how this technology works. Even with the current collapse of several large crypto companies in 2022, blockchain isn’t going to disappear.",
    "date": "2022-12-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8364eb0c0ef668228793dfe84dd1fadb",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "👑 Go Generics cheatsheet",
    "url": "https://gosamples.dev/generics-cheatsheet/",
    "resume": "\u003ch2 id=\"getting-started\"\u003eGetting started\u003c/h2\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__2\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"generics-release\"\u003eGenerics release\u003c/h3\u003e\n\u003cp\u003eGenerics in Go are available since the version 1.18, released on \u003ca href=\"https://gosamples.dev/check-go-version#go-golang-version-history\"\u003eMarch 15, 2022\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"generic-function\"\u003eGeneric function\u003c/h3\u003e\n\u003cp\u003eWith Generics, you can create functions with types as parameters. Instead of writing separate functions for each type like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eLastInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eLastString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// etc.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou can write a function with a type parameter:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eType parameters are declared in square brackets. They describe types that are allowed for a given function:\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cfigure\u003e\u003cimg src=\"https://gosamples.dev/generics-cheatsheet/generic-function.png\"\nalt=\"Diagram on how the generic function looks like\" width=\"350\"/\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"generic-function-call\"\u003eGeneric function call\u003c/h3\u003e\n\u003cp\u003eYou can call a generic function like any other function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou do not have to explicitly declare the type parameter as in the example below, because it is inferred based on the passed arguments. This feature is called \u003cem\u003etype inference\u003c/em\u003e and applies only to functions.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003edata2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHowever, explicitly declaring concrete type parameters is allowed, and sometimes necessary, when the compiler is unable to unambiguously detect the type of arguments passed.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 id=\"constraints\"\u003eConstraints\u003c/h2\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__3\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"definition\"\u003eDefinition\u003c/h3\u003e\n\u003cp\u003eA constraint is an interface that describes a type parameter. Only types that satisfy the specified interface can be used as a parameter of a generic function. The constraint always appears in square brackets after the the type parameter name.\u003c/p\u003e\n\u003cp\u003eIn the following example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ethe constraint is \u003ccode\u003eany\u003c/code\u003e. Since Go 1.18, \u003ccode\u003eany\u003c/code\u003e is an alias for \u003ccode\u003einterface{}\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003eany\u003c/code\u003e is the broadest constraint, which assumes that the input variable to the generic function can be of any type.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"built-in-constraints\"\u003eBuilt-in constraints\u003c/h3\u003e\n\u003cp\u003eIn addition to the \u003ccode\u003eany\u003c/code\u003e constraint in Go, there is also a built-in \u003ccode\u003ecomparable\u003c/code\u003e constraint that describes any type whose values can be compared, i.e., we can use the \u003ccode\u003e==\u003c/code\u003e and \u003ccode\u003e!=\u003c/code\u003e operators on them.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomparable\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"the-constraints-package\"\u003eThe \u003ccode\u003econstraints\u003c/code\u003e package\u003c/h3\u003e\n\u003cp\u003eMore constraints are defined in the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints\" target=\"_blank\"\u003e\u003ccode\u003ex/exp/constraints\u003c/code\u003e\u003c/a\u003e package. It contains constraints that permit, for example, ordered types (types that support the operators \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e), floating-point types, integer types, and some others:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eComplex\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eInteger\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSigned\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eUnsigned\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCheck the documentation of the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints\" target=\"_blank\"\u003e\u003ccode\u003ex/exp/constraints\u003c/code\u003e\u003c/a\u003e package for more information.\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__3\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"custom-constraints\"\u003eCustom constraints\u003c/h3\u003e\n\u003cp\u003eConstraints are interfaces, so you can use a custom-defined interface as a constraint on a function type parameter:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eDoer\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eDoSomething\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eDoer\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHowever, using such an interface as a constraint is no different from using the interface directly.\u003c/p\u003e\n\u003cp\u003eAs of Go 1.18, the interface definition has a new syntax. Now it is possible to define an interface with a type:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eInteger\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eConstraints containing only one type have little practical use. But, when combined with the union operator \u003ccode\u003e|\u003c/code\u003e, we can define \u003cem\u003etype sets\u003c/em\u003e without which complex constraints cannot exist.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"type-sets\"\u003eType sets\u003c/h3\u003e\n\u003cp\u003eUsing the union \u003ccode\u003e|\u003c/code\u003e operator, we can define an interface with more than one type:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis type of interface is a \u003cem\u003etype set\u003c/em\u003e that can contain types or other types sets:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eInteger\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFloat\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eType sets help define appropriate constraints. For example, all constraints in the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints\" target=\"_blank\"\u003e\u003ccode\u003ex/exp/constraints\u003c/code\u003e\u003c/a\u003e package are type sets declared using the union operator:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eInteger\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSigned\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"nx\"\u003eUnsigned\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"inline-type-sets\"\u003eInline type sets\u003c/h3\u003e\n\u003cp\u003eType set interface can also be defined inline in the function declaration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint8\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint16\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint32\u003c/span\u003e \u003cspan class=\"p\"\u003e}](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUsing the simplification that Go allows for, we can omit the \u003ccode\u003einterface{}\u003c/code\u003e keyword when declaring an inline type set:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint8\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint16\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint32\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch3 id=\"type-approximation\"\u003eType approximation\u003c/h3\u003e\n\u003cp\u003eIn many of the constraint definitions, for example in the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints\" target=\"_blank\"\u003e\u003ccode\u003ex/exp/constraints\u003c/code\u003e\u003c/a\u003e package, you can find the special operator \u003ccode\u003e~\u003c/code\u003e before a type. It means that the constraint allows this type, as well as a type whose underlying type is the same as the one defined in the constraint. Take a look at the example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eMyInt\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eInt\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"err\"\u003e~\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint8\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint16\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"kt\"\u003eint32\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eMyInt\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eLast\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWithout the \u003ccode\u003e~\u003c/code\u003e before the \u003ccode\u003eint\u003c/code\u003e type in the \u003ccode\u003eInt\u003c/code\u003e constraint, you cannot use a slice of \u003ccode\u003eMyInt\u003c/code\u003e type in the \u003ccode\u003eLast()\u003c/code\u003e function because the \u003ccode\u003eMyInt\u003c/code\u003e type is not in the list of the \u003ccode\u003eInt\u003c/code\u003e constraint. By defining \u003ccode\u003e~int\u003c/code\u003e in the constraint, we allow variables of any type whose underlying type is \u003ccode\u003eint\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"generic-types\"\u003eGeneric types\u003c/h2\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__2\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"defining-a-generic-type\"\u003eDefining a generic type\u003c/h3\u003e\n\u003cp\u003eIn Go, you can also create a generic type defined similarly to a generic function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eKV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomparable\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eKey\u003c/span\u003e \u003cspan class=\"nx\"\u003eK\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eValue\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eKV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"nf\"\u003eSet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e \u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003evalue\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eKey\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eValue\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eKV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"nf\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e \u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eV\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eKey\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eValue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNote that the method receiver is a generic \u003ccode\u003eKV[K, V]\u003c/code\u003e type.\u003c/p\u003e\n\u003cp\u003eWhen defining a generic type, you cannot introduce additional type parameters in its methods - the struct type parameters are only allowed.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"example-of-usage\"\u003eExample of usage\u003c/h3\u003e\n\u003cp\u003eWhen initializing a new generic struct, you must explicitly provide concrete types:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003erecord\u003c/span\u003e \u003cspan class=\"nx\"\u003eKV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e54.3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can avoid it by creating a constructor function since types in functions can be inferred thanks to the \u003cem\u003etype inference\u003c/em\u003e feature:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eNewKV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomparable\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e \u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003evalue\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eKV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eKV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e\u003cspan class=\"p\"\u003e]{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erecord\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003eNewKV\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e54.3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003erecord\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eNewKV\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e54.3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e",
    "date": "2022-12-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f31ee21639bfe197a087a0b58f0c67c6",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 9",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-9.html",
    "resume": "Introduction In episode 8, Bill wanted to build a blockchain in Go and began to lay the groundwork for the project. Go is a good choice because its standard library has the necessary network and cryptographical functionality required to build a blockchain. Unlike the previous segment, Bill plans to use this blockchain to manage accounts and balances with hypothetical assets. Bill will reuse concepts from ethereum, bitcoin and the previous segment of the series to implement this blockchain.",
    "date": "2022-12-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e1efa2d250db106849e8a621c72fe2a8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Is Golang Best For Backend or Frontend Development?",
    "url": "https://blog.boot.dev/golang/golang-frontend-or-backend/",
    "resume": "Put simply, Golang is best for the backend side of a web application or website. There are many reasons that this is the case, so let\u0026rsquo;s dive in, but before we do, let’s cover some quick definitions.",
    "date": "2022-12-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8059d0c0eb7788306493dee36dbac9a6",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 7",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-7.html",
    "resume": "Introduction In episode 6, Bill gives an overview of what consensus algorithms are and how these algorithms ensure distributed databases are in sync. Moving forward Bill will adopt the proof of authority (PoA) algorithm as a means to determine which node has the ability to write the next record. To jog your memory, PoA is a consensus mechanism where identity is used as a stake. By implementing this algorithm, Bill will add transparency to his dependency manager as he is no longer the only user with the ability to add new records.",
    "date": "2022-12-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6acd2481f0e7bf701688d32a9f36a196",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 8",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-8.html",
    "resume": "Introduction In the first part of the series, Bill designed a dependency management system. The dependency manager needed to be distributed, transparent, cryptographically auditable and scalable. To meet these requirements, Bill borrowed concepts from blockchain. He did this to illustrate how the blockchain can be repurposed and used to accomplish the mundane task of dependency management. While doing so, Bill indirectly highlighted the problems a blockchain solves.\nIn the next segment of the series, Bill will build a semantically correct blockchain.",
    "date": "2022-12-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cc96c52511b22d976533a2622da9f7b5",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Generics vs. Interfaces",
    "url": "https://www.ardanlabs.com/blog/2022/12/generic-vs-interfaces.html",
    "resume": "Introduction In this video, Paulo shows the benefit of leveraging generic functions to write less code that does more. He starts by walking you through an API server he initially wrote that makes use of Go’s default HTTP handlers with a sprinkle of GORM to manage database transactions. He then refactors that code by introducing the concept of adapter functions.\nPaulo’s approach consists of decoupling his business logic with his API code.",
    "date": "2022-12-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f783f2bfbfd19d22e453c7076960e53e",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 5",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-5.html",
    "resume": "Introduction In case you missed episode 4, Bill attempted to integrate current database sharing solutions to solve the “database ownership” problem his dependency manager faces. He tried providing copies of the database, implementing a load balancer and replication. While performing these experiments, Bill identified the qualities his dependency manager’s database needs to have for users to trust it. He closed episode 4 by stating that his dependency manager needs a database that is distributed, cryptographically auditable, synchronized and scalable.",
    "date": "2022-12-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b90962e29c5f9d39c4e89527b75b0cac",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 6",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-6.html",
    "resume": "Introduction In the last video, Bill left off talking about proof of work (PoW) algorithms. In a distributed and decentralized environment, PoW used to be the gold standard for a node to participate equitably in a Blockchain. However, with PoW as the number of nodes on the Blockchain increases, the amount of energy waste increases. This is because each node is performing the same computationally heavy calculation and only one node’s energy usage is leveraged to write the next block.",
    "date": "2022-12-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "66972deb7afa8136fce013bc0903b9d2",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Understanding Go's Time Format",
    "url": "https://www.ardanlabs.com/blog/2022/12/understanding-go-time-format.html",
    "resume": "Introduction Most apps that work with time values eventually need to display time to a user. Go has a unique way of allowing you to specify how to display time values that is different from the C library function strftime. The strftime function tends to be the standard for languages and tooling to format time. Go developed its own format specification instead of using any existing format with the idea of being able to maintain a mental model for formatting time.",
    "date": "2022-12-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dde3d3c418ec3550f4433d79737bb89c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Making Go more efficient",
    "url": "https://changelog.com/gotime/260",
    "resume": "Mat invites Bartłomiej Płotka, Kemal Akkoyun \u0026 Christian Simon to discuss how to make Go code more efficient through modern observability practices.",
    "date": "2022-12-15T22:15:00Z",
    "vote": 0
  },
  {
    "id": "f07924629de5531e37b9a7bd8eca4486",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🫘 Count the occurrences of an element in a slice in Go",
    "url": "https://gosamples.dev/generics-count/",
    "resume": "\u003cp\u003eTo count the elements in a slice in Go that satisfy a certain condition, it is best to use Generics available since Go 1.18. With it, we can create a function that takes as arguments a slice of any type and a filter function that returns \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e for an element of that slice. In this way, we get a universal function that, for \u003cstrong\u003eany\u003c/strong\u003e slice, counts the occurrences of elements that meet \u003cstrong\u003eany\u003c/strong\u003e condition.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ab\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;ac\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;de\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;at\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;gfb\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fr\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eContains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see in the example, the \u003ccode\u003ecount()\u003c/code\u003e function accepts a slice of a type parameter \u003ccode\u003eT\u003c/code\u003e, whose constraint is \u003ccode\u003eany\u003c/code\u003e - that is, it can be a slice of any type. The body of the function is simple. If the function \u003ccode\u003ef()\u003c/code\u003e returns \u003ccode\u003etrue\u003c/code\u003e for a given slice element then the counter \u003ccode\u003ecount\u003c/code\u003e increases by 1.\u003c/p\u003e\n\u003cp\u003eIn the \u003ccode\u003emain()\u003c/code\u003e, you can see how versatile the \u003ccode\u003ecount()\u003c/code\u003e function is. In the first case, we put a string slice as an argument and count the number of elements that contain the letter \u003ccode\u003e\u0026quot;a\u0026quot;\u003c/code\u003e. In the second case, we put an \u003ccode\u003eint\u003c/code\u003e slice and count the number of records divisible by 3. It is how the magic of Go Generics works. You do not need to write separate functions for each type - one is sufficient for all cases.\u003c/p\u003e",
    "date": "2022-12-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d03b529a5c7e907496a58ecb1e2b86b7",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 3",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-3.html",
    "resume": "Introduction In episode 2, Bill designed a database for his dependency manager to enable Go developers to have reproducible,durable and secure builds. This database will house the hash value for each of the dependencies stored. During runtime, these hash values are compared with the dependencies a user has locally. Bill’s tool makes this comparison to make sure the user has the right version of the dependency. Each team making use of Bill’s dependency manager will have access to its database, however, his database lacked any means to reliably perform audits.",
    "date": "2022-12-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "68d65e9ac6e69a7056b592d9dfcc4ad2",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 4",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-4.html",
    "resume": "Introduction In episode 3, Bill needed to figure out how to share ownership of his dependency manager’s database in a secure and efficient manner. Bill is the only stakeholder with full access to his dependency manager’s database. That is, he is the only person with the ability to mutate the database. This is problematic because he can freely edit the database which will make it harder for other users to confidently perform audits.",
    "date": "2022-12-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7f0ddb8f04aa9cab56809198b4c2436c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What do Frontend and Backend Development Mean?",
    "url": "https://blog.boot.dev/backend/frontend-vs-backend-meaning/",
    "resume": "Soon after you dip your toe in the water of software development, you’re guaranteed to come across the terms \u0026ldquo;frontend\u0026rdquo; and \u0026ldquo;backend\u0026rdquo;.",
    "date": "2022-12-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5b6fc248c6b3f25dce18c033dac1c0c1",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 2",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-2.html",
    "resume": "Introduction In episode 1, Bill finished by describing the dependency management conundrum Go faced in its early days. Prior to the Go team providing the module system, developers were on their own to find a solution. Engineers in the Go community did propose different solutions, but there was no general consensus on which tool to use for dependency management.\nIn this video, Bill will begin to architect a solution to the reproducible build problem.",
    "date": "2022-12-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "24849cb4ce7b691dd2500a041ea07174",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go: Advanced Engineering Episode 1",
    "url": "https://www.ardanlabs.com/blog/2022/12/ultimate-go-advanced-engineering-episode-1.html",
    "resume": "Introduction In this video, Bill will introduce the concepts of what a blockchain is, the benefits of a blockchain, and the network environment it operates in. Bill describes a blockchain as a single, append-only, transparent, publicly available and cryptographically auditable database. Blockchains operate using a peer to peer (p2p) network with no single node designated as the central authority.\nTo better understand what all that means, Bill begins to work through a familiar problem of creating reproducible, durable, and secure builds that software teams face.",
    "date": "2022-12-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6345a58b80d34c5174ab40b7fae8ce78",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Snake Case or Camel Case? A Guide to Programming Naming Conventions",
    "url": "https://blog.boot.dev/clean-code/casings-in-coding/",
    "resume": "The following names are all valid variable names in nearly every programming language:\ndogName dog_name DOG_NAME dog-name But which one should you use in your projects?",
    "date": "2022-12-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "20850f0df01f904b287d24b5d4bda98d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hacking with Go: Part 3",
    "url": "https://changelog.com/gotime/259",
    "resume": "Ivan Kwiatkowski joins Natalie once again for a follow-up episode to Hacking with Go: Part 2. This time we’ll get Ivan’s perspective on the way Go’s security features are designed and used, from the user/hacker perspective. And of course we will also talk about how AI fits into all this…",
    "date": "2022-12-08T22:30:00Z",
    "vote": 0
  },
  {
    "id": "ffb03e162d9b1fb2eb0d8656a3fe0a63",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Poetry time! Go proverbs as limericks",
    "url": "https://appliedgo.net/limericks/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eThe Go proverbs capture the essence of Go. Too concise for your taste? No worries, here is each proverb explained in a limerick.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2022-12-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a85fbfa5d2c161565eefc9e6ebb9f046",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is Backend-as-a-Service?",
    "url": "https://blog.boot.dev/backend/backend-as-a-service/",
    "resume": "Plenty of people have heard of SaaS, or Software-as-a-Service, which is simply software made available by a third party over the internet.",
    "date": "2022-12-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b9004e1e5d4dfdd5329594925e168bf6",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "AI times three—or how I made AI write a blog post for me",
    "url": "https://appliedgo.net/ai-times-three/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eWriting a concurrency-safe hashmap in Go is dead easy, even an AI can do it! To prove this, I had three AI tools write this blog article, generate Go code, and create an opening image.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2022-12-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3e6b238ab7f992e0b67c82cfe06bd232",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "To TDD or not to TDD",
    "url": "https://changelog.com/gotime/258",
    "resume": "That is the question. Whether ’tis nobler in the mind to suffer the slings and arrows of outrageous test coverage, or to take arms against a sea of bugs…",
    "date": "2022-12-01T19:30:00Z",
    "vote": 0
  },
  {
    "id": "3f72a1cc9ece2b1dc6f3187d81d8bc97",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "Interaction-Design.org",
    "url": "https://sdet.us/interaction-design-org/",
    "resume": "Starting some new training (this time in the UX realm) with Interaction-Design.org!",
    "date": "2022-11-30T23:38:55Z",
    "vote": 0
  },
  {
    "id": "c0990c56e452ff699f83456b7f0ea7f1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev Beat. November 2022",
    "url": "https://blog.boot.dev/news/bootdev-beat-november-2022/",
    "resume": "I hope you\u0026rsquo;ve enjoyed your pumpkin spice lattes this fall, that is, assuming that you\u0026rsquo;re basic like me.",
    "date": "2022-11-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1d3cbd9151f6a4928d216c1531be1d69",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "How Pinterest delivers software at scale",
    "url": "https://changelog.com/gotime/257",
    "resume": "Nishant Roy, Engineering Manager at Pinterest Ads, joins Johnny \u0026 Jon to detail how they’ve managed to continue shipping quality software from startup through hypergrowth all the way to IPO. Prepare to learn a lot about Pinterest’s integration and deployment pipeline, observability stack, Go-based services and more.",
    "date": "2022-11-24T15:00:00Z",
    "vote": 0
  },
  {
    "id": "554c68d3323574c80a42cb292100d039",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "gRPC \u0026 protocol buffers",
    "url": "https://changelog.com/gotime/256",
    "resume": "On a previous episode of Go Time we discussed binary bloat, and how the Go protocol buffer implementation is a big offender. In this episode we dive into the history of protocol buffers and gRPC, then we discuss how the protocol and the implementation can vary and lead to things like binary bloat.",
    "date": "2022-11-17T18:15:00Z",
    "vote": 0
  },
  {
    "id": "0ee8d035bcb58da446d785bae10d9aa7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Top 22 Backend Technologies to Learn in 2023",
    "url": "https://blog.boot.dev/backend/top-backend-technologies/",
    "resume": "A backend technology is anything used server-side to build stable and efficient web architectures. Back-end technologies include programming languages, databases, communication mechanisms, or frameworks that make up the building blocks of a web application\u0026rsquo;s back-end.",
    "date": "2022-11-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0744c774c7fe8c53b36c7cc383824053",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Add Libraries and Packages to Your Coding Portfolio",
    "url": "https://blog.boot.dev/jobs/libraries-and-packages-in-coding-portfolio/",
    "resume": "Building a job-ready portfolio of coding projects doesn\u0026rsquo;t happen overnight, but if you\u0026rsquo;re like most self-taught developers, you\u0026rsquo;ve likely built up a nice collection of todo apps, calculators, and other toy programs.",
    "date": "2022-11-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6e2e1a1c944e1e1ab3c5c64e72d8336c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Round a Float in Go",
    "url": "https://blog.boot.dev/golang/round-float-golang/",
    "resume": "Round float and format to string 🔗If you\u0026rsquo;re rounding a floating point number in Go, it\u0026rsquo;s most likely you want to format it in a string.",
    "date": "2022-11-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "64918331c61cf5b233e9023ef24578de",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What do Tech Layoffs Mean for Budding Developers?",
    "url": "https://blog.boot.dev/news/tech-layoffs-for-new-devs/",
    "resume": "So we\u0026rsquo;re officially in a recession, and now the question is, \u0026ldquo;what does a recession mean to me as a brand-new developer?",
    "date": "2022-11-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b4522300b74acb158e287306b073e0ac",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Debugging Go",
    "url": "https://changelog.com/gotime/255",
    "resume": "Natalie \u0026 Ian welcome Liran Haimovitch \u0026 Tiago Queiroz to the show for a discussion focused on debugging Go programs. They cover good \u0026 bad debugging practices, the difficulty of debugging in the cloud, the value of errors logs \u0026 metrics, the practice of debugging in production (or not) \u0026 much more!",
    "date": "2022-11-10T17:00:00Z",
    "vote": 0
  },
  {
    "id": "084b8d6ca319a85dd2b908179bc2f1b7",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Convert an IOTA or Enum to a string in Go (Golang)",
    "url": "https://golangbyexample.com/convert-an-iota-or-enum-to-a-string-in-go-golang/",
    "resume": "\u003cp\u003eOverview Enum in Golang can be created by using IOTA. Please refer to this post to learn more about IOTA In this post, we will see how to convert an IOTA or...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/convert-an-iota-or-enum-to-a-string-in-go-golang/\"\u003eConvert an IOTA or Enum to a string in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2022-11-10T13:51:54Z",
    "vote": 0
  },
  {
    "id": "b15aca619dff75e829a03b519e78e519",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Enum in Golang",
    "url": "https://golangbyexample.com/enum-in-golang/",
    "resume": "\u003cp\u003eOverview IOTA provides an automated way to create an enum in Golang. Let\u0026#8217;s see an example. Example Output In above program we created a new type Then we declared some const of\u0026#160;...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/enum-in-golang/\"\u003e\u0026lt;strong\u0026gt;Enum in Golang\u0026lt;/strong\u0026gt;\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2022-11-10T13:44:03Z",
    "vote": 0
  },
  {
    "id": "c9a8ca95665658acbd9fdf47c343c81a",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Thirteen Years of Go",
    "url": "https://go.dev/blog/13years",
    "resume": "Happy Birthday, Go!",
    "date": "2022-11-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1ac0687141390e87e2fd9775fccf80a6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 8 Top Back-end Programming Languages for 2023",
    "url": "https://blog.boot.dev/backend/best-backend-programming-languages/",
    "resume": "A backend programming language is what a programmer like you uses to create internal systems that work in the background of a web application.",
    "date": "2022-11-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fb8543250a90bb149c3da28f94ace8bb",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Simple Rate Limiter with Redis",
    "url": "https://www.jajaldoang.com/post/simple-rate-limiter-redis/",
    "resume": "\u003cp\u003eWe will create a simple rate limiter with Redis. But first, what is a rate limiter, and why do we use it?\u003c/p\u003e",
    "date": "2022-11-05T05:19:00+07:00",
    "vote": 0
  },
  {
    "id": "63326e60f858a7c287319e12da0cd987",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go in medicine \u0026 biology",
    "url": "https://changelog.com/gotime/254",
    "resume": "Today we’re talking about uses for Go in the medical industry. Tim Stiles develops and maintains a Go package for synthetic biology and molecular biology called Poly. It has broad applications for biotech R\u0026D, but also has very direct applications to medicine.",
    "date": "2022-11-04T14:30:00Z",
    "vote": 0
  },
  {
    "id": "957d3859ba68be52a5955f9dee08e37d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is a DevOps Engineer's Salary?",
    "url": "https://blog.boot.dev/devops/devops-salary/",
    "resume": "The median DevOps engineer’s salary is $103,994 in base pay, with around $28,514 in additional pay through bonuses, commissions, and profit sharing according to Glassdoor.",
    "date": "2022-11-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "49a2813918a44e105cee721c6820198c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev Beat: October 2022 Edition",
    "url": "https://blog.boot.dev/news/bootdev-beat-october-2022/",
    "resume": "Happy Halloween! We released a ton of new stuff on Boot.dev this October, and I\u0026rsquo;ve had a blast figuring out new mediums and tools we can use to create content.",
    "date": "2022-10-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "94eec137c91a2d5661b5a332a21f6eba",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Can Programming Be Self Taught?",
    "url": "https://www.jajaldoang.com/post/can-programming-be-self-taught/",
    "resume": "\u003cp\u003eHaving self-taught programming skills does not imply not going to school or not following an instructor. To put it simply, it means taking the initiative by you instead of waiting for someone else to do so. As long as you are committed to mastering programming skills, including training courses, books, videos, and discussions, you are well on becoming a self-taught programmer.\u003c/p\u003e",
    "date": "2022-10-29T05:21:54+07:00",
    "vote": 0
  },
  {
    "id": "6aeff983bb1f4c2db85700f0be1e190d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Spooky stories to scare devs 👻",
    "url": "https://changelog.com/gotime/253",
    "resume": "Mat Ryer gathers a gang of ghouls and ghosts to tell spooky developer stories! Join us to hear tales of Mat’s $1k nightmare, Dee’s infinite loop of horror, Natalie’s haunted time as a junior dev \u0026 many, many more.",
    "date": "2022-10-27T17:45:00Z",
    "vote": 0
  },
  {
    "id": "24fb8459f4f084b2819ed5ee2c9a68ac",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Much Do Backend Developers Make?",
    "url": "https://blog.boot.dev/backend/how-much-do-backend-devs-make/",
    "resume": "The short answer? On average, backend developers make either $82,462, $95,472, or $104,865 per year in base pay depending on who you ask.",
    "date": "2022-10-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a72dc869ac2a9d8a6997c389f480350a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Trends in Developer Jobs: A Meta Analysis of Stack Overflow Surveys",
    "url": "https://blog.boot.dev/jobs/trends-in-developer-jobs-stackoverflow/",
    "resume": "I\u0026rsquo;m really interested in the trends we see in the software engineering job market. Sometimes it\u0026rsquo;s really hard to tell a cohesive and accurate narrative about what\u0026rsquo;s happening because it just happens so dang fast, and very few people are collecting data on the matter.",
    "date": "2022-10-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "111a74efc3307f0c0e03643bbcfd5c84",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Who owns our code?",
    "url": "https://changelog.com/gotime/252",
    "resume": "In this episode, we’re joined by tech Lawyer Luis Villa to explore the question, who owns code? The company, the engineer, the team? What about when you’re using AI, Machine learning, GitHub Copilot… is that still your code?",
    "date": "2022-10-20T16:30:00Z",
    "vote": 0
  },
  {
    "id": "25d8a37fce09a9b15862ae4476e614cd",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Makefiles to improve your life",
    "url": "https://blog.boot.dev/stories/makefiles-to-improve-your-life/",
    "resume": "During development you may sometimes notice you run a lot of commands to set up, build, test, and manage your project.",
    "date": "2022-10-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "08ca5e84e33fb91141094c204956a762",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 6 Best Backend Project Ideas for Beginners",
    "url": "https://blog.boot.dev/backend/best-backend-projects/",
    "resume": "Want to become a backend developer? Not surprising. Backend developers enjoy an average base salary of $95k per year, not to mention comprehensive benefits.",
    "date": "2022-10-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b582406f2efd4090949446319dae0219",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "WebAssembly: DOM Access and Error Handling",
    "url": "https://golangbot.com/go-webassembly-dom-access/",
    "resume": "This tutorial deals with how to access the browser's DOM from Go using JavaScript mapping functions. Also learn how to handle errors returned from Go in JavaScript.",
    "date": "2022-10-15T18:45:00Z",
    "vote": 0
  },
  {
    "id": "2bd7317c429d89db0bc52bfe4de39b36",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "WebAssembly: Introduction to WebAssembly using Go",
    "url": "https://golangbot.com/webassembly-using-go/",
    "resume": "A tutorial about WebAssembly and how to cross compile and run Go programs in the browser using WebAssembly. ",
    "date": "2022-10-15T14:51:00Z",
    "vote": 0
  },
  {
    "id": "9134286e25cbe83720b688207afd92e7",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hacking with Go: Part 2",
    "url": "https://changelog.com/gotime/251",
    "resume": "We’re once again exploring hacking in Go from the eyes of security researchers. This time, Natalie \u0026 Ian are joined by Ivan Kwiatkowski (a.k.a. Justice Rage)!",
    "date": "2022-10-13T18:15:00Z",
    "vote": 0
  },
  {
    "id": "6b09ececc82e704f8161b67a9a7cc22e",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Sort a slice of Int in Ascending and Descending order in  Go (Golang)",
    "url": "https://golangbyexample.com/sort-slice-asc-desc-golang/",
    "resume": "\u003cp\u003eSort a slice in Ascending order sort.Ints package of going can be used to sort a full slice or a part of the slice. It is going to sort the string into...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/sort-slice-asc-desc-golang/\"\u003eSort a slice of Int in Ascending and Descending order in  Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2022-10-13T17:13:49Z",
    "vote": 0
  },
  {
    "id": "c2a700393bca15375922799cc2c9cb52",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "All the Kinds of Functions in Python",
    "url": "https://blog.boot.dev/stories/a-guide-to-all-the-types-of-functions-in-python/",
    "resume": "Functions are one of the most versatile tools in any Python programmer\u0026rsquo;s toolbox. They enable code reuse and provide a form of abstraction.",
    "date": "2022-10-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "01b063bf4d7b4ae6b393846c34896465",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Should You Learn Front-end or Back-end Development First?",
    "url": "https://blog.boot.dev/backend/learn-frontend-or-backend-first/",
    "resume": "So you want to get into web development, and you keep hearing about \u0026ldquo;front-end\u0026rdquo; and \u0026ldquo;back-end\u0026rdquo; positions.",
    "date": "2022-10-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3a5b5bac9b830435c15498c30ad2315e",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Error Wrapping",
    "url": "https://golangbot.com/error-wrapping/",
    "resume": "This tutorial discusses how to wrap errors in Go. It also teaches how to use the Is and As functions from the error package.",
    "date": "2022-10-11T22:54:11Z",
    "vote": 0
  },
  {
    "id": "0f98a3f23e6180108af8c7d5895e935d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 7 Best Backend Bootcamps of 2022",
    "url": "https://blog.boot.dev/backend/best-backend-bootcamps/",
    "resume": "So you’re looking for the very best backend bootcamp of 2022. You’re not alone – most backend engineers earn over six figures according to Glassdoor, plus they have wide and varied job prospects.",
    "date": "2022-10-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "da23cc9f071e58f800d85b8b97817220",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Full-Stack Ops: Back-end and DevOps Roles are Merging",
    "url": "https://blog.boot.dev/devops/backend-devops-roles-merging/",
    "resume": "It\u0026rsquo;s time for some speculation on my part 🔗I believe that the job duties of \u0026ldquo;back-end\u0026rdquo; and \u0026ldquo;DevOps\u0026rdquo; engineers will coalesce to include almost everything that \u0026ldquo;the user doesn\u0026rsquo;t see\u0026rdquo;.",
    "date": "2022-10-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "74a4403e9ce646cb959198e86b0fc59b",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Repeat a string multiple times in Go (Golang)",
    "url": "https://golangbyexample.com/repeat-string-golang/",
    "resume": "\u003cp\u003eOverview strings.Repeat method can be used to repeat a string multiple times in Go (Golang) Here is the link to this function in the Go strings package https://pkg.go.dev/strings#Repeat Here is the signature...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/repeat-string-golang/\"\u003eRepeat a string multiple times in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2022-10-09T17:12:09Z",
    "vote": 0
  },
  {
    "id": "71424d0b89fd30263c412eb5a2ae6433",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Print the next or previous character given a char in Go (Golang)",
    "url": "https://golangbyexample.com/next-previous-char-golang/",
    "resume": "\u003cp\u003eOverview Simply by doing plus 1 and minus 1 we can get the next and previous character given a current char. Program Here is the program for the same Output: Note: Check...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/next-previous-char-golang/\"\u003ePrint the next or previous character given a char in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2022-10-09T17:09:11Z",
    "vote": 0
  },
  {
    "id": "f6a5087aa56086f4e4b05e76b78e99b7",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Mat's GopherCon EU diary",
    "url": "https://changelog.com/gotime/250",
    "resume": "Join Mat Ryer on his journey to Berlin for GopherCon EU 2022. Along the way he chats with Egon Elbre, Ale Kennedy, Ole Bulbuk, Christian Haas, Bill Kennedy \u0026 Ron Evans. Danke!",
    "date": "2022-10-07T14:45:00Z",
    "vote": 0
  },
  {
    "id": "f90f8477fbf3e5c8e5933603e7f886ac",
    "source": {
      "path": "examples",
      "name": "Golang by example",
      "url": "https://golangbyexample.com/feed/"
    },
    "name": "Program  for Longest Word in Dictionary through Deleting in Go (Golang)",
    "url": "https://golangbyexample.com/longest-word-dictionary-go/",
    "resume": "\u003cp\u003eOverview A string and a dictionary of words are given. The objective is to find the longest word in the dictionary\u0026#160;which is present as a subsequence in the given string. If the...\u003c/p\u003e\n\u003cp\u003eThe post \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com/longest-word-dictionary-go/\"\u003eProgram  for Longest Word in Dictionary through Deleting in Go (Golang)\u003c/a\u003e appeared first on \u003ca rel=\"nofollow\" href=\"https://golangbyexample.com\"\u003eWelcome To Golang By Example\u003c/a\u003e.\u003c/p\u003e\n",
    "date": "2022-09-30T17:56:27Z",
    "vote": 0
  },
  {
    "id": "0ed78eb5adf0ee2053add1dacf70ba3f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Functional programming with generics?",
    "url": "https://changelog.com/gotime/249",
    "resume": "We did an episode on functional programming in Go with Aaron Schlesinger back in 2019… But that was before generics were a thing. Let’s revisit the topic and discuss the pros and cons now that we have generics. What’s changed? What hasn’t?",
    "date": "2022-09-30T16:30:00Z",
    "vote": 0
  },
  {
    "id": "fa870ce79a24ceb61c5765b59b270feb",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Go runtime: 4 years later",
    "url": "https://go.dev/blog/go119runtime",
    "resume": "A check-in on the status of Go runtime development",
    "date": "2022-09-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f2beb249f72f09903000f9924ccbe813",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "CI/CD Isn't Just About Efficiency",
    "url": "https://blog.boot.dev/devops/cicd-is-devx/",
    "resume": "DevOps principles, and CI/CD specifically, are generally presented as a more efficient way to run a software development organization.",
    "date": "2022-09-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e755f0cda9f1950dc336b73ef7216605",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Engineering interview tips \u0026 tricks",
    "url": "https://changelog.com/gotime/248",
    "resume": "In this episode, we will be exploring interviewing as a Software Engineer. Tips, tricks, and gotchas, as well as potentially some interviewing horror stories and red flags to avoid at all costs. We’re joined by Emma Draper, Engineering Manager at the New York Times based in Arizona, and Kate Jonas, goes by Jonas, Technical Enablement Manager at Datadog based in Denver.",
    "date": "2022-09-22T17:20:00Z",
    "vote": 0
  },
  {
    "id": "35a74cff8dbc4e849f180401ddfd9d94",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Backend Engineer vs Data Engineer: What’s the Difference?",
    "url": "https://blog.boot.dev/backend/backend-engineer-vs-data-engineer/",
    "resume": "The sexiest job title of the decade, data scientist, has spawned about a dozen equally sexy but somewhat confusing and overlapping job titles.",
    "date": "2022-09-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5eedf099a25f1216547242fa7bad6068",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Do Better in Coding Interviews by Being Confident and Humble",
    "url": "https://blog.boot.dev/jobs/confidence-in-job-interviews/",
    "resume": "I think we often do a great job of flogging the dead horse of whiteboarding problems when giving coding interview advice.",
    "date": "2022-09-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "418461d8a99b27a72cc5b376cb8b52b4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "New 'Learn SQL' Course Launched on Boot.dev",
    "url": "https://blog.boot.dev/news/learn-sql-course-released/",
    "resume": "I\u0026rsquo;m happy to announce that today we launched our new Learn SQL course! It was a ton of fun to write, but I also had a blast building the back-end infrastructure that allows students to write and execute SQL in the browser.",
    "date": "2022-09-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "902efb1337aabec92631356d66136346",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Stay agile out there",
    "url": "https://changelog.com/gotime/247",
    "resume": "Inbal Cohen, Product expert and Agile evangelist, joins Natalie \u0026 Angelica for a conversation about all things Agile. Inbal lays out some agile tips for Go devs, discusses if and how remote work changes things, describes some downsides of the methodology, and more.",
    "date": "2022-09-15T16:15:00Z",
    "vote": 0
  },
  {
    "id": "739a28b8388fd91d737c1c76beef5a63",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The More Mentors, The Better (When Learning to Code)",
    "url": "https://blog.boot.dev/news/learn-from-multiple-people/",
    "resume": "Vim or VS Code? Tabs or spaces? Rails or Django? The world of programming is fraught with decisions to be made.",
    "date": "2022-09-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "05faec075af1d354db8c42119dcb62d7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Are You a DevOps Engineer If You Aren't Writing Code?",
    "url": "https://blog.boot.dev/devops/devops-engineers-should-code/",
    "resume": "\u0026ldquo;DevOps\u0026rdquo; is one of the most misunderstood terms in the software development industry. To be clear, I\u0026rsquo;m not the arbiter of truth when it comes to the definitions of words.",
    "date": "2022-09-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a88874e24d67912c8a548bf5f484f4c4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is a Computer Scientist, and What Do They Do?",
    "url": "https://blog.boot.dev/jobs/what-do-computer-scientists-do/",
    "resume": "At work, computer scientists build and deploy programs, algorithms, and systems to solve real-world problems. In most tech jobs, they spend the majority of their time working in teams on new software products.",
    "date": "2022-09-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d3419223613d6ac78acf89a39e08b12f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Avoiding bloat",
    "url": "https://changelog.com/gotime/246",
    "resume": "Egon Elbre and Roger Peppe join Mat for a conversation all about bloat (and how to avoid it). Expect talk of code bloat, binary bloat, feature bloat, and an even-more-bloated-than-usual unpopular opinion segment.",
    "date": "2022-09-08T17:30:00Z",
    "vote": 0
  },
  {
    "id": "d638a93432225abc3d5499f0242093be",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Go Developer Survey 2022 Q2 Results",
    "url": "https://go.dev/blog/survey2022-q2-results",
    "resume": "An analysis of the results from the 2022 Q2 Go Developer Survey.",
    "date": "2022-09-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7cab6b64c53539e15be0b19121c89f1f",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Vulnerability Management for Go",
    "url": "https://go.dev/blog/vuln",
    "resume": "Announcing vulnerability management for Go, to help developers learn about known vulnerabilities in their dependencies.",
    "date": "2022-09-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6fc5ba973b5d979464bd3006da792970",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Long Does It Take to Become a Back End Developer?",
    "url": "https://blog.boot.dev/backend/how-long-to-become-backend-dev/",
    "resume": "I get really frustrated when I see people and companies online selling unrealistic dreams when it comes to coding education.",
    "date": "2022-09-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f0089c3cc933b01faaa793008636e88a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Keyup and Keydown Event Handlers in Vue 3",
    "url": "https://blog.boot.dev/javascript/vue-key-events/",
    "resume": "I recently spent far too long fighting with Vue\u0026rsquo;s keyup and keydown functionality while building Boot.",
    "date": "2022-09-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "047488474786cb520773e840ef08f614",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev Hackathon September 1st, 2022",
    "url": "https://blog.boot.dev/news/hackathon-sept-2022/",
    "resume": "Mark your calendar, because we\u0026rsquo;re hosting another hackathon in the Boot.dev Discord server! The kickoff meeting will be on Thursday, September 1st at 4PM MST, you can RSVP for that event here in our Discord server.",
    "date": "2022-09-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "533e054cb726908dbc3e51b23d544bd9",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Write on the Boot.dev Blog",
    "url": "https://blog.boot.dev/stories/writing-on-bootdev/",
    "resume": "We\u0026rsquo;ve just opened up the Boot.dev Blog to public contributions! We\u0026rsquo;re really excited to see all the great stories that our readers and students will create.",
    "date": "2022-09-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a24ee82476597e47784c68556006423a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Inside GopherCon",
    "url": "https://changelog.com/gotime/245",
    "resume": "Ever wondered how GopherCon came to be, and how it’s put together every year. In this show we will be chatted with Erik St. Martin, who has been there from the start about how GopherCon came to be, how this year’s conference came together, as well as why events like GopherCon as so great! We are joined by Erik St. Martin, GopherCon Organizer and Co-Author Go in Action.",
    "date": "2022-09-01T16:00:00Z",
    "vote": 0
  },
  {
    "id": "20644cd3dfcea53b5ef269a1b30f54c3",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⏱️ Set HTTP client timeout in Go",
    "url": "https://gosamples.dev/http-client-timeout/",
    "resume": "\u003cp\u003eAn HTTP client timeout is a time limit in which the server must process the request and return the response. If the set timeout is exceeded, the HTTP client should cancel the request and report an error. This mechanism is very important in applications that run in a production environment. It helps prevent the application from getting stuck waiting for a server response, which may take a long time or not happen at all.\u003c/p\u003e\n\u003cp\u003eIn Go, the standard HTTP client does not set timeouts by default. It means that an app can wait for the server\u0026rsquo;s response forever. To prevent this, you should always remember to set a timeout in your HTTP client. And this is what we want to do here 🙂.\u003c/p\u003e\n\u003cp\u003eThere are three scenarios of setting a timeout for HTTP requests that we are going to cover in this article:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSetting the same timeout for all requests of a new \u003ca href=\"https://pkg.go.dev/net/http#Client\" target=\"_blank\"\u003e\u003ccode\u003ehttp.Client\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eSetting a separate time limit for each new request.\u003c/li\u003e\n\u003cli\u003eModifying timeout for default HTTP client used by many external API client packages.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"set-timeout-per-http-client\"\u003eSet timeout per HTTP client\u003c/h2\u003e\n\u003cp\u003eIf you want to set the same timeout for all requests of a new \u003ca href=\"https://pkg.go.dev/net/http#Client\" target=\"_blank\"\u003e\u003ccode\u003ehttp.Client\u003c/code\u003e\u003c/a\u003e, initialize the client with the \u003ccode\u003eTimeout\u003c/code\u003e field set, where you specify the time limit in which the request must be processed.\u003c/p\u003e\n\u003cp\u003eLook at the example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003etimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ew\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eResponseWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHandleFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/timeout\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eListenAndServe\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;:8090\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttpClient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttpClient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://localhost:8090/timeout\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn lines \u003ccode\u003e9-18\u003c/code\u003e, we declare a new simple server whose only task is to pause work for 5 seconds by calling the \u003ca href=\"https://pkg.go.dev/time#Sleep\" target=\"_blank\"\u003e\u003ccode\u003etime.Sleep\u003c/code\u003e\u003c/a\u003e function. In the first line of the \u003ccode\u003emain()\u003c/code\u003e function, we start this server. In the remaining lines, we create a new \u003ca href=\"https://pkg.go.dev/net/http#Client\" target=\"_blank\"\u003e\u003ccode\u003ehttp.Client\u003c/code\u003e\u003c/a\u003e with the \u003ccode\u003eTimeout\u003c/code\u003e field set to 2 seconds and send a new request to the created server.\u003c/p\u003e\n\u003cp\u003eSo by sending a request with a 2-second timeout to a server that pauses for 5 seconds, we will get a timeout error:\u003c/p\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/08/08 12:31:43 Get \u003cspan class=\"s2\"\u003e\u0026#34;http://localhost:8090/timeout\u0026#34;\u003c/span\u003e: context deadline exceeded \u003cspan class=\"o\"\u003e(\u003c/span\u003eClient.Timeout exceeded \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e awaiting headers\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you run the app without the \u003ccode\u003eTimeout\u003c/code\u003e set, you will not get any error.\u003c/p\u003e\n\u003c!-- The HTTP client sets the timeout using a request [context](https://pkg.go.dev/context) with a [deadline set](https://pkg.go.dev/context#WithDeadline), so the error message may not seem very clear. However, it is easy to detect a timeout error using [`os.IsTimeout()`](https://pkg.go.dev/os#IsTimeout). Check out how to do it in our tutorial here. --\u003e\n\u003ch2 id=\"set-timeout-per-request\"\u003eSet timeout per request\u003c/h2\u003e\n\u003cp\u003eIf you want to set a timeout for an individual request, create a new request \u003ca href=\"https://pkg.go.dev/context#Context\" target=\"_blank\"\u003e\u003ccode\u003eContext\u003c/code\u003e\u003c/a\u003e using the \u003ca href=\"https://pkg.go.dev/context#WithTimeout\" target=\"_blank\"\u003e\u003ccode\u003econtext.WithTimeout()\u003c/code\u003e\u003c/a\u003e function. Then, create a new request with this context as an argument using the \u003ca href=\"https://pkg.go.dev/net/http#NewRequestWithContext\" target=\"_blank\"\u003e\u003ccode\u003ehttp.NewRequestWithContext()\u003c/code\u003e\u003c/a\u003e constructor.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// func server() {...} the same as in the first example...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttpClient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecancel\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWithTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eBackground\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nf\"\u003ecancel\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRequestWithContext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethodGet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://localhost:8090/timeout\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttpClient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/context#Context\" target=\"_blank\"\u003e\u003ccode\u003econtext.Context\u003c/code\u003e\u003c/a\u003e is an object that is a common Go concept used by HTTP clients and servers to send/receive request-scoped values, cancellation, and deadline signals to deeper layers of services. In our case, the context is used to set the deadline for getting a response for a given new request.\u003c/p\u003e\n\u003cp\u003eNote that in addition to the timeout value, the \u003ca href=\"https://pkg.go.dev/context#WithTimeout\" target=\"_blank\"\u003e\u003ccode\u003econtext.WithTimeout()\u003c/code\u003e\u003c/a\u003e function also takes a parent context as an argument, which in our example is a new empty context created with the \u003ca href=\"https://pkg.go.dev/context#Background\" target=\"_blank\"\u003e\u003ccode\u003econtext.Background()\u003c/code\u003e\u003c/a\u003e function. As a result, we receive the context and the cancellation function to release resources associated with it, which we call as a deferred function \u003ccode\u003ecancel()\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eSince as in the previous example, we send a request with a 2-second timeout to the server that pauses for 5 seconds, we get a similar error message:\u003c/p\u003e\n\u003c!-- It can also be handled with the os.IsTimeout function --\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/08/08 15:06:18 Get \u003cspan class=\"s2\"\u003e\u0026#34;http://localhost:8090/timeout\u0026#34;\u003c/span\u003e: context deadline exceeded\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"set-timeout-for-default-http-client\"\u003eSet timeout for default HTTP client\u003c/h2\u003e\n\u003cp\u003eSometimes you can use code that uses the default HTTP client: \u003ca href=\"https://pkg.go.dev/net/http#DefaultClient\" target=\"_blank\"\u003e\u003ccode\u003ehttp.DefaultClient\u003c/code\u003e\u003c/a\u003e. Often there is no way to change this code so that it uses the custom-defined HTTP client, e.g. in external packages or in code where backward compatibility must be maintained. Fortunately, this does not mean that we cannot define a timeout for such a client. The example below shows how to do it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// func server() {...} the same as in the first example...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDefaultClient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eTimeout\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://localhost:8090/timeout\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAll you have to do is set the \u003ccode\u003eTimeout\u003c/code\u003e field in the default HTTP client, and then all functions of the \u003ca href=\"https://pkg.go.dev/net/http\" target=\"_blank\"\u003e\u003ccode\u003ehttp\u003c/code\u003e\u003c/a\u003e package using the default client will respect this timeout.\u003c/p\u003e\n\u003cp\u003eIn this example, you get the same error message as if you set the timeout per HTTP client:\u003c/p\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/08/09 09:48:58 Get \u003cspan class=\"s2\"\u003e\u0026#34;http://localhost:8090/timeout\u0026#34;\u003c/span\u003e: context deadline exceeded \u003cspan class=\"o\"\u003e(\u003c/span\u003eClient.Timeout exceeded \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e awaiting headers\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-08-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "00c36aa863ff73e4739be6fbb48629c7",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⏰ Handle HTTP timeout error in Go",
    "url": "https://gosamples.dev/handle-http-timeout-error/",
    "resume": "\u003cp\u003eTo handle an HTTP timeout error in Go, use the \u003ca href=\"https://pkg.go.dev/os#IsTimeout\" target=\"_blank\"\u003e\u003ccode\u003eos.IsTimeout()\u003c/code\u003e\u003c/a\u003e function from the built-in \u003ca href=\"https://pkg.go.dev/os\" target=\"_blank\"\u003e\u003ccode\u003eos\u003c/code\u003e\u003c/a\u003e package. It returns \u003ccode\u003etrue\u003c/code\u003e if the request time limit has been exceeded or \u003ccode\u003efalse\u003c/code\u003e otherwise.\u003c/p\u003e\n\u003c!-- \u003e If you want to learn how to set up a client timeout in Go, check out our other tutorial [here](/http-client-timeout). --\u003e\n\u003ch2 id=\"example\"\u003eExample\u003c/h2\u003e\n\u003cp\u003eIn the example, we create an HTTP client with a timeout of 1 nanosecond. With such a short timeout, we can be sure that we will receive a timeout error when we send a request to the \u003ccode\u003ehttps://example.com\u003c/code\u003e server.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttpClient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eNanosecond\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethodGet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttpClient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;timeout error: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/08/28 18:35:48 timeout error: Get \u003cspan class=\"s2\"\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e: context deadline exceeded \u003cspan class=\"o\"\u003e(\u003c/span\u003eClient.Timeout exceeded \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e awaiting headers\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eRead \u003ca href=\"https://gosamples.dev/context-deadline-exceeded\"\u003ethis article\u003c/a\u003e to learn more about the \u003ccode\u003econtext deadline exceeded\u003c/code\u003e, which is also a timeout error.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTo make sure that \u003ca href=\"https://pkg.go.dev/os#IsTimeout\" target=\"_blank\"\u003e\u003ccode\u003eos.IsTimeout()\u003c/code\u003e\u003c/a\u003e works correctly, change the timeout value in line \u003ccode\u003e11\u003c/code\u003e to \u003ccode\u003e1 * time.Minute\u003c/code\u003e. If there is currently no problem with \u003ccode\u003ehttps://example.com\u003c/code\u003e, the request will be processed within the time limit of 1 minute and you will not see any error on the output.\u003c/p\u003e",
    "date": "2022-08-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8c338b19aa4d41a49fac32294bdeacd3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The art of the PR: Part 2",
    "url": "https://changelog.com/gotime/244",
    "resume": "In this episode, we’ll be further exploring PRs. Check out The art of the PR: Part 1 if you haven’t yet. What is it that makes a PR a good PR? How do you consider PRs in an open source repo? How do you vet contributions from people who aren’t a part of the repository? How does giving feedback and encouragement fit in to the PR process? We’ll be debating the details, and trying to help our fellow gophers perfect the art of the PR. We are joined by the awesome Anderson Queiroz, hosted by Natalie Pistunovich \u0026 Angelica Hill.",
    "date": "2022-08-27T16:00:00Z",
    "vote": 0
  },
  {
    "id": "7bd5a3a86dd817c2ac03fab200cb3b7f",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Top 11 Computer Science Books for Self Study [2023]",
    "url": "https://blog.boot.dev/computer-science/computer-science-books/",
    "resume": "In today’s modern, fast-paced world, we look to StackOverflow, Reddit, and hands-on courses to learn about computer science.",
    "date": "2022-08-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0a6960e61fee2d2db10d2f94cf827aa4",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "❤️‍🩹 Recover function in Go",
    "url": "https://gosamples.dev/recover/",
    "resume": "\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e is a built-in function in Go that stops the program abort sequence invoked by the call of the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function. It restores the normal execution of the application and allows for handling the error passed to the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e. In other words, \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e \u0026ldquo;catches\u0026rdquo; \u003ccode\u003epanic\u003c/code\u003e-type errors and allows you to handle them instead of terminating the application.\u003c/p\u003e\n\u003ch2 id=\"panic-and-defer\"\u003ePanic and Defer\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e works closely with the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function and the \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e statement.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function is used in Go to report an unrecoverable state in the application that prevents it from running any longer. In general, there are two types of sources of such a state in an application:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLack of access to resources necessary for the application to run. For example, a database connection error in an application that updates data in the database causes the application to be unable to continue running. In this case, you should either wait for access or explicitly terminate the application with an unrecoverable error using the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function.\u003c/li\u003e\n\u003cli\u003eProgramming bugs causing the runtime errors, such as indexing a slice out of bounds. They automatically trigger the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e and terminate the app.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!-- \u003e TODO: For more on the [`panic()`](https://pkg.go.dev/builtin#panic) function, see [our other article]. --\u003e\n\u003cp\u003eA toy example showing how the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function works for the case when the application lacks access to resources:\u003c/p\u003e\n\u003c!-- \u003e #TODO: For an example of how [`panic()`](https://pkg.go.dev/builtin#panic) works in the case of runtime errors, check out our article [on panicking in Go]. --\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003econnectToDB\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;error while connecting to db\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003econnectToDB\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;connected to db\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epanic: error \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e connecting to db\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egoroutine \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003erunning\u003cspan class=\"o\"\u003e]\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.main\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e main.go:15 +0x49\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the example, the \u003ccode\u003econnectToDB()\u003c/code\u003e function always returns an error that we use as an argument to the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e. As a result, the last line of the \u003ccode\u003emain()\u003c/code\u003e, printing the \u003ccode\u003e\u0026quot;connected to db\u0026quot;\u003c/code\u003e string is never executed because the program starts the \u003cem\u003epanicking sequence\u003c/em\u003e earlier, which results in logging the error to standard output and terminating the application.\u003c/p\u003e\n\u003cp\u003eTo define what the \u003ca href=\"https://go.dev/ref/spec#Handling_panics\" target=\"_blank\"\u003e\u003cem\u003epanicking sequence\u003c/em\u003e\u003c/a\u003e is and how it works, we must first learn more about the \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e statement.\u003c/p\u003e\n\u003c!-- // # TODO:\nWhat is the panicking sequence? It is the way, the program starts to behave after the call to the [`panic()`](https://pkg.go.dev/builtin#panic). --\u003e\n\u003chr\u003e\n\u003cp\u003eThe \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e statement ensures that a function is executed after the surrounding function returns (the one in which \u003ccode\u003edefer\u003c/code\u003e was called). It does not matter whether the surrounding function ended without error or was interrupted by a panic. The \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e guarantees that the function following this keyword will be executed.\u003c/p\u003e\n\u003c!-- \u003e TODO: For more on the [`defer`](https://go.dev/ref/spec#Defer_statements) statement, see our [other article]. --\u003e\n\u003cp\u003eLook at the example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;After bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ebaz\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;After baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebaz\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;panic in baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;After foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eAs you can see, we call a sequence of three functions. The \u003ccode\u003emain()\u003c/code\u003e function calls \u003ccode\u003efoo()\u003c/code\u003e, which then calls \u003ccode\u003ebar()\u003c/code\u003e, and the \u003ccode\u003ebar()\u003c/code\u003e calls \u003ccode\u003ebaz()\u003c/code\u003e. In each of them, we print out the string \u003ccode\u003e\u0026quot;Hello \u0026lt;function-name\u0026gt;\u0026quot;\u003c/code\u003e and in the first line declare the deferred function, which should print the string \u003ccode\u003e\u0026quot;Bye \u0026lt;function-name\u0026gt;\u0026quot;\u003c/code\u003e. After each of the three functions call, we print the string \u003ccode\u003e\u0026quot;After \u0026lt;function-name\u0026gt;\u0026quot;\u003c/code\u003e. Moreover, the \u003ccode\u003ebaz()\u003c/code\u003e invokes a panic with the string \u003ccode\u003e\u0026quot;panic in baz\u0026quot;\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe program prints the following result to the output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello foo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello baz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBye baz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBye bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBye foo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epanic: panic in baz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egoroutine \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003erunning\u003cspan class=\"o\"\u003e]\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.baz\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e main.go:20 +0xb8\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.bar\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e main.go:14 +0xaa\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.foo\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e main.go:8 +0xaa\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.main\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e main.go:24 +0x17\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the beginning, everything works as expected - the \u003ccode\u003efoo()\u003c/code\u003e, \u003ccode\u003ebar()\u003c/code\u003e, and \u003ccode\u003ebaz()\u003c/code\u003e functions are executed one by one and print out the \u003ccode\u003e\u0026quot;Hello \u0026lt;function-name\u0026gt;\u0026quot;\u003c/code\u003e messages. Inside the \u003ccode\u003ebaz()\u003c/code\u003e function, there is a panic, but it is not immediately visible in the output. Instead, the \u003ccode\u003ebaz()\u003c/code\u003e, \u003ccode\u003ebar()\u003c/code\u003e and \u003ccode\u003efoo()\u003c/code\u003e calls the deferred functions in sequence omitting the \u003ccode\u003e\u0026quot;After \u0026lt;function-name\u0026gt;\u0026quot;\u003c/code\u003e string printing.\u003c/p\u003e\n\u003cp\u003eThat is how the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e works - it starts the \u003ca href=\"https://go.dev/ref/spec#Handling_panics\" target=\"_blank\"\u003e\u003cstrong\u003epanicking sequence\u003c/strong\u003e\u003c/a\u003e by immediately stopping the execution of the current function and starting to unwind the current goroutine function stack, running any deferred functions along the way. If this unwinding reaches the top of the stack, the panic is logged, and the program dies.\u003c/p\u003e\n\u003cp\u003eThe diagram below shows how the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function and \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e statement work in our example:\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cfigure\u003e\u003cimg src=\"https://gosamples.dev/recover/panic-defer.png\"\nalt=\"Diagram on how the panic and defer work together\" height=\"650\"/\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eSo, as a result of the panicking sequence, we can see the calls to \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e statement functions that print the \u003ccode\u003e\u0026quot;Bye \u0026lt;function-name\u0026gt;\u0026quot;\u003c/code\u003e messages. During the panicking, the program do not call any other function than in the \u003ccode\u003edefer\u003c/code\u003e statement - it did not print out the \u003ccode\u003e\u0026quot;After \u0026lt;function-name\u0026gt;\u0026quot;\u003c/code\u003e strings. The panic itself is logged at the end when it reaches the top of the function stack. Because of that, you can see this log and stack trace as the last message in the output.\u003c/p\u003e\n\u003cp\u003eOf course, as we mentioned at the beginning, the \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e statement works regardless of whether panic occurs in the program or not. To check this, remove \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e from the app and trace the output. Naturally, this also works the other way around, meaning you also do not have to use \u003ca href=\"https://go.dev/ref/spec#Defer_statements\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e when calling \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"recover-from-a-panic\"\u003eRecover from a Panic\u003c/h2\u003e\n\u003cp\u003eSometimes you may want the panicking to abort, the application to return to normal execution, and the whole sequence of unwinding the goroutine function stack and terminating the application to stop. This is what the built-in \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e function is for.\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003efunc recover() any\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e restores the normal execution of the program by stopping the panicking sequence. It returns the error value passed to the call of the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e, or \u003ccode\u003enil\u003c/code\u003e if the goroutine is not panicking.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e can take any value as an argument, so the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e also returns the value of type \u003ccode\u003eany\u003c/code\u003e. Since Go 1.18, \u003ca href=\"https://pkg.go.dev/builtin#any\" target=\"_blank\"\u003e\u003ccode\u003eany\u003c/code\u003e\u003c/a\u003e is an alias for \u003ccode\u003einterface{}\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e is useful in any case, where a single panic should not terminate the entire program. For example, a critical error in one of the web server client connections should not crash the server app.\u003c/p\u003e\n\u003cp\u003eIt is also used for handling errors in the recursive function stack. If an error occurs at some level of a call to such a function, it usually needs to be handled at the top. To do this, report the panic to unwind the stack to the top-level function call and then \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e from the panic to handle the error.\u003c/p\u003e\n\u003cp\u003eWhen you store your application logs, the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e can also be used to catch a panic and save the panic message to the storage.\u003c/p\u003e\n\u003cp\u003eSince you already know what the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e is and how it works, it\u0026rsquo;s time to show an example how to use it.\u003c/p\u003e\n\u003cp\u003eThe following program is the same as the previous one except that this time we recover from the panic in the \u003ccode\u003ebaz()\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;After bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ebaz\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;After baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebaz\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nf\"\u003erecoverPanic\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;panic in baz\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003erecoverPanic\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003erecover\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;RECOVERED: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;After foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello foo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello baz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBye baz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRECOVERED: panic in baz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAfter baz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBye bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAfter bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBye foo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAfter foo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the first line of the \u003ccode\u003ebaz()\u003c/code\u003e there is a deferred panic recovery function \u003ccode\u003erecoverPanic()\u003c/code\u003e which checks whether the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e returns a non-nil result. If so, then the panic argument is printed to the standard output with the prefix \u003ccode\u003eRECOVERED:\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eIn the output you can see that the application has indeed recovered the panic, as it returns to normal execution and prints the strings \u003ccode\u003e\u0026quot;After baz\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;After bar\u0026quot;\u003c/code\u003e, and \u003ccode\u003e\u0026quot;After foo\u0026quot;\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eOur sample application now looks like this in the diagram:\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cfigure\u003e\u003cimg src=\"https://gosamples.dev/recover/recover.png\"\nalt=\"Diagram on how the recover works\" height=\"750\"/\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003chr\u003e\n\u003cp\u003eYou may wonder why we called the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e in a deferred function in \u003ccode\u003ebaz()\u003c/code\u003e. Well, this is the first rule when using the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e only works in a deferred function.\u003c/div\u003e\n\u003cp\u003eThis is because during the returning to the caller in panicking sequence, the only code that runs is deferred functions, so the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e will not run elsewhere.\u003c/p\u003e\n\u003cp\u003eThe second rule is:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e only works in the same goroutine where \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e was thrown.\u003c/div\u003e\n\u003cp\u003eLook at the example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebarRecover\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;RECOVER: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003erecover\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;deferred from bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;panic in bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nf\"\u003ebarRecover\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edeferred from bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epanic: panic in bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egoroutine \u003cspan class=\"m\"\u003e6\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003erunning\u003cspan class=\"o\"\u003e]\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.bar\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e recover/main.go:14 +0x73\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.main.func1\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e recover/main.go:20 +0x17\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecreated by main.main\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e recover/main.go:19 +0x45\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the \u003ccode\u003emain()\u003c/code\u003e, we declared a call to the deferred function \u003ccode\u003ebarRecover()\u003c/code\u003e, which recovers from a panic. Then, we called the \u003ccode\u003ebar()\u003c/code\u003e function that panics in a new separate goroutine. As you can see in the output, the panic is not recovered since it was invoked by a new goroutine, and the \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e was in the main goroutine. In the diagram, it looks like this:\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cfigure class=\"figure__nomargin\"\u003e\u003cimg src=\"https://gosamples.dev/recover/recover-goroutine.png\"\nalt=\"Diagram on how the recover only works in the same goroutine where panic was thrown\"/\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\n\u003cp\u003eWhen you replace the \u003ccode\u003ebar()\u003c/code\u003e call in a new goroutine:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003ewith a regular call:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003ethen the panic will be recovered and the output you will see will look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edeferred from bar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRECOVER: panic in bar\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs a rule of thumb, remember this scheme and that you can only call \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e in the same goroutine as \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e. This will save you a lot of debugging time.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e function is a great mechanism in Go to avoid killing the application when unrecoverable errors occur and handle them so that the application can continue to run. In summary, you should remember the 3 most important things about this function:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#recover\" target=\"_blank\"\u003e\u003ccode\u003erecover()\u003c/code\u003e\u003c/a\u003e function is used to abort the panicking sequence and handle panics in the application.\u003c/li\u003e\n\u003cli\u003eIt only works in a deferred function.\u003c/li\u003e\n\u003cli\u003eIt only works in the same goroutine where \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e was thrown.\u003c/li\u003e\n\u003c/ul\u003e",
    "date": "2022-08-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f5e3b394bcb5a360502a8fb563906bd3",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "A Complete Overview of Computer Science for Beginners",
    "url": "https://blog.boot.dev/computer-science/computer-science-for-beginners/",
    "resume": "Learning how to get into computer science can be a daunting task. There are so many career paths down which a computer education can take you, so many programming languages to master, and so many skills to learn.",
    "date": "2022-08-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "424aa7348dc62c47134bbf4e14915cb0",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "How I used Go to make my radio auto-switch to AUX-IN when a Raspi plays music",
    "url": "https://appliedgo.net/auxin/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eOk, so your radio lacks AirPlay support but has an auxiliary input and can be remote-controlled via the Frontier Silicon API. Fetch a Raspberry Pi, put Shairport-sync and Raspotify on it, plug it into the AUX port, and glue everything together with some Go code. Et voilà - home automation in the small.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2022-08-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0f5c2471355279581dcbff381c5e4024",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The art of the PR: Part 1",
    "url": "https://changelog.com/gotime/243",
    "resume": "In this episode, we will be exploring PRs. What makes a good PR? How do you give the best PR review? Is there such thing as too small, or big of a PR? We’ll be debating the details, and trying to help our fellow gophers perfect the art of the PR. We are joined by three wonderful guests Jeff Hernandez, Sarah Duncan, and Natasha Dykes. Hosted by Angelica Hill \u0026 Natalie Pistunovich.",
    "date": "2022-08-18T16:05:00Z",
    "vote": 0
  },
  {
    "id": "092e10ce853bfde6923947c968963fa5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is the Future of Computer Science?",
    "url": "https://blog.boot.dev/computer-science/future-of-computer-science/",
    "resume": "In a word, the future of computer science is promising.\nIn a few more words, the future of computer science is promising, but with challenges to overcome.",
    "date": "2022-08-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "63cd40fcad467299067395988db84952",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Why Boot.dev is Not Completely Free",
    "url": "https://blog.boot.dev/education/why-boot-dev-is-not-free/",
    "resume": "A few days ago I received an email regarding Boot.dev where the sender informed me:",
    "date": "2022-08-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4c46e64bf10a34f80def942536c33b77",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The pain of dependency management",
    "url": "https://changelog.com/gotime/242",
    "resume": "Baruch Sadogursky (Chief Sticker Officer at JFrog) joins Natalie \u0026 Johnny to lament the current state of dependency management in Go and other languages. They discuss the problems dependency managers face, possible technical mitigations like SBOMs, people problems that will never be solved by tech, and take questions from listeners in the #gotimefm channel of Gophers Slack.",
    "date": "2022-08-11T17:30:00Z",
    "vote": 0
  },
  {
    "id": "16683e5b3d323e884733fcae0453a366",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Use the Best Software Engineering Job Boards",
    "url": "https://blog.boot.dev/jobs/best-job-boards-software-engineers/",
    "resume": "With so many job boards out there, it can be terribly confusing to know where to start when you\u0026rsquo;re looking for a programming job - especially if you\u0026rsquo;re looking for your first programming job.",
    "date": "2022-08-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "428379a38abcc9afefe101b339cd9013",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Gophers Say! GopherCon EU Edition",
    "url": "https://changelog.com/gotime/241",
    "resume": "Our award winning worthy survey game show is back, this time Mat Ryer hosts it live on stage at GopherCon Europe 2022! Go Time’s Natalie Pistunovich joins forces with Ronna Steinberg \u0026 Robert Burke to battle it out  with V Körbes, Tamir Bahar \u0026 Konrad Richie. Let’s see who can better guess what the GopherCon Europe gophers had to say!",
    "date": "2022-08-04T16:15:00Z",
    "vote": 0
  },
  {
    "id": "e04619ff68b4a64f2615382caa911008",
    "source": {
      "path": "golang",
      "name": "GO.DEV",
      "url": "https://go.dev/blog/feed.atom"
    },
    "name": "Go 1.19 is released!",
    "url": "https://go.dev/blog/go1.19",
    "resume": "Go 1.19 adds richer doc comments, performance improvements, and more.",
    "date": "2022-08-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "63f164a498cfb93b7619716a5e634dac",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🐾 How to compare strings in Go",
    "url": "https://gosamples.dev/strings-compare/",
    "resume": "\u003cp\u003eTo compare two strings in Go, you can use the \u003ca href=\"https://go.dev/ref/spec#Comparison_operators\" target=\"_blank\"\u003ecomparison operators\u003c/a\u003e \u003ccode\u003e==\u003c/code\u003e, \u003ccode\u003e!=\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e, \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e. Alternatively, you can use the \u003ca href=\"https://pkg.go.dev/strings#Compare\" target=\"_blank\"\u003e\u003ccode\u003estrings.Compare()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/strings\" target=\"_blank\"\u003e\u003ccode\u003estrings\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen comparing strings, we mean \u003ca href=\"https://en.wikipedia.org/wiki/Lexicographic_order\" target=\"_blank\"\u003elexicographic (alphabetical) order\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"comparison-operators\"\u003eComparison operators\u003c/h2\u003e\n\u003cp\u003eStrings in Go support comparison operators \u003ccode\u003e==\u003c/code\u003e, \u003ccode\u003e!=\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e, \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e to compare strings in lexicographic (alphabetical) order. The result of the comparison is a \u003ccode\u003ebool\u003c/code\u003e value (\u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e) indicating if the condition is met.\u003c/p\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;gosamples\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;gosamples\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s == %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s == %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s != %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s != %s: %t\\n\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026gt;= %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026gt;= %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026gt; %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026gt; %s: %t\\n\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026lt;= %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026lt;= %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026lt; %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026lt; %s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003egosamples\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e dev: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003egosamples\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e gosamples: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples !\u003cspan class=\"o\"\u003e=\u003c/span\u003e dev: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples !\u003cspan class=\"o\"\u003e=\u003c/span\u003e gosamples: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026gt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e dev: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026gt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e gosamples: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026gt; dev: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026gt; gosamples: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e dev: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e gosamples: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026lt; dev: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples \u0026lt; gosamples: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"the-stringscomparehttpspkggodevstringscompare-function\"\u003eThe \u003ca href=\"https://pkg.go.dev/strings#Compare\" target=\"_blank\"\u003e\u003ccode\u003estrings.Compare()\u003c/code\u003e\u003c/a\u003e function\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/strings#Compare\" target=\"_blank\"\u003e\u003ccode\u003estrings.Compare()\u003c/code\u003e\u003c/a\u003e function compares two strings in lexicographic order returning an \u003ccode\u003eint\u003c/code\u003e value as a result:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#Compare\" target=\"_blank\"\u003e\u003ccode\u003efunc Compare(a, b string) int\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp\u003eThe result is:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0\u003c/code\u003e if \u003ccode\u003ea == b\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e1\u003c/code\u003e if \u003ccode\u003ea \u0026gt; b\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-1\u003c/code\u003e if \u003ccode\u003ea \u0026lt; b\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;gosamples\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;gosamples\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.Compare(%s, %s): %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCompare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.Compare(%s, %s): %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCompare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.Compare(%s, %s): %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCompare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.Compare\u003cspan class=\"o\"\u003e(\u003c/span\u003egosamples, dev\u003cspan class=\"o\"\u003e)\u003c/span\u003e: \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.Compare\u003cspan class=\"o\"\u003e(\u003c/span\u003egosamples, gosamples\u003cspan class=\"o\"\u003e)\u003c/span\u003e: \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.Compare\u003cspan class=\"o\"\u003e(\u003c/span\u003edev, gosamples\u003cspan class=\"o\"\u003e)\u003c/span\u003e: -1\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"case-insensitive-string-comparison\"\u003eCase-insensitive string comparison\u003c/h2\u003e\n\u003cp\u003eIf you want to compare whether two strings are equal without paying attention to the case, you can perform a case-insensitive string comparison. Check out how to do it \u003ca href=\"https://gosamples.dev/case-insensitive-string-comparison\"\u003ein our other tutorial\u003c/a\u003e.\u003c/p\u003e",
    "date": "2022-08-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2c8e10988f60896e8ccad05147a08fbe",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What Are the Career Options in Computer Science?",
    "url": "https://blog.boot.dev/jobs/whats-the-job-outlook-for-computer-science-students/",
    "resume": "The future is bright for career options in computer science with remote work opening up doors that weren’t present before.",
    "date": "2022-08-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a93d03e3e02db1a84f16d8c8d673b6ea",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🛑 Exit an app in Go",
    "url": "https://gosamples.dev/exit/",
    "resume": "\u003cp\u003eTo exit an application in Go, use the \u003ca href=\"https://pkg.go.dev/os#Exit\" target=\"_blank\"\u003e\u003ccode\u003eos.Exit()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/os\" target=\"_blank\"\u003e\u003ccode\u003eos\u003c/code\u003e\u003c/a\u003e package. It causes the program to terminate immediately. The function takes a status code as an argument where the code zero indicates success and the non-zero an error.\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/os#Exit\" target=\"_blank\"\u003e\u003ccode\u003efunc Exit(code int)\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/os#Exit\" target=\"_blank\"\u003e\u003ccode\u003eos.Exit()\u003c/code\u003e\u003c/a\u003e function terminates an app immediately, which means that if there are any deferred functions, they are not run.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"status-codes\"\u003eStatus codes\u003c/h2\u003e\n\u003cp\u003eTypically, the status code \u003ccode\u003e0\u003c/code\u003e indicates an exit with no error, and \u003ccode\u003e1\u003c/code\u003e an exit with a general error. You can set the status code whatever you want, but keep in mind that some of them have special meanings, which you can check \u003ca href=\"https://tldp.org/LDP/abs/html/exitcodes.html\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"example\"\u003eExample\u003c/h2\u003e\n\u003ch3 id=\"exit-with-status-code-0\"\u003eExit with status code \u003ccode\u003e0\u003c/code\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello gosamples.dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see in the output, the app closes without any error immediately after calling the \u003ca href=\"https://pkg.go.dev/os#Exit\" target=\"_blank\"\u003e\u003ccode\u003eos.Exit()\u003c/code\u003e\u003c/a\u003e. The last line of the \u003ccode\u003emain()\u003c/code\u003e function is never executed.\u003c/p\u003e\n\u003ch3 id=\"exit-with-status-code-1\"\u003eExit with status code \u003ccode\u003e1\u003c/code\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Bye gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello gosamples.dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhen shutting down an application with a status code other than \u003ccode\u003e0\u003c/code\u003e, we see an additional message \u003ccode\u003eexit status \u0026lt;code\u0026gt;\u003c/code\u003e in the output, indicating that the application is terminated with an error.\u003c/p\u003e\n\u003ch2 id=\"when-to-use-osexit-and-when-to-use-panic\"\u003eWhen to use \u003ccode\u003eos.Exit()\u003c/code\u003e and when to use \u003ccode\u003epanic()\u003c/code\u003e?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThe \u003ca href=\"https://pkg.go.dev/os#Exit\" target=\"_blank\"\u003e\u003ccode\u003eos.Exit()\u003c/code\u003e\u003c/a\u003e function \u003cstrong\u003eterminates the program immediately\u003c/strong\u003e with no possibility of recovery and running deferred functions. The app returns an error code that other programs can read to check what happened.\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function is used to report unrecoverable errors in the program, for example, run-time errors such as indexing a slice out of bounds. It \u003cstrong\u003eimmediately stops the execution of the current function\u003c/strong\u003e and starts to unwind the goroutine stack, running any deferred functions along the way. If that unwinding reaches the top of the goroutine\u0026rsquo;s stack, the program dies.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTypically, when your application reaches an unrecoverable state and cannot continue due to a specific error, you should use the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e function. With the \u003ca href=\"https://pkg.go.dev/builtin#panic\" target=\"_blank\"\u003e\u003ccode\u003epanic()\u003c/code\u003e\u003c/a\u003e, the application closes gracefully, all deferred functions are executed, and the application prints an accurate error message to the output. The \u003ca href=\"https://pkg.go.dev/os#Exit\" target=\"_blank\"\u003e\u003ccode\u003eos.Exit()\u003c/code\u003e\u003c/a\u003e function, which closes the application immediately, can be used when you need from your application an error code that can be read by other scripts. It can also be used when your application has already done everything it should have done, and now it just needs to exit, such as after writing the results to the standard output or when the user runs a command to close the application.\u003c/p\u003e",
    "date": "2022-08-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3f46c80a9a531ce0990991211ca1eb65",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Using Github Issues to Hack Together A Feedback System",
    "url": "https://blog.boot.dev/misc/github-issues-for-customers/",
    "resume": "Boot.dev has been my side-project for the last couple of years now. Being a learning path for backend developers focused on quality over quantity, I knew early on that it needed to have a really tight feedback loop from students.",
    "date": "2022-07-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "11ff2e11ae6cf983d2e7891c2186c963",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "What's new in Go 1.19",
    "url": "https://changelog.com/gotime/240",
    "resume": "Go 1.18 was a major release where we saw the introduction of generics into the language as well as other notables such as fuzzing and workspaces. With Go 1.19 slated to come out next month, one has to wonder what’s next. Are we in store to be blown away by new and major features like we saw in 1.18? Not exactly but there are still lots of improvements to be on the lookout for. Joining Mat \u0026 Johnny to touch on some of the most interesting ones is Carl Johnson, himself a contributor to the 1.19 release.",
    "date": "2022-07-28T18:35:38Z",
    "vote": 0
  },
  {
    "id": "f735443a70806eaf16dcaf6433ef6856",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "💻 How to check your Go version",
    "url": "https://gosamples.dev/check-go-version/",
    "resume": "\u003cul\u003e\n\u003cli\u003eTo check the version of Go installed on your system, run \u003ccode\u003ego version\u003c/code\u003e in your terminal/shell/command line.\u003c/li\u003e\n\u003cli\u003eTo find out what version of Go a binary was built with, use \u003ccode\u003ego version \u0026quot;app-name\u0026quot;\u003c/code\u003e where \u003ccode\u003e\u0026quot;app-name\u0026quot;\u003c/code\u003e is the name of your built application.\u003c/li\u003e\n\u003cli\u003eTo figure out at runtime what version of Go an app was built with, use the \u003ca href=\"https://pkg.go.dev/runtime#Version\" target=\"_blank\"\u003e\u003ccode\u003eruntime.Version()\u003c/code\u003e\u003c/a\u003e function.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"check-the-go-version-installed-on-your-system\"\u003eCheck the Go version installed on your system\u003c/h2\u003e\n\u003cp\u003eTo find out what version of Go is installed on your system, open your terminal/command line/shell, and run the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003eversion\u003c/code\u003e is a command of the \u003ccode\u003ego\u003c/code\u003e tool which prints out version information for Go executables. If no additional arguments are given, it prints out the Go version installed on your computer.\u003c/p\u003e\n\u003cp\u003eExample of the \u003ccode\u003ego version\u003c/code\u003e output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego version go1.18.4 darwin/amd64\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you want to learn more about the \u003ccode\u003ego version\u003c/code\u003e, check the documentation using the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego \u003cspan class=\"nb\"\u003ehelp\u003c/span\u003e version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"check-what-version-of-go-a-binary-was-built-with\"\u003eCheck what version of Go a binary was built with\u003c/h2\u003e\n\u003cp\u003eTo find out what version of Go a given application was built with, just use the \u003ccode\u003ego version\u003c/code\u003e command, passing the path to the binary as an argument:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego version \u0026lt;path/to/the/binary\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"example\"\u003eExample\u003c/h3\u003e\n\u003cp\u003eCreate a simple app, for example the \u003ca href=\"https://gosamples.dev/hello-world\"\u003e\u0026ldquo;Hello World\u0026rdquo; application\u003c/a\u003e, and save it as a \u003ccode\u003emain.go\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen build the application using the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego build -o hello-world\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow you can check what version of Go the \u003ccode\u003ehello-world\u003c/code\u003e app was built with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego version hello-world\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the output, you should see the application name and version:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehello-world: go1.18.4\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"check-at-runtime-what-version-of-go-the-app-was-built-with\"\u003eCheck at runtime what version of Go the app was built with\u003c/h2\u003e\n\u003cp\u003eIf you want to check directly in the application what version of Go it was built with, you can use the \u003ca href=\"https://pkg.go.dev/runtime#Version\" target=\"_blank\"\u003e\u003ccode\u003eruntime.Version()\u003c/code\u003e\u003c/a\u003e function. It returns the Go version information, the same as when using the \u003ccode\u003ego version \u0026lt;path/to/the/binary\u0026gt;\u003c/code\u003e command.\u003c/p\u003e\n\u003ch3 id=\"example-1\"\u003eExample\u003c/h3\u003e\n\u003cp\u003eCreate a new app that prints Go version information and save it as a \u003ccode\u003emain.go\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;runtime\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;The application was built with the Go version: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eruntime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBuild the application using the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego build -o hello-world-with-version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRun the application:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./hello-world-with-version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the output, you should see the Go version string:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eThe application was built with the Go version: go1.18.4\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"current-go-golang-version\"\u003eCurrent Go (Golang) version\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThe current major Go version is \u003cstrong\u003ego1.20\u003c/strong\u003e (released on February 1, 2022). Read the \u003ca href=\"https://go.dev/doc/go1.20\" target=\"_blank\"\u003eGo 1.20 Release Notes\u003c/a\u003e for more information.\u003c/li\u003e\n\u003cli\u003eThe latest minor Go version is \u003cstrong\u003ego1.20.2\u003c/strong\u003e (released on March 7, 2023). Read the \u003ca href=\"https://go.dev/doc/devel/release#go1.20.2\" target=\"_blank\"\u003eRelease History\u003c/a\u003e for more information about \u003cstrong\u003eGo 1.20.2\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"how-to-upgrade-to-a-newer-version-of-go\"\u003eHow to upgrade to a newer version of Go?\u003c/h2\u003e\n\u003cp\u003eTo update your Go version, go to the official \u003ca href=\"https://go.dev/doc/install\" target=\"_blank\"\u003eDownload and install\u003c/a\u003e website. There you will find up-to-date information on how to update an existing version of Go on Linux, macOS, and Windows.\u003c/p\u003e\n\u003ch2 id=\"go-golang-version-history\"\u003eGo (Golang) version history\u003c/h2\u003e\n\u003cp\u003eMajor Go releases are labeled as, for example, \u003ccode\u003e1.16\u003c/code\u003e, \u003ccode\u003e1.17\u003c/code\u003e, \u003ccode\u003e1.18\u003c/code\u003e (in the list below, they are written in a larger font). In addition, there are support releases introducing minor fixes labeled as, for example, \u003ccode\u003e1.17.1\u003c/code\u003e, \u003ccode\u003e1.17.2\u003c/code\u003e, and so on. If you want to learn more about the release policy of Go, read the \u003ca href=\"https://go.dev/doc/devel/release#policy\" target=\"_blank\"\u003eofficial documentation\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://opensource.googleblog.com/2009/11/hey-ho-lets-go.html\" target=\"_blank\"\u003eGo was first publicly announced\u003c/a\u003e on November 10, 2009.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://gosamples.dev/check-go-version/#go1\"\u003eThe first major version of Go\u003c/a\u003e - \u003ccode\u003ego1\u003c/code\u003e was released on March 28, 2012.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.20.2\" target=\"_blank\"\u003ego1.20.2\u003c/a\u003e - released on March 7, 2023\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.20.1\" target=\"_blank\"\u003ego1.20.1\u003c/a\u003e - released on February 14, 2023\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.20\" class=\"title__link\" target=\"_blank\"\u003ego1.20\u003c/a\u003e\u003c/strong\u003e - released on February 1, 2023\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.19.7\" target=\"_blank\"\u003ego1.19.7\u003c/a\u003e - released on March 7, 2023\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.19.6\" target=\"_blank\"\u003ego1.19.6\u003c/a\u003e - released on February 14, 2023\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.19.5\" target=\"_blank\"\u003ego1.19.5\u003c/a\u003e - released on January 10, 2023\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.19.4\" target=\"_blank\"\u003ego1.19.4\u003c/a\u003e - released on December 6, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.19.3\" target=\"_blank\"\u003ego1.19.3\u003c/a\u003e - released on November 1, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.19.2\" target=\"_blank\"\u003ego1.19.2\u003c/a\u003e - released on October 4, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.19.1\" target=\"_blank\"\u003ego1.19.1\u003c/a\u003e - released on September 6, 2022\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.19\" class=\"title__link\" target=\"_blank\"\u003ego1.19\u003c/a\u003e\u003c/strong\u003e - released on August 2, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.10\" target=\"_blank\"\u003ego1.18.10\u003c/a\u003e - released on January 10, 2023\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.9\" target=\"_blank\"\u003ego1.18.9\u003c/a\u003e - released on December 6, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.8\" target=\"_blank\"\u003ego1.18.8\u003c/a\u003e - released on November 1, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.7\" target=\"_blank\"\u003ego1.18.7\u003c/a\u003e - released on October 4, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.6\" target=\"_blank\"\u003ego1.18.6\u003c/a\u003e - released on September 6, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.5\" target=\"_blank\"\u003ego1.18.5\u003c/a\u003e - released on August 1, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.4\" target=\"_blank\"\u003ego1.18.4\u003c/a\u003e - released on July 12, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.3\" target=\"_blank\"\u003ego1.18.3\u003c/a\u003e - released on June 1, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.2\" target=\"_blank\"\u003ego1.18.2\u003c/a\u003e - released on May 10, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.18.1\" target=\"_blank\"\u003ego1.18.1\u003c/a\u003e - released on April 12, 2022\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.18\" class=\"title__link\" target=\"_blank\"\u003ego1.18\u003c/a\u003e\u003c/strong\u003e - released on March 15, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.13\" target=\"_blank\"\u003ego1.17.13\u003c/a\u003e - released on August 1, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.12\" target=\"_blank\"\u003ego1.17.12\u003c/a\u003e - released on July 12, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.11\" target=\"_blank\"\u003ego1.17.11\u003c/a\u003e - released on June 1, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.10\" target=\"_blank\"\u003ego1.17.10\u003c/a\u003e - released on May 10, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.9\" target=\"_blank\"\u003ego1.17.9\u003c/a\u003e - released on April 12, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.8\" target=\"_blank\"\u003ego1.17.8\u003c/a\u003e - released on March 3, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.7\" target=\"_blank\"\u003ego1.17.7\u003c/a\u003e - released on February 10, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.6\" target=\"_blank\"\u003ego1.17.6\u003c/a\u003e - released on January 6, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.5\" target=\"_blank\"\u003ego1.17.5\u003c/a\u003e - released on December 9, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.4\" target=\"_blank\"\u003ego1.17.4\u003c/a\u003e - released on December 2, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.3\" target=\"_blank\"\u003ego1.17.3\u003c/a\u003e - released on November 4, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.2\" target=\"_blank\"\u003ego1.17.2\u003c/a\u003e - released on October 7, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.17.1\" target=\"_blank\"\u003ego1.17.1\u003c/a\u003e - released on September 9, 2021\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.17\" class=\"title__link\" target=\"_blank\"\u003ego1.17\u003c/a\u003e\u003c/strong\u003e - released on August 16, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.15\" target=\"_blank\"\u003ego1.16.15\u003c/a\u003e - released on March 3, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.14\" target=\"_blank\"\u003ego1.16.14\u003c/a\u003e - released on February 10, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.13\" target=\"_blank\"\u003ego1.16.13\u003c/a\u003e - released on January 6, 2022\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.12\" target=\"_blank\"\u003ego1.16.12\u003c/a\u003e - released on December 9, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.11\" target=\"_blank\"\u003ego1.16.11\u003c/a\u003e - released on December 2, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.10\" target=\"_blank\"\u003ego1.16.10\u003c/a\u003e - released on November 4, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.9\" target=\"_blank\"\u003ego1.16.9\u003c/a\u003e - released on October 7, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.8\" target=\"_blank\"\u003ego1.16.8\u003c/a\u003e - released on September 9, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.7\" target=\"_blank\"\u003ego1.16.7\u003c/a\u003e - released on August 5, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.6\" target=\"_blank\"\u003ego1.16.6\u003c/a\u003e - released on July 12, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.5\" target=\"_blank\"\u003ego1.16.5\u003c/a\u003e - released on June 3, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.4\" target=\"_blank\"\u003ego1.16.4\u003c/a\u003e - released on May 6, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.3\" target=\"_blank\"\u003ego1.16.3\u003c/a\u003e - released on April 1, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.2\" target=\"_blank\"\u003ego1.16.2\u003c/a\u003e - released on March 11, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.16.1\" target=\"_blank\"\u003ego1.16.1\u003c/a\u003e - released on March 10, 2021\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.16\" class=\"title__link\" target=\"_blank\"\u003ego1.16\u003c/a\u003e\u003c/strong\u003e - released on February 16, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.15\" target=\"_blank\"\u003ego1.15.15\u003c/a\u003e - released on August 5, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.14\" target=\"_blank\"\u003ego1.15.14\u003c/a\u003e - released on July 12, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.13\" target=\"_blank\"\u003ego1.15.13\u003c/a\u003e - released on June 3, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.12\" target=\"_blank\"\u003ego1.15.12\u003c/a\u003e - released on May 6, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.11\" target=\"_blank\"\u003ego1.15.11\u003c/a\u003e - released on April 1, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.10\" target=\"_blank\"\u003ego1.15.10\u003c/a\u003e - released on March 11, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.9\" target=\"_blank\"\u003ego1.15.9\u003c/a\u003e - released on March 10, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.8\" target=\"_blank\"\u003ego1.15.8\u003c/a\u003e - released on February 4, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.7\" target=\"_blank\"\u003ego1.15.7\u003c/a\u003e - released on January 19, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.6\" target=\"_blank\"\u003ego1.15.6\u003c/a\u003e - released on December 3, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.5\" target=\"_blank\"\u003ego1.15.5\u003c/a\u003e - released on November 12, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.4\" target=\"_blank\"\u003ego1.15.4\u003c/a\u003e - released on November 5, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.3\" target=\"_blank\"\u003ego1.15.3\u003c/a\u003e - released on October 14, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.2\" target=\"_blank\"\u003ego1.15.2\u003c/a\u003e - released on September 9, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.15.1\" target=\"_blank\"\u003ego1.15.1\u003c/a\u003e - released on September 1, 2020\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.15\" class=\"title__link\" target=\"_blank\"\u003ego1.15\u003c/a\u003e\u003c/strong\u003e - released on August 11, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.15\" target=\"_blank\"\u003ego1.14.15\u003c/a\u003e - released on February 4, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.14\" target=\"_blank\"\u003ego1.14.14\u003c/a\u003e - released on January 19, 2021\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.13\" target=\"_blank\"\u003ego1.14.13\u003c/a\u003e - released on December 3, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.12\" target=\"_blank\"\u003ego1.14.12\u003c/a\u003e - released on November 12, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.11\" target=\"_blank\"\u003ego1.14.11\u003c/a\u003e - released on November 5, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.10\" target=\"_blank\"\u003ego1.14.10\u003c/a\u003e - released on October 14, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.9\" target=\"_blank\"\u003ego1.14.9\u003c/a\u003e - released on September 9, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.8\" target=\"_blank\"\u003ego1.14.8\u003c/a\u003e - released on September 1, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.7\" target=\"_blank\"\u003ego1.14.7\u003c/a\u003e - released on August 6, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.6\" target=\"_blank\"\u003ego1.14.6\u003c/a\u003e - released on July 16, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.5\" target=\"_blank\"\u003ego1.14.5\u003c/a\u003e - released on July 14, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.4\" target=\"_blank\"\u003ego1.14.4\u003c/a\u003e - released on June 1, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.3\" target=\"_blank\"\u003ego1.14.3\u003c/a\u003e - released on May 14, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.2\" target=\"_blank\"\u003ego1.14.2\u003c/a\u003e - released on April 8, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.14.1\" target=\"_blank\"\u003ego1.14.1\u003c/a\u003e - released on March 19, 2020\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.14\" class=\"title__link\" target=\"_blank\"\u003ego1.14\u003c/a\u003e\u003c/strong\u003e - released on February 25, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.15\" target=\"_blank\"\u003ego1.13.15\u003c/a\u003e - released on August 6, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.14\" target=\"_blank\"\u003ego1.13.14\u003c/a\u003e - released on July 16, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.13\" target=\"_blank\"\u003ego1.13.13\u003c/a\u003e - released on July 14, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.12\" target=\"_blank\"\u003ego1.13.12\u003c/a\u003e - released on June 1, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.11\" target=\"_blank\"\u003ego1.13.11\u003c/a\u003e - released on May 14, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.10\" target=\"_blank\"\u003ego1.13.10\u003c/a\u003e - released on April 8, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.9\" target=\"_blank\"\u003ego1.13.9\u003c/a\u003e - released on March 19, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.8\" target=\"_blank\"\u003ego1.13.8\u003c/a\u003e - released on February 12, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.7\" target=\"_blank\"\u003ego1.13.7\u003c/a\u003e - released on January 28, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.6\" target=\"_blank\"\u003ego1.13.6\u003c/a\u003e - released on January 9, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.5\" target=\"_blank\"\u003ego1.13.5\u003c/a\u003e - released on December 4, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.4\" target=\"_blank\"\u003ego1.13.4\u003c/a\u003e - released on October 31, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.3\" target=\"_blank\"\u003ego1.13.3\u003c/a\u003e - released on October 17, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.2\" target=\"_blank\"\u003ego1.13.2\u003c/a\u003e - released on October 17, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.13.1\" target=\"_blank\"\u003ego1.13.1\u003c/a\u003e - released on September 25, 2019\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.13\" class=\"title__link\" target=\"_blank\"\u003ego1.13\u003c/a\u003e\u003c/strong\u003e - released on September 3, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.17\" target=\"_blank\"\u003ego1.12.17\u003c/a\u003e - released on February 12, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.16\" target=\"_blank\"\u003ego1.12.16\u003c/a\u003e - released on January 28, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.15\" target=\"_blank\"\u003ego1.12.15\u003c/a\u003e - released on January 9, 2020\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.14\" target=\"_blank\"\u003ego1.12.14\u003c/a\u003e - released on December 4, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.13\" target=\"_blank\"\u003ego1.12.13\u003c/a\u003e - released on October 31, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.12\" target=\"_blank\"\u003ego1.12.12\u003c/a\u003e - released on October 17, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.11\" target=\"_blank\"\u003ego1.12.11\u003c/a\u003e - released on October 17, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.10\" target=\"_blank\"\u003ego1.12.10\u003c/a\u003e - released on September 25, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.9\" target=\"_blank\"\u003ego1.12.9\u003c/a\u003e - released on August 15, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.8\" target=\"_blank\"\u003ego1.12.8\u003c/a\u003e - released on August 13, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.7\" target=\"_blank\"\u003ego1.12.7\u003c/a\u003e - released on July 8, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.6\" target=\"_blank\"\u003ego1.12.6\u003c/a\u003e - released on June 11, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.5\" target=\"_blank\"\u003ego1.12.5\u003c/a\u003e - released on May 6, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.4\" target=\"_blank\"\u003ego1.12.4\u003c/a\u003e - released on April 11, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.3\" target=\"_blank\"\u003ego1.12.3\u003c/a\u003e - released on April 8, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.2\" target=\"_blank\"\u003ego1.12.2\u003c/a\u003e - released on April 5, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.12.1\" target=\"_blank\"\u003ego1.12.1\u003c/a\u003e - released on March 14, 2019\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.12\" class=\"title__link\" target=\"_blank\"\u003ego1.12\u003c/a\u003e\u003c/strong\u003e - released on February 25, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.13\" target=\"_blank\"\u003ego1.11.13\u003c/a\u003e - released on August 13, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.12\" target=\"_blank\"\u003ego1.11.12\u003c/a\u003e - released on July 8, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.11\" target=\"_blank\"\u003ego1.11.11\u003c/a\u003e - released on June 11, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.10\" target=\"_blank\"\u003ego1.11.10\u003c/a\u003e - released on May 6, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.9\" target=\"_blank\"\u003ego1.11.9\u003c/a\u003e - released on April 11, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.8\" target=\"_blank\"\u003ego1.11.8\u003c/a\u003e - released on April 8, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.7\" target=\"_blank\"\u003ego1.11.7\u003c/a\u003e - released on April 5, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.6\" target=\"_blank\"\u003ego1.11.6\u003c/a\u003e - released on March 14, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.5\" target=\"_blank\"\u003ego1.11.5\u003c/a\u003e - released on January 23, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.4\" target=\"_blank\"\u003ego1.11.4\u003c/a\u003e - released on December 14, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.3\" target=\"_blank\"\u003ego1.11.3\u003c/a\u003e - released on December 12, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.2\" target=\"_blank\"\u003ego1.11.2\u003c/a\u003e - released on November 2, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.11.1\" target=\"_blank\"\u003ego1.11.1\u003c/a\u003e - released on October 1, 2018\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.11\" class=\"title__link\" target=\"_blank\"\u003ego1.11\u003c/a\u003e\u003c/strong\u003e - released on August 24, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.8\" target=\"_blank\"\u003ego1.10.8\u003c/a\u003e - released on January 23, 2019\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.7\" target=\"_blank\"\u003ego1.10.7\u003c/a\u003e - released on December 14, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.6\" target=\"_blank\"\u003ego1.10.6\u003c/a\u003e - released on December 12, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.5\" target=\"_blank\"\u003ego1.10.5\u003c/a\u003e - released on November 2, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.4\" target=\"_blank\"\u003ego1.10.4\u003c/a\u003e - released on August 24, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.3\" target=\"_blank\"\u003ego1.10.3\u003c/a\u003e - released on June 5, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.2\" target=\"_blank\"\u003ego1.10.2\u003c/a\u003e - released on May 1, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.10.1\" target=\"_blank\"\u003ego1.10.1\u003c/a\u003e - released on March 28, 2018\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.10\" class=\"title__link\" target=\"_blank\"\u003ego1.10\u003c/a\u003e\u003c/strong\u003e - released on February 16, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.9.7\" target=\"_blank\"\u003ego1.9.7\u003c/a\u003e - released on June 5, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.9.6\" target=\"_blank\"\u003ego1.9.6\u003c/a\u003e - released on May 1, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.9.5\" target=\"_blank\"\u003ego1.9.5\u003c/a\u003e - released on March 28, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.9.4\" target=\"_blank\"\u003ego1.9.4\u003c/a\u003e - released on February 7, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.9.3\" target=\"_blank\"\u003ego1.9.3\u003c/a\u003e - released on January 22, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.9.2\" target=\"_blank\"\u003ego1.9.2\u003c/a\u003e - released on October 25, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.9.1\" target=\"_blank\"\u003ego1.9.1\u003c/a\u003e - released on October 4, 2017\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.9\" class=\"title__link\" target=\"_blank\"\u003ego1.9\u003c/a\u003e\u003c/strong\u003e - released on August 24, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.8.7\" target=\"_blank\"\u003ego1.8.7\u003c/a\u003e - released on February 7, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.8.6\" target=\"_blank\"\u003ego1.8.6\u003c/a\u003e - released on January 22, 2018\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.8.5\" target=\"_blank\"\u003ego1.8.5\u003c/a\u003e - released on October 25, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.8.4\" target=\"_blank\"\u003ego1.8.4\u003c/a\u003e - released on October 4, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.8.3\" target=\"_blank\"\u003ego1.8.3\u003c/a\u003e - released on May 24, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.8.2\" target=\"_blank\"\u003ego1.8.2\u003c/a\u003e - released on May 23, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.8.1\" target=\"_blank\"\u003ego1.8.1\u003c/a\u003e - released on April 7, 2017\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.8\" class=\"title__link\" target=\"_blank\"\u003ego1.8\u003c/a\u003e\u003c/strong\u003e - released on February 16, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.7.6\" target=\"_blank\"\u003ego1.7.6\u003c/a\u003e - released on May 23, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.7.5\" target=\"_blank\"\u003ego1.7.5\u003c/a\u003e - released on January 26, 2017\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.7.4\" target=\"_blank\"\u003ego1.7.4\u003c/a\u003e - released on December 1, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.7.3\" target=\"_blank\"\u003ego1.7.3\u003c/a\u003e - released on October 19, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.7.2\" target=\"_blank\"\u003ego1.7.2\u003c/a\u003e - not fully released\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.7.1\" target=\"_blank\"\u003ego1.7.1\u003c/a\u003e - released on September 7, 2016\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.7\" class=\"title__link\" target=\"_blank\"\u003ego1.7\u003c/a\u003e\u003c/strong\u003e - released on August 15, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.6.4\" target=\"_blank\"\u003ego1.6.4\u003c/a\u003e - released on December 1, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.6.3\" target=\"_blank\"\u003ego1.6.3\u003c/a\u003e - released on July 17, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.6.2\" target=\"_blank\"\u003ego1.6.2\u003c/a\u003e - released on April 20, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.6.1\" target=\"_blank\"\u003ego1.6.1\u003c/a\u003e - released on April 12, 2016\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.6\" class=\"title__link\" target=\"_blank\"\u003ego1.6\u003c/a\u003e\u003c/strong\u003e - released on February 17, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.5.4\" target=\"_blank\"\u003ego1.5.4\u003c/a\u003e - released on April 12, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.5.3\" target=\"_blank\"\u003ego1.5.3\u003c/a\u003e - released on January 13, 2016\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.5.2\" target=\"_blank\"\u003ego1.5.2\u003c/a\u003e - released on December 2, 2015\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.5.1\" target=\"_blank\"\u003ego1.5.1\u003c/a\u003e - released on September 8, 2015\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.5\" class=\"title__link\" target=\"_blank\"\u003ego1.5\u003c/a\u003e\u003c/strong\u003e - released on August 19, 2015\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.4.3\" target=\"_blank\"\u003ego1.4.3\u003c/a\u003e - released on September 22, 2015\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.4.2\" target=\"_blank\"\u003ego1.4.2\u003c/a\u003e - released on February 17, 2015\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.4.1\" target=\"_blank\"\u003ego1.4.1\u003c/a\u003e - released on January 15, 2015\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.4\" class=\"title__link\" target=\"_blank\"\u003ego1.4\u003c/a\u003e\u003c/strong\u003e - released on December 10, 2014\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.3.3\" target=\"_blank\"\u003ego1.3.3\u003c/a\u003e - released on September 30, 2014\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.3.2\" target=\"_blank\"\u003ego1.3.2\u003c/a\u003e - released on September 25, 2014\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.3.1\" target=\"_blank\"\u003ego1.3.1\u003c/a\u003e - released on August 13, 2014\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.3\" class=\"title__link\" target=\"_blank\"\u003ego1.3\u003c/a\u003e\u003c/strong\u003e - released on June 18, 2014\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.2.2\" target=\"_blank\"\u003ego1.2.2\u003c/a\u003e - released on May 5, 2014\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.2.1\" target=\"_blank\"\u003ego1.2.1\u003c/a\u003e - released on March 2, 2014\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.2\" class=\"title__link\" target=\"_blank\"\u003ego1.2\u003c/a\u003e\u003c/strong\u003e - released on December 1, 2013\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.1.2\" target=\"_blank\"\u003ego1.1.2\u003c/a\u003e - released on August 13, 2013\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.1.1\" target=\"_blank\"\u003ego1.1.1\u003c/a\u003e - released on June 13, 2013\u003c/li\u003e\n\u003cli\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1.1\" class=\"title__link\" target=\"_blank\"\u003ego1.1\u003c/a\u003e\u003c/strong\u003e - released on May 13, 2013\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.0.3\" target=\"_blank\"\u003ego1.0.3\u003c/a\u003e - released on September 21, 2012\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.0.2\" target=\"_blank\"\u003ego1.0.2\u003c/a\u003e - released on June 13, 2012\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/release#go1.0.1\" target=\"_blank\"\u003ego1.0.1\u003c/a\u003e - released on April 25, 2012\u003c/li\u003e\n\u003cli id=\"go1\"\u003e\u003cstrong class=\"go-major-version\"\u003e\u003ca href=\"https://go.dev/doc/go1\" class=\"title__link\" target=\"_blank\"\u003ego1\u003c/a\u003e\u003c/strong\u003e - released on March 28, 2012\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/doc/devel/pre_go1\" target=\"_blank\"\u003ePre-Go 1 Releases\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://opensource.googleblog.com/2009/11/hey-ho-lets-go.html\" target=\"_blank\"\u003eGo was publicly announed on November 10, 2009\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
    "date": "2022-07-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0e227f02f78343649e0e05d00e946089",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Is Computer Science Really that Hard?",
    "url": "https://blog.boot.dev/computer-science/is-computer-science-hard/",
    "resume": "I spent a lot of time scouring google with queries like \u0026ldquo;is computer science hard reddit\u0026rdquo; back when I was deciding whether I should go ahead and get a computer science degree.",
    "date": "2022-07-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bc88551384a8f41dea99179c0c197055",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "A Complete Learning Path for Backend Development [2023 Updated]",
    "url": "https://blog.boot.dev/backend/become-backend-developer/",
    "resume": "So you\u0026rsquo;ve decided that backend development is the career for you - congratulations! Many self-taught coders have a hard time deciding between all the various options, but it\u0026rsquo;s so much easier to learn effectively if you have a clear goal, like backend work, in mind.",
    "date": "2022-07-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6344adf40676ca9ec864f900af02e407",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go for beginners ♻️",
    "url": "https://changelog.com/gotime/239",
    "resume": "How do beginners learn Go? This episode is meant to engage both non-Go users that listen to sister podcasts here on Changelog, or any Go-curious programmers out there, as well as encourage those that have started to learn Go and want to level up beyond the basics. On this episode we’re aiming to answer questions about how to learn Go, identify resources that are available, and where you can go to continue your learning journey.",
    "date": "2022-07-21T14:00:00Z",
    "vote": 0
  },
  {
    "id": "0c1589ad639d3ce0a468a202a96736bd",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔁 Repeat a string in Go",
    "url": "https://gosamples.dev/repeat-string/",
    "resume": "\u003cp\u003eTo repeat a given string in Go, you can use the \u003ca href=\"https://pkg.go.dev/strings#Repeat\" target=\"_blank\"\u003e\u003ccode\u003estrings.Repeat()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/strings\" target=\"_blank\"\u003e\u003ccode\u003estrings\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#Repeat\" target=\"_blank\"\u003e\u003ccode\u003efunc Repeat(s string, count int) string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp\u003eIt takes a string and the number of times it should be repeated as arguments and returns the multiplied string as output. The function panics if \u003ccode\u003ecount\u003c/code\u003e is negative or if \u003ccode\u003elen(s) * count\u003c/code\u003e overflows.\u003c/p\u003e\n\u003cp\u003eLook at the following example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;unicode/utf8\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;gosamples.dev \u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erepeated\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elineSeparator\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eutf8\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRuneCountInString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erepeated\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erepeated\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elineSeparator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples.dev gosamples.dev gosamples.dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e------------------------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn line \u003ccode\u003e11\u003c/code\u003e, we create a new multiplied string which is the string \u003ccode\u003e\u0026quot;gosamples.dev \u0026quot;\u003c/code\u003e repeated three times. Then, in line \u003ccode\u003e12\u003c/code\u003e, we want to make a line separator consisting of a repeated \u003ccode\u003e-\u003c/code\u003e character. Its length should be equal to the number of characters of the previous string.\u003c/p\u003e\n\u003cp\u003eNote that we use the \u003ca href=\"https://pkg.go.dev/unicode/utf8#RuneCountInString\" target=\"_blank\"\u003e\u003ccode\u003eutf8.RuneCountInString()\u003c/code\u003e\u003c/a\u003e function to count the number of characters instead of \u003ca href=\"https://pkg.go.dev/builtin#len\" target=\"_blank\"\u003e\u003ccode\u003elen()\u003c/code\u003e\u003c/a\u003e. The former counts the runes (Unicode code points) in the string, while the latter counts the number of bytes. When counting characters in a string \u003ccode\u003e\u0026quot;gosamples.dev gosamples.dev gosamples.dev \u0026quot;\u003c/code\u003e, both functions will return the same number; however it is good to make a habit of using \u003ca href=\"https://pkg.go.dev/unicode/utf8#RuneCountInString\" target=\"_blank\"\u003e\u003ccode\u003eutf8.RuneCountInString()\u003c/code\u003e\u003c/a\u003e when you want to count the number of characters. It will prevent incorrect results when you change the input string:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;€€€\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eutf8\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRuneCountInString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e9\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eThe € (euro) symbol is a three-byte character, encoded in \u003ca href=\"https://en.wikipedia.org/wiki/UTF-8\" target=\"_blank\"\u003eUTF-8\u003c/a\u003e with bytes 0xE2, 0x82, 0xAC.\u003c/p\u003e\n\u003c/blockquote\u003e",
    "date": "2022-07-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ab9ee1afb80495263ceb67f762a8b482",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "6 Pros and Cons of Online Coding Bootcamps",
    "url": "https://blog.boot.dev/jobs/pros-and-cons-of-online-coding-bootcamp/",
    "resume": "If you want to learn to code, there are many strategies to get your coding skills from non-existent to employable.",
    "date": "2022-07-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2b3f33156edc87e611854784f6ca92a1",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⌚ Unix time in Go [cheatsheet]",
    "url": "https://gosamples.dev/unix-time/",
    "resume": "\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/time\" target=\"_blank\"\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/a\u003e package in Go contains convenient functions for operating on \u003ca href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\"\u003e\u003cstrong\u003eUnix time\u003c/strong\u003e\u003c/a\u003e (also known as \u003cstrong\u003eEpoch time\u003c/strong\u003e, \u003cstrong\u003ePosix time\u003c/strong\u003e, \u003cstrong\u003eseconds since the Epoch\u003c/strong\u003e, or \u003cstrong\u003eUNIX Epoch time\u003c/strong\u003e). Using them, you can easily get the current Unix timestamp, convert a \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e struct to Unix time, and vice versa - Unix timestamp to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e. Check out this cheatsheet to learn how to do it and come back to it whenever you forget 😉\u003c/p\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__3\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch2 id=\"convert-datetime-to-unix-epoch-time\"\u003eConvert date/time to Unix epoch time\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e struct contains \u003ca href=\"https://pkg.go.dev/time#Time.Unix\" target=\"_blank\"\u003e\u003ccode\u003eUnix()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/time#Time.UnixMilli\" target=\"_blank\"\u003e\u003ccode\u003eUnixMilli()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/time#Time.UnixMicro\" target=\"_blank\"\u003e\u003ccode\u003eUnixMicro()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/time#Time.UnixNano\" target=\"_blank\"\u003e\u003ccode\u003eUnixNano()\u003c/code\u003e\u003c/a\u003e methods for converting a time object to a Unix timestamp of type \u003ccode\u003eint64\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003edate\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2022\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnix\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixMilli\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixMicro\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixNano\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1654041600\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1654041600000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1654041600000000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1654041600000000000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch2 id=\"get-current-unix-timestamp\"\u003eGet current Unix timestamp\u003c/h2\u003e\n\u003cp\u003eTo get the current Unix timestamp in Go, you just need to get the current time of type \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e using the \u003ca href=\"https://pkg.go.dev/time#Now\" target=\"_blank\"\u003e\u003ccode\u003etime.Now()\u003c/code\u003e\u003c/a\u003e function and convert it to Unix timestamp using \u003ca href=\"https://pkg.go.dev/time#Time.Unix\" target=\"_blank\"\u003e\u003ccode\u003eUnix()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/time#Time.UnixMilli\" target=\"_blank\"\u003e\u003ccode\u003eUnixMilli()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/time#Time.UnixMicro\" target=\"_blank\"\u003e\u003ccode\u003eUnixMicro()\u003c/code\u003e\u003c/a\u003e, or \u003ca href=\"https://pkg.go.dev/time#Time.UnixNano\" target=\"_blank\"\u003e\u003ccode\u003eUnixNano()\u003c/code\u003e\u003c/a\u003e method.\u003c/p\u003e\n\u003ch4 id=\"get-current-unixepoch-time-in-seconds\"\u003eGet current Unix/Epoch time in seconds\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnix\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1657861095\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 id=\"get-current-unixepoch-time-in-milliseconds\"\u003eGet current Unix/Epoch time in milliseconds\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixMilli\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1657861095093\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 id=\"get-current-unixepoch-time-in-microseconds\"\u003eGet current Unix/Epoch time in microseconds\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixMicro\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1657861095093115\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 id=\"get-current-unixepoch-time-in-nanoseconds\"\u003eGet current Unix/Epoch time in nanoseconds\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixNano\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1657861095093117000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch2 id=\"convert-unix-timestamp-to-timetimehttpspkggodevtimetime\"\u003eConvert Unix timestamp to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/time\" target=\"_blank\"\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/a\u003e package has three functions to convert from an \u003ccode\u003eint64\u003c/code\u003e Unix timestamp to a \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e object:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/time#Unix\" target=\"_blank\"\u003e\u003ccode\u003eUnix(sec int64, nsec int64) Time\u003c/code\u003e\u003c/a\u003e to convert a seconds timestamp, a nanoseconds timestamp, or timestamp with a seconds and nanoseconds part to a \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e object.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/time#UnixMilli\" target=\"_blank\"\u003e\u003ccode\u003eUnixMilli(msec int64) Time\u003c/code\u003e\u003c/a\u003e to convert from a millisecond timestamp to a \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/time#UnixMicro\" target=\"_blank\"\u003e\u003ccode\u003eUnixMicro(usec int64) Time\u003c/code\u003e\u003c/a\u003e to convert a microsecond timestamp to a \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e struct.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"second-unix-timestamp-to-timetimehttpspkggodevtimetime\"\u003eSecond Unix timestamp to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1657861095\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022-07-15 04:58:15 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 id=\"millisecond-unix-timestamp-to-timetimehttpspkggodevtimetime\"\u003eMillisecond Unix timestamp to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1657861095093\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixMilli\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022-07-15 04:58:15.093 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 id=\"microsecond-unix-timestamp-to-timetimehttpspkggodevtimetime\"\u003eMicrosecond Unix timestamp to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1657861095093115\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixMicro\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022-07-15 04:58:15.093115 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 id=\"nanosecond-unix-timestamp-to-timetimehttpspkggodevtimetime\"\u003eNanosecond Unix timestamp to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e\u003c/h4\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1657861095093117123\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022-07-15 04:58:15.093117123 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch2 id=\"parse-unix-timestamp-from-string-to-timetimehttpspkggodevtimetime\"\u003eParse Unix timestamp from string to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eTo parse a string Unix timestamp and get a \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e object, you must first convert the timestamp from string to \u003ccode\u003eint64\u003c/code\u003e, and then convert it to \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e using the \u003ca href=\"%28https://pkg.go.dev/time#Unix%29\"\u003e\u003ccode\u003eUnix()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/time#UnixMilli\" target=\"_blank\"\u003e\u003ccode\u003eUnixMilli()\u003c/code\u003e\u003c/a\u003e, or \u003ca href=\"https://pkg.go.dev/time#UnixMicro\" target=\"_blank\"\u003e\u003ccode\u003eUnixMicro()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003etimeString\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;1657861095\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParseInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etimeString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022-07-15 04:58:15 +0000 UTC\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
    "date": "2022-07-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bef629f851478398875321b20980abba",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Might Go actually be OOP?",
    "url": "https://changelog.com/gotime/238",
    "resume": "A conversation with Ronna Steinberg, who was an OOP developer for many years, and now is a Go Google Developer Expert. Ronna has been thinking about Go and OOP for awhile, asking herself whether or not Go is an object oriented programming language. Tune in to find out her answer and hear some of the options gophers have for object oriented design.",
    "date": "2022-07-14T20:15:00Z",
    "vote": 0
  },
  {
    "id": "6cf6f37f407f21a8b61cc5bb956001c0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Do a Coding Bootcamp Part-Time",
    "url": "https://blog.boot.dev/education/part-time-coding-bootcamp/",
    "resume": "Step 1: Develop a caffeine addiction. 🔗If you want to add coding to your list of skills, either out of curiosity or to take your career in a whole new direction, you’ve probably considered a coding bootcamp.",
    "date": "2022-07-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "eeccd997c0f23facbece8fd331650fbf",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🦮 A practical introduction to PostgreSQL in Go",
    "url": "https://gosamples.dev/postgresql-intro/",
    "resume": "\u003cp\u003e\u003ca href=\"https://www.postgresql.org/\" target=\"_blank\"\u003ePostgreSQL\u003c/a\u003e, also known as Postgres, is an object-relational database system with over 30 years of history. Appreciated for its high stability, performance, and open source, it has been used as the primary database in many advanced and enterprise projects. It is perfect as a database for web, mobile, geospatial and analytical applications. Its ease of use and advanced features make it the choice of both small startups and large enterprises as a long-term relational database.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAccording to \u003ca href=\"https://stackshare.io/postgresql\" target=\"_blank\"\u003eStackShare\u003c/a\u003e many of the biggest tech companies use PostgreSQL in their stacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUber\u003c/li\u003e\n\u003cli\u003eNetflix\u003c/li\u003e\n\u003cli\u003eInstagram\u003c/li\u003e\n\u003cli\u003eSpotify\u003c/li\u003e\n\u003cli\u003eReddit\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eand many \u003ca href=\"https://stackshare.io/postgresql\" target=\"_blank\"\u003eothers\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn this tutorial, we are going to show you how to use PostgreSQL in Go. We will create a simple application that connects to the database, define a data access layer using the Repository pattern, and implement CRUD (create, read, update, delete) operations. Finally, we will show how to easily replace the database implementation by using the Repository pattern.\u003c/p\u003e\n\u003ch2 id=\"who-is-this-tutorial-for\"\u003eWho is this tutorial for?\u003c/h2\u003e\n\u003cp\u003eThis tutorial is suitable for both beginners and advanced programmers who want to learn or remember how to perform basic operations on a PostgreSQL database from within the Go language. However, it does not teach SQL and does not explain in detail how PostgreSQL works. The purpose is to connect and perform operations in a Go application.\u003c/p\u003e\n\u003cp\u003eIt is a tour on how to build a data access layer using clean code practices and what are the popular ways to connect to PostgreSQL. Since we use very simple examples in the tutorial, it is a great introduction to building something more advanced, and we encourage you to come back to it whenever you need to create a data access layer in your new project.\u003c/p\u003e\n\u003ch2 id=\"the-project-code\"\u003eThe project code\u003c/h2\u003e\n\u003cp\u003eThe full code of the project created in this tutorial is available on Github \u003ca href=\"https://github.com/gosamples-dev/samples/tree/main/postgresql-intro\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e",
    "date": "2022-07-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4e945eca7ca88806489a54f75a6cbb14",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go tooling ♻️",
    "url": "https://changelog.com/gotime/237",
    "resume": "We’re talking about the tools we use every day help us to be productive! This show will be a great introduction for those new to Go tooling, with some discussion around what we think of them after using some of them for many years.",
    "date": "2022-07-07T18:30:00Z",
    "vote": 0
  },
  {
    "id": "d5aaa296e00bd5b11958cc42478059c4",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "The Dreaded StaleElementReferenceException￼",
    "url": "https://sdet.us/the-dreaded-staleelementreferenceexception%ef%bf%bc/",
    "resume": "Nothing is worse then finishing hours of work setting up dozens of tests, getting them to work in Chromium based browsers (Chrome, Edge, etc.) and then passing the same Selenium automation to Firefox and Safari to get StaleElementReferenceExpceptions. Browsers and the DOM Browsers render HTML differently. Some, like Chrome and Edge are capable of holding [\u0026#8230;]",
    "date": "2022-06-30T23:30:28Z",
    "vote": 0
  },
  {
    "id": "ff7f8467119077749c78595e1559e04d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Thoughts on velocity",
    "url": "https://changelog.com/gotime/236",
    "resume": "A deep discussion on that tension between development speed and software quality. What is velocity? How does it differ from speed? How do we measure it? How do we optimize it?",
    "date": "2022-06-30T16:40:00Z",
    "vote": 0
  },
  {
    "id": "c61045304dd9c35d69169e7e60a4aa5c",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "How to write a fuzz test | Demo",
    "url": "https://www.youtube.com/watch?v=y8Rpb3nrJn8",
    "resume": "",
    "date": "2022-06-28T19:11:59Z",
    "vote": 0
  },
  {
    "id": "7c6cbb99a18581c1d118aea3dd53b7df",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 12 Most Engaging Resources for Learning Python",
    "url": "https://blog.boot.dev/python/best-python-resources/",
    "resume": "While it’s straightforward to get Hello World implemented in Python, learning the ins and outs of the programming language takes a lot of time and effort.",
    "date": "2022-06-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8e7501e127014f6d7559349306d4ce62",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "2053: A Go Odyssey",
    "url": "https://changelog.com/gotime/235",
    "resume": "The year is 2053. The tabs-vs-spaces wars are long over. Ron Evans is the only Go programmer still alive on Earth. All he does is maintain old Go code. It’s terrible! He must find a way to warn his fellow gophers before it’s too late. Good thing he finally got that PDQ transmission system working…",
    "date": "2022-06-23T15:45:00Z",
    "vote": 0
  },
  {
    "id": "df2adae87cf4d5c80e52f8bd04303313",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Introduction to Fuzzing",
    "url": "https://www.youtube.com/watch?v=-hc6LGA46Bg",
    "resume": "",
    "date": "2022-06-21T16:00:00Z",
    "vote": 0
  },
  {
    "id": "a4dff625ba9bf25c00415ad350dcc64e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Observability in the wild: strategies that work",
    "url": "https://changelog.com/gotime/234",
    "resume": "This week we’re featuring an episode of Grafana’s Big Tent! LEGO Group principal engineer Nayana Shetty swaps observability survival stories (to drill or not to drill?) with hosts Mat Ryer and Matt Toback. The trio also reveals new and different observability strategies that have been successful and effective in their organizations. Plus: Nayana shares how she built her successful observability career brick by brick.",
    "date": "2022-06-16T21:00:00Z",
    "vote": 0
  },
  {
    "id": "639db1a9d6cc710e5e01e9f370f48c41",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Why We Force You to Learn Multiple Programming Languages",
    "url": "https://blog.boot.dev/education/learn-multiple-programming-languages/",
    "resume": "I\u0026rsquo;ve been building Boot.dev as a side-project for the last couple of years, and have recently had many new students ask the same question:",
    "date": "2022-06-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f31a76c13f52994bdc06abc209540416",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Going through the news",
    "url": "https://changelog.com/gotime/233",
    "resume": "We’re trying something new this week: discussing the news! Natalie, Kris \u0026 Ian weigh in on GopherCon’s move to Chicago, Google DDoSing SourceHut, reflections on Go’s success, and a new/old proposal for anonymous function syntax.",
    "date": "2022-06-09T21:15:00Z",
    "vote": 0
  },
  {
    "id": "4231613c893fea763f5d9d928edf251c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 14 Best Places to Learn Python Online",
    "url": "https://blog.boot.dev/python/best-places-to-learn-python-online/",
    "resume": "I needed to discover the best places to learn Python online way back in 2018. Back then, I had an Instagram account that I was trying to grow.",
    "date": "2022-06-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e2ed81328a71fd916e3cde36a9dca6a1",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Practical Uses Of Blockchain Technology",
    "url": "https://www.ardanlabs.com/blog/2022/06/practical-uses-blockchain-technology.html",
    "resume": "Introduction A blockchain is an integrated solution of different computer science problems in the form of a single, append-only, publicly available, transparent, and cryptographically auditable database that runs in a distributed and decentralized environment.\nI’ve heard many times that blockchain is a technology looking for a problem to solve. I disagree with that assessment because the tech and computer science behind blockchain has practical uses in everyday engineering problems. One use of this technology that comes to mind is a dependency management verification system.",
    "date": "2022-06-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "872f126277b5d9a902e5835d8456d2c8",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The myth of incremental progress",
    "url": "https://changelog.com/gotime/232",
    "resume": "During a conversation in the #gotime channel of Gopher Slack, Jerod mentioned that some people paint with a blank canvas while others paint by numbers. In this 8th episode of the maintenance series, we’re talking about maintaining our knowledge. With Jerod’s analogy and a little help from a Leslie Lamport interview, our panel discusses the myth of incremental progress.",
    "date": "2022-06-02T18:20:00Z",
    "vote": 0
  },
  {
    "id": "28955856b2a8fae89e635f7e021a0edb",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Berlin's transition to Go",
    "url": "https://changelog.com/gotime/231",
    "resume": "The Berlin tech ecosystem was all about PHP/Python for a long time. In the recent years it became a tech hub and an early adopter of Go. In this conversation we’ll see how this reflects in the 10+ years old Go meetup, with the meetup organizing team.",
    "date": "2022-05-26T16:00:00Z",
    "vote": 0
  },
  {
    "id": "ea2ea6beff375cfe3a4295bb65430e48",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What Would a Recession Mean For Developers?",
    "url": "https://blog.boot.dev/news/what-would-a-recession-do-to-developers/",
    "resume": "With markets in a slump, many of us are concerned a recession could be right around the corner.",
    "date": "2022-05-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b47b7ffffa039529dff9b6391edf14a4",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🥇 How to uppercase the first letter of each word in Go",
    "url": "https://gosamples.dev/uppercase-first-letter/",
    "resume": "\u003cp\u003eIf you want to make a title from your string in Go, i.e., make the first letter of each word in the string uppercase, you need to use the \u003ca href=\"https://pkg.go.dev/golang.org/x/text/cases#Title\" target=\"_blank\"\u003e\u003ccode\u003ecases.Title()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/golang.org/x/text/cases\" target=\"_blank\"\u003e\u003ccode\u003egolang.org/x/text/cases\u003c/code\u003e\u003c/a\u003e package. The function creates a language-specific title caser that capitalizes the first letter of each word.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAlso check out how to convert an entire string to uppercase \u003ca href=\"https://gosamples.dev/string-to-uppercase\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eLook at the example below. We create a new generic title caser using \u003ccode\u003eundefined\u003c/code\u003e language \u003ccode\u003elanguage.Und\u003c/code\u003e. If you are sure that your strings are in a specific language, you can set it, for example, \u003ccode\u003elanguage.English\u003c/code\u003e, \u003ccode\u003elanguage.German\u003c/code\u003e, etc. Next, we transform the string using the created caser with the \u003ca href=\"https://pkg.go.dev/golang.org/x/text/cases#Caser.String\" target=\"_blank\"\u003e\u003ccode\u003eCaser.String()\u003c/code\u003e\u003c/a\u003e method. The result is a string where the first letter of each word is capitalized, and the remaining letters are lowercase.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/cases\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/language\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecases\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTitle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eUnd\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;goSAMples.dev is the best Go bLog in the world!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGosamples.dev Is The Best Go Blog In The World!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you want to disable the lowercasing of non-leading letters, use the \u003ca href=\"https://pkg.go.dev/golang.org/x/text/cases#Option\" target=\"_blank\"\u003e\u003ccode\u003ecases.NoLower\u003c/code\u003e\u003c/a\u003e option as the second parameter of the \u003ca href=\"https://pkg.go.dev/golang.org/x/text/cases#Title\" target=\"_blank\"\u003e\u003ccode\u003ecases.Title()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/cases\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/language\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecases\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTitle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eUnd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecases\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eNoLower\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;goSAMples.dev is the best Go bLog in the world!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGoSAMples.dev Is The Best Go BLog In The World!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-05-25T04:00:00Z",
    "vote": 0
  },
  {
    "id": "7e705ae259ff26b3e88781e6dcde52af",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔠 String to uppercase in Go",
    "url": "https://gosamples.dev/string-to-uppercase/",
    "resume": "\u003cp\u003eTo convert a string to uppercase in Go, use the \u003ca href=\"https://pkg.go.dev/strings#ToUpper\" target=\"_blank\"\u003e\u003ccode\u003estrings.ToUpper()\u003c/code\u003e\u003c/a\u003e function. It returns a copy of the input string, in which all letters are uppercase. The function is part of the built-in \u003ca href=\"https://pkg.go.dev/strings\" target=\"_blank\"\u003e\u003ccode\u003estrings\u003c/code\u003e\u003c/a\u003e package used for manipulating UTF-8 encoded strings.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToUpper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHTTPS://GOSAMPLES.DEV\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eIf you want to uppercase only the first letter of each word, see our other example \u003ca href=\"https://gosamples.dev/uppercase-first-letter\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf your string is in a language with the special casing rules, for example, Turkish or Azeri, use the \u003ca href=\"https://pkg.go.dev/strings#ToUpperSpecial\" target=\"_blank\"\u003e\u003ccode\u003estrings.ToUpperSpecial()\u003c/code\u003e\u003c/a\u003e function. This function takes a case mapping as its first parameter, with which it converts the string into uppercase.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;unicode\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToUpperSpecial\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eunicode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eTurkishCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;en iyi web sitesi\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eEN İYİ WEB SİTESİ\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-05-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8eb491e9e23394a1a0c2d5d1e1962fca",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How much do coding bootcamps cost?",
    "url": "https://blog.boot.dev/education/cost-of-coding-bootcamp/",
    "resume": "And an answer to what you’re really asking: \u0026ldquo;are coding bootcamps worth it?\u0026rdquo; 🔗I’ll give you the quick answer right off the bat: coding bootcamps cost 13,500 on average based on the data collected by BestColleges.",
    "date": "2022-05-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "05a02c905278c7455625a3d3f9bbf2c5",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🐘 Best PostgreSQL database drivers and ORMs in Go",
    "url": "https://gosamples.dev/list-postgresql-drivers/",
    "resume": "\u003cp\u003eWhen you start a new project in Go, you probably always ask yourself about the data access layer. Use the generic \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e interface and write queries by hand or use an \u003ca href=\"https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping\" target=\"_blank\"\u003eORM\u003c/a\u003e package, or tools to help generate queries? Which database driver to use? What packages to use to make your workflow fast and smooth? In this post we will try to review the best available drivers and ORM packages for the \u003ca href=\"https://www.postgresql.org/\" target=\"_blank\"\u003ePostgreSQL\u003c/a\u003e database. Unfortunately, there are a lot of them, and they are all good enough, so the choice will not be easy, and you have to decide what is the most important for you 😉.\u003c/p\u003e\n\u003ch2 id=\"drivers\"\u003eDrivers\u003c/h2\u003e\n\u003ch3 id=\"1-pgxhttpsgithubcomjackcpgx\"\u003e1. \u003ca href=\"https://github.com/jackc/pgx\" target=\"_blank\"\u003e\u003ccode\u003epgx\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eRecommended driver for a new project, actively maintained and developed. Low-level, fast, and performant. It consists of two components: driver and toolkit. The driver is compatible with the \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e interface, while the toolkit contains PostgreSQL-specific features and functionalities that make your work easier, such as mapping between PostgreSQL and Go.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/jackc/pgx\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/github.com/jackc/pgx/v4\" target=\"_blank\"\u003epgx\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"2-pqhttpsgithubcomlibpq\"\u003e2. \u003ca href=\"https://github.com/lib/pq\" target=\"_blank\"\u003e\u003ccode\u003epq\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eHistorically the most popular PostgreSQL driver for Go. Well tested and used in many existing projects. Currently only in the maintenance mode. As the authors themselves say:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;For users that require new features or reliable resolution of reported bugs, we recommend using \u003ca href=\"https://github.com/jackc/pgx\" target=\"_blank\"\u003epgx\u003c/a\u003e which is under active development.\u0026rdquo;\n\u0026ndash; \u003ccite\u003e\u003ca href=\"https://github.com/lib/pq#status\" target=\"_blank\"\u003epq maintainers\u003c/a\u003e\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eHowever, if you are looking for a battle-tested and stable driver for Go, the \u003ca href=\"https://github.com/lib/pq\" target=\"_blank\"\u003e\u003ccode\u003epq\u003c/code\u003e\u003c/a\u003e is a great choice.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/lib/pq\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/github.com/lib/pq\" target=\"_blank\"\u003epg\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"orms\"\u003eORMs\u003c/h2\u003e\n\u003ch3 id=\"1-gormhttpsgithubcomgo-gormgorm\"\u003e1. \u003ca href=\"https://github.com/go-gorm/gorm\" target=\"_blank\"\u003e\u003ccode\u003eGORM\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eOne of the most popular ORM packages in Go, whose the main goal is to be developer-friendly. Officially supports PostgreSQL, MySQL, SQLite, and MSSQL. It is actively developed, has great documentation, and many features, like:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStruct - Table mapping support\u003c/li\u003e\n\u003cli\u003eAssociations (Has One, Has Many, Belongs To, Many To Many, Polymorphism, Single-table inheritance)\u003c/li\u003e\n\u003cli\u003eHooks (Before/After Create/Save/Update/Delete/Find)\u003c/li\u003e\n\u003cli\u003eEager loading with \u003ccode\u003ePreload\u003c/code\u003e, \u003ccode\u003eJoins\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eTransactions, nested transactions, Save Point, RollbackTo to Saved Point\u003c/li\u003e\n\u003cli\u003eContext, prepared statement mode, DryRun mode\u003c/li\u003e\n\u003cli\u003eBatch Insert, FindInBatches, Find/Create with map, CRUD with SQL Expr and Context Valuer\u003c/li\u003e\n\u003cli\u003eSQL Builder, Upsert, Locking, Optimizer/Index/Comment Hints, Named Argument, SubQuery\u003c/li\u003e\n\u003cli\u003eComposite Primary Key, Indexes, Constraints\u003c/li\u003e\n\u003cli\u003eAuto migrations\u003c/li\u003e\n\u003cli\u003eand many more\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://gorm.io\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/go-gorm/gorm\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/gorm.io/gorm\" target=\"_blank\"\u003eGORM\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"2-bunhttpsgithubcomuptracebun\"\u003e2. \u003ca href=\"https://github.com/uptrace/bun\" target=\"_blank\"\u003e\u003ccode\u003eBun\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/uptrace/bun\" target=\"_blank\"\u003e\u003ccode\u003eBun\u003c/code\u003e\u003c/a\u003e is a SQL-first ORM that provides an ORM-like experience using good old SQL. It supports PostgreSQL, MySQL, MariaDB, MSSQL, and SQLite. Great documentation and essential features, useful in everyday work are its strong points:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBulk inserts\u003c/li\u003e\n\u003cli\u003eBulk updates\u003c/li\u003e\n\u003cli\u003eBulk deletes\u003c/li\u003e\n\u003cli\u003eFixtures - load initial data into a database for testing or demonstration purposes using YAML files\u003c/li\u003e\n\u003cli\u003eMigrations\u003c/li\u003e\n\u003cli\u003eSoft deletes\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://bun.uptrace.dev\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/uptrace/bun\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/github.com/uptrace/bun\" target=\"_blank\"\u003eBun\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"3-enthttpsgithubcomentent\"\u003e3. \u003ca href=\"https://github.com/ent/ent\" target=\"_blank\"\u003e\u003ccode\u003eent\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eAn entity framework for Go. It is the ORM developed by Facebook focusing on \u003ca href=\"https://en.wikipedia.org/wiki/Graph_database\" target=\"_blank\"\u003egraph-based\u003c/a\u003e data models. The schema is defined as a graph structure in Go code, from which the model and operations are generated using code generation. It supports PostgreSQL, MySQL, MariaDB, TiDB, SQLite, and Gremlin.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://entgo.io\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/ent/ent\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/entgo.io/ent\" target=\"_blank\"\u003eent\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"4-upperdbhttpsgithubcomupperdb\"\u003e4. \u003ca href=\"https://github.com/upper/db\" target=\"_blank\"\u003e\u003ccode\u003eupper/db\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eA data access layer made for productivity. API is compatible with SQL and NoSQL databases like PostgreSQL, MySQL, MSSQL, CockroachDB, MongoDB, QL, and SQLite. It provides an agnostic API focused on working with collections of items, a SQL builder for more direct access to the database, and an ORM-like layer for mapping between a struct and a database table and working with the database in a more ORM-like style. Some features:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStruct - Table Mapping Support\u003c/li\u003e\n\u003cli\u003eSearch and delimitation of result sets\u003c/li\u003e\n\u003cli\u003eLimit-offset pagination (page numbers)\u003c/li\u003e\n\u003cli\u003eCursor-based pagination (previous and next)\u003c/li\u003e\n\u003cli\u003eTransactions support\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://upper.io\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/upper/db\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/github.com/upper/db\" target=\"_blank\"\u003eupper/db\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"5-xormhttpsgiteacomxormxorm\"\u003e5. \u003ca href=\"https://gitea.com/xorm/xorm\" target=\"_blank\"\u003e\u003ccode\u003eXORM\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eSimple and powerful GORM alternative supporting PostgreSQL, MySQL, SQLite, MSSQL, MariaDB, TiDB, CockroachDB, and Oracle. Some of the features:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStruct - Table mapping support\u003c/li\u003e\n\u003cli\u003eTransactions support\u003c/li\u003e\n\u003cli\u003eSynchronization of database schema\u003c/li\u003e\n\u003cli\u003eQuery cache\u003c/li\u003e\n\u003cli\u003eDatabase Reverse - tool that generates code from the database schema\u003c/li\u003e\n\u003cli\u003eSimple cascade loading\u003c/li\u003e\n\u003cli\u003eOptimistic Locking support\u003c/li\u003e\n\u003cli\u003eSQL Builder\u003c/li\u003e\n\u003cli\u003eand many more\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://xorm.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGitea: \u003ca href=\"\"\u003ehttps://gitea.com/xorm/xorm\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/xorm.io/xorm\" target=\"_blank\"\u003eXORM\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"6-pophttpsgithubcomgobuffalopop\"\u003e6. \u003ca href=\"https://github.com/gobuffalo/pop\" target=\"_blank\"\u003e\u003ccode\u003ePOP\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eIt is part of the \u003ca href=\"https://gobuffalo.io/\" target=\"_blank\"\u003eBuffalo\u003c/a\u003e Go web framework, deeply integrated, and recommended when using Buffalo. But can also be used as a stand-alone data access layer. POP follows conventions influenced by the ActiveRecord Ruby gem making it easy to do CRUD operations with basic ORM functionality, run migrations, and build/execute queries. It supports PostgreSQL, CockroachDB, MySQL, and SQLite databases.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://gobuffalo.io/documentation/database/pop\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/gobuffalo/pop\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/github.com/gobuffalo/pop/v6\" target=\"_blank\"\u003ePOP\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"7-relhttpsgithubcomgo-relrel\"\u003e7. \u003ca href=\"https://github.com/go-rel/rel/\" target=\"_blank\"\u003e\u003ccode\u003eREL\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eREL is a modern ORM-ish data access layer for layered architecture. It is built with testability in mind and comes with its custom test library. It supports PostgreSQL, MySQL, MSSQL, and SQLite. Features:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTestable repository\u003c/li\u003e\n\u003cli\u003eNested transactions\u003c/li\u003e\n\u003cli\u003eQuery builder\u003c/li\u003e\n\u003cli\u003eEager loading support\u003c/li\u003e\n\u003cli\u003eComposite Primary Key\u003c/li\u003e\n\u003cli\u003eSoft deletes\u003c/li\u003e\n\u003cli\u003ePagination\u003c/li\u003e\n\u003cli\u003eSchema Migration\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://go-rel.github.io\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/go-rel/rel\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/github.com/go-rel/rel\" target=\"_blank\"\u003eREL\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"8-beego-ormhttpsgithubcombeegobeegotreedevelopclientorm\"\u003e8. \u003ca href=\"https://github.com/beego/beego/tree/develop/client/orm\" target=\"_blank\"\u003e\u003ccode\u003eBeego ORM\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eThis ORM is part of the Beego web framework. Heavily influenced by Django ORM and SQLAlchemy. It works with PostgreSQL, MySQL, and SQLite databases. The main features are: easy to use CRUD operations, Struct - Table mapping, raw SQL support and query builder, auto joins, transactions support.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eWebsite: \u003ca href=\"\"\u003ehttps://beego.vip/docs/mvc/model/overview.md\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGithub: \u003ca href=\"\"\u003ehttps://github.com/beego/beego/tree/master/client/orm\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePackage documentation: \u003ca href=\"https://pkg.go.dev/github.com/beego/beego/v2/client/orm\" target=\"_blank\"\u003eBeego ORM\u003c/a\u003e\u003c/p\u003e",
    "date": "2022-05-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c92f3a05d82bfb765465f95dc393967a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Top 8 Online Coding Bootcamps for 2022",
    "url": "https://blog.boot.dev/education/top-online-bootcamps/",
    "resume": "I looked at the cost, duration, structure, and USP for each online coding bootcamp 🔗If you’ve been living under a rock for the last decade, let me quickly tell you about what a coding bootcamp is before I get into the top online coding bootcamps.",
    "date": "2022-05-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "71119303a2a321928dba6f4263f2f563",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Not to Ask for Help Online",
    "url": "https://blog.boot.dev/misc/getting-help-online/",
    "resume": "I\u0026rsquo;ve spent an unhealthy amount of time online over the course of my life, and in the last couple years I\u0026rsquo;ve been managing a Discord server for people who are learning computer science.",
    "date": "2022-05-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "851414c381177bcd1668ba12172b4787",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Revisiting Caddy",
    "url": "https://changelog.com/gotime/230",
    "resume": "Matt Holt \u0026 Mohammed S. Al Sahaf sit down with Natalie \u0026 Jon to discuss every gopher’s favorite open source web server with automatic HTTPS! In addition to laying out what Caddy is and why it’s interesting, we dive deep into how you can (and why you might want to) extend Caddy as a result of its modular architecture.",
    "date": "2022-05-19T21:00:00Z",
    "vote": 0
  },
  {
    "id": "4f71cb6aabbb7f40d1ec4a97a1a43326",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🧽 Remove non-alphanumeric characters from a string in Go",
    "url": "https://gosamples.dev/remove-non-alphanumeric/",
    "resume": "\u003cp\u003eTo clear a string from all non-alphanumeric characters in Go, it is best to use a \u003ca href=\"https://en.wikipedia.org/wiki/Regular_expression\" target=\"_blank\"\u003eregular expression\u003c/a\u003e that matches non-alphanumeric characters, and replace them with an empty string. Such a \u003ccode\u003eregex\u003c/code\u003e is defined as the negation of the set of allowed characters. For the English alphabet, it would be:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003e[^a-zA-Z0-9 ]+\u003c/code\u003e\u003c/div\u003e\n\u003cp\u003eIn this regular expression, we use the Caret character after a square bracket \u003ccode\u003e[^\u003c/code\u003e, which means that it matches any character other than a lowercase and uppercase letter in the range \u003ccode\u003ea-z\u003c/code\u003e, a number, and a space character. \u0026ldquo;Not a letter, not a number, not a space\u0026rdquo; is our definition of a non-alphanumeric character.\u003c/p\u003e\n\u003cp\u003eHowever, when working with alphabets other than English, such a regular expression will not work properly. In that case, we can use the \u003ca href=\"https://www.regular-expressions.info/unicode.html\" target=\"_blank\"\u003eUnicode categories\u003c/a\u003e in the \u003ccode\u003eregex\u003c/code\u003e and instead of manually defining the range of letters and numbers, we can use the Unicode category \u003ccode\u003e\\p{L}\u003c/code\u003e for letters and \u003ccode\u003e\\p{N}\u003c/code\u003e for numbers:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003e[^\\p{L}\\p{N} ]+\u003c/code\u003e\u003c/div\u003e\n\u003cp\u003eThis regular expression matches any character that is not a Unicode letter and number or a space character.\u003c/p\u003e\n\u003cp\u003eTo compare these regular expressions and the results of functions that remove non-alphanumeric characters, see the following two examples.\u003c/p\u003e\n\u003ch2 id=\"remove-all-non-alphanumeric-characters-for-english-alphabet-strings\"\u003eRemove all non-alphanumeric characters for English alphabet strings\u003c/h2\u003e\n\u003cp\u003eThis is a classic example of removing non-alphanumeric characters from a string. First, we compile our regular expression that matches any character other than an English letter, number, or space. Then, we use the \u003ca href=\"https://pkg.go.dev/regexp#Regexp.ReplaceAllString\" target=\"_blank\"\u003e\u003ccode\u003eRegexp.ReplaceAllString()\u003c/code\u003e\u003c/a\u003e method to replace the matched non-alphanumeric characters with the empty string \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e. Look at the output and notice that this method removes both non-English letters (ـا, ą) and numbers (٦).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;regexp\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enonAlphanumericRegex\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eregexp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMustCompile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e`[^a-zA-Z0-9 ]+`\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eclearString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003enonAlphanumericRegex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReplaceAllString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Test@%String#321gosamples.dev ـا ą ٦\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eclearString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eTestString321gosamplesdev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"remove-all-non-alphanumeric-characters-for-non-english-alphabet-strings\"\u003eRemove all non-alphanumeric characters for non-English alphabet strings\u003c/h2\u003e\n\u003cp\u003eThis example works like the previous one, but by using a regular expression with Unicode categories, we also accept letters and numbers from alphabets other than English, such as Arabic.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;regexp\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enonAlphanumericRegex\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eregexp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMustCompile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e`[^\\p{L}\\p{N} ]+`\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eclearString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003enonAlphanumericRegex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReplaceAllString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Test@%String#321gosamples.dev ـا ą ٦\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eclearString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eTestString321gosamplesdev\u003c/span\u003e \u003cspan class=\"nx\"\u003eـا\u003c/span\u003e \u003cspan class=\"nx\"\u003eą\u003c/span\u003e \u003cspan class=\"nx\"\u003e٦\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-05-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "213aaf233746ff79c0c48eee936d4749",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "What to do when projects get big and messy",
    "url": "https://changelog.com/gotime/229",
    "resume": "Another entry in the maintenance series! Throughout the series we’ve discussed building versus buying, building actually maintainable software, maintaining ourselves, open source maintenance, legacy code, and most recently Go project structure. In this 7th installment of the series, we continue narrowing our focus by talking about what to do when projects get big and messy.",
    "date": "2022-05-12T16:45:00Z",
    "vote": 0
  },
  {
    "id": "ce926dcc580efbf39bdffa509b25af8c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "6 Undeniable Reasons to Learn Computer Science",
    "url": "https://blog.boot.dev/computer-science/why-learn-computer-science/",
    "resume": "Is it a bit dramatic, perhaps, to say that the fate of the world rests on computer science and that’s why you should learn computer science?",
    "date": "2022-05-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "42888755fc7d00d8d6965be5e1e18a5a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Problem with Education is a Problem of Incentives",
    "url": "https://blog.boot.dev/education/problem-of-incentives-in-education/",
    "resume": "I\u0026rsquo;ve found that almost anyone I talk to agrees with the statement:\nThere is something wrong with education, particularly higher education.",
    "date": "2022-05-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3cb8f4c69b604b5b3412f4b72a3f5ccc",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: Story of TryLock Function",
    "url": "https://medium.com/a-journey-with-go/go-story-of-trylock-function-a69ef6dbb410?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-story-of-trylock-function-a69ef6dbb410?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/2500/1*aMcuI9iWGwVWobLFlxfauQ.png\" width=\"2500\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003e\u0026#x2139;\u0026#xFE0F; This article is based on Go 1.18.\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-story-of-trylock-function-a69ef6dbb410?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2022-05-06T06:12:37Z",
    "vote": 0
  },
  {
    "id": "7b7c89d9083ba24671be26cc565c1cf0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go and PHP sitting in a tree...",
    "url": "https://changelog.com/gotime/228",
    "resume": "Can Go help you write faster PHP apps? In this episode, we explore the unusual pairing of Go and PHP that led to the RoadRunner project, a high-performance PHP application server, load-balancer, and process manager that is all written in Go.",
    "date": "2022-05-05T22:10:00Z",
    "vote": 0
  },
  {
    "id": "4b36f9f532220249dda598eb9e0d5216",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Blockchain In Go: Part IV: Fraud Detection",
    "url": "https://www.ardanlabs.com/blog/2022/05/blockchain-04-fraud-detection.html",
    "resume": "Introduction In the first three posts, I explained there were four aspects of a blockchain that this series would explore with a backing implementation provided by the Ardan blockchain project.\nDigital accounts with electronic signatures and verification Transaction distribution and synchronization between computers Redundant storage and consensus by different computers Detection of any fraud to past transactions The first post focused on how the Ardan blockchain provides support for digital accounts, signatures, and verification.",
    "date": "2022-05-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "986ca88fd8ecea51b4612acfc3de88e1",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Analyzing static analysis",
    "url": "https://changelog.com/gotime/227",
    "resume": "Matan Peled from Technion University joins Natalie \u0026 Mat to discuss his PhD research on meta programming and static analyzers. How does Go’s measure up? What would Matan’s look like if he built one? All that and more!",
    "date": "2022-04-28T16:00:00Z",
    "vote": 0
  },
  {
    "id": "9bf582726d0e2ce6e9b06f8042d33f32",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "We Just Launched Community Insights",
    "url": "https://blog.boot.dev/news/insights-launch/",
    "resume": "tl;dr 🔗At Boot.dev we\u0026rsquo;ve launched \u0026ldquo;community insights\u0026rdquo;! Insights make it possible for our students to drop comments at the bottom of any step in our coding courses.",
    "date": "2022-04-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cb9ff41e8be97b527855fb3377f42487",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "8 Codecademy Alternatives That Will Get You Where You Need to Go",
    "url": "https://blog.boot.dev/misc/code-academy-alternatives/",
    "resume": "Just last month, Codecademy was sold to Skillsoft for $525 million. Not too shabby, and entirely well-deserved if you ask me.",
    "date": "2022-04-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dbd4f07f9d1241dd76ea60850915d25f",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🧊 Cube root in Go",
    "url": "https://gosamples.dev/cube-root/",
    "resume": "\u003cp\u003eUse the \u003ca href=\"https://pkg.go.dev/math#Cbrt\" target=\"_blank\"\u003e\u003ccode\u003eCbrt()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/math\" target=\"_blank\"\u003e\u003ccode\u003emath\u003c/code\u003e\u003c/a\u003e package to find the cube root of a given number in Go.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCbrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-22T03:00:00Z",
    "vote": 0
  },
  {
    "id": "7c1d3ec693b686bc7e0f5571d282cb81",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🟦 Square root in Go",
    "url": "https://gosamples.dev/square-root/",
    "resume": "\u003cp\u003eTo find the square root of a specified number in Go, use the \u003ca href=\"https://pkg.go.dev/math#Sqrt\" target=\"_blank\"\u003e\u003ccode\u003eSqrt()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/math\" target=\"_blank\"\u003e\u003ccode\u003emath\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e1.4142135623730951\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-22T02:00:00Z",
    "vote": 0
  },
  {
    "id": "62e2ff75c8ffcb634b8b76faddd4539c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Instrumentation for gophers",
    "url": "https://changelog.com/gotime/226",
    "resume": "Björn Rabenstein \u0026 Bartlomiej Płotka join Mat \u0026 Johnny to discuss observability, monitoring and instrumentation for gophers.",
    "date": "2022-04-21T19:00:00Z",
    "vote": 0
  },
  {
    "id": "fa23e24128e013f437afed76b2801674",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🎲 Generate a random string in Go",
    "url": "https://gosamples.dev/random-string/",
    "resume": "\u003cp\u003eTo generate a random string in Go, you need to write a custom function that randomly selects characters from a given charset as many times as the set length of the output and combines them to form a random, fixed-length string.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math/rand\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003echarset\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003erandomString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGrow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteByte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003echarset\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIntn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003echarset\u003c/span\u003e\u003cspan class=\"p\"\u003e))])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003esb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSeed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixNano\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003erandomString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003ch3 id=\"the-randomstring-function\"\u003eThe \u003ccode\u003erandomString()\u003c/code\u003e function\u003c/h3\u003e\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eThe \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e initialization\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003esb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003esb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGrow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn the first step, we create the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e structure and grow its capacity to the size of the output string: \u003ccode\u003en\u003c/code\u003e. The \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e is used to efficiently concatenate strings, minimizing the number of copies and memory allocations. In our function, it is used to build and store the output random string.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSee our post on \u003ca href=\"https://gosamples.dev/concatenate-strings/\"\u003ehow to concatenate strings in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eRandom character generating loop\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteByte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003echarset\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIntn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003echarset\u003c/span\u003e\u003cspan class=\"p\"\u003e))])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn the \u003ccode\u003efor\u003c/code\u003e loop, we generate the \u003ccode\u003en\u003c/code\u003e (size of the output string) random characters and add them to the previously created \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e. Selecting random characters is done by the \u003ca href=\"https://pkg.go.dev/math/rand#Intn\" target=\"_blank\"\u003e\u003ccode\u003erand.Intn()\u003c/code\u003e\u003c/a\u003e function, which returns a random number between 0 and \u003ccode\u003eX\u003c/code\u003e, where \u003ccode\u003eX\u003c/code\u003e is the argument of the \u003ca href=\"https://pkg.go.dev/math/rand#Intn\" target=\"_blank\"\u003e\u003ccode\u003erand.Intn()\u003c/code\u003e\u003c/a\u003e function. In our case, \u003ccode\u003echarset[rand.Intn(len(charset))]\u003c/code\u003e means that we select a random number in the half-open interval [0,\u003ccode\u003elen(charset)\u003c/code\u003e), and then get a character from the \u003ccode\u003echarset\u003c/code\u003e string at this random index. Doing this \u003ccode\u003en\u003c/code\u003e times and adding to the result gives us a random string of length \u003ccode\u003en\u003c/code\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you want to limit or add new characters to the set from which the random string is made, modify the \u003ccode\u003echarset\u003c/code\u003e constant.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eReturn the result\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003esb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eBy calling the \u003ca href=\"https://pkg.go.dev/strings#Builder.String\" target=\"_blank\"\u003e\u003ccode\u003eBuilder.String()\u003c/code\u003e\u003c/a\u003e method, we get the accumulated string that we return from the function.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"the-main-function\"\u003eThe \u003ccode\u003emain()\u003c/code\u003e function\u003c/h3\u003e\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eSeed\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSeed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixNano\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn the first line of the \u003ccode\u003emain()\u003c/code\u003e function, we set the timestamp of current time \u003ca href=\"https://pkg.go.dev/time#Time.UnixNano\" target=\"_blank\"\u003e\u003ccode\u003etime.Now().UnixNano()\u003c/code\u003e\u003c/a\u003e as the \u003ca href=\"https://en.wikipedia.org/wiki/Random_seed\" target=\"_blank\"\u003eseed\u003c/a\u003e of the pseudorandom number generator. Without it, the \u003ca href=\"https://pkg.go.dev/math/rand#Intn\" target=\"_blank\"\u003e\u003ccode\u003erand.Intn()\u003c/code\u003e\u003c/a\u003e function would return the same result every time, and the output string would remain the same between runs of the program. This is because the pseudo-random number generators produce new values by performing some operations on the previous value, and when the initial value (the seed value) stays the same, you get the same output numbers.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCalling the \u003ccode\u003erandomString()\u003c/code\u003e function\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003erandomString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn the last line, we generate a random string of length 20 and print it to the standard output. Run the program several times to see a different string each time:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eXqtscOKPBRGnAXMnzKzq\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAPHQenfBuRrTlMzDShyr\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edfXgMuGTnfUkLVZQXonw\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003c/ol\u003e",
    "date": "2022-04-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "44f3eec9007bea07cf606f01b4548df1",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: How to Mitigate RUDY DoS Attack",
    "url": "https://medium.com/a-journey-with-go/go-how-to-mitigate-rudy-dos-attack-3bd9c1662848?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-to-mitigate-rudy-dos-attack-3bd9c1662848?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/1800/1*VTcnL59sDdOatxrBzOVQhA.png\" width=\"1800\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003e\u0026#x2139;\u0026#xFE0F; This article is based on Go 1.18.\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-to-mitigate-rudy-dos-attack-3bd9c1662848?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2022-04-20T16:49:07Z",
    "vote": 0
  },
  {
    "id": "e4e3755faef039c198206890f6a4646f",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: Understand And Mitigate Slowloris Attack",
    "url": "https://medium.com/a-journey-with-go/go-understand-and-mitigate-slowloris-attack-711c1b1403f6?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-understand-and-mitigate-slowloris-attack-711c1b1403f6?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/2245/1*ToNAuwvb4cwwzrJdIAdLsQ.png\" width=\"2245\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003e\u0026#x2139;\u0026#xFE0F; This article is based on Go 1.18.\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-understand-and-mitigate-slowloris-attack-711c1b1403f6?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2022-04-20T16:43:57Z",
    "vote": 0
  },
  {
    "id": "8ca186c818128f6a1b1bd5fb85dcdc5a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 10 Communities For Learning to Code",
    "url": "https://blog.boot.dev/misc/best-coding-communities/",
    "resume": "Why you need a coding community 🔗The one thing that every programmer has in common, whether they\u0026rsquo;ve only ever implemented a \u0026ldquo;Hello World\u0026rdquo; program or they\u0026rsquo;re considered a \u0026ldquo;senior\u0026rdquo; software engineer, is the need to continuously learn.",
    "date": "2022-04-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9f1f1a5a04efe7a6be8dfad7cba28162",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Blockchain In Go: Part III: Redundant Storage And Consensus",
    "url": "https://www.ardanlabs.com/blog/2022/04/blockchain-03-redundant-storage-and-consensus.html",
    "resume": "Introduction In the first two posts, I explained there were four aspects of a blockchain that this series would explore with a backing implementation provided by the Ardan blockchain project.\nDigital accounts with electronic signatures and verification Transaction distribution and synchronization between computers Redundant storage and consensus by different computers Detection of any fraud to past transactions The first post focused on how the Ardan blockchain provides support for digital accounts, signatures, and verification.",
    "date": "2022-04-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6e7fb2cc6e0555e75ff16ef289f4e712",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go code organization best practices",
    "url": "https://changelog.com/gotime/225",
    "resume": "We often have code that’s similar between projects and we find ourselves copying that code around. In this episode we discuss what to do with this common code, how to organize it, and what code qualifies as this common code.",
    "date": "2022-04-14T18:15:00Z",
    "vote": 0
  },
  {
    "id": "afd5cea7d36721e3a13907896315c665",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🍰 The maximum and minimum value of the int types in Go",
    "url": "https://gosamples.dev/int-min-max/",
    "resume": "\u003cp\u003eTo get the maximum and minimum value of various integer types in Go, use the \u003ca href=\"https://pkg.go.dev/math\" target=\"_blank\"\u003e\u003ccode\u003emath\u003c/code\u003e\u003c/a\u003e package constants. For example, to get the minimum value of the \u003ccode\u003eint64\u003c/code\u003e type, which is \u003cstrong\u003e-9223372036854775808\u003c/strong\u003e, use the \u003ca href=\"https://pkg.go.dev/math#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003emath.MinInt64\u003c/code\u003e\u003c/a\u003e constant. To get the maximum value of the \u003ccode\u003eint64\u003c/code\u003e type, which is \u003cstrong\u003e9223372036854775807\u003c/strong\u003e, use the \u003ca href=\"https://pkg.go.dev/math#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003emath.MaxInt64\u003c/code\u003e\u003c/a\u003e. To check the minimum and maximum values of different int types, see the following example and its output.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor unsigned integer types, only the max constant is available because the minimum value of unsigned types is always 0.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// int\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;int min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMinInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// int8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;int8 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMinInt8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxInt8\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// int16\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;int16 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMinInt16\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxInt16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// int32\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;int32 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMinInt32\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxInt32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// int64\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;int64 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMinInt64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxInt64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// unsigned\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"c1\"\u003e// uint\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;uint min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003euint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003euint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxUint\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// uint8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;uint8 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxUint8\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// uint16\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;uint16 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxUint16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// uint32\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;uint32 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxUint32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// uint64\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;uint64 min - max: %d - %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003euint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxUint64\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eint min - max: -9223372036854775808 - \u003cspan class=\"m\"\u003e9223372036854775807\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eint8 min - max: -128 - \u003cspan class=\"m\"\u003e127\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eint16 min - max: -32768 - \u003cspan class=\"m\"\u003e32767\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eint32 min - max: -2147483648 - \u003cspan class=\"m\"\u003e2147483647\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eint64 min - max: -9223372036854775808 - \u003cspan class=\"m\"\u003e9223372036854775807\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003euint min - max: \u003cspan class=\"m\"\u003e0\u003c/span\u003e - \u003cspan class=\"m\"\u003e18446744073709551615\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003euint8 min - max: \u003cspan class=\"m\"\u003e0\u003c/span\u003e - \u003cspan class=\"m\"\u003e255\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003euint16 min - max: \u003cspan class=\"m\"\u003e0\u003c/span\u003e - \u003cspan class=\"m\"\u003e65535\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003euint32 min - max: \u003cspan class=\"m\"\u003e0\u003c/span\u003e - \u003cspan class=\"m\"\u003e4294967295\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003euint64 min - max: \u003cspan class=\"m\"\u003e0\u003c/span\u003e - \u003cspan class=\"m\"\u003e18446744073709551615\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-14T04:00:00Z",
    "vote": 0
  },
  {
    "id": "e67bd0e1549b8350a3469d7266553539",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📊 The maximum and minimum value of the float types in Go",
    "url": "https://gosamples.dev/float64-min-max/",
    "resume": "\u003cp\u003eThe maximum value of the \u003ccode\u003efloat64\u003c/code\u003e type in Go is \u003cstrong\u003e1.79769313486231570814527423731704356798070e+308\u003c/strong\u003e and you can get this value using the \u003ca href=\"https://pkg.go.dev/math#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003emath.MaxFloat64\u003c/code\u003e\u003c/a\u003e constant.\u003c/p\u003e\n\u003cp\u003eThe minimum value above zero (smallest positive, non-zero value) of the \u003ccode\u003efloat64\u003c/code\u003e type in Go is \u003cstrong\u003e4.9406564584124654417656879286822137236505980e-324\u003c/strong\u003e and you can get this value using the \u003ca href=\"https://pkg.go.dev/math#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003emath.SmallestNonzeroFloat64\u003c/code\u003e\u003c/a\u003e constant.\u003c/p\u003e\n\u003cp\u003eThe maximum value of the \u003ccode\u003efloat32\u003c/code\u003e type in Go is \u003cstrong\u003e3.40282346638528859811704183484516925440e+38\u003c/strong\u003e and you can get this value using the \u003ca href=\"https://pkg.go.dev/math#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003emath.MaxFloat32\u003c/code\u003e\u003c/a\u003e constant.\u003c/p\u003e\n\u003cp\u003eThe minimum value above zero (smallest positive, non-zero value) of the \u003ccode\u003efloat32\u003c/code\u003e type in Go is \u003cstrong\u003e1.401298464324817070923729583289916131280e-45\u003c/strong\u003e and you can get this value using the \u003ca href=\"https://pkg.go.dev/math#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003emath.SmallestNonzeroFloat32\u003c/code\u003e\u003c/a\u003e constant.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;min float64: %.50e\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSmallestNonzeroFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;max float64: %.50e\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;min float32: %.50e\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSmallestNonzeroFloat32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;max float32: %.50e\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMaxFloat32\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emin float64: 4.94065645841246544176568792868221372365059802614325e-324\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emax float64: 1.79769313486231570814527423731704356798070567525845e+308\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emin float32: 1.40129846432481707092372958328991613128026194187652e-45\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emax float32: 3.40282346638528859811704183484516925440000000000000e+38\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-14T02:00:00Z",
    "vote": 0
  },
  {
    "id": "94a47ebeda48d9d0e6a527dc9d3d935c",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🍩 Get Pi constant in Go",
    "url": "https://gosamples.dev/math-pi/",
    "resume": "\u003cp\u003eTo get the value of the Pi (π) constant in Go, use the mathematical constant \u003ca href=\"https://pkg.go.dev/math#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003emath.Pi\u003c/code\u003e\u003c/a\u003e from the standard library \u003ca href=\"https://pkg.go.dev/math\" target=\"_blank\"\u003e\u003ccode\u003emath\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%.48f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ePi\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e3.141592653589793115997963468544185161590576171875\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-13T06:00:00Z",
    "vote": 0
  },
  {
    "id": "7408442b7f574aa974acb842445d506a",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⏳ Time difference between two dates in Go",
    "url": "https://gosamples.dev/difference-between-dates/",
    "resume": "\u003cp\u003eTo calculate the time difference between two dates, e.g., years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds between one date and the other, use the \u003ca href=\"https://pkg.go.dev/time#Time.Sub\" target=\"_blank\"\u003e\u003ccode\u003eSub()\u003c/code\u003e\u003c/a\u003e method on the \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003etime.Time\u003c/code\u003e\u003c/a\u003e struct. It calculates the difference between the two dates. Then using the built-in methods, you can determine the specific number of hours, minutes, seconds, etc., that have passed in that difference.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efirstDate\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2022\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esecondDate\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2021\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edifference\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efirstDate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSub\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esecondDate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Years: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHours\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e365\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Months: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHours\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Weeks: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHours\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Days: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHours\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hours: %.f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHours\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Minutes: %.f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMinutes\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Seconds: %.f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSeconds\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Milliseconds: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMilliseconds\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Microseconds: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMicroseconds\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Nanoseconds: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edifference\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNanoseconds\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eThere are no built-in methods for calculating the number of days, weeks, months, or years between two dates. You have to do it manually using the \u003ca href=\"https://pkg.go.dev/time#Duration.Hours\" target=\"_blank\"\u003e\u003ccode\u003eDuration.Hours()\u003c/code\u003e\u003c/a\u003e method.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eYears: \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eMonths: \u003cspan class=\"m\"\u003e14\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eWeeks: \u003cspan class=\"m\"\u003e60\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eDays: \u003cspan class=\"m\"\u003e424\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHours: \u003cspan class=\"m\"\u003e10196\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eMinutes: \u003cspan class=\"m\"\u003e611760\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSeconds: \u003cspan class=\"m\"\u003e36705600\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eMilliseconds: \u003cspan class=\"m\"\u003e36705600000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eMicroseconds: \u003cspan class=\"m\"\u003e36705600000000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eNanoseconds: \u003cspan class=\"m\"\u003e36705600000000000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "41f798616b166161b55a4a0228a56efa",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "👀 Get a hostname (domain) from a URL in Go",
    "url": "https://gosamples.dev/get-hostname-domain/",
    "resume": "\u003cp\u003eTo get a hostname or domain from a URL in Go, first, use the \u003ca href=\"https://pkg.go.dev/net/url#Parse\" target=\"_blank\"\u003e\u003ccode\u003eurl.Parse()\u003c/code\u003e\u003c/a\u003e function, which parses the URL given as input, and then use the \u003ca href=\"https://pkg.go.dev/net/url#URL.Hostname\" target=\"_blank\"\u003e\u003ccode\u003eurl.Hostname()\u003c/code\u003e\u003c/a\u003e method, which returns the hostname. If you do not want the \u003ccode\u003ewww.\u003c/code\u003e prefix in your domain name, remove it with the \u003ca href=\"https://pkg.go.dev/strings#TrimPrefix\" target=\"_blank\"\u003e\u003ccode\u003estrings.TrimPrefix()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://www.gosamples.dev/abc/def\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehostname\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTrimPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHostname\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;www.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egosamples.dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a34736979fef129f2f05db83ce8c9b7d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🖖 Calculate Median in Go using Generics",
    "url": "https://gosamples.dev/calculate-median/",
    "resume": "\u003cp\u003eTo find the \u003ca href=\"https://en.wikipedia.org/wiki/Median\" target=\"_blank\"\u003emedian\u003c/a\u003e of a slice in Go, you need to write a custom function that sorts the input slice and gets the middle element. If the slice size is even, the function calculates the mean (average) of the two middle values. In the following examples, we will show two versions of this function: a regular one that takes a \u003ccode\u003efloat64\u003c/code\u003e slice as input, and a Generics version, that can work for \u003cstrong\u003eany\u003c/strong\u003e numeric type.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you are not already familiar with the basics of Generics in Go, check out our series of articles: \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003eIntroduction to Go Generics by example\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAlso, check out our tutorial on \u003ca href=\"https://gosamples.dev/calculate-mean\"\u003ehow to calculate the arithmetic mean in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"calculate-median-in-go---example\"\u003eCalculate median in Go - example\u003c/h2\u003e\n\u003cp\u003eTo calculate the median in the classic way, we need to create a new \u003ccode\u003emedian()\u003c/code\u003e function and start with the input data copy. Calculating the median requires sorting the data first, so to avoid modifying the original slice order, we need a copy of the input slice. We then take the middle value from this sorted slice. This is our median. If the data size is an odd number, the middle element will be the value at index \u003ccode\u003e\u0026lt;slice_length\u0026gt;/2\u003c/code\u003e. If the data size is even, it will be the arithmetic average of the two middle elements.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;sort\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFloat64s\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e111\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"use-generics-to-calculate-median\"\u003eUse Generics to calculate median\u003c/h2\u003e\n\u003cp\u003eSince the release of Generics in Go 1.18, it is possible to write the \u003ccode\u003emedian()\u003c/code\u003e function that works for a slice of any numeric type. Simply define the \u003ccode\u003eNumber\u003c/code\u003e constraint which is a union of \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Float\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Float\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Integer\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Integer\u003c/code\u003e\u003c/a\u003e to limit the input types to numeric. For more details, see the example on \u003ca href=\"https://gosamples.dev/calculate-mean/\"\u003ehow to calculate the arithmetic mean using Generics\u003c/a\u003e, where we also used the \u003ccode\u003eNumber\u003c/code\u003e constraint.\u003c/p\u003e\n\u003cp\u003eAnother difference is that, in the generic version, we use the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/slices#Sort\" target=\"_blank\"\u003e\u003ccode\u003eslices.Sort()\u003c/code\u003e\u003c/a\u003e function from the new \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/slices\" target=\"_blank\"\u003e\u003ccode\u003e/x/exp/slices\u003c/code\u003e\u003c/a\u003e package to sort the slice. It allows for generic sorting of slices of any type.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/exp/constraints\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/exp/slices\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFloat\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eInteger\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eslices\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edataCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emedian\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emedian\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint32\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e111\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe result is a function that works seamlessly for a slice of type \u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003eint64\u003c/code\u003e, \u003ccode\u003efloat64\u003c/code\u003e, etc., without having to copy code, or create special versions for each type.\u003c/p\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "58ca2eedd29a9ec9c3deeaf42f63c8dc",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🏋️‍♂️ Calculate the power of a number x^y in Go",
    "url": "https://gosamples.dev/calculate-power/",
    "resume": "\u003cp\u003eTo raise a number X to the power of Y in Go, use the \u003ca href=\"https://pkg.go.dev/math#Pow\" target=\"_blank\"\u003e\u003ccode\u003ePow(x, y float64)\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/math\" target=\"_blank\"\u003e\u003ccode\u003emath\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 2^7\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e128\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo calculate the power of 10 up to the Y exponent in Go, use the \u003ca href=\"https://pkg.go.dev/math#Pow10\" target=\"_blank\"\u003e\u003ccode\u003emath.Pow10(n int)\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePow10\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 10^3\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2df53de2a29f1649dac9dadafe5b3fb4",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🤏 Calculate arithmetic mean in Go using Generics",
    "url": "https://gosamples.dev/calculate-mean/",
    "resume": "\u003cp\u003eTo calculate the arithmetic mean (average value) in Go, you should write your own function that takes a slice of numbers as an input, sum all values in the slice, and divides the sum by the number of elements.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esum\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis function requires that the input slice to be of a certain type, such as \u003ccode\u003efloat64\u003c/code\u003e. In case you want to calculate the mean for a slice of, for example, \u003ccode\u003eint\u003c/code\u003e values, until recently you had to write a separate function that differed only in that it accepted an \u003ccode\u003eint\u003c/code\u003e slice as an argument. Another solution was to convert the slice to \u003ccode\u003efloat64\u003c/code\u003e before the calculation. However, the new version of Go 1.18, which introduced Generics, allows you to simplify this problem. All you need to do is write a generic \u003ccode\u003emean()\u003c/code\u003e function that takes a slice of \u003cstrong\u003eany numeric type\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/exp/constraints\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFloat\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eInteger\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esum\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emean\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eIf you are not already familiar with the basics of Generics in Go, check out our series of articles: \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003eIntroduction to Go Generics by example\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCheck also our example on \u003ca href=\"https://gosamples.dev/calculate-median\"\u003ehow to calculate median in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn the example above, we start with the custom constraint declaration. The \u003ccode\u003eNumber\u003c/code\u003e interface is a type set being union of \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Float\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Float\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Integer\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Integer\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis is a new feature released along with Generics in Go 1.18 - now interfaces can have not only a set of methods but also a set of types. Just use the \u003ccode\u003e|\u003c/code\u003e operator to declare the set of types that our generic function should accept. In our case, we accept \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Float\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Float\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Integer\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Integer\u003c/code\u003e\u003c/a\u003e types, which are themselves type sets containing all floating and integer point types.\u003c/p\u003e\n\u003cp\u003eThe rest of the new \u003ccode\u003emean()\u003c/code\u003e function is the same as in the non-generic version. The only difference is that we use type \u003ccode\u003eT\u003c/code\u003e instead of \u003ccode\u003efloat64\u003c/code\u003e for the input data. The function result is still \u003ccode\u003efloat64\u003c/code\u003e, because no matter if the input is a slice of integers or floating-point numbers, we can get a floating-point number as the result of the mean.\u003c/p\u003e",
    "date": "2022-04-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c9c39c611b9bc2eea21fd6f50746a5e5",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Answering questions for the Go-curious",
    "url": "https://changelog.com/gotime/224",
    "resume": "Has Go caught your interest, but you just haven’t had the time/opportunity to really dig into it? Are you relatively productive in your current language/ecosystem but wonder if the grass truly is greener on Go’s side of the fence? If so, this episode’s for you!",
    "date": "2022-04-07T19:15:00Z",
    "vote": 0
  },
  {
    "id": "518204c82c2ad7a7002e48a52079918f",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Qvault is moving to Boot.dev",
    "url": "https://blog.boot.dev/news/qvault-moves-to-bootdev/",
    "resume": "We’ll keep this announcement short – we’ve moved Qvault.io to Boot.dev! As you know, we’ve been hard at work bootstrapping on online computer science bootcamp.",
    "date": "2022-04-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "980e0428f7e6bf29eff57c9baf973d75",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🚧 Remove non-printable characters from a string in Go",
    "url": "https://gosamples.dev/remove-non-printable-characters/",
    "resume": "\u003cp\u003eWhen working with external files or user input, it is often a good idea to remove invisible characters that can cause problems. These characters are \u0026ldquo;non-printable\u0026rdquo; - they do not occupy a space in printing and fall under the \u003ca href=\"https://en.wikipedia.org/wiki/Unicode_character_property#General_Category\" target=\"_blank\"\u003e\u003ccode\u003eOther\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://en.wikipedia.org/wiki/Unicode_character_property#General_Category\" target=\"_blank\"\u003e\u003ccode\u003eSeparator\u003c/code\u003e\u003c/a\u003e category in the \u003ca href=\"https://en.wikipedia.org/wiki/Unicode\" target=\"_blank\"\u003e\u003ccode\u003eUnicode\u003c/code\u003e\u003c/a\u003e standard. For example, non-printable are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWhitespaces (except the ASCII space character)\u003c/li\u003e\n\u003cli\u003eTabs\u003c/li\u003e\n\u003cli\u003eLine breaks\u003c/li\u003e\n\u003cli\u003eCarriage returns\u003c/li\u003e\n\u003cli\u003eControl characters\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo remove non-printable characters from a string in Go, you should iterate over the string and check if a given rune is printable using the \u003ca href=\"https://pkg.go.dev/unicode#IsPrint\" target=\"_blank\"\u003e\u003ccode\u003eunicode.IsPrint()\u003c/code\u003e\u003c/a\u003e function. If not, the rune should be ignored, otherwise it should be added to the new string.\u003c/p\u003e\n\u003cp\u003eInstead of iterating and manually creating a new string in the \u003ccode\u003efor\u003c/code\u003e loop, you can use the \u003ccode\u003estrings.Map()\u003c/code\u003e, which returns a copy of the string with all characters modified according to the mapping function. The best part is that the character is dropped if the mapping function returns a negative value for a given rune. So, we can return \u003ccode\u003e-1\u003c/code\u003e for a non-printable character, and an unmodified rune if the \u003ca href=\"https://pkg.go.dev/unicode#IsPrint\" target=\"_blank\"\u003e\u003ccode\u003eunicode.IsPrint()\u003c/code\u003e\u003c/a\u003e returns \u003ccode\u003etrue\u003c/code\u003e. See the following example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;unicode\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etext\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\\u00a0e\\u200bhind\\n\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;---\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"kt\"\u003erune\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003erune\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eunicode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsPrint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eb e​hind\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebehind\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/unicode#IsPrint\" target=\"_blank\"\u003e\u003ccode\u003eunicode.IsPrint()\u003c/code\u003e\u003c/a\u003e returns \u003ccode\u003etrue\u003c/code\u003e for:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eletters\u003c/li\u003e\n\u003cli\u003emarks\u003c/li\u003e\n\u003cli\u003enumbers\u003c/li\u003e\n\u003cli\u003epunctuation\u003c/li\u003e\n\u003cli\u003esymbols\u003c/li\u003e\n\u003cli\u003ethe ASCII space character\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere is also a function \u003ca href=\"https://pkg.go.dev/unicode#IsGraphic\" target=\"_blank\"\u003e\u003ccode\u003eunicode.IsGraphic()\u003c/code\u003e\u003c/a\u003e, that works almost the same, except that it returns true for \u003cstrong\u003eall\u003c/strong\u003e space characters in the category \u003ca href=\"https://en.wikipedia.org/wiki/Unicode_character_property#General_Category\" target=\"_blank\"\u003e\u003ccode\u003eZs\u003c/code\u003e\u003c/a\u003e of the \u003ca href=\"https://en.wikipedia.org/wiki/Unicode\" target=\"_blank\"\u003e\u003ccode\u003eUnicode\u003c/code\u003e\u003c/a\u003e standard.\u003c/p\u003e",
    "date": "2022-04-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "497646664fa1acb0f4da2a3cdf400d0a",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🐤 Create a new file in Go",
    "url": "https://gosamples.dev/create-file/",
    "resume": "\u003cp\u003eTo create a new empty file in Go, use the \u003ca href=\"https://pkg.go.dev/os#Create\" target=\"_blank\"\u003e\u003ccode\u003eos.Create()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIt creates a new file if it does not exist, with the \u003ca href=\"https://en.wikipedia.org/wiki/File-system_permissions\" target=\"_blank\"\u003efile mode\u003c/a\u003e 0666, for reading and writing.\u003c/li\u003e\n\u003cli\u003eIt truncates the file if it exists, which means that the contents of the file are removed without deleting the file.\u003c/li\u003e\n\u003cli\u003eThe returned file descriptor is open for reading and writing.\u003c/li\u003e\n\u003cli\u003eIf there is some problem, the function returns an error of type \u003ca href=\"https://pkg.go.dev/os#PathError\" target=\"_blank\"\u003e\u003ccode\u003e*os.PathError\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFile.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eAlways remember to close the open file descriptor when you finish working with the file so that the system can reuse it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/blockquote\u003e\n\u003cp\u003eYou can then write data to this file. See how to do this in one of our previous tutorials \u003ca href=\"https://gosamples.dev/write-file/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e",
    "date": "2022-04-05T06:00:00Z",
    "vote": 0
  },
  {
    "id": "176b4c3da41ee273a8714f0e72caadc4",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🧹 Delete or remove a file in Go",
    "url": "https://gosamples.dev/delete-remove-file/",
    "resume": "\u003cp\u003eTo delete/remove a file in Go, use the built-in \u003ca href=\"https://pkg.go.dev/os#Remove\" target=\"_blank\"\u003e\u003ccode\u003eos.Remove()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRemove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testfile.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf the file exists, the function removes the file without any error. If there is some problem, it returns an error of type \u003ca href=\"https://pkg.go.dev/os#PathError\" target=\"_blank\"\u003e\u003ccode\u003e*os.PathError\u003c/code\u003e\u003c/a\u003e. For example, if the file does not exist, the error is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/04/05 06:16:05 remove testfile.txt: no such file or directory\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "37a57c13269217bc16e1c108d0ae87cf",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🦥 Ternary operator in Go",
    "url": "https://gosamples.dev/ternary-operator/",
    "resume": "\u003cp\u003eIn short, the ternary operator known from languages like \u003ccode\u003ePHP\u003c/code\u003e or \u003ccode\u003eJavaScript\u003c/code\u003e is not available in Go. But you can express the same condition using the \u003ccode\u003eif {..} else {..}\u003c/code\u003e block, which is longer but easier to understand. The fact that it is not in the syntax is the result of \u003ca href=\"https://go.dev/doc/faq#Does_Go_have_a_ternary_form\" target=\"_blank\"\u003ea deliberate choice by the language designers\u003c/a\u003e, who noticed that the ternary operator is often used to create overly complicated expressions.\u003c/p\u003e\n\u003cp\u003eAs a result, there is only one conditional control flow construct in Go: \u003ccode\u003eif {..} else {..}\u003c/code\u003e. So, instead of writing:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// this is not available in Go!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003evariable\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"err\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eexpressionIfTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eexpressionIfFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou need to write:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003evariable\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003evariable\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eexpressionIfTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003evariable\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eexpressionIfFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003epoints\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ex\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003epoints\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003epoints\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epoints\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e100\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-04-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "80f3bab95f20eeac1fc4a8ced09f0c57",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "How can we prevent legacy from creeping in?",
    "url": "https://changelog.com/gotime/223",
    "resume": "In this episode we will discuss what it’s like to work with legacy code. How you work with it, how to avoid issues arising due to it, as well as when a greenfield rewrite is the best path forward. Hosted by Angelica Hill, joined by some wonderful guests: Dominic St-Pierre, Jeff Hernandez, Misha Avrekh, and Jon Sabados.",
    "date": "2022-03-31T21:00:00Z",
    "vote": 0
  },
  {
    "id": "b74bb33100e1581ef157eb72a9b7b892",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "✌️ 4 ways to create or print string with double quotes in Go",
    "url": "https://gosamples.dev/string-double-quotes/",
    "resume": "\u003cp\u003eTo print or create a string with double quotes in Go, you can use any of the following methods:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFormat a string using \u003ccode\u003e%q\u003c/code\u003e verb in the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e functions.\u003c/li\u003e\n\u003cli\u003eFormat a string using escaped double quotes \u003ccode\u003e\\\u0026quot;\u003c/code\u003e in the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e functions.\u003c/li\u003e\n\u003cli\u003eUse the \u003ca href=\"https://pkg.go.dev/strconv#Quote\" target=\"_blank\"\u003e\u003ccode\u003estrconv.Quote()\u003c/code\u003e\u003c/a\u003e function.\u003c/li\u003e\n\u003cli\u003eFormat a double-quoted string using a raw string literal - a string between back quotes \u003ccode\u003e`\u003c/code\u003e in the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e functions.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee the examples below to learn how each of these methods works.\u003c/p\u003e\n\u003ch2 id=\"print-a-string-with-double-quotes-using-the-q-format-verb\"\u003ePrint a string with double quotes using the \u003ccode\u003e%q\u003c/code\u003e format verb\u003c/h2\u003e\n\u003cp\u003eThe easiest method of creating of printing string with double quotes is to use the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e functions with the \u003ccode\u003e%q\u003c/code\u003e \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003eformat verb\u003c/a\u003e, which is designed to do just that. From the \u003ccode\u003efmt\u003c/code\u003e package documentation:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ccode\u003e%q\u003c/code\u003e\u003c/strong\u003e \u003ccode\u003ea double-quoted string safely escaped with Go syntax\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// print string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%q\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003equoted\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%q\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equoted\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"print-a-string-with-double-quotes-using-the-format-with-escaped-double-quotes\"\u003ePrint a string with double quotes using the format with escaped double quotes\u003c/h2\u003e\n\u003cp\u003eAlternatively, to print or create a string with double quotes, you can add these quotes manually in the format of the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e functions. Note that the quotes within the string must be escaped by adding a backslash character before the quotation mark: \u003ccode\u003e\\\u0026quot;\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// print string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\\u0026#34;%s\\\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003equoted\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\\u0026#34;%s\\\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equoted\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-a-string-with-double-quotes-using-the-strconvquotehttpspkggodevstrconvquote-function\"\u003eCreate a string with double quotes using the \u003ca href=\"https://pkg.go.dev/strconv#Quote\" target=\"_blank\"\u003e\u003ccode\u003estrconv.Quote()\u003c/code\u003e\u003c/a\u003e function\u003c/h2\u003e\n\u003cp\u003eIt is also possible to use the function \u003ca href=\"https://pkg.go.dev/strconv#Quote\" target=\"_blank\"\u003e\u003ccode\u003estrconv.Quote()\u003c/code\u003e\u003c/a\u003e to create a new string with double quotes. In this case, printing and creating look almost the same because you need to create the quoted string first, and then you can print or use it in the application.\u003c/p\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strconv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// print string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003equoted\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equoted\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"print-a-string-with-double-quotes-using-back-quotes-raw-string-format\"\u003ePrint a string with double quotes using back quotes (raw string) format\u003c/h2\u003e\n\u003cp\u003eThe last, most human-friendly method for creating or printing string with double quotes is to use the raw string literal in the format of the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e functions. The raw string literal is any character sequence between back quotes, such as \u003ccode\u003e`abc`\u003c/code\u003e. Strings between back quotes are printed as they are, they may contain newlines, and escape characters are not interpreted.\u003c/p\u003e\n\u003cp\u003eSo in our case, we do not have to use the escaped double-quote character as in the second example. The only problem is when we want to print the quoted string with the newline at the end. Look at the example below. Since we are printing the raw string, we have to use \u003ccode\u003eEnter\u003c/code\u003e to add a newline character which makes the code look ugly. For this reason, we recommend using the second method rather, with the double quotes escaped.\u003c/p\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// print string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e`\u0026#34;%s\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create string with double quotes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003equoted\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e`\u0026#34;%s\u0026#34;`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equoted\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003cp\u003eAll of the examples return the same output 😉:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Hello https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Hello https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-03-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9eb55c2bda7c3f2b382d7d66ac799e09",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗑️ Remove duplicates from any slice using Generics in Go",
    "url": "https://gosamples.dev/generics-remove-duplicates-slice/",
    "resume": "\u003cp\u003eIn one of \u003ca href=\"https://gosamples.dev/remove-duplicates-slice/\"\u003eour previous examples\u003c/a\u003e, we created a function that removes duplicate values from a slice in Go. This function, however, needs to be reimplemented each time the slice is of a different type. So, if we had \u003ccode\u003e[]int\u003c/code\u003e and \u003ccode\u003e[]string\u003c/code\u003e slices that we wanted to remove duplicates from, so far, we needed two functions: \u003ccode\u003euniqueString()\u003c/code\u003e and \u003ccode\u003euniqueInt()\u003c/code\u003e. But with the release of the Generics in \u003ca href=\"https://go.dev/doc/go1.18\" target=\"_blank\"\u003eGo 1.18\u003c/a\u003e, this is no longer necessary. We can write a single function that will work on any slice where the values satisfy the \u003ca href=\"https://go.dev/ref/spec#Type_constraints\" target=\"_blank\"\u003e\u003ccode\u003ecomparable\u003c/code\u003e\u003c/a\u003e constraint.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomparable\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einResult\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003einResult\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einResult\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruitRank\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"kt\"\u003euint64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;cde\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;efg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;efg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;cde\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruits\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruitRank\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003eabc cde efg\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e 4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[{\u003c/span\u003eStrawberry 1\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eRaspberry 2\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eBlueberry 3\u003cspan class=\"o\"\u003e}]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eIf you are not already familiar with the basics of Generics in Go, check out our series of articles: \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003eIntroduction to Go Generics by example\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe function differs from the non-generic version only in that it uses a type parameter \u003ccode\u003eT\u003c/code\u003e with the \u003ca href=\"https://go.dev/ref/spec#Type_constraints\" target=\"_blank\"\u003e\u003ccode\u003ecomparable\u003c/code\u003e\u003c/a\u003e constraint. This is a built-in constraint that describes any type on which the \u003ccode\u003e==\u003c/code\u003e and \u003ccode\u003e!=\u003c/code\u003e operators can be used.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eunique()\u003c/code\u003e function that we created is a universal duplicate removal function that, as you can see in the output of the example, works on any \u003ccode\u003ecomparable\u003c/code\u003e slice such as \u003ccode\u003e[]string\u003c/code\u003e, \u003ccode\u003e[]int\u003c/code\u003e, or a defined \u003ccode\u003estruct\u003c/code\u003e slice.\u003c/p\u003e",
    "date": "2022-03-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "868736ef6d78e872ddd1c3664431f8d8",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⌨️ Read user input in Go [cheatsheet]",
    "url": "https://gosamples.dev/read-user-input/",
    "resume": "\u003cp\u003eTo read user input from the terminal console in Go, you can use several methods:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/fmt#Scanln\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanln()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/fmt#Scan\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scan()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/fmt#Scanf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanf()\u003c/code\u003e\u003c/a\u003e functions which allow you to read successive words into separate variables.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/bufio#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Reader\u003c/code\u003e\u003c/a\u003e struct which can read a line of the input text or a single character.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/bufio#Scanner\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Scanner\u003c/code\u003e\u003c/a\u003e which provides a convenient interface for reading lines of text.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAs usual, which method to use depends on the use case. In the next sections, we will show how to read a single or multiple lines of the user input from the console, how to read a single character, how to read data from formatted input, and finally, how to read numbers from the terminal.\u003c/p\u003e\n\u003ch2 id=\"read-a-single-line-from-standard-input\"\u003eRead a single line from standard input\u003c/h2\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__3\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-fmtscanlnhttpspkggodevfmtscanln-to-read-a-single-line-of-text\"\u003eUse \u003ca href=\"https://pkg.go.dev/fmt#Scanln\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanln()\u003c/code\u003e\u003c/a\u003e to read a single line of text\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ew1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew3\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScanln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ew1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ew2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ew3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;number of items read: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read line: %s %s %s-\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enumber of items read: \u003cspan class=\"m\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e line: ab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef-\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-bufioreaderhttpspkggodevbufioreader-to-read-a-single-line-of-text\"\u003eUse \u003ca href=\"https://pkg.go.dev/bufio#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Reader\u003c/code\u003e\u003c/a\u003e to read a single line of text\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;\\n\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read line: %s-\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e line: ab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-bufioscannerhttpspkggodevbufioscanner-to-read-a-single-line-of-text\"\u003eUse \u003ca href=\"https://pkg.go.dev/bufio#Scanner\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Scanner\u003c/code\u003e\u003c/a\u003e to read a single line of text\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read line: %s-\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enumber of items read: \u003cspan class=\"m\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e line: ab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef-\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eUse the \u003ca href=\"https://pkg.go.dev/fmt#Scanln\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanln()\u003c/code\u003e\u003c/a\u003e function if you want to read each word of a line into a different variable, and there is a certain number of words to read, no less, no more.\u003c/li\u003e\n\u003cli\u003eUse the \u003ca href=\"https://pkg.go.dev/bufio#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Reader\u003c/code\u003e\u003c/a\u003e if you want to read a full line of text together with the newline character.\u003c/li\u003e\n\u003cli\u003eUse the \u003ca href=\"https://pkg.go.dev/bufio#Scanner\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Scanner\u003c/code\u003e\u003c/a\u003e to read a full line of text in a convenient way without the newline character.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"read-multiple-lines-from-console\"\u003eRead multiple lines from console\u003c/h2\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__3\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-fmtscanhttpspkggodevfmtscan-to-read-multiple-lines-of-text\"\u003eUse \u003ca href=\"https://pkg.go.dev/fmt#Scan\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scan()\u003c/code\u003e\u003c/a\u003e to read multiple lines of text\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ew1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew3\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ew1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ew2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ew3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;number of items read: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read text: %s %s %s-\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ew3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eef\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enumber of items read: \u003cspan class=\"m\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e text: ab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef-\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eWith the \u003ca href=\"https://pkg.go.dev/fmt#Scan\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scan()\u003c/code\u003e\u003c/a\u003e you can read multiple lines of text only if the line consists of a single word.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-bufioreaderhttpspkggodevbufioreader-to-read-multiple-lines-of-text\"\u003eUse \u003ca href=\"https://pkg.go.dev/bufio#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Reader\u003c/code\u003e\u003c/a\u003e to read multiple lines of text\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;\\n\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTrimSpace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elines\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;output:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef gh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehj kl mn op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoutput:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef gh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehj kl mn op\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-bufioscannerhttpspkggodevbufioscanner-to-read-multiple-lines-of-text\"\u003eUse \u003ca href=\"https://pkg.go.dev/bufio#Scanner\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Scanner\u003c/code\u003e\u003c/a\u003e to read multiple lines of text\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elines\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;output:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef gh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehj kl mn op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoutput:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ef gh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehj kl mn op\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eUse the \u003ca href=\"https://pkg.go.dev/fmt#Scan\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scan()\u003c/code\u003e\u003c/a\u003e if you want to read multiple words where each word is on a separate line.\u003c/li\u003e\n\u003cli\u003eUse the \u003ca href=\"https://pkg.go.dev/bufio#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Reader\u003c/code\u003e\u003c/a\u003e if you want to read multiple lines together with the newline character at the end of each line.\u003c/li\u003e\n\u003cli\u003eThe most recommended and universal method of reading multiple lines is to use the \u003ca href=\"https://pkg.go.dev/bufio#Scanner\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Scanner\u003c/code\u003e\u003c/a\u003e, which allows you to get a list of input lines without the newline character at the end of each line.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"read-a-single-character-from-terminal\"\u003eRead a single character from terminal\u003c/h2\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__2\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-bufioreaderhttpspkggodevbufioreader-to-read-a-single-character\"\u003eUse \u003ca href=\"https://pkg.go.dev/bufio#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Reader\u003c/code\u003e\u003c/a\u003e to read a single character\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadRune\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read character: %c-\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eabfd\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e character: a-\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-fmtscanfhttpspkggodevfmtscanf-to-read-a-single-character\"\u003eUse \u003ca href=\"https://pkg.go.dev/fmt#Scanf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanf()\u003c/code\u003e\u003c/a\u003e to read a single character\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003echar\u003c/span\u003e \u003cspan class=\"kt\"\u003erune\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScanf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read character: %c-\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eabcd\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e character: a-\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003eReading a single character is possible via the \u003ca href=\"https://pkg.go.dev/bufio#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Reader\u003c/code\u003e\u003c/a\u003e and its \u003ca href=\"https://pkg.go.dev/bufio#Reader.ReadRune\" target=\"_blank\"\u003e\u003ccode\u003eReadRune()\u003c/code\u003e\u003c/a\u003e method, which returns the rune, the size of the rune, and the reading error.\u003c/li\u003e\n\u003cli\u003eA slightly simpler, single-line method for reading a character is to use the \u003ca href=\"https://pkg.go.dev/fmt#Scanf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanf()\u003c/code\u003e\u003c/a\u003e function with the \u003ccode\u003e%c\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"read-formatted-user-input\"\u003eRead formatted user input\u003c/h2\u003e\n\u003cp\u003eWhen you want to accept text only of a specific format and read certain items into variables, the best method is to use the \u003ca href=\"https://pkg.go.dev/fmt#Scanf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanf()\u003c/code\u003e\u003c/a\u003e function, which reads the text according to a given format.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input text:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ecountry\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScanf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s is born in %s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ecountry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;number of items read: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecountry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput text:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAnna is born in Germany\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enumber of items read: \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAnna Germany\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"read-numbers-from-user-input\"\u003eRead numbers from user input\u003c/h2\u003e\n\u003cp\u003eReading numbers from the terminal console can be done by using the \u003ca href=\"https://pkg.go.dev/fmt#Scanf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanf()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#Scan\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scan()\u003c/code\u003e\u003c/a\u003e functions. The first one requires an input format - for numbers, it is \u003ccode\u003e%d\u003c/code\u003e for integers or \u003ccode\u003e%f\u003c/code\u003e for floating-point numbers. The second, which is simpler, does not require a format but discovers itself how the input data should be parsed to match the output variable.\u003c/p\u003e\n\u003cdiv class=\"cheatsheet-row cheatsheet-row__2\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-fmtscanfhttpspkggodevfmtscanf-to-read-a-number\"\u003eUse \u003ca href=\"https://pkg.go.dev/fmt#Scanf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scanf()\u003c/code\u003e\u003c/a\u003e to read a number\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input number:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScanf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read number: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput number:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e number: \u003cspan class=\"m\"\u003e8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch3 id=\"use-fmtscanhttpspkggodevfmtscan-to-read-a-number\"\u003eUse \u003ca href=\"https://pkg.go.dev/fmt#Scan\" target=\"_blank\"\u003e\u003ccode\u003efmt.Scan()\u003c/code\u003e\u003c/a\u003e to read a number\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input number:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;read number: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einput number:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eread\u003c/span\u003e number: \u003cspan class=\"m\"\u003e8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e",
    "date": "2022-03-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "65407fa6e5278ae1e38d034629fadbf2",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Making the command line glamorous",
    "url": "https://changelog.com/gotime/222",
    "resume": "This week we’re bringing The Changelog to Go Time — we had an awesome conversation with Toby Padilla, Co-Founder at Charm where they’re building tools to make the command line glamorous. Toby and the team at Charm have gone “all in” on Go — all of Charm is written in Go. They moved to Go from other languages, saying “Go is the answer to building these type of tools.” And even on this episode Toby says “I love Rust, it’s really cool, it’s a super-exciting language, but I jumped ship. I wanna be more productive, I wanna use all the fun toys, and so I started doing Go.” Clearly this episode will be in good company here on Go Time. We talk about the state of the art, the next big thing happening on the command line and in ssh-land. They have an array of open source tooling to build great apps for the terminal and Charm Cloud to power a new generation of CLI apps. We talk through all their tooling, where things are headed for CLI apps, the focus and attention of their team, and what’s to come in bringing glamor to the command line.",
    "date": "2022-03-25T19:00:00Z",
    "vote": 0
  },
  {
    "id": "b5cb57203ae19554e78aa9f6b3800734",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Go 1.18 is here!",
    "url": "https://www.youtube.com/watch?v=-JdfKb3HwMU",
    "resume": "",
    "date": "2022-03-24T16:00:01Z",
    "vote": 0
  },
  {
    "id": "4d6cd7a578bc3e100b4ef8d546acf5ac",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🕰️ Date and time format in Go cheatsheet",
    "url": "https://gosamples.dev/date-time-format-cheatsheet/",
    "resume": "\u003cdiv class=\"cheatsheet-row cheatsheet-row__3\"\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch2 id=\"format-date\"\u003eFormat date\u003c/h2\u003e\n\u003cp\u003eTo format a date in Go, use the \u003ca href=\"https://pkg.go.dev/time#Time.Format\" target=\"_blank\"\u003e\u003ccode\u003etime.Format()\u003c/code\u003e\u003c/a\u003e method of the \u003ca href=\"https://pkg.go.dev/time#Time\" target=\"_blank\"\u003e\u003ccode\u003eTime\u003c/code\u003e\u003c/a\u003e struct:\u003c/p\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRFC3339\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch2 id=\"parse-date\"\u003eParse date\u003c/h2\u003e\n\u003cp\u003eTo parse a date in Go, use the \u003ca href=\"https://pkg.go.dev/time#Parse\" target=\"_blank\"\u003e\u003ccode\u003etime.Parse()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/time\" target=\"_blank\"\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/a\u003e package:\u003c/p\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// date time format layout\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eYYYYMMDD\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2006-01-02\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2022-03-23\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eYYYYMMDD\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"cheatsheet-row__item\"\u003e\n\u003ch2 id=\"parse-date-with-a-timezone\"\u003eParse date with a timezone\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/time#Parse\" target=\"_blank\"\u003e\u003ccode\u003etime.Parse()\u003c/code\u003e\u003c/a\u003e interprets a time as \u003ca href=\"https://en.wikipedia.org/wiki/Coordinated_Universal_Time\" target=\"_blank\"\u003eUTC\u003c/a\u003e. To parse a time at a specific location, use the \u003ca href=\"https://pkg.go.dev/time#ParseInLocation\" target=\"_blank\"\u003e\u003ccode\u003etime.ParseInLocation()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"cheatsheet-code\"\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2022-03-23T07:00:00+01:00\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eloc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLoadLocation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Europe/Berlin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParseInLocation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRFC3339\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eloc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 id=\"reference-layout\"\u003eReference layout\u003c/h2\u003e\n\u003cp\u003eTo format or parse a date, you need to specify the layout of the input or output date string. The Go language uses a specific date layout format in which each part of the date has an ordinal index:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003e\u0026quot;01/02 03:04:05PM '06 -0700\u0026quot;\u003c/code\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e01\u003c/code\u003e\u003c/strong\u003e - month\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e02\u003c/code\u003e\u003c/strong\u003e - day\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e03\u003c/code\u003e\u003c/strong\u003e - hour (12h)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e04\u003c/code\u003e\u003c/strong\u003e - minute\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e05\u003c/code\u003e\u003c/strong\u003e - second\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e06\u003c/code\u003e\u003c/strong\u003e - year\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e07\u003c/code\u003e\u003c/strong\u003e - time zone offset\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"useful-date-and-time-layouts\"\u003eUseful date and time layouts\u003c/h2\u003e\n\u003cp\u003eSome layouts, not defined in the \u003ca href=\"https://pkg.go.dev/time\" target=\"_blank\"\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/a\u003e package, which are useful in everyday coding:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// YYYY-MM-DD: 2022-03-23\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eYYYYMMDD\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2006-01-02\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 24h hh:mm:ss: 14:23:20\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eHHMMSS24h\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;15:04:05\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 12h hh:mm:ss: 2:23:20 PM\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eHHMMSS12h\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;3:04:05 PM\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// text date: March 23, 2022\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eTextDate\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;January 2, 2006\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// text date with weekday: Wednesday, March 23, 2022\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eTextDateWithWeekday\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Monday, January 2, 2006\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// abbreviated text date: Mar 23 Wed\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eAbbrTextDate\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Jan 2 Mon\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"predefined-layouts\"\u003ePredefined layouts\u003c/h2\u003e\n\u003cp\u003eThe built-in time/date layouts defined in the \u003ca href=\"https://pkg.go.dev/time\" target=\"_blank\"\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/a\u003e package:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eLayout\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;01/02 03:04:05PM \u0026#39;06 -0700\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// The reference time, in numerical order.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eANSIC\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Mon Jan _2 15:04:05 2006\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eUnixDate\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Mon Jan _2 15:04:05 MST 2006\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRubyDate\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Mon Jan 02 15:04:05 -0700 2006\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRFC822\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;02 Jan 06 15:04 MST\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRFC822Z\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;02 Jan 06 15:04 -0700\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// RFC822 with numeric zone\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eRFC850\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Monday, 02-Jan-06 15:04:05 MST\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRFC1123\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Mon, 02 Jan 2006 15:04:05 MST\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRFC1123Z\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Mon, 02 Jan 2006 15:04:05 -0700\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// RFC1123 with numeric zone\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eRFC3339\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2006-01-02T15:04:05Z07:00\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRFC3339Nano\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2006-01-02T15:04:05.999999999Z07:00\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eKitchen\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;3:04PM\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// Handy time stamps.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eStamp\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Jan _2 15:04:05\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eStampMilli\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Jan _2 15:04:05.000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eStampMicro\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Jan _2 15:04:05.000000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eStampNano\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Jan _2 15:04:05.000000000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"all-date-formatting-strings\"\u003eAll date formatting strings\u003c/h2\u003e\n\u003ch3 id=\"date-format\"\u003eDate format\u003c/h3\u003e\n\u003cdiv class=\"cheatsheeet-table__container\"\u003e\n\u003ctable class=\"cheatsheet-table\"\u003e\n\u003ccaption\u003eYear format\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eGo layout\u003c/th\u003e\n\u003cth\u003eFormat\u003c/th\u003e\n\u003cth\u003eExample\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e2006\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eYYYY\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"2022\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eFour-digit year\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e06\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eYY\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"22\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo-digit year\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable class=\"cheatsheet-table\"\u003e\n\u003ccaption\u003eMonth format\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eGo layout\u003c/th\u003e\n\u003cth\u003eFormat\u003c/th\u003e\n\u003cth\u003eExample\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eJanuary\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eMMMM\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"July\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eFull month name\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eJan\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eMMM\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"Jul\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eThree-letter abbreviation of the month\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e01\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eMM\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"07\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo-digit month (with a leading 0 if necessary)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e1\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eM\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"7\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAt most two-digit month (without a leading 0)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable class=\"cheatsheet-table\"\u003e\n\u003ccaption\u003eDay format\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eGo layout\u003c/th\u003e\n\u003cth\u003eFormat\u003c/th\u003e\n\u003cth\u003eExample\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eMonday\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eDDDD\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"Tuesday\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eFull weekday name\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eMon\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eDDD\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"Tue\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eThree-letter abbreviation of the weekday\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e02\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eDD\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"08\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo-digit month day (with a leading 0 if necessary)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e_2\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e_D\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\" 8\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo-character month day with a leading space if necessary\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e2\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eD\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"8\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAt most two-digit month day (without a leading 0)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e002\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eddd\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"074\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eThree-digit day of the year (with a leading 0 if necessary)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e__2\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e__d\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\" 74\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eThree-character day of the year with a leading spaces if necessary\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003ch3 id=\"time-format\"\u003eTime format\u003c/h3\u003e\n\u003cdiv class=\"cheatsheeet-table__container\"\u003e\n\u003ctable class=\"cheatsheet-table\"\u003e\n\u003ccaption\u003eHour format\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eGo layout\u003c/th\u003e\n\u003cth\u003eFormat\u003c/th\u003e\n\u003cth\u003eExample\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e15\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003ehh\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"17\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo-digit 24h format hour\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e03\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003ehh\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"05\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo digit 12h format hour (with a leading 0 if necessary)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e3\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eh\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"5\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAt most two-digit 12h format hour (without a leading 0)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003ePM\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eam/pm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"AM\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAM/PM mark (uppercase)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003epm\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eam/pm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"am\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAM/PM mark (lowercase)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable class=\"cheatsheet-table\"\u003e\n\u003ccaption\u003eMinute format\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eGo layout\u003c/th\u003e\n\u003cth\u003eFormat\u003c/th\u003e\n\u003cth\u003eExample\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e04\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003emm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"07\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo-digit minute (with a leading 0 if necessary)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e4\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003em\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"7\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAt most two-digit minute (without a leading 0)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable class=\"cheatsheet-table\"\u003e\n\u003ccaption\u003eSecond format\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eGo layout\u003c/th\u003e\n\u003cth\u003eFormat\u003c/th\u003e\n\u003cth\u003eExample\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e05\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003ess\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"09\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTwo-digit second (with a leading 0 if necessary)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e5\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003es\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"9\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAt most two-digit second (without a leading 0)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e.0\u003c/span\u003e, \u003cspan class=\"cheatsheet-string\"\u003e.00\u003c/span\u003e, \u0026hellip;, \u003cspan class=\"cheatsheet-string\"\u003e.000000000\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e.s\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\".126284000\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eA fractional second (trailing zeros included)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e.9\u003c/span\u003e, \u003cspan class=\"cheatsheet-string\"\u003e.99\u003c/span\u003e, \u0026hellip;, \u003cspan class=\"cheatsheet-string\"\u003e.999999999\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e.s\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\".126284\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eA fractional second (trailing zeros omitted)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\u003ch3 id=\"time-zone-format\"\u003eTime zone format\u003c/h3\u003e\n\u003cdiv class=\"cheatsheeet-table__container\"\u003e\n\u003ctable class=\"cheatsheet-table\"\u003e\n\u003ccaption\u003eTime zone format\u003c/caption\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eGo layout\u003c/th\u003e\n\u003cth\u003eFormat\u003c/th\u003e\n\u003cth\u003eExample\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eMST\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eTTT\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"CEST\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAbbreviation of the time zone\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e-070000\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e±hhmmss\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+010000\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumeric time zone offset with hours, minutes, and seconds\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e-07:00:00\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e±hh:mm:ss\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+01:00:00\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumeric time zone offset with hours, minutes, and seconds separated by colons\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e-0700\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e±hhmm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+0100\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumeric time zone offset with hours and minutes\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e-07:00\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e±hh:mm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+01:00\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumeric time zone offset with hours and minutes separated by colons\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003e-07\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003e±hh\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+01\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumeric time zone offset with hours\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eZ070000\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eZ or ±hhmmss\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+010000\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eLike \u003cspan class=\"cheatsheet-string\"\u003e-070000\u003c/span\u003e but prints \u003ccode\u003e\"Z\"\u003c/code\u003e instead of \u003ccode\u003e\"+000000\"\u003c/code\u003e for the UTC zone (ISO 8601 behavior)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eZ07:00:00\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eZ or ±hh:mm:ss\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+01:00:00\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eLike \u003cspan class=\"cheatsheet-string\"\u003e-07:00:00\u003c/span\u003e but prints \u003ccode\u003e\"Z\"\u003c/code\u003e instead of \u003ccode\u003e\"+00:00:00\"\u003c/code\u003e for the UTC zone (ISO 8601 behavior)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eZ0700\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eZ or ±hhmm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+0100\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eLike \u003cspan class=\"cheatsheet-string\"\u003e-0700\u003c/span\u003e but prints \u003ccode\u003e\"Z\"\u003c/code\u003e instead of \u003ccode\u003e\"+0000\"\u003c/code\u003e for the UTC zone (ISO 8601 behavior)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eZ07:00\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eZ or ±hh:mm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+01:00\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eLike \u003cspan class=\"cheatsheet-string\"\u003e-07:00\u003c/span\u003e but prints \u003ccode\u003e\"Z\"\u003c/code\u003e instead of \u003ccode\u003e\"+00:00\"\u003c/code\u003e for the UTC zone (ISO 8601 behavior)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003cspan class=\"cheatsheet-string\"\u003eZ07\u003c/span\u003e\u003c/td\u003e\n\u003ctd\u003eZ or ±hh\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e\"+01\"\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eLike \u003cspan class=\"cheatsheet-string\"\u003e-07\u003c/span\u003e but prints \u003ccode\u003e\"Z\"\u003c/code\u003e instead of \u003ccode\u003e\"+00\"\u003c/code\u003e for the UTC zone (ISO 8601 behavior)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e",
    "date": "2022-03-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c360a7965c3bcfd2a94a41c2aa7cb5b3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Mastering Go",
    "url": "https://changelog.com/gotime/221",
    "resume": "What does it take to master a programming language like Go? Joining us is the author of Mastering Go to help us answer that very question and to discuss the third edition of the book.",
    "date": "2022-03-17T15:45:00Z",
    "vote": 0
  },
  {
    "id": "900af64b0cbe9a020b5e8f4e8f0fbd2d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔉 Reduce function using Generics in Go",
    "url": "https://gosamples.dev/generics-reduce/",
    "resume": "\u003cp\u003eThe \u003ccode\u003ereduce()\u003c/code\u003e function is a functional programming concept popularized by other programming languages such as JavaScript and Python. It works by reducing an array to a single value by applying a function generating a partial result to each element of the array. The result after the last item is the cumulative value from the entire list. So far in Go, it has not been easy to create this type of function that would work for different types. However, with the Go 1.18 release, which introduces Generics, this is no longer a problem.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article is part of the Introduction to Go Generics series. Go \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003ehere\u003c/a\u003e to see more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eM\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003einitValue\u003c/span\u003e \u003cspan class=\"nx\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eM\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eacc\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003einitValue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eacc\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eacc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eacc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eacc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecurrent\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eacc\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ecurrent\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edivided\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eacc\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecurrent\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eacc\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mf\"\u003e10.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edivided\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e55\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e5.5\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s look at the example. The \u003ccode\u003ereduce()\u003c/code\u003e function takes as parameters:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA slice of \u003ca href=\"https://go.dev/ref/spec#Basic_interfaces\" target=\"_blank\"\u003e\u003ccode\u003eany\u003c/code\u003e\u003c/a\u003e type \u003ccode\u003eT\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAn initial value of \u003ca href=\"https://go.dev/ref/spec#Basic_interfaces\" target=\"_blank\"\u003e\u003ccode\u003eany\u003c/code\u003e\u003c/a\u003e type \u003ccode\u003eM\u003c/code\u003e which is a start value of our \u003cem\u003eaccumulator\u003c/em\u003e - the value that accumulates partial results of \u003cem\u003ereducer\u003c/em\u003e function calls. Note that the accumulator type need not be the same as the slice type.\u003c/li\u003e\n\u003cli\u003eA \u003cem\u003ereducer\u003c/em\u003e function that takes the accumulator and current value of the slice and returns the new accumulator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAs a result, we created a function that works similarly to the \u003ccode\u003ereduce()\u003c/code\u003e known from other languages. In the first example of the \u003ccode\u003emain()\u003c/code\u003e, it is used to sum a slice of numbers, and in the second, to sum the same slice, where each value is divided by 10 and the result is \u003ccode\u003efloat64\u003c/code\u003e rather than \u003ccode\u003eint\u003c/code\u003e.\u003c/p\u003e",
    "date": "2022-03-16T13:00:00Z",
    "vote": 0
  },
  {
    "id": "7f265ff53e202973c4830817ce9649ac",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🦾 Create a slice 'map' function using Generics in Go",
    "url": "https://gosamples.dev/generics-map-function/",
    "resume": "\u003cp\u003eThe \u003ccode\u003emap()\u003c/code\u003e function is another functional programming paradigm that can be easily implemented in Go thanks to the new Generics feature. It works by applying a function that takes a single slice element as an argument, transforms it, and returns output value, where the types taken and returned need not be the same. For example, you can use the \u003ccode\u003emap()\u003c/code\u003e function to convert \u003ccode\u003estring\u003c/code\u003e to \u003ccode\u003eint\u003c/code\u003e\nslice; or format each element of the \u003ccode\u003estring\u003c/code\u003e slice, without changing the output type. Such different use cases are not problematic when using Generics as the \u003ccode\u003emap()\u003c/code\u003e can run on any input and output types.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article is part of the Introduction to Go Generics series. Go \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003ehere\u003c/a\u003e to see more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strconv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003emapSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eM\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eM\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nx\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enewNumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003emapSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enewNumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewords\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equoted\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003emapSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewords\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equoted\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estringPowNumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003emapSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormatFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;f\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringPowNumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e 5\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;d\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e16\u003c/span\u003e \u003cspan class=\"m\"\u003e81\u003c/span\u003e \u003cspan class=\"m\"\u003e256\u003c/span\u003e 625\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003emapSlice()\u003c/code\u003e function (we use the name \u003ccode\u003emapSlice()\u003c/code\u003e because \u003ccode\u003emap\u003c/code\u003e is Golang keyword) takes two type parameters. \u003ccode\u003eT\u003c/code\u003e is the type of the input slice, and \u003ccode\u003eM\u003c/code\u003e is the type of the output slice. Both of them can be of any type. The function also takes two arguments: the slice \u003ccode\u003ea\u003c/code\u003e and the function \u003ccode\u003ef\u003c/code\u003e that transforms each of its elements. Notice that this function converts the value of the input type \u003ccode\u003eT\u003c/code\u003e into the output type \u003ccode\u003eM\u003c/code\u003e. The \u003ccode\u003emapSlice()\u003c/code\u003e works by creating a new output slice of the same length as the input and transforming each element of the input slice into the output slice in a loop by using the \u003ccode\u003ef\u003c/code\u003e function. This simple code is enough to get a universal \u003ccode\u003emap()\u003c/code\u003e function that, as the example shows, can square \u003ccode\u003efloat64\u003c/code\u003e elements of a slice, format strings by adding quotes, or raise numbers to a power.\u003c/p\u003e",
    "date": "2022-03-16T12:00:00Z",
    "vote": 0
  },
  {
    "id": "fc51f541dc5218693e9f5d60a23aad49",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "💂 Filter a slice using Generics in Go",
    "url": "https://gosamples.dev/generics-filter/",
    "resume": "\u003cp\u003eUntil now, it was difficult to create in Go the \u003ca href=\"https://en.wikipedia.org/wiki/Filter_%28higher-order_function%29\" target=\"_blank\"\u003e\u003ccode\u003efilter()\u003c/code\u003e\u003c/a\u003e function known from \u003ca href=\"https://en.wikipedia.org/wiki/Functional_programming\" target=\"_blank\"\u003efunctional programming\u003c/a\u003e, which filters any list of elements according to the boolean value of the \u003ca href=\"https://en.wikipedia.org/wiki/Predicate_%28mathematical_logic%29\" target=\"_blank\"\u003epredicate\u003c/a\u003e. It was possible if you knew the type of the list:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e9\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe main drawback of this solution was that you had to write a separate function for each slice type or use \u003ccode\u003einterface{}\u003c/code\u003e and type assertions.\u003c/p\u003e\n\u003cp\u003eHowever, with the release of Generics in Go 1.18, we got the ability to write functions where type is a parameter. So now there is no problem writing a \u003ccode\u003efilter()\u003c/code\u003e function that operates on a slice of any type.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article is part of the Introduction to Go Generics series. Go \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003ehere\u003c/a\u003e to see more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewebsites\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://foo.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://bar.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttpsWebsites\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsites\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHasPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttpsWebsites\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edivisibleBy2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edivisibleBy2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ehttps://bar.com https://gosamples.dev\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e 6\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003efilter()\u003c/code\u003e function takes as an argument a slice of type \u003ccode\u003eT\u003c/code\u003e. The \u003ccode\u003eT\u003c/code\u003e type has the \u003ca href=\"https://go.dev/ref/spec#Basic_interfaces\" target=\"_blank\"\u003e\u003ccode\u003eany\u003c/code\u003e\u003c/a\u003e constraint, and as you already know from \u003ca href=\"https://gosamples.dev/generics-map-keys\"\u003eour previous tutorial on Generics\u003c/a\u003e, this constraint means that there are no requirements on the type of the slice - it can be anything. The same type \u003ccode\u003eT\u003c/code\u003e is used as an argument to the predicate function that checks whether the value should be added to the result. The body of the \u003ccode\u003efilter()\u003c/code\u003e function is simple. It performs an iteration over the slice and adds to the result those elements that return \u003ccode\u003etrue\u003c/code\u003e from the predicate function. As you can see in the output of the example, it works with slices of both \u003ccode\u003estring\u003c/code\u003e and \u003ccode\u003eint\u003c/code\u003e types, as well as any other type.\u003c/p\u003e",
    "date": "2022-03-16T11:00:00Z",
    "vote": 0
  },
  {
    "id": "28191b610c931e2ed7a6349a78a04953",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🩰 Sort a slice of any type using Generics in Go",
    "url": "https://gosamples.dev/generics-sort-slice/",
    "resume": "\u003cp\u003eSorting a slice in Go is one of the things that you used to have to re-write every time there was a new slice type. Sometimes you ended up with the same code for two different types. Since Go 1.18, and thanks to the new Generics feature, this is no longer an issue. You can write a single universal sort function that works for any type whose values can be ordered.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article is part of the Introduction to Go Generics series. Go \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003ehere\u003c/a\u003e to see more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eInstead of writing your own function, you can use sorting functions \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/slices#Sort\" target=\"_blank\"\u003e\u003ccode\u003eslices.Sort()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/slices#SortFunc\" target=\"_blank\"\u003e\u003ccode\u003eslices.SortFunc()\u003c/code\u003e\u003c/a\u003e from the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/slices\" target=\"_blank\"\u003e\u003ccode\u003egolang.org/x/exp/slices\u003c/code\u003e\u003c/a\u003e package, released together with the Go 1.18.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;sort\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/exp/constraints\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003esortSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efloatSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mf\"\u003e2.3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e51.2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003esortSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efloatSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efloatSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estringSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;z\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003esortSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estringSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eintSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003esortSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eintSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eintSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe only new thing we introduce here compared to \u003ca href=\"https://gosamples.dev/generics-map-keys\"\u003eour previous tutorial\u003c/a\u003e is the new \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Ordered\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Ordered\u003c/code\u003e\u003c/a\u003e constraint in the \u003ccode\u003esortSlice()\u003c/code\u003e function. It guarantees that the function can sort values of any type supporting the operators \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e. For proof, see the output of the \u003ccode\u003emain()\u003c/code\u003e examples, where three different type slices are sorted with a single function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e0.2 1.2 2.3 51.2\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ea b z\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e 6\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSorting is a very natural use case for the new Generics feature. It makes the code concise and introduces virtually no complexity.\u003c/p\u003e",
    "date": "2022-03-16T10:00:00Z",
    "vote": 0
  },
  {
    "id": "6982731a40bdfcaa0e1ee9d75cb4f6d5",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔑 Get a slice of keys from any map using Generics in Go",
    "url": "https://gosamples.dev/generics-map-keys/",
    "resume": "\u003cp\u003eBefore Go 1.18, when you wanted to pull a list of keys from a map in Go, you had to write code that iterated over the map and added the keys to a slice. Since then, with the new Generics feature, you can write a single universal function that gets keys from \u003cstrong\u003eany\u003c/strong\u003e map and use it whenever you need it. No more writing code for a specific type of map 😉.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article is part of the Introduction to Go Generics series. Go \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003ehere\u003c/a\u003e to see more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAlong with the Go 1.18 release, the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/maps\" target=\"_blank\"\u003e\u003ccode\u003egolang.org/x/exp/maps\u003c/code\u003e\u003c/a\u003e package has also been released, with the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/maps#Keys\" target=\"_blank\"\u003e\u003ccode\u003eKeys()\u003c/code\u003e\u003c/a\u003e function working the same as the one below.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomparable\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eV\u003c/span\u003e \u003cspan class=\"nx\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"nx\"\u003eV\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nx\"\u003eK\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003evegetableSet\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;cabbage\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;vegetableSet keys: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003evegetableSet\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;fruitRank keys: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003ekeys()\u003c/code\u003e function takes a map as an argument, in which the keys are of the type with \u003ca href=\"https://go.dev/ref/spec#Type_constraints\" target=\"_blank\"\u003e\u003ccode\u003ecomparable\u003c/code\u003e\u003c/a\u003e constraint, and the values, with \u003ca href=\"https://go.dev/ref/spec#Basic_interfaces\" target=\"_blank\"\u003e\u003ccode\u003eany\u003c/code\u003e\u003c/a\u003e constraint. As you may already know from \u003ca href=\"https://gosamples.dev/generics-slice-contains\"\u003eour previous tutorial on Generics\u003c/a\u003e, the \u003ca href=\"https://go.dev/ref/spec#Type_constraints\" target=\"_blank\"\u003e\u003ccode\u003ecomparable\u003c/code\u003e\u003c/a\u003e constraint describes types whose values can be compared, meaning that the \u003ccode\u003e==\u003c/code\u003e and \u003ccode\u003e!=\u003c/code\u003e operators can be used on them. The \u003ca href=\"https://go.dev/ref/spec#Basic_interfaces\" target=\"_blank\"\u003e\u003ccode\u003eany\u003c/code\u003e\u003c/a\u003e constraint is equivalent to \u003ccode\u003einterface{}\u003c/code\u003e - it accepts any type, so the values of a map can be anything.\u003c/p\u003e\n\u003cp\u003eThe rest of the function is very simple. It returns a slice of keys \u003ccode\u003e[]K\u003c/code\u003e, so in the first line of the function body, the resulting slice is created. Notice that it has a capacity equal to the size of the map. Then, in a loop, each map key is added to the resulting slice. Running the example code with two different maps, you get the output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003evegetableSet\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003epotato\u003c/span\u003e \u003cspan class=\"nx\"\u003ecabbage\u003c/span\u003e \u003cspan class=\"nx\"\u003ecarrot\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e \u003cspan class=\"nx\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd that\u0026rsquo;s all. Now, with a single \u003ccode\u003ekeys()\u003c/code\u003e function, you can get a list of keys for any map.\u003c/p\u003e",
    "date": "2022-03-16T06:00:00Z",
    "vote": 0
  },
  {
    "id": "a64512366d5825e0c2322027aff7bd48",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔍 'Slice contains' function using Generics in Go",
    "url": "https://gosamples.dev/generics-slice-contains/",
    "resume": "\u003cp\u003eChecking if an array contains a given value is a popular programming function implemented natively in many programming languages. In Go, we have to implement it ourselves, but thanks to the new Generics feature, we can write a single \u003ccode\u003econtains()\u003c/code\u003e function that will work for slices of any type whose values can be compared.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you want to see how to write the \u003ccode\u003econtains()\u003c/code\u003e function without Generics, that only works for string slices, check one of our previous tutorials \u003ca href=\"https://gosamples.dev/slice-contains\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article is part of the Introduction to Go Generics series. Go \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003ehere\u003c/a\u003e to see more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomparable\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eAlong with the Go 1.18 release, the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/slices\" target=\"_blank\"\u003e\u003ccode\u003egolang.org/x/exp/slices\u003c/code\u003e\u003c/a\u003e package has also been released, with the \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/slices#Contains\" target=\"_blank\"\u003e\u003ccode\u003eContains()\u003c/code\u003e\u003c/a\u003e function working the same as the one above.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAs you already know from \u003ca href=\"https://gosamples.dev/generics-min-max\"\u003eour previous Generics tutorial\u003c/a\u003e, the type parameters of the generic functions are declared in square brackets after the function name. In the \u003ccode\u003econtains()\u003c/code\u003e, we use the \u003ccode\u003eT\u003c/code\u003e type parameter with the \u003ca href=\"https://go.dev/ref/spec#Type_constraints\" target=\"_blank\"\u003e\u003ccode\u003ecomparable\u003c/code\u003e\u003c/a\u003e constraint. It is a built-in constraint that describes any type whose values can be compared, i.e., we can use \u003ccode\u003e==\u003c/code\u003e and \u003ccode\u003e!=\u003c/code\u003e operators on them. The function body is really simple and does not differ from the non-generic version. We iterate over the \u003ccode\u003eelems\u003c/code\u003e slice and check if the current value is the value \u003ccode\u003ev\u003c/code\u003e we are looking for. This way, we get a function that can operate on any slice type.\u003c/p\u003e\n\u003cp\u003eOutput of the \u003ccode\u003emain()\u003c/code\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-03-16T05:00:00Z",
    "vote": 0
  },
  {
    "id": "812f6f48668d47e3689fcccb0d47aac6",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "☯️ Min and max functions using Generics in Go",
    "url": "https://gosamples.dev/generics-min-max/",
    "resume": "\u003cp\u003eGetting the minimum and maximum from a slice are some of the simplest functions that are written by developers during everyday coding. The problem is that when you wanted to get the minimum or maximum from \u003ccode\u003eint\u003c/code\u003e and \u003ccode\u003efloat64\u003c/code\u003e slices, up until now, you had to write two functions for each slice type. However, since version 1.18, Go has introduced the much-anticipated Generics, and you can now write single \u003ccode\u003emin()\u003c/code\u003e and \u003ccode\u003emax()\u003c/code\u003e functions that work for any ordered type.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article is part of the Introduction to Go Generics series. Go \u003ca href=\"https://gosamples.dev/tags/generics-intro/\"\u003ehere\u003c/a\u003e to see more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/exp/constraints\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ezero\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ezero\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"nx\"\u003econstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eOrdered\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ezero\u003c/span\u003e \u003cspan class=\"nx\"\u003eT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ezero\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003em\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mf\"\u003e3.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e5.1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e6.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e7.6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e8.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e4.8\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eGeneric functions need type parameters that describe types that are allowed for a given function and provide the type label used in the function body. As you can see in the example, they are declared in square brackets after the name of a function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eTypeLabel\u003c/span\u003e \u003cspan class=\"nx\"\u003eConstraints\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the \u003ccode\u003emin()\u003c/code\u003e and \u003ccode\u003emax()\u003c/code\u003e functions we declare a type parameter \u003ccode\u003eT\u003c/code\u003e with \u003ca href=\"https://pkg.go.dev/golang.org/x/exp/constraints#Ordered\" target=\"_blank\"\u003e\u003ccode\u003econstraints.Ordered\u003c/code\u003e\u003c/a\u003e constraint. It guarantees that the functions work only for slice types that support the operators \u003ccode\u003e\u0026lt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e. The rest of the functions are pretty straightforward. They take a slice of type \u003ccode\u003eT\u003c/code\u003e as an argument, return a zero value for a given type if the slice has size 0, and find the minimum or maximum of the slice in a loop. As a result, they return a single min or max value of type \u003ccode\u003eT\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eFrom the example above, we get the following output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e8.2\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt is really exciting how, thanks to Generics, it is possible to make things that were not possible before in Go. We are sure that this feature will improve the code quality of any Go project 😊.\u003c/p\u003e",
    "date": "2022-03-16T04:00:00Z",
    "vote": 0
  },
  {
    "id": "62a07b7cd3898a60d2f3f67fcbaf31f7",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📅 YYYY-MM-DD date format in Go",
    "url": "https://gosamples.dev/date-format-yyyy-mm-dd/",
    "resume": "\u003cp\u003eTo format date in Go as \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e, use the \u003ca href=\"https://pkg.go.dev/time#Time.Format\" target=\"_blank\"\u003e\u003ccode\u003etime.Format()\u003c/code\u003e\u003c/a\u003e function with the layout: \u003ccode\u003e\u0026quot;2006-01-02\u0026quot;\u003c/code\u003e. To format date as \u003ccode\u003eDD/MM/YYYY\u003c/code\u003e, use the \u003ccode\u003e\u0026quot;02/01/2006\u0026quot;\u003c/code\u003e layout. To format date as \u003ccode\u003eYYYY-MM-DD hh:mm:ss\u003c/code\u003e, use the \u003ccode\u003e\u0026quot;2006-01-02 15:04:05\u0026quot;\u003c/code\u003e layout.\u003c/p\u003e\n\u003ch2 id=\"examples\"\u003eExamples\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you are not familiar with the Go date formatting layouts, read \u003ca href=\"https://pkg.go.dev/time#pkg-constants\" target=\"_blank\"\u003ethe documentation\u003c/a\u003e in the \u003ca href=\"https://pkg.go.dev/time\" target=\"_blank\"\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSee also \u003ca href=\"https://gosamples.dev/date-time-format-cheatsheet\"\u003ethe cheatsheet on date and time format in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"yyyy-mm-dd-date-format-in-go\"\u003eYYYY-MM-DD date format in Go\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eYYYYMMDD\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2006-01-02\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eYYYYMMDD\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022-03-14\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"ddmmyyyy-date-format-in-go\"\u003eDD/MM/YYYY date format in Go\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eDDMMYYYY\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;02/01/2006\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eDDMMYYYY\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e14/03/2022\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"yyyy-mm-dd-hhmmss-date-format-in-go\"\u003eYYYY-MM-DD hh:mm:ss date format in Go\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eDDMMYYYYhhmmss\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2006-01-02 15:04:05\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUTC\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eDDMMYYYYhhmmss\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022-03-14 05:41:33\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-03-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7acebdee1bf5b3d63114f32ad27146fe",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🌯 Wrap and Unwrap errors in Go",
    "url": "https://gosamples.dev/wrap-unwrap-errors/",
    "resume": "\u003cp\u003eWrapping errors in Go means adding extra context information to the returned error like the name of the function where the error occurred, the cause, the type, etc. This technique is most commonly used to create clear error messages, which are especially useful for debugging when you want quickly and precisely locate the source of problems.\u003c/p\u003e\n\u003cp\u003eTo wrap an error in Go, you need to create a new error using the \u003cbr\u003e\n\u003ca href=\"https://pkg.go.dev/fmt#Errorf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Errorf(format string, a \\.\\.\\.interface{}) error\u003c/code\u003e\u003c/a\u003e function with the verb \u003cstrong\u003e\u003ccode\u003e%w\u003c/code\u003e\u003c/strong\u003e in the \u003ccode\u003eformat\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorCritical\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;critical error\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ewrapped\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;[functionName] internal error: %w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorCritical\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe resulting error is a chain, in which the wrapped error can be \u0026lsquo;unwrapped\u0026rsquo; using the \u003ca href=\"https://pkg.go.dev/errors#Unwrap\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Unwrap()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewrapped\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorCritical\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// true\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt is also possible to check if a given error exists anywhere in the chain thanks to the \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eerrors.As()\u003c/code\u003e\u003c/a\u003e functions. See the examples below for details on how to wrap, unwrap, and test for error types.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCheck out more examples of error handling in Go using the \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eerrors.As()\u003c/code\u003e\u003c/a\u003e functions in \u003ca href=\"https://gosamples.dev/check-error-type\"\u003eour other tutorial\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"examples\"\u003eExamples\u003c/h2\u003e\n\u003cp\u003eIn the first example, we create the \u003ccode\u003egetError()\u003c/code\u003e function that returns a non-wrap, single-wrap, or double-wrap error depending on the parameter set. The error we wrap is a simple built-in \u003ccode\u003eerror\u003c/code\u003e instance.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;internal error\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003egetError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elevel\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elevel1Err\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;[getData] level 1 error: %w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel1Err\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;[getData] level 2 error: %w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel1Err\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egetError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;is error internal: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unwrapped error: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;---\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003egetError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;is error internal: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eunwrapped\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unwrapped error: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eunwrapped\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unwrapped unwrapped error: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eunwrapped\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eis error internal: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e level \u003cspan class=\"m\"\u003e1\u003c/span\u003e error: internal error\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunwrapped error: internal error\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eis error internal: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e level \u003cspan class=\"m\"\u003e2\u003c/span\u003e error: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e level \u003cspan class=\"m\"\u003e1\u003c/span\u003e error: internal error\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunwrapped error: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e level \u003cspan class=\"m\"\u003e1\u003c/span\u003e error: internal error\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunwrapped unwrapped error: internal error\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s go through the \u003ccode\u003emain()\u003c/code\u003e function and the output. In lines \u003ccode\u003e25-29\u003c/code\u003e, we get a single-wrap error and test if it is an \u003ccode\u003eErrorInternal\u003c/code\u003e error. As you can see, the \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e\u003c/a\u003e function returns \u003ccode\u003etrue\u003c/code\u003e because it checks if any error in the chain matches the target. It does not matter that the error is wrapped. A simple comparison \u003ccode\u003eif err == ErrorInternal\u003c/code\u003e would give \u003ccode\u003efalse\u003c/code\u003e in this case, so it is generally a better idea to use the \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e\u003c/a\u003e function to compare errors equality. Then, we unwrap the error using the \u003ca href=\"https://pkg.go.dev/errors#Unwrap\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Unwrap()\u003c/code\u003e\u003c/a\u003e and print it to the standard output. Unwrapping the error gives the \u003ccode\u003eErrorInternal\u003c/code\u003e that we wrapped before.\u003c/p\u003e\n\u003cp\u003eIn lines \u003ccode\u003e33-39\u003c/code\u003e, we get a double-wrap error. The \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e\u003c/a\u003e returns that the \u003ccode\u003eErrorInternal\u003c/code\u003e is in the chain, even though it is double-wrapped. As you might expect, a double unwrapping is needed to get to the \u003ccode\u003eErrorInternal\u003c/code\u003e.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eSimilarly, you can wrap, unwrap and test for errors of a specific \u003cstrong\u003etype\u003c/strong\u003e. Look at the second example below. The result is analogous to the first example with a simple \u003ccode\u003eerror\u003c/code\u003e instance. The only difference is the use of the \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eerrors.As()\u003c/code\u003e\u003c/a\u003e function instead of \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e\u003c/a\u003e, which checks if the error in the chain is of the specific type.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMore examples of error handling using the \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eerrors.As()\u003c/code\u003e\u003c/a\u003e can be found \u003ca href=\"https://gosamples.dev/check-error-type\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efunction\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eError\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;[%s] error internal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003egetError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elevel\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elevel1Err\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;level 1 error: %w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;getData\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel1Err\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;level 2 error: %w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elevel1Err\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;getData\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egetError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003einternalErr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrorInternal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003einternalErr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;is error internal: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unwrapped error: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;---\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003egetError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003einternalErr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;is error internal: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eunwrapped\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unwrapped error: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eunwrapped\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unwrapped unwrapped error: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eunwrapped\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eis error internal: level \u003cspan class=\"m\"\u003e1\u003c/span\u003e error: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e error internal\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunwrapped error: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e error internal\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eis error internal: level \u003cspan class=\"m\"\u003e2\u003c/span\u003e error: level \u003cspan class=\"m\"\u003e1\u003c/span\u003e error: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e error internal\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunwrapped error: level \u003cspan class=\"m\"\u003e1\u003c/span\u003e error: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e error internal\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunwrapped unwrapped error: \u003cspan class=\"o\"\u003e[\u003c/span\u003egetData\u003cspan class=\"o\"\u003e]\u003c/span\u003e error internal\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-03-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b6d975d64af71a16f503f5331b090976",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Bob Logblaw Log Blog",
    "url": "https://changelog.com/gotime/220",
    "resume": "Ed Welch joins Mat and Jon to discuss logging. They explore the different options for logging in Go, and discuss what data is worth including. Everything from log levels, formats, non-structured vs structured logs, along with common gotchas and good practices when dealing with logs at scale.",
    "date": "2022-03-10T22:20:00Z",
    "vote": 0
  },
  {
    "id": "29c934dd9eb9bbb9bc701f12299eff5c",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🎠 Round float to any precision in Go",
    "url": "https://gosamples.dev/round-float/",
    "resume": "\u003cp\u003eTo round a floating-point number in Go, you can use the \u003ca href=\"https://pkg.go.dev/math#Round\" target=\"_blank\"\u003e\u003ccode\u003emath.Round()\u003c/code\u003e\u003c/a\u003e function from the built-in \u003ca href=\"https://pkg.go.dev/math\" target=\"_blank\"\u003e\u003ccode\u003emath\u003c/code\u003e\u003c/a\u003e package. However, this function rounds to the nearest integer, so it cannot be used directly to round a float to a particular precision. But you can use it to create your own function that rounds to any decimal places. All you need to do is:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003emultiply the number to be rounded times 10 to the power of \u003ccode\u003eX\u003c/code\u003e, where \u003ccode\u003eX\u003c/code\u003e is the precision you want to achieve\u003c/li\u003e\n\u003cli\u003eround this raised number to the nearest integer value using the \u003ca href=\"https://pkg.go.dev/math#Round\" target=\"_blank\"\u003e\u003ccode\u003emath.Round()\u003c/code\u003e\u003c/a\u003e function\u003c/li\u003e\n\u003cli\u003edivide the rounded number by 10 to the power of \u003ccode\u003eX\u003c/code\u003e, where \u003ccode\u003eX\u003c/code\u003e is the rounding decimal precision\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIn this way, by rounding the raised number to the nearest integer and then dividing, we get a number rounded to the specified decimal places.\u003c/p\u003e\n\u003ch2 id=\"examples\"\u003eExamples\u003c/h2\u003e\n\u003cp\u003eThe \u003ccode\u003eroundFloat()\u003c/code\u003e is a floating-point rounding function, working as described above. The way it works is shown in the example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eprecision\u003c/span\u003e \u003cspan class=\"kt\"\u003euint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eratio\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprecision\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRound\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eratio\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nx\"\u003eratio\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mf\"\u003e12.3456789\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mf\"\u003e12.3456789\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12.35\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12.346\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12.3457\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12.34568\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-12\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-12.3\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-12.3456789\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"round-float-to-2-decimal-places\"\u003eRound float to 2 decimal places\u003c/h3\u003e\n\u003cp\u003eFull example of rounding a float to 2 decimal places:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eprecision\u003c/span\u003e \u003cspan class=\"kt\"\u003euint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eratio\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprecision\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRound\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eratio\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nx\"\u003eratio\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mf\"\u003e12.3456789\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12.35\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"round-float-to-3-decimal-places\"\u003eRound float to 3 decimal places\u003c/h3\u003e\n\u003cp\u003eFull example of rounding a float to 3 decimal places:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eprecision\u003c/span\u003e \u003cspan class=\"kt\"\u003euint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eratio\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eprecision\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRound\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eratio\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nx\"\u003eratio\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mf\"\u003e12.3456789\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eroundFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12.346\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-03-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "eecc302f774fd733238caddd82823db4",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Blockchain In Go: Part II: Transaction Distribution and Synchronization",
    "url": "https://www.ardanlabs.com/blog/2022/03/blockchain-02-transaction-distribution-synchronization.html",
    "resume": "Introduction In the first post, I explained there were four aspects of a blockchain that this series would explore with a backing implementation provided by the Ardan blockchain project.\nDigital accounts with electronic signatures and verification Transaction distribution and synchronization between computers Redundant storage and consensus by different computers Detection of any fraud to past transactions The first post focused on how the Ardan blockchain provides support for digital accounts, signatures, and verification.",
    "date": "2022-03-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e75c843805ac4fad17b77bc77f8158ac",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗝️ Check if a map contains a key in Go",
    "url": "https://gosamples.dev/map-contains-key/",
    "resume": "\u003cp\u003eTo check if a given key exists in a map in Go, use the special form of the \u003ca href=\"https://go.dev/ref/spec#Index_expressions\" target=\"_blank\"\u003eindex expression\u003c/a\u003e \u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003ev, ok := a[k]\u003c/code\u003e\u003c/div\u003e which returns two elements - a value \u003ccode\u003ev\u003c/code\u003e of the map with the key \u003ccode\u003ek\u003c/code\u003e, and a boolean value \u003ccode\u003eok\u003c/code\u003e equal to \u003ccode\u003etrue\u003c/code\u003e if the key \u003ccode\u003ek\u003c/code\u003e is present in the map. If not, the \u003ccode\u003eok\u003c/code\u003e is false.\u003c/p\u003e\n\u003ch2 id=\"example\"\u003eExample\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"how-to-check-if-a-key-exists-in-a-map-directly-in-an-if-statement\"\u003eHow to check if a key exists in a map directly in an if statement\u003c/h2\u003e\n\u003cp\u003eIn everyday coding, a common situation is that you only want to execute a certain piece of code if a given key exists in the map. In Go, you can do this by combining the \u003ccode\u003eif\u003c/code\u003e statement with the map index expression.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eIf\u003c/code\u003e statements \u003ca href=\"https://go.dev/ref/spec#If_statements\" target=\"_blank\"\u003ecan be preceded by simple statements\u003c/a\u003e that allow you to assign map values directly in the \u003ccode\u003eif\u003c/code\u003e, before evaluating it.\u003c/p\u003e\n\u003ch2 id=\"why-is-checking-for-zero-values-not-sufficient\"\u003eWhy is checking for zero values not sufficient?\u003c/h2\u003e\n\u003cp\u003eYou may be wondering why we cannot use the simpler map index expression which returns a single value and check if it is not \u003ca href=\"https://go.dev/ref/spec#The_zero_value\" target=\"_blank\"\u003ethe zero value\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key a exists\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ekey a exists\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt works fine if you are sure that your map does not contain zero values. Otherwise, the result will be incorrect:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// incorrect result\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key d exists\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key d does not exist\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ekey d does not exist\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor this reason, it is a better idea to use a two-values map index expression for checking whether a map contains a given key in Go.\u003c/p\u003e",
    "date": "2022-03-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "66eebf08578bbf657b0506130252af74",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📒 Print a number with (comma) thousands separator in Go",
    "url": "https://gosamples.dev/print-number-thousands-separator/",
    "resume": "\u003cp\u003eTo print a number with thousands separator in Go, you can use the \u003ca href=\"https://pkg.go.dev/golang.org/x/text/message#Printer\" target=\"_blank\"\u003e\u003ccode\u003ePrinter\u003c/code\u003e\u003c/a\u003e object from the official \u003ca href=\"https://pkg.go.dev/golang.org/x/text/message\" target=\"_blank\"\u003e\u003ccode\u003egolang.org/x/text/message\u003c/code\u003e\u003c/a\u003e package. Its job is to translate text strings from one language to another, and it also allows you to print numbers in a language-specific format.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMore specifically, the \u003ca href=\"https://pkg.go.dev/golang.org/x/text/message#Printer\" target=\"_blank\"\u003e\u003ccode\u003emessage.Printer\u003c/code\u003e\u003c/a\u003e object allows a number to be formatted using the \u003ca href=\"https://cldr.unicode.org/\" target=\"_blank\"\u003eUnicode CLDR\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/language\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/message\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1_000_000\u003c/span\u003e\u003cspan class=\"mf\"\u003e.23456\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewPrinter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eEnglish\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewithCommaThousandSep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewithCommaThousandSep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1,000,000.234560\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn standard English format, the comma is the thousands separator, and the point is the decimal separator. However, you can format the number in any language format:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/language\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;golang.org/x/text/message\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1_000_000\u003c/span\u003e\u003cspan class=\"mf\"\u003e.23456\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elangs\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eGerman\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eUkrainian\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eChinese\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eArabic\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elanguage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFrench\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003elangs\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewPrinter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewithCommaThousandSep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s %f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewithCommaThousandSep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ede 1.000.000,234560\nuk 1 000 000,234560\nzh 1,000,000.234560\nar ١٬٠٠٠٬٠٠٠٫٢٣٤٥٦٠\nfr 1 000 000,234560\n\u003c/code\u003e\u003c/pre\u003e",
    "date": "2022-03-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f98628fabdc0c31bf81661b49f4b848b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Build the Best Github Profile for Your Job Search",
    "url": "https://blog.boot.dev/jobs/build-github-profile/",
    "resume": "I’ve reviewed a lot of resumes, both as an engineering manager and in the monthly resume workshops we do in the Boot.",
    "date": "2022-03-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fab3e206184b8e9f30947389f41f45af",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Why immutable databases?",
    "url": "https://changelog.com/gotime/219",
    "resume": "Let’s talk about the concept of immutable databases, the problems they target, and why you’d want to build one in Go.",
    "date": "2022-03-03T18:30:00Z",
    "vote": 0
  },
  {
    "id": "6b8ea6101c940f677618140bbfc12e3d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🐜 Print HTTP request/response for debugging in Go",
    "url": "https://gosamples.dev/print-http-request-response/",
    "resume": "\u003cp\u003eWhen writing an HTTP server or client in Go, it is often useful to print the full HTTP request or response to the standard output for debugging purposes. Using \u003ca href=\"https://pkg.go.dev/fmt#Println\" target=\"_blank\"\u003e\u003ccode\u003efmt.Println()\u003c/code\u003e\u003c/a\u003e may not be sufficient in this case because the output is not formatted and difficult to read. The better idea is to use the \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpRequest\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpRequest()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpRequestOut\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpRequestOut()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpResponse\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpResponse()\u003c/code\u003e\u003c/a\u003e functions which were created to pretty-print the HTTP request and response. Such pretty-printing or dumping means that the request/response is presented in a similar format as it is sent to and received from the server.\u003c/p\u003e\n\u003cp\u003eThe rules for using these functions are simple:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpRequest\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpRequest()\u003c/code\u003e\u003c/a\u003e if you want to pretty-print the request on the server side.\u003c/li\u003e\n\u003cli\u003eUse \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpRequestOut\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpRequestOut()\u003c/code\u003e\u003c/a\u003e if you want to dump the request on the client side.\u003c/li\u003e\n\u003cli\u003eUse \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpResponse\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpResponse()\u003c/code\u003e\u003c/a\u003e if you want to log the server response.\u003c/li\u003e\n\u003cli\u003eThe second argument in each of these functions: \u003ccode\u003ebody bool\u003c/code\u003e is a flag indicating if the body of the request/response should also be returned.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"log-client-requests-and-responses\"\u003eLog client requests and responses\u003c/h2\u003e\n\u003cp\u003eCheck the example below to learn how to dump the HTTP client request and response using the \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpRequestOut\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpRequestOut()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpResponse\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpResponse()\u003c/code\u003e\u003c/a\u003e functions.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http/httputil\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eserverAddr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://example.com/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethodGet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eserverAddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test-header\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test-header-value\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereqDump\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttputil\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDumpRequestOut\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;REQUEST:\\n%s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereqDump\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDefaultClient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erespDump\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttputil\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDumpResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;RESPONSE:\\n%s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erespDump\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eREQUEST:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGET / HTTP/1.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHost: example.com\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eUser-Agent: Go-http-client/1.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eTest-Header: test-header-value\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept-Encoding: gzip\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRESPONSE:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHTTP/1.1 \u003cspan class=\"m\"\u003e200\u003c/span\u003e OK\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept-Ranges: bytes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAge: \u003cspan class=\"m\"\u003e357425\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eCache-Control: max-age\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e604800\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eContent-Type: text/html\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eUTF-8\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eDate: Fri, \u003cspan class=\"m\"\u003e25\u003c/span\u003e Feb \u003cspan class=\"m\"\u003e2022\u003c/span\u003e 06:48:03 GMT\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eEtag: \u003cspan class=\"s2\"\u003e\u0026#34;3147526947+gzip\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eExpires: Fri, \u003cspan class=\"m\"\u003e04\u003c/span\u003e Mar \u003cspan class=\"m\"\u003e2022\u003c/span\u003e 06:48:03 GMT\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eLast-Modified: Thu, \u003cspan class=\"m\"\u003e17\u003c/span\u003e Oct \u003cspan class=\"m\"\u003e2019\u003c/span\u003e 07:18:26 GMT\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eServer: ECS \u003cspan class=\"o\"\u003e(\u003c/span\u003ebsa/EB18\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eVary: Accept-Encoding\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eX-Cache: HIT\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;!doctype html\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;html\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;head\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;title\u0026gt;Example Domain\u0026lt;/title\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;meta \u003cspan class=\"nv\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;meta http-equiv\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Content-type\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;text/html; charset=utf-8\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;meta \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;viewport\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;width=device-width, initial-scale=1\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;style \u003cspan class=\"nv\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;text/css\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"log-requests-on-the-server-side\"\u003eLog requests on the server side\u003c/h2\u003e\n\u003cp\u003eFrom the example below, you can find out how to pretty-print an incoming server request using the \u003ca href=\"https://pkg.go.dev/net/http/httputil#DumpRequest\" target=\"_blank\"\u003e\u003ccode\u003ehttputil.DumpRequest()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http/httputil\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eport\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e8080\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eindexHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ew\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eResponseWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereqDump\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttputil\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDumpRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;REQUEST:\\n%s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereqDump\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello World\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHandleFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eindexHandler\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Starting HTTP server at port: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eListenAndServe\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;:%d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2022/02/25 07:03:20 Starting HTTP server at port: \u003cspan class=\"m\"\u003e8080\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eREQUEST:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGET / HTTP/1.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHost: localhost:8080\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept: text/html,application/xhtml+xml,application/xml\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.9,image/avif,image/webp,image/apng,*/*\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.8,application/signed-exchange\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003ev\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eb3\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.9\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept-Encoding: gzip, deflate, br\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept-Language: en-US,en\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.9,en-US\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.8,en\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.7\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eConnection: keep-alive\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eDnt: \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Ch-Ua: \u003cspan class=\"s2\"\u003e\u0026#34; Not A;Brand\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003ev\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;99\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;Chromium\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003ev\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;98\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;Google Chrome\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003ev\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;98\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Ch-Ua-Mobile: ?0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Ch-Ua-Platform: \u003cspan class=\"s2\"\u003e\u0026#34;macOS\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Fetch-Dest: document\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Fetch-Mode: navigate\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Fetch-Site: none\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Fetch-User: ?1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eUpgrade-Insecure-Requests: \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eUser-Agent: Mozilla/5.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eMacintosh\u003cspan class=\"p\"\u003e;\u003c/span\u003e Intel Mac OS X 10_15_7\u003cspan class=\"o\"\u003e)\u003c/span\u003e AppleWebKit/537.36 \u003cspan class=\"o\"\u003e(\u003c/span\u003eKHTML, like Gecko\u003cspan class=\"o\"\u003e)\u003c/span\u003e Chrome/98.0.4758.102 Safari/537.36\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eREQUEST:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGET /favicon.ico HTTP/1.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHost: localhost:8080\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept: image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.8\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept-Encoding: gzip, deflate, br\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAccept-Language: en-US,en\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.9,en-US\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.8,en\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003eq\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e0.7\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eConnection: keep-alive\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eDnt: \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eReferer: http://localhost:8080/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Ch-Ua: \u003cspan class=\"s2\"\u003e\u0026#34; Not A;Brand\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003ev\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;99\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;Chromium\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003ev\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;98\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;Google Chrome\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003ev\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;98\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Ch-Ua-Mobile: ?0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Ch-Ua-Platform: \u003cspan class=\"s2\"\u003e\u0026#34;macOS\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Fetch-Dest: image\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Fetch-Mode: no-cors\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSec-Fetch-Site: same-origin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eUser-Agent: Mozilla/5.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003eMacintosh\u003cspan class=\"p\"\u003e;\u003c/span\u003e Intel Mac OS X 10_15_7\u003cspan class=\"o\"\u003e)\u003c/span\u003e AppleWebKit/537.36 \u003cspan class=\"o\"\u003e(\u003c/span\u003eKHTML, like Gecko\u003cspan class=\"o\"\u003e)\u003c/span\u003e Chrome/98.0.4758.102 Safari/537.36\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-02-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "963aecfdf977ef6781ab6b8aa6f5542e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Going with GraphQL",
    "url": "https://changelog.com/gotime/218",
    "resume": "Mark Sandstrom and Ben Kraft join Jon and Mat to talk about GraphQL. What exactly is it this query language everyone has been talking about? How does it work? What Go libraries are out there, and where should you get started?",
    "date": "2022-02-24T17:20:00Z",
    "vote": 0
  },
  {
    "id": "42bd2348960a2f47b8d6959e66cb6418",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🐉 Do-while loop in Go",
    "url": "https://gosamples.dev/do-while/",
    "resume": "\u003cp\u003eThe \u003ccode\u003edo-while\u003c/code\u003e is a popular programming loop found in many languages such as C++, Java, or JavaScript. It is similar to the \u003ca href=\"https://gosamples.dev/while-loop\"\u003ewhile loop\u003c/a\u003e but with the difference that the body of the \u003ccode\u003edo-while\u003c/code\u003e is executed at least once. In Go, there is no special expression to create the \u003ccode\u003edo-while\u003c/code\u003e loop, but we can easily simulate it using a \u003ccode\u003efor\u003c/code\u003e loop. We just need to ensure that it executes at least once.\u003c/p\u003e\n\u003cp\u003eThe classic \u003ccode\u003efor\u003c/code\u003e has the form of:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003einitialization\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eloopBody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo ensure that it executes at least once, the \u003ccode\u003e\u0026lt;condition\u0026gt;\u003c/code\u003e must be \u003ccode\u003etrue\u003c/code\u003e for the first iteration and be dependent on the loop stop condition in subsequent iterations:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eloopBody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThere is also a simpler form of the \u003ccode\u003edo-while\u003c/code\u003e loop in Go, in which the \u003ccode\u003e\u0026lt;condition\u0026gt;\u003c/code\u003e of the \u003ccode\u003efor\u003c/code\u003e loop is checked after the \u003ccode\u003e\u0026lt;loopBody\u0026gt;\u003c/code\u003e and if it is not \u003ccode\u003etrue\u003c/code\u003e the loop is exited:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eloopBody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"examples\"\u003eExamples\u003c/h2\u003e\n\u003ch3 id=\"the-first-version-of-the-do-while-loop\"\u003eThe first version of the \u003ccode\u003edo-while\u003c/code\u003e loop:\u003c/h3\u003e\n\u003cp\u003ePrint the \u003ccode\u003ei\u003c/code\u003e variable if the value is less than 5:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCheck that the loop is executed at least once:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"the-second-version-of-the-do-while-loop\"\u003eThe second version of the \u003ccode\u003edo-while\u003c/code\u003e loop:\u003c/h3\u003e\n\u003cp\u003ePrint the \u003ccode\u003ei\u003c/code\u003e variable if the value is less than 5:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis version of the loop is also executed at least once 😉:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-02-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3d9b189dd38ae41e0aef7a638412abad",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The *other* features in Go 1.18",
    "url": "https://changelog.com/gotime/217",
    "resume": "On this episode, Michael Matloob and Daniel Martí pinky promise not to talk about Go 1.18’s two big features (fuzzing and generics). Instead, we’re focusing in on the other cool stuff that’s new!",
    "date": "2022-02-17T19:00:00Z",
    "vote": 0
  },
  {
    "id": "a2abc2605d182b8525e8e852309fc007",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "💕 Copy a map in Go",
    "url": "https://gosamples.dev/copy-map/",
    "resume": "\u003cp\u003eMaps in Go are \u003ca href=\"https://go.dev/blog/maps\" target=\"_blank\"\u003ereference types\u003c/a\u003e, so to deep copy the contents of a map, you cannot assign one instance to another. You can do this by creating a new, empty map and then iterating over the old map in a \u003ccode\u003efor range\u003c/code\u003e loop to assign the appropriate key-value pairs to the new map. It is the simplest and most efficient solution to this problem in Go.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// copy a map\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efruitRankCopy\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitRankCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitRankCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;original map\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;copied map\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruitRankCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoriginal map\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emap\u003cspan class=\"o\"\u003e[\u003c/span\u003eblueberry:2 raspberry:3 strawberry:1\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecopied map\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emap\u003cspan class=\"o\"\u003e[\u003c/span\u003eapple:4 blueberry:2 raspberry:3 strawberry:1\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you see in the output, the copied map is a deep clone, and adding new elements does not affect the old map.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eBe careful when making a shallow copy by assigning one map to another. In this case, a modification in either map will cause a change in the data of both maps.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitRankShallowCopy\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitRankShallowCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;original map\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruitRank\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;copied map\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruitRankShallowCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoriginal map\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emap\u003cspan class=\"o\"\u003e[\u003c/span\u003eapple:4 blueberry:2 raspberry:3 strawberry:1\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecopied map\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emap\u003cspan class=\"o\"\u003e[\u003c/span\u003eapple:4 blueberry:2 raspberry:3 strawberry:1\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-02-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e58b55f9ce06ae68ade0909ccc039d8a",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Blockchain In Go: Part I: Digital Accounts, Signatures and Verification",
    "url": "https://www.ardanlabs.com/blog/2022/02/blockchain-01-digital-accounts-signatures-verification.html",
    "resume": "Introduction This is the first post in a series that will explore the semantics and implementation details of the Ardan blockchain project. The code is a reference implementation of a blockchain and not intended to mirror any specific blockchain in use today. Even though the code has been engineered with production level coding standards, I wouldn\u0026rsquo;t use this project for anything more than learning.\nI am using the Ethereum project as a reference and have taken inspiration from that code.",
    "date": "2022-02-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cc804b0f8be6df25742994f88eabf4a4",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "◀️ Reverse sort a slice in Go",
    "url": "https://gosamples.dev/sort-slice-reverse/",
    "resume": "\u003cp\u003eIn Go, if you have a slice of simple type like \u003ccode\u003e[]int\u003c/code\u003e, \u003ccode\u003e[]string\u003c/code\u003e, or \u003ccode\u003e[]float64\u003c/code\u003e, you can sort the slice using the \u003ca href=\"https://pkg.go.dev/sort#Ints\" target=\"_blank\"\u003e\u003ccode\u003esort.Ints()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/sort#Strings\" target=\"_blank\"\u003e\u003ccode\u003esort.Strings()\u003c/code\u003e\u003c/a\u003e, or \u003ca href=\"https://pkg.go.dev/sort#Float64s\" target=\"_blank\"\u003e\u003ccode\u003esort.Float64s()\u003c/code\u003e\u003c/a\u003e functions. However, they only sort a slice in ascending order. To sort in descending order, you must use the more general function \u003ca href=\"https://pkg.go.dev/sort#Sort\" target=\"_blank\"\u003e\u003ccode\u003esort.Sort()\u003c/code\u003e\u003c/a\u003e with the data reversal function \u003ca href=\"https://pkg.go.dev/sort#Reverse\" target=\"_blank\"\u003e\u003ccode\u003esort.Reverse()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;sort\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// sort ints ascending\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eInts\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// sort ints descending\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIntSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// sort strings descending\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003echars\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStringSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"m\"\u003e5\u003c/span\u003e 7\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e7\u003c/span\u003e \u003cspan class=\"m\"\u003e5\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ec b a\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLook at the example. To sort a \u003ccode\u003e[]int\u003c/code\u003e slice in descending order you need to:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eConvert the \u003ccode\u003e[]int\u003c/code\u003e slice to \u003ca href=\"https://pkg.go.dev/sort#IntSlice\" target=\"_blank\"\u003e\u003ccode\u003esort.IntSlice\u003c/code\u003e\u003c/a\u003e, which makes the slice an instance of the \u003ca href=\"https://pkg.go.dev/sort#Interface\" target=\"_blank\"\u003e\u003ccode\u003esort.Interface\u003c/code\u003e\u003c/a\u003e interface.\u003c/li\u003e\n\u003cli\u003eReverse the standard ascending order of the elements included in the \u003ca href=\"https://pkg.go.dev/sort#IntSlice\" target=\"_blank\"\u003e\u003ccode\u003esort.IntSlice\u003c/code\u003e\u003c/a\u003e by using the \u003ca href=\"https://pkg.go.dev/sort#Reverse\" target=\"_blank\"\u003e\u003ccode\u003esort.Reverse()\u003c/code\u003e\u003c/a\u003e function.\u003c/li\u003e\n\u003cli\u003eSort the reversed slice using the general \u003ca href=\"https://pkg.go.dev/sort#Sort\" target=\"_blank\"\u003e\u003ccode\u003esort.Sort()\u003c/code\u003e\u003c/a\u003e function.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThe same scheme applies when sorting a \u003ccode\u003e[]string\u003c/code\u003e or \u003ccode\u003e[]float64\u003c/code\u003e list, but it must be converted to \u003ca href=\"https://pkg.go.dev/sort#StringSlice\" target=\"_blank\"\u003e\u003ccode\u003esort.StringSlice\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/sort#Float64Slice\" target=\"_blank\"\u003e\u003ccode\u003esort.Float64Slice\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThere is no built-in option to reverse the order when using the \u003ca href=\"https://pkg.go.dev/sort#Sort\" target=\"_blank\"\u003e\u003ccode\u003esort.Slice()\u003c/code\u003e\u003c/a\u003e with a custom sorting function \u003ccode\u003eless\u003c/code\u003e. However, we can do it ourselves. In the example below, the \u003ccode\u003ereverse()\u003c/code\u003e function \u0026ldquo;reverses\u0026rdquo; the \u003ccode\u003eless\u003c/code\u003e function. This way, we can create a single \u003ccode\u003eless\u003c/code\u003e function for sorting a slice of structs and then sort it in ascending or descending order depending on a parameter or use case.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;sort\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eless\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nf\"\u003eless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruits\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pink\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Banana\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;yellow\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eless\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// sort structs ascending\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eless\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// sort structs descending\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eless\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruits\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[{\u003c/span\u003eRaspberry pink 1\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eStrawberry red 2\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eBanana yellow 3\u003cspan class=\"o\"\u003e}]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[{\u003c/span\u003eBanana yellow 3\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eStrawberry red 2\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eRaspberry pink 1\u003cspan class=\"o\"\u003e}]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2022-02-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a34ef7f9258750bcf1009ac262ddfd35",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building and using APIs with Go",
    "url": "https://changelog.com/gotime/216",
    "resume": "Natalie and Johnny are joined by the co-founders of APIToolkit for a deep-dive on the topic. We discuss building them, maintaining them, how can we all be better users, and much more along the way.",
    "date": "2022-02-10T17:30:00Z",
    "vote": 0
  },
  {
    "id": "d93ae50c2a1e4c41e9fa34b10602e5e7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "8 Best Ways to Learn JavaScript, Personalized",
    "url": "https://blog.boot.dev/javascript/best-ways-to-learn-javascript/",
    "resume": "JavaScript is undoubtedly one of the best languages to learn as a developer, whether you\u0026rsquo;ve been at it for years or are just starting out.",
    "date": "2022-02-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a0df0ca786653d2a7190c42adcc6f01a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Long Does It Take To Learn JavaScript? (\u0026 How To Learn Fast)",
    "url": "https://blog.boot.dev/javascript/how-to-learn-javascript-fast/",
    "resume": "A good programming language is one that newcomers can learn fast. This is one of the reasons why JavaScript is so popular – it’s possible to learn Javascript quickly and with minimum fuss.",
    "date": "2022-02-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2dd77f2f06df84712e6ed43ee6943bd2",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Julia vs Python: Which is Best to Learn First?",
    "url": "https://blog.boot.dev/python/python-vs-julia/",
    "resume": "Anyone who’s anyone in the tech world has heard of Python. It’s one of the most popular programming languages in the world, and it’s been near the top of developer popularity rankings for years.",
    "date": "2022-02-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f6826537433ddf1ac01d208ce89e7065",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 7 Best Ways to Learn Golang and Find Your Inner Gopher",
    "url": "https://blog.boot.dev/golang/best-ways-to-learn-golang/",
    "resume": "Golang was released in 2012, making it a relatively new language when compared to competitors like Python, which was released nearly two decades prior, yet it’s managed to stay ahead of the game as not only a coveted language by employers, but also loved by programmers.",
    "date": "2022-02-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c6ddbc29893aef23913796ff2270bdc3",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "✂️ Remove duplicates from a slice in Go",
    "url": "https://gosamples.dev/remove-duplicates-slice/",
    "resume": "\u003cp\u003eIf you want to remove duplicate values from a slice in Go, you need to create a function that:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIterates over the slice.\u003c/li\u003e\n\u003cli\u003eChecks if a given value of the slice is in the set of the result values. If not, it adds the value to the resulting slice. If so, it skips the value (we already have it in the output slice).\u003c/li\u003e\n\u003cli\u003eReturns new output slice with duplicates removed.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe most important part of the \u003ccode\u003eunique()\u003c/code\u003e function is to create a set of seen values, which is a map of type \u003ccode\u003emap[string]bool\u003c/code\u003e, so it can check if the element is already in the resulting slice.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einResult\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003einResult\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einResult\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;cde\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;efg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;efg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;cde\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003eabc cde efg\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs an output, you get a new slice with all values unique. The function works in the same way for slices of different types. You just need to replace all occurrences of type \u003ccode\u003estring\u003c/code\u003e with another selected type.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWith the release of Generics in \u003ca href=\"https://go.dev/doc/go1.18\" target=\"_blank\"\u003eGo 1.18\u003c/a\u003e, you can write a universal function to remove duplicates without having to re-implement it every time a slice is of a different type. Check out how to do it \u003ca href=\"https://gosamples.dev/generics-remove-duplicates-slice/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e",
    "date": "2022-02-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9291f019e1324cfda92393a33e959f1b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "MLOps in Go",
    "url": "https://changelog.com/gotime/215",
    "resume": "MLOps is an increasingly popular topic that is no longer just a subset of DevOps. Go is a great choice for infrastructure. What role does Go play in MLOps?",
    "date": "2022-02-03T17:00:00Z",
    "vote": 0
  },
  {
    "id": "2c4004a84f6ee8e0a50a09585293fcd9",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Hello World",
    "url": "https://golangbot.com/hello-world-gomod/",
    "resume": "Learn to compile and run a simple hello world program using Go. You will learn how to run the program using go install, go build and go run. ",
    "date": "2022-01-30T08:48:00Z",
    "vote": 0
  },
  {
    "id": "0e03116b1cf12f26ab5a0d093b953290",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 4 Practical Uses of JavaScript",
    "url": "https://blog.boot.dev/javascript/what-is-javascript-used-for/",
    "resume": "JavaScript is one of the most versatile programming languages, maybe even more flexible than Python. JavaScript is used on both the front and back end of web systems.",
    "date": "2022-01-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "295bd8dcecf9bada51338a41a1d674ad",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Rapid AWS Lambda development with Go and Mantil",
    "url": "https://appliedgo.net/mantil/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eIf you need to develop an AWS Lambda function in Go, take a look at Mantil, a dev kit with staging and database connection included.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2022-01-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "516d23225dbd34fa0f925118756ff414",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Migrations without migraines",
    "url": "https://changelog.com/gotime/214",
    "resume": "One of the most common questions we receive at Go Time is how to handle schema migrations in Go. In this episode Jon is joined by Mike Fridman and Vojtech Vitek, maintainers of the popular schema migration tool pressly/goose, to discuss techniques, tools, and tips for handling schema migrations.",
    "date": "2022-01-27T17:45:00Z",
    "vote": 0
  },
  {
    "id": "614892c775483cc4dd7c5942ef327872",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "✋ Limit read bytes using io.LimitedReader in Go",
    "url": "https://gosamples.dev/io-limited-reader/",
    "resume": "\u003cp\u003eThere are situations when you want to limit the number of bytes read, e.g., from a server response or a file. In such a case, you can count bytes during reading and stop the process at the right moment. However, there are simpler methods in Go. Using the \u003ca href=\"https://pkg.go.dev/io#LimitedReader\" target=\"_blank\"\u003e\u003ccode\u003eio.LimitedReader\u003c/code\u003e\u003c/a\u003e wrapper, you can read the set number of bytes from the underlying reader without modifying the reading code, as it creates a new \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e limited to a fixed number of \u003ccode\u003eN\u003c/code\u003e bytes.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io/ioutil\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elimitedReader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eLimitedReader\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eR\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eioutil\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003elimitedReader\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehttps://\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLook at the example. In the \u003ccode\u003emain()\u003c/code\u003e function, we initialize a simple \u003ca href=\"https://pkg.go.dev/strings#Reader\" target=\"_blank\"\u003e\u003ccode\u003estrings.Reader\u003c/code\u003e\u003c/a\u003e that contains an URL, and we want to read the first 8 bytes from it. To do this, we create a new \u003ca href=\"https://pkg.go.dev/io#LimitedReader\" target=\"_blank\"\u003e\u003ccode\u003eio.LimitedReader\u003c/code\u003e\u003c/a\u003e in line \u003ccode\u003e14\u003c/code\u003e that takes the underlying \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e and the number of bytes to read as arguments. As a result, when reading data from this stream, we will not get more than the set number of \u003ccode\u003eN\u003c/code\u003e bytes.\u003c/p\u003e",
    "date": "2022-01-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "adba141c3e1d63fda32ad38c54b3c2ac",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Hard Is Python to Learn?",
    "url": "https://blog.boot.dev/python/how-hard-is-python-to-learn/",
    "resume": "Quick Answer: Python is one of the easiest coding languages to learn 🔗Python is arguably the easiest programming language for beginners to learn.",
    "date": "2022-01-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3c286443f2acf22df167a0d20c50dd75",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "JavaScript vs C++: 3 Factors To Choose Which Is Best For You",
    "url": "https://blog.boot.dev/javascript/javascript-vs-c-plus-plus/",
    "resume": "Every coder is told to learn JavaScript, seeing that it’s the foundation of the world wide web.",
    "date": "2022-01-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0f0fc8d10f13903e75d4a33614fca0ff",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "AI-driven development in Go",
    "url": "https://changelog.com/gotime/213",
    "resume": "Alexey Palazhchenko joins Natalie to discuss the implications of GitHub’s Copilot on code generation. Go’s design lends itself nicely to computer generated authoring: thanks to go fmt, there’s already only one Go style. This means AI-generated code will be consistent and seamless. Its focus on simplicity \u0026 readability make it tailor made for this new approach to software creation. Where might this take us?",
    "date": "2022-01-20T17:00:00Z",
    "vote": 0
  },
  {
    "id": "cdc9a06210b58e7cf2a6688499f888b0",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Visualization in Go - Plotting Stock Information",
    "url": "https://www.ardanlabs.com/blog/2022/01/visualizations-in-go.html",
    "resume": "Introduction You\u0026rsquo;d like to visualize some stock data using Go, but after looking at the Go ecosystem you see very little in charting. You find gonum, which has some plotting capabilities, but it generates static charts. It\u0026rsquo;s 2022, and you\u0026rsquo;d like to have interactive features such as zooming, panning, and more. You turn to the HTML landscape, and see many more options and decide to take this path. After a short survey, you decide to use plotly.",
    "date": "2022-01-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2165cb30d109bf25cfee8ab94bba531e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Qvault Hackathon Kickoff Jan 17th, 2022",
    "url": "https://blog.boot.dev/news/qvault-hackathon-kickoff-jan-17th-2022/",
    "resume": "We’re starting our first hackathon in the Qvault Discord server on January 17th at 8AM. Everyone is welcome to participate.",
    "date": "2022-01-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e287598c87c1bb5d170ee765276ef27c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go beyond work",
    "url": "https://changelog.com/gotime/212",
    "resume": "Our final installment from GopherCon 2021 is an awesome panel conversation led by Natalie \u0026 Angelica with guests Linus Lee, Daniela Patruzalek, and Sebastian Spank. All three of these gophers are using Go in cool and interesting ways outside of traditional work projects.",
    "date": "2022-01-13T17:30:00Z",
    "vote": 0
  },
  {
    "id": "39c26e3a44f2f9bbeae66422fc667675",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "An Overview of Boot.dev's Full-Stack Architecture",
    "url": "https://blog.boot.dev/misc/qvault-full-stack-architecture-example/",
    "resume": "Because I\u0026rsquo;ve had several inquiries on this topic, I thought it would be interesting to publish some information on how the boot.",
    "date": "2022-01-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6d746783796abc86fee14e6d2dc27433",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Gophers Say! GopherCon Edition",
    "url": "https://changelog.com/gotime/211",
    "resume": "Our award winning ready survey game show is back, this time live from GopherCon 2021! Go Time panelists Natalie \u0026 Jon join forces with Go Team members Steve Francia, Katie Hockman, Julie Qui, and Rob Findley to battle it out and see who can better guess what the GopherCon gophers had to say!",
    "date": "2022-01-06T19:45:00Z",
    "vote": 0
  },
  {
    "id": "0a113d092ef88eaa230460f5c5f931fe",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "7 Best Practices for Every Python Developer",
    "url": "https://blog.boot.dev/python/python-best-practices/",
    "resume": "If you’re looking to improve your coding, there are lots of steps you can take, but the first is focusing on Python best practices.",
    "date": "2022-01-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "365f33172ef354ee6180b5f40800b088",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The funny bits from 2021",
    "url": "https://changelog.com/gotime/funny-bits-2021",
    "resume": "Here’s a little bonus episode before we get back to your regularly scheduled Go Time. We’re calling it the funny bits. It’s a compilation of times we cracked up making the show for y’all. If you dig it, holler at Jerod. If you don’t, email Mat Ryer.",
    "date": "2022-01-03T18:30:00Z",
    "vote": 0
  },
  {
    "id": "2543a3414843846b1476a2aa48e01a55",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Roles in the Boot.dev Discord Server",
    "url": "https://blog.boot.dev/news/roles-qvault-discord-server/",
    "resume": "In our community Discord server, we have two main groups of roles you can take on as a member, earned roles and declared roles.",
    "date": "2021-12-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9fc75212feaeea3e373d6e790f2ab4e6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "C# vs Python in Backend Development, Machine Learning, and More",
    "url": "https://blog.boot.dev/python/c-sharp-vs-python/",
    "resume": "C# and Python represent the two sides of what it means to be a powerful language.",
    "date": "2021-12-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e49b913314196386754608198c891e70",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Mat asks the Go Team anything",
    "url": "https://changelog.com/gotime/210",
    "resume": "You had questions, the Go Team had answers! Topics covered include generics (of course), governance (of course), Go 2, text editors, GitHub Copilot, garbage collection, and more.",
    "date": "2021-12-16T17:00:00Z",
    "vote": 0
  },
  {
    "id": "b969c79cd3c904be940b5126ae18d7b5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Python Assert Statement, How to Test a Condition",
    "url": "https://blog.boot.dev/python/python-assert/",
    "resume": "In Python, an assertion is a statement that confirms something about the state of your program.",
    "date": "2021-12-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7e1ae2e132186e4471249595627b13f1",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Coding Go in the blind",
    "url": "https://changelog.com/gotime/209",
    "resume": "In this episode Dominic speaks with Jon about his experience transitioning to using a screen reader and learning to code without his vision. They discuss how some of the tooling works, things other developers can do to make their code more accessible for blind teammates, and more.",
    "date": "2021-12-09T18:30:00Z",
    "vote": 0
  },
  {
    "id": "5e679c7504983bae999aba59a2aed9b9",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Complete Guide to Removing Elements From Lists in Python",
    "url": "https://blog.boot.dev/python/remove-element-from-python-list/",
    "resume": "While lists aren\u0026rsquo;t the most efficient data structure if you\u0026rsquo;ll be doing lots of deleting from the middle, there are definitely good ways to accomplish the task.",
    "date": "2021-12-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f2a82a3c4ae44fc584561e27fe7c79c6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Use the Ternary Operator in Python",
    "url": "https://blog.boot.dev/python/ternary-operator-python/",
    "resume": "Developers love concise code that\u0026rsquo;s easy to read, and that\u0026rsquo;s exactly what ternary operators are for.",
    "date": "2021-12-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "59146cf4cdf9b00c08302496c6092f09",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Removing Duplicates From a List in Python",
    "url": "https://blog.boot.dev/python/remove-duplicates-from-list-python/",
    "resume": "Let\u0026rsquo;s go over a few idiomatic ways to remove duplicates from lists in Python.\nMethod #1 - Create a new list (simplest) 🔗This is the easiest algorithm to code, but because it requires creating a new list, also requires more memory and is a bit slower.",
    "date": "2021-12-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "93b45b0845bfbba3ede0d1546901a8d8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Check if a File Exists in Python",
    "url": "https://blog.boot.dev/python/file-exists-python/",
    "resume": "When working with files in Python, you\u0026rsquo;ll often need to check if a file exists before you do anything else with it, such as reading from or writing to it.",
    "date": "2021-12-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bbf9e62879d917405a718d54ebb8a4b9",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Use Golang's Generics [Updated since 1.18]",
    "url": "https://blog.boot.dev/golang/how-to-use-golangs-generics/",
    "resume": "Generics in Go have been released with Go 1.18! This is one of the most eagerly-awaited features since the release of the language.",
    "date": "2021-12-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2944f480d995b2e1e2a62546860c269f",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Underscores in Imports",
    "url": "https://golangcode.com/underscores-in-imports/",
    "resume": "Underscores in Imports Underscores in Go serve a few purposes. In U+005F, “_” is a letter (as a string). You may also see them as [ “_” ] in between successive digits and a base prefix. In this case, it’s to improve the readability of the code. You may also see them in function names, e.g., imaginary_lit.\nThe underscore is quite a versatile tool. They even have their place in defining the kind of action that will take place in a function.",
    "date": "2021-12-05T15:00:00Z",
    "vote": 0
  },
  {
    "id": "d841871032ae7dc4613b58e23f68f9d0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Our first decade with Go",
    "url": "https://changelog.com/gotime/208",
    "resume": "We’ve talked several times about getting started with Go. But Go is already 12 years old! Let’s talk about how it all started, and hear about it from the people who were there from the beginning.",
    "date": "2021-12-02T17:00:00Z",
    "vote": 0
  },
  {
    "id": "94499415a9ad2c9646013af21f081ade",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "♾️ Infinite loop in Go",
    "url": "https://gosamples.dev/infinite-loop/",
    "resume": "\u003cp\u003eTo define an infinite loop in Go, also known as a \u0026ldquo;while true\u0026rdquo; loop in many different languages, you need to use the \u003ccode\u003efor\u003c/code\u003e statement. The traditional \u003ccode\u003efor\u003c/code\u003e loop has the form of:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialization\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nbut when you omit the initialization, condition, and post-condition statements, you get the classic \u0026ldquo;while true\u0026rdquo; infinite loop:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThere is no \u003ccode\u003ewhile\u003c/code\u003e keyword in Go, so \u003ca href=\"https://gosamples.dev/while-loop\"\u003eall \u0026ldquo;while\u0026rdquo; loops can be created with the \u003ccode\u003efor\u003c/code\u003e keyword\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev is the best\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-12-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2e2c1dfd444fcd68d94b37a40b5a4a5e",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📔 Convert a struct to io.Reader in Go",
    "url": "https://gosamples.dev/struct-to-io-reader/",
    "resume": "\u003cp\u003eTo convert a struct to \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e in Go and send it as an HTTP POST request body, you need to encode the object to byte representation, for example, JSON. The result of the encoding should be stored in the \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/bytes#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Reader\u003c/code\u003e\u003c/a\u003e objects which implement the \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e interface.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCheck how to \u003ca href=\"https://gosamples.dev/byte-slice-to-io-reader\"\u003econvert a byte slice to \u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"hl\"\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;name\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;color\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// encode a Fruit object to JSON and write it to a buffer\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;green\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuffer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewEncoder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eEncode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line hl\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethodPost\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://postman-echo.com/post\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBody\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn lines \u003ccode\u003e19-27\u003c/code\u003e, we create a new instance of the \u003ccode\u003eFruit\u003c/code\u003e struct and encode it into JSON using \u003ca href=\"https://pkg.go.dev/encoding/json#Encoder\" target=\"_blank\"\u003e\u003ccode\u003ejson.Encoder\u003c/code\u003e\u003c/a\u003e. The result is written to a \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e, which implements the \u003ca href=\"https://pkg.go.dev/io#Writer\" target=\"_blank\"\u003e\u003ccode\u003eio.Writer\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e interfaces. In this way, we can use this buffer not only as an \u003ca href=\"https://pkg.go.dev/io#Writer\" target=\"_blank\"\u003e\u003ccode\u003eio.Writer\u003c/code\u003e\u003c/a\u003e, to which the JSON result is stored, but also as \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e, required when making a POST request.\u003c/p\u003e\n\u003cp\u003eAlternatively, you can encode the struct into a JSON byte slice using the \u003ca href=\"https://pkg.go.dev/encoding/json#Marshal\" target=\"_blank\"\u003e\u003ccode\u003ejson.Marshal()\u003c/code\u003e\u003c/a\u003e function and create a new \u003ca href=\"https://pkg.go.dev/bytes#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Reader\u003c/code\u003e\u003c/a\u003e that is a struct for reading data from this slice which implements the required \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e interface.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;green\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ereader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethodPost\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://postman-echo.com/post\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
    "date": "2021-12-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "57596782354e3543eb3062c56ffbc723",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Build a Social Media Backend Server in our New Gopher Gang Track",
    "url": "https://blog.boot.dev/news/go-project-gopher-gang-announcement/",
    "resume": "We’re super excited to bring you our next learning track: Gopher Gang.\nWe released our Python Track and Data Structures \u0026amp; Algorithms Track last month, and after such a positive response, we felt we had to do the same with our Golang course content.",
    "date": "2021-11-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e9434f0c69c3de1c4fd5f7071ae95b2c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Your Code isn't Correct",
    "url": "https://blog.boot.dev/clean-code/your-code-isnt-correct/",
    "resume": "There is a common trap that we fall into as developers, and it is believing that because some code \u0026ldquo;worked\u0026rdquo; that the code was written \u0026ldquo;correctly\u0026rdquo;.",
    "date": "2021-11-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "14fc016a2d0f2771c12a19a14450081d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📟 Convert HTTP response io.ReadCloser to string in Go",
    "url": "https://gosamples.dev/io-readcloser-to-string/",
    "resume": "\u003cp\u003eWhen you send an HTTP request to a server, you often want to read the contents of the response. In Go, the body of the response can be found in the \u003ca href=\"https://pkg.go.dev/net/http#Response.Body\" target=\"_blank\"\u003e\u003ccode\u003eResponse.Body\u003c/code\u003e\u003c/a\u003e field of the \u003ca href=\"https://pkg.go.dev/net/http#Response\" target=\"_blank\"\u003e\u003ccode\u003ehttp.Response\u003c/code\u003e\u003c/a\u003e object, which is returned as the result of sending a request by an HTTP client. The HTTP response body in Go is of type \u003ca href=\"https://pkg.go.dev/io#ReadCloser\" target=\"_blank\"\u003e\u003ccode\u003eio.ReadCloser\u003c/code\u003e\u003c/a\u003e. To convert the \u003ca href=\"https://pkg.go.dev/io#ReadCloser\" target=\"_blank\"\u003e\u003ccode\u003eio.ReadCloser\u003c/code\u003e\u003c/a\u003e object to a string, you need to read the contents of this field using the \u003ca href=\"https://pkg.go.dev/io#ReadAll\" target=\"_blank\"\u003e\u003ccode\u003eio.ReadAll()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethodGet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://example.com/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBody\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn the example above, we are making a standard \u003ccode\u003eGET\u003c/code\u003e request to the \u003ca href=\"https://example.com/\" target=\"_blank\"\u003ehttps://example.com/\u003c/a\u003e website. On line \u003ccode\u003e21\u003c/code\u003e, we read the response body with the \u003ca href=\"https://pkg.go.dev/io#ReadAll\" target=\"_blank\"\u003e\u003ccode\u003eio.ReadAll()\u003c/code\u003e\u003c/a\u003e function. This function returns the read response body as a slice of bytes, so in order to print it, we need to convert it to a string.\u003c/p\u003e\n\u003cp\u003eAs the output of the example, you will see the HTML content of the \u003ca href=\"https://example.com/\" target=\"_blank\"\u003ehttps://example.com/\u003c/a\u003e website:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;!doctype html\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;html\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;head\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;title\u0026gt;Example Domain\u0026lt;/title\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;meta \u003cspan class=\"nv\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;utf-8\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;meta http-equiv\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Content-type\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;text/html; charset=utf-8\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;meta \u003cspan class=\"nv\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;viewport\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003econtent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;width=device-width, initial-scale=1\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;style \u003cspan class=\"nv\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;text/css\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e body \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e background-color: \u003cspan class=\"c1\"\u003e#f0f0f2;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e margin: 0\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e padding: 0\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e font-family: -apple-system, system-ui, BlinkMacSystemFont, \u003cspan class=\"s2\"\u003e\u0026#34;Segoe UI\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;Open Sans\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;Helvetica Neue\u0026#34;\u003c/span\u003e, Helvetica, Arial, sans-serif\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e div \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e width: 600px\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e margin: 5em auto\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e padding: 2em\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e background-color: \u003cspan class=\"c1\"\u003e#fdfdff;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e border-radius: 0.5em\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e box-shadow: 2px 3px 7px 2px rgba\u003cspan class=\"o\"\u003e(\u003c/span\u003e0,0,0,0.02\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e a:link, a:visited \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e color: \u003cspan class=\"c1\"\u003e#38488f;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e text-decoration: none\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e @media \u003cspan class=\"o\"\u003e(\u003c/span\u003emax-width: 700px\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e div \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e margin: \u003cspan class=\"m\"\u003e0\u003c/span\u003e auto\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e width: auto\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;/style\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;/head\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;body\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;div\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;h1\u0026gt;Example Domain\u0026lt;/h1\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;p\u0026gt;This domain is \u003cspan class=\"k\"\u003efor\u003c/span\u003e use in illustrative examples in documents. You may use this\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e domain in literature without prior coordination or asking \u003cspan class=\"k\"\u003efor\u003c/span\u003e permission.\u0026lt;/p\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u0026lt;p\u0026gt;\u0026lt;a \u003cspan class=\"nv\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://www.iana.org/domains/example\u0026#34;\u003c/span\u003e\u0026gt;More information...\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;/div\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;/body\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;/html\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-11-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fd6fcd79402ab5614311d4e6ca6b9292",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Maintenance in the open",
    "url": "https://changelog.com/gotime/207",
    "resume": "Open Source and other source available projects have been a huge driver of progress in our industry, but building and maintaining an open source project is about a lot more than just writing the initial code and putting together a good README. On this episode of the maintenance mini-series, we’ll be discussing open source and the maintenance required to keep it going.",
    "date": "2021-11-25T15:00:00Z",
    "vote": 0
  },
  {
    "id": "a54ef8033e542ed468e7c348c3e0c0a4",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🧑‍🤝‍🧑 Copy a slice in Go",
    "url": "https://gosamples.dev/copy-slice/",
    "resume": "\u003cp\u003eTo duplicate a slice in Go, getting a deep copy of its contents, you need to either use the built-in \u003ca href=\"https://pkg.go.dev/builtin#copy\" target=\"_blank\"\u003e\u003ccode\u003ecopy()\u003c/code\u003e\u003c/a\u003e function, or create a new empty slice and add all the elements of the first slice to it using the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function. \u003ca href=\"https://gosamples.dev/capacity-and-length\"\u003eBecause of how slices are built in Go\u003c/a\u003e, assigning one slice to another only makes a shallow copy, and you should not use it if you want to clone the slice in a deep way.\u003c/p\u003e\n\u003ch2 id=\"copy-a-slice-using-the-copyhttpspkggodevbuiltincopy-function\"\u003eCopy a slice using the \u003ca href=\"https://pkg.go.dev/builtin#copy\" target=\"_blank\"\u003e\u003ccode\u003ecopy()\u003c/code\u003e\u003c/a\u003e function\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esrc\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;source slice: %[1]v, address: %[1]p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;source slice: %[1]v, address: %[1]p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e slice: \u003cspan class=\"o\"\u003e[\u003c/span\u003ea b c\u003cspan class=\"o\"\u003e]\u003c/span\u003e, address: 0xc000098180\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e slice: \u003cspan class=\"o\"\u003e[\u003c/span\u003ea b c\u003cspan class=\"o\"\u003e]\u003c/span\u003e, address: 0xc0000981b0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see, we got two different addresses of underlying arrays for the \u003ccode\u003esrc\u003c/code\u003e and \u003ccode\u003edst\u003c/code\u003e slices, which is evidence that we deeply cloned the \u003ccode\u003esrc\u003c/code\u003e slice. The \u003ca href=\"https://pkg.go.dev/builtin#copy\" target=\"_blank\"\u003e\u003ccode\u003ecopy()\u003c/code\u003e\u003c/a\u003e function copies \u003ccode\u003emin(len(dst), len(src))\u003c/code\u003e elements, so we need to create the \u003ccode\u003edst\u003c/code\u003e slice of the same size as the \u003ccode\u003esrc\u003c/code\u003e using \u003ccode\u003emake([]string, len(src))\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"copy-a-slice-using-the-appendhttpspkggodevbuiltinappend-function\"\u003eCopy a slice using the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;source slice: %[1]v, address: %[1]p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;source slice: %[1]v, address: %[1]p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e slice: \u003cspan class=\"o\"\u003e[\u003c/span\u003ea b c\u003cspan class=\"o\"\u003e]\u003c/span\u003e, address: 0xc000098180\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e slice: \u003cspan class=\"o\"\u003e[\u003c/span\u003ea b c\u003cspan class=\"o\"\u003e]\u003c/span\u003e, address: 0xc0000981b0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCopying a slice using the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function is really simple. You just need to define a new empty slice, and use the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e to add all elements of the \u003ccode\u003esrc\u003c/code\u003e to the \u003ccode\u003edst\u003c/code\u003e slice. In that way, you get a new slice with all the elements duplicated.\u003c/p\u003e\n\u003ch2 id=\"shallow-copy-by-assignment\"\u003eShallow copy by assignment\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;source slice: %[1]v, address: %[1]p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esrc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;source slice: %[1]v, address: %[1]p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e slice: \u003cspan class=\"o\"\u003e[\u003c/span\u003ea b c\u003cspan class=\"o\"\u003e]\u003c/span\u003e, address: 0xc000098180\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e slice: \u003cspan class=\"o\"\u003e[\u003c/span\u003ea b c\u003cspan class=\"o\"\u003e]\u003c/span\u003e, address: 0xc000098180\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you just assign the \u003ccode\u003esrc\u003c/code\u003e slice to the new \u003ccode\u003edst\u003c/code\u003e variable, you get a shallow copy that has the same underlying array. When you modify the contents of this copy, the original slice will also change.\u003c/p\u003e",
    "date": "2021-11-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ceba2f4295f85d1d673b59f57d57fbf9",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🧮 Sort a string slice containing numbers in Go",
    "url": "https://gosamples.dev/sort-string-numbers/",
    "resume": "\u003cp\u003eIf you have a slice or an array of strings that contain numbers in your Go application, and you want to sort them in natural order instead of alphabetical order, you need to write your own sorting function using the \u003ca href=\"https://pkg.go.dev/sort#Slice\" target=\"_blank\"\u003e\u003ccode\u003esort.Slice()\u003c/code\u003e\u003c/a\u003e. It should convert each element to \u003ccode\u003eint\u003c/code\u003e or \u003ccode\u003efloat\u003c/code\u003e type and make a number comparison. The result will be a slice of the strings sorted like numbers.\u003c/p\u003e\n\u003ch2 id=\"sort-in-natural-order\"\u003eSort in natural order\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;sort\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strconv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esortNumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003elastErr\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParseInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elastErr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParseInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elastErr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elastErr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;10\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;8\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;9\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;7\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;6\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esorted\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003esortNumbers\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esorted\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"m\"\u003e5\u003c/span\u003e \u003cspan class=\"m\"\u003e6\u003c/span\u003e \u003cspan class=\"m\"\u003e7\u003c/span\u003e \u003cspan class=\"m\"\u003e8\u003c/span\u003e \u003cspan class=\"m\"\u003e9\u003c/span\u003e 10\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see in the \u003ccode\u003esortNumber()\u003c/code\u003e function, we return the last error of the two elements comparison. If a given element cannot be converted to a number, it means that the input data is invalid, and the result of sorting may be incorrect. You should handle this error in your application to avoid unexpected results.\u003c/p\u003e\n\u003ch2 id=\"sort-in-alphabetical-order\"\u003eSort in alphabetical order\u003c/h2\u003e\n\u003cp\u003eHowever, if your goal is to sort the strings alphabetically, just use the \u003ca href=\"https://pkg.go.dev/sort#Strings\" target=\"_blank\"\u003e\u003ccode\u003esort.Strings()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;sort\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;10\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;8\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;9\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;7\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;6\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e10\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"m\"\u003e5\u003c/span\u003e \u003cspan class=\"m\"\u003e6\u003c/span\u003e \u003cspan class=\"m\"\u003e7\u003c/span\u003e \u003cspan class=\"m\"\u003e8\u003c/span\u003e 9\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-11-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ad1d4f0e649f0d2f2a2f9b75eca0b773",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗂️ Introductory tutorial to SQLite in Go",
    "url": "https://gosamples.dev/sqlite-intro/",
    "resume": "\u003cp\u003eTo use SQLite in Go, you need a database driver - a client that allows you to connect to and perform operations on the database. Go does not provide any official driver, but it does have a common driver interface for SQL-like databases, defined in the \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e package. Most SQL databases implementations use it, which allows the same functions to be used for different databases. One of the most popular such drivers for SQLite is \u003ca href=\"https://github.com/mattn/go-sqlite3\" target=\"_blank\"\u003emattn/go-sqlite3\u003c/a\u003e, and this driver is used in this tutorial to demonstrate how to make basic operations on an SQLite database in Go.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://gosamples.dev/sqlite-intro/#full-example\"\u003eClick here\u003c/a\u003e to go directly to the full code example.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"repository-pattern\"\u003eRepository pattern\u003c/h2\u003e\n\u003cp\u003eWhen exchanging data with a database, it is a good idea not to mix application logic with database logic. This can be done by abstracting the data access layer into a separate structure, responsible for storing and retrieving data from the database. This pattern is known as a \u003cem\u003eRepository\u003c/em\u003e. It allows for:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eReduction of code duplication - you define a data access layer for a given domain object only once.\u003c/li\u003e\n\u003cli\u003eImproving readability of your code - business logic is not mixed with data access logic.\u003c/li\u003e\n\u003cli\u003eEasy addition of new features and modifications to the data access code, and even easy replacement of the entire database, as the code that operates directly on the DB is hidden in a specific repository implementation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe strongly advocate using the Repository to exchange data with the database. This tutorial demonstrates how to create a simple repository and use this pattern to create, read, update and delete data from an SQLite database.\u003c/p\u003e\n\u003ch2 id=\"project-structure\"\u003eProject structure\u003c/h2\u003e\n\u003cp\u003eIn our example, we want to create a \u003ccode\u003eWebsite\u003c/code\u003e repository - a repository that stores information about a particular website - its name, URL, and ranking. Let\u0026rsquo;s start with our project structure tree:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esqlite-intro/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── main.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── website\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e ├── sqlite_repository.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e └── website.go\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThere are two main parts to this project:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003emain.go\u003c/code\u003e file - the entry point to our application that initializes the database connection and makes basic operations on a database through the repository. \u003ca href=\"https://gosamples.dev/sqlite-intro/#the-main-function\"\u003eWe will present\u003c/a\u003e what is inside this file after defining the domain object - \u003ccode\u003eWebsite\u003c/code\u003e, and implementing the repository.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewebsite\u003c/code\u003e package - the package responsible for the \u003ccode\u003eWebsite\u003c/code\u003e domain. It contains a definition of the \u003ccode\u003eWebsite\u003c/code\u003e struct and the SQLite repository implementation to store \u003ccode\u003eWebsite\u003c/code\u003e objects in the SQLite database.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote that we use \u003ca href=\"https://phauer.com/2020/package-by-feature/\" target=\"_blank\"\u003epackaging by feature\u003c/a\u003e in our project to have all the structures related to the \u003ccode\u003eWebsite\u003c/code\u003e in one place.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTo use the repository, we need to define it first, so in the next section, we will start by defining the contents of the \u003ccode\u003ewebsite\u003c/code\u003e package.\u003c/p\u003e\n\u003ch2 id=\"the-website-package\"\u003eThe \u003ccode\u003ewebsite\u003c/code\u003e package\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewebsite\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── sqlite_repository.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── website.go\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"domain-object\"\u003eDomain object\u003c/h3\u003e\n\u003cp\u003eIn the \u003ccode\u003ewebsite/website.go\u003c/code\u003e file, we define our domain object, a \u003ccode\u003eWebsite\u003c/code\u003e, which is a struct that contains data about a given website. Objects of this type will be stored in the database and retrieved from it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eID\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eURL\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"repository---constructor-errors-and-migrate-function\"\u003eRepository - constructor, errors and Migrate() function\u003c/h3\u003e\n\u003cp\u003eThe next step is to create an SQLite implementation of the \u003ccode\u003eWebsite\u003c/code\u003e repository. To do this, we initilize a \u003ccode\u003ewebsite/sqlite_repository.go\u003c/code\u003e file, where we define an \u003ccode\u003eSQLiteRepository\u003c/code\u003e struct that will interact with the SQLite database. This struct will have the following methods:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eGetByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eUpdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eDelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNote that the method definitions do not depend on SQLite at all. This is the purpose of the Repository pattern - hiding database implementation details and providing a simple API to interact with any database. In the future, you can define a \u003ccode\u003eRepository\u003c/code\u003e interface:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eRepository\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eGetByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eUpdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eDelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand add new databases repository implementations, for example, \u003ccode\u003eMySQLRepository\u003c/code\u003e, \u003ccode\u003ePostgresRepository\u003c/code\u003e, etc., if you want to change the database in your application. With the Repository pattern, using a different database is just a matter of calling a constructor of a different repository implementation.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s start with the code of the \u003ccode\u003eSQLiteRepository\u003c/code\u003e constructor, the repository errors definition, and the \u003ccode\u003eMigrate()\u003c/code\u003e method implementation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;database/sql\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/mattn/go-sqlite3\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrDuplicate\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;record already exists\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrNotExists\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;row not exists\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrUpdateFailed\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;update failed\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrDeleteFailed\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;delete failed\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eNewSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e`\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e CREATE TABLE IF NOT EXISTS websites(\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e id INTEGER PRIMARY KEY AUTOINCREMENT,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e name TEXT NOT NULL UNIQUE,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e url TEXT NOT NULL,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e rank INTEGER NOT NULL\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e );\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e `\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eIn lines \u003ccode\u003e17-25\u003c/code\u003e, we define the \u003ccode\u003eSQLiteRepository\u003c/code\u003e struct and its constructor. Note that it requires an instance of \u003ca href=\"https://pkg.go.dev/database/sql#DB\" target=\"_blank\"\u003e\u003ccode\u003esql.DB\u003c/code\u003e\u003c/a\u003e type as a dependency. The \u003ca href=\"https://pkg.go.dev/database/sql#DB\" target=\"_blank\"\u003e\u003ccode\u003esql.DB\u003c/code\u003e\u003c/a\u003e is an object representing a pool of DB connections for all drivers compatible with the \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e interface.\u003c/li\u003e\n\u003cli\u003eIn lines \u003ccode\u003e10-15\u003c/code\u003e, we define all errors that can be returned by methods of this repository. It is a good practice to return your own defined errors instead of the errors returned by functions of \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e package or driver-specific errors. This will make the repository driver-independent and easier to modify in the future.\u003c/li\u003e\n\u003cli\u003eIn lines \u003ccode\u003e27-39\u003c/code\u003e, we create the \u003ccode\u003eMigrate()\u003c/code\u003e method, which is responsible for migrating the repository. Migration, in this case, is creating an SQL table and initializing all the data necessary to operate on the repository. When working on a fresh database instance, this function should be called first, before reading or writing data through the repository. The logic of the \u003ccode\u003eMigrate()\u003c/code\u003e is simple - it executes the \u003ccode\u003eCREATE TABLE\u003c/code\u003e SQL query using \u003ca href=\"https://pkg.go.dev/database/sql#DB.Exec\" target=\"_blank\"\u003e\u003ccode\u003eDB.Exec()\u003c/code\u003e\u003c/a\u003e method and returns the error.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"create-a-new-record-in-the-sqlite-database\"\u003eCreate a new record in the SQLite database\u003c/h3\u003e\n\u003cp\u003eAfter defining \u003ccode\u003eSQLiteRepository\u003c/code\u003e, its constructor, and the \u003ccode\u003eMigrate()\u003c/code\u003e method, we want to create a function to write records to the database. This is the purpose of the \u003ccode\u003eCreate()\u003c/code\u003e method, which takes a row to create and returns the row after insertion or an error if the operation fails.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e60\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INSERT INTO websites(name, url, rank) values(?,?,?)\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esqliteErr\u003c/span\u003e \u003cspan class=\"nx\"\u003esqlite3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eError\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003esqliteErr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esqliteErr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eExtendedCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esqlite3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrConstraintUnique\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrDuplicate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLastInsertId\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eLike \u003ccode\u003eMigrate()\u003c/code\u003e, this function uses the \u003ca href=\"https://pkg.go.dev/database/sql#DB.Exec\" target=\"_blank\"\u003e\u003ccode\u003eDB.Exec()\u003c/code\u003e\u003c/a\u003e method to execute an SQL \u003ccode\u003eINSERT\u003c/code\u003e query. If there is an error, we check if it is an instance of \u003ca href=\"https://pkg.go.dev/github.com/mattn/go-sqlite3#Error\" target=\"_blank\"\u003e\u003ccode\u003esqlite3.Error\u003c/code\u003e\u003c/a\u003e and if its code indicates an SQLite unique constraint violation. It means that a record with the same \u003ccode\u003eUNIQUE\u003c/code\u003e field (the same \u003ccode\u003ename\u003c/code\u003e in the \u003ccode\u003ewebsites\u003c/code\u003e table) already exists, so we can map this error to \u003ccode\u003eErrDuplicate\u003c/code\u003e, which we defined before. In the last part, we take the inserted record ID and assign it to the returned object so that it reflects the state in the database.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMany \u003ca href=\"https://pkg.go.dev/database/sql#DB\" target=\"_blank\"\u003e\u003ccode\u003eDB\u003c/code\u003e\u003c/a\u003e methods, like \u003ca href=\"https://pkg.go.dev/database/sql#DB.Exec\" target=\"_blank\"\u003e\u003ccode\u003eDB.Exec()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/database/sql#DB.Query\" target=\"_blank\"\u003e\u003ccode\u003eDB.Query()\u003c/code\u003e\u003c/a\u003e, take a query and arguments as input parameters. As you can see in the example above, you need to use the \u003ccode\u003e?\u003c/code\u003e character to indicate where the subsequent arguments should be inserted into the query.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"read-from-sqlite-database\"\u003eRead from SQLite database\u003c/h3\u003e\n\u003cp\u003eTo read \u003ccode\u003eWebsite\u003c/code\u003e records from the repository, we use two methods:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eAll() ([]Website, error)\u003c/code\u003e which returns all available records in the \u003ccode\u003eWebsite\u003c/code\u003e repository\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGetByName(name string) (*Website, error)\u003c/code\u003e that gives back a \u003ccode\u003eWebsite\u003c/code\u003e with the specified name\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e82\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e83\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e84\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e85\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e86\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e87\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e88\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e89\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e90\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e91\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SELECT * FROM websites\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNext\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erow\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQueryRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SELECT * FROM websites WHERE name = ?\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003erow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrNoRows\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrNotExists\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003eAll()\u003c/code\u003e method uses the \u003ca href=\"https://pkg.go.dev/database/sql#DB.Query\" target=\"_blank\"\u003e\u003ccode\u003eDB.Query()\u003c/code\u003e\u003c/a\u003e to return rows for the SQL \u003ccode\u003eSELECT\u003c/code\u003e query. The difference between the \u003ca href=\"https://pkg.go.dev/database/sql#DB.Query\" target=\"_blank\"\u003e\u003ccode\u003eDB.Query()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/database/sql#DB.Exec\" target=\"_blank\"\u003e\u003ccode\u003eDB.Exec()\u003c/code\u003e\u003c/a\u003e methods is that the former is used for the queries that return rows, the latter for the queries that do not. As the result of the \u003ca href=\"https://pkg.go.dev/database/sql#DB.Query\" target=\"_blank\"\u003e\u003ccode\u003eDB.Query()\u003c/code\u003e\u003c/a\u003e, we get an \u003ccode\u003esql.Rows\u003c/code\u003e struct that represents a cursor to SQL rows. Notice that it should be closed at the end of the function. Using two methods: \u003ca href=\"https://pkg.go.dev/database/sql#Rows.Next\" target=\"_blank\"\u003e\u003ccode\u003eNext()\u003c/code\u003e\u003c/a\u003e returning true if there are more rows in the result, and \u003ca href=\"https://pkg.go.dev/database/sql#Rows.Scan\" target=\"_blank\"\u003e\u003ccode\u003eScan()\u003c/code\u003e\u003c/a\u003e that copies successive values of the result set into the given variables, we can create a slice of all websites in the database table.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eGetByName()\u003c/code\u003e method works in a similar way, but instead of \u003ca href=\"https://pkg.go.dev/database/sql#DB.Query\" target=\"_blank\"\u003e\u003ccode\u003eDB.Query()\u003c/code\u003e\u003c/a\u003e it uses \u003ca href=\"https://pkg.go.dev/database/sql#DB.QueryRow\" target=\"_blank\"\u003e\u003ccode\u003eDB.QueryRow()\u003c/code\u003e\u003c/a\u003e that returns at most one row. This eliminates the need to close the structure. To copy values to a \u003ccode\u003eWebsite\u003c/code\u003e object, we use the same \u003ca href=\"https://pkg.go.dev/database/sql#Row.Scan\" target=\"_blank\"\u003e\u003ccode\u003eScan()\u003c/code\u003e\u003c/a\u003e method as before. We also check if the \u003ca href=\"https://pkg.go.dev/database/sql#Row.Scan\" target=\"_blank\"\u003e\u003ccode\u003eScan()\u003c/code\u003e\u003c/a\u003e returns a standard \u003ca href=\"https://pkg.go.dev/database/sql#ErrNoRows\" target=\"_blank\"\u003e\u003ccode\u003esql.ErrNoRows\u003c/code\u003e\u003c/a\u003e error if there is no record in the result. In such a case, we map this error to our repository \u003ccode\u003eErrNotExists\u003c/code\u003e error.\u003c/p\u003e\n\u003ch3 id=\"update-a-row-of-the-sqlite-database\"\u003eUpdate a row of the SQLite database\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003eUpdate()\u003c/code\u003e method is not significantly different from the previous ones. It uses the \u003ca href=\"https://pkg.go.dev/database/sql#DB.Exec\" target=\"_blank\"\u003e\u003ccode\u003eDB.Exec()\u003c/code\u003e\u003c/a\u003e to execute the SQL \u003ccode\u003eUPDATE\u003c/code\u003e query that replaces values for a record with a given ID. It then checks how many rows were affected by this update. If zero, we consider it failed and return the \u003ccode\u003eErrUpdateFailed\u003c/code\u003e error.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 93\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 94\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 95\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 96\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 97\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 98\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 99\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e100\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e101\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e102\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e103\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e104\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e105\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e106\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e107\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e108\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e109\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e110\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e111\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e112\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eUpdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;invalid updated ID\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;UPDATE websites SET name = ?, url = ?, rank = ? WHERE id = ?\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrUpdateFailed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch3 id=\"delete-a-row-from-the-sqlite-database\"\u003eDelete a row from the SQLite database\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003eDelete()\u003c/code\u003e method works similarly to \u003ccode\u003eUpdate()\u003c/code\u003e. It executes the SQL \u003ccode\u003eDELETE\u003c/code\u003e query to delete the row with the specified ID from the database. If no row is affected, it returns the \u003ccode\u003eErrUpdateFailed\u003c/code\u003e error.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e114\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e115\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e116\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e117\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e118\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e119\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e120\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e121\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e122\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e123\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e124\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e125\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e126\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e127\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e128\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e129\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e130\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eDelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;DELETE FROM websites WHERE id = ?\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrDeleteFailed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn this way, we have created a complete SQLite repository with \u003ca href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" target=\"_blank\"\u003eCRUD\u003c/a\u003e operations. Now it\u0026rsquo;s time to test it by creating a simple app that demonstrates how its functions work.\u003c/p\u003e\n\u003ch2 id=\"the-main-function\"\u003eThe \u003ccode\u003emain()\u003c/code\u003e function\u003c/h2\u003e\n\u003ch3 id=\"connect-to-sqlite\"\u003eConnect to SQLite\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;database/sql\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/gosamples-dev/samples/sqlite-intro/website\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/mattn/go-sqlite3\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efileName\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;sqlite.db\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRemove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efileName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sqlite3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efileName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eTo connect to an SQLite database using the \u003ca href=\"https://github.com/mattn/go-sqlite3\" target=\"_blank\"\u003emattn/go-sqlite3\u003c/a\u003e driver, it is necessary to register it as the \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e driver. It is done by importing the driver package in line \u003ccode\u003e10\u003c/code\u003e (we do this using a blank identifier, to import the package, even though it is not used by the current program). Once imported, it calls the \u003ccode\u003einit()\u003c/code\u003e function, which \u003ca href=\"https://github.com/mattn/go-sqlite3/blob/85436841b33e86c07dce0fa2e88c31a97c96a22f/sqlite3.go#L237\" target=\"_blank\"\u003eregisters\u003c/a\u003e the driver in the \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e interface under the name \u003ccode\u003esqlite3\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://pkg.go.dev/database/sql#Open\" target=\"_blank\"\u003e\u003ccode\u003esql.Open()\u003c/code\u003e\u003c/a\u003e function with the registered \u003ccode\u003esqlite3\u003c/code\u003e driver name, you can connect to a new SQLite database. The second argument is the data source name which in the case of SQLite is a path to the database file. In our example, we want to run the program with a fresh instance each time, so the first line of \u003ccode\u003emain()\u003c/code\u003e deletes the old database file if it exists.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"init-the-sqlite-repository\"\u003eInit the SQLite repository\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003egolang\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Golang official website\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://golang.org\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ecreatedGolang\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003egolang\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eIn lines \u003ccode\u003e23-27\u003c/code\u003e, we create a new website SQLite repository and migrate the data, which in our case means that we create a new SQL \u003ccode\u003ewebsites\u003c/code\u003e table.\u003c/li\u003e\n\u003cli\u003eIn lines \u003ccode\u003e29-47\u003c/code\u003e, we create new \u003ccode\u003eWebsite\u003c/code\u003e objects and insert them into the database using the \u003ccode\u003eCreate()\u003c/code\u003e method.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"read-update-delete-in-the-repository\"\u003eRead, update, delete in the repository\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e82\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003egotGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGetByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;get by name: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003egotGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUpdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\nAll websites:\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;website: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreatedGolang\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\nAll websites:\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;website: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eIn lines \u003ccode\u003e49-54\u003c/code\u003e, we retrieve the record with the \u003ccode\u003eGOSAMPLES\u003c/code\u003e name from the database and print it to the console.\u003c/li\u003e\n\u003cli\u003eIn lines \u003ccode\u003e56-69\u003c/code\u003e, we make a ranking update of the retrieved record and then get all records from the table to ensure that the update was performed successfully.\u003c/li\u003e\n\u003cli\u003eIn lines \u003ccode\u003e71-82\u003c/code\u003e, we delete the second row by ID, and also get and print all records to ensure that the database state is correct.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFollow the output below to check the results of these operations:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eget by name: \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003eID:1 Name:GOSAMPLES URL:https://gosamples.dev Rank:2\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAll websites:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewebsite: \u003cspan class=\"o\"\u003e{\u003c/span\u003eID:1 Name:GOSAMPLES URL:https://gosamples.dev Rank:1\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewebsite: \u003cspan class=\"o\"\u003e{\u003c/span\u003eID:2 Name:Golang official website URL:https://golang.org Rank:1\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAll websites:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewebsite: \u003cspan class=\"o\"\u003e{\u003c/span\u003eID:1 Name:GOSAMPLES URL:https://gosamples.dev Rank:1\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see, using SQLite in Go is really simple and no different than using MySQL, Postgres, or any other SQL database, thanks to the common \u003ca href=\"https://pkg.go.dev/database/sql\" target=\"_blank\"\u003e\u003ccode\u003edatabase/sql\u003c/code\u003e\u003c/a\u003e interface. By using the Repository pattern, you can also make the code clean and easy to understand, where the business and data access logic are not mixed.\u003c/p\u003e\n\u003ch2 id=\"full-example\"\u003eFull example\u003c/h2\u003e\n\u003cp\u003eThe example is also available on Github \u003ca href=\"https://github.com/gosamples-dev/samples/tree/main/sqlite-intro\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ewebsite/website.go\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e8\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eID\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eURL\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e\u003ccode\u003ewebsite/sqlite_repository.go\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 82\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 83\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 84\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 85\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 86\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 87\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 88\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 89\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 90\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 91\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 92\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 93\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 94\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 95\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 96\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 97\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 98\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 99\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e100\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e101\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e102\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e103\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e104\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e105\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e106\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e107\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e108\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e109\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e110\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e111\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e112\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e113\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e114\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e115\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e116\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e117\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e118\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e119\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e120\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e121\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e122\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e123\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e124\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e125\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e126\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e127\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e128\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e129\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e130\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;database/sql\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/mattn/go-sqlite3\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrDuplicate\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;record already exists\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrNotExists\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;row not exists\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrUpdateFailed\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;update failed\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eErrDeleteFailed\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;delete failed\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eNewSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e`\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e CREATE TABLE IF NOT EXISTS websites(\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e id INTEGER PRIMARY KEY AUTOINCREMENT,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e name TEXT NOT NULL UNIQUE,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e url TEXT NOT NULL,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e rank INTEGER NOT NULL\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e );\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e `\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INSERT INTO websites(name, url, rank) values(?,?,?)\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esqliteErr\u003c/span\u003e \u003cspan class=\"nx\"\u003esqlite3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eError\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003esqliteErr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esqliteErr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eExtendedCode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esqlite3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrConstraintUnique\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrDuplicate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLastInsertId\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SELECT * FROM websites\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNext\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003erows\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erow\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQueryRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SELECT * FROM websites WHERE name = ?\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003erow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrNoRows\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrNotExists\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eUpdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e \u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;invalid updated ID\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;UPDATE websites SET name = ?, url = ?, rank = ? WHERE id = ?\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrUpdateFailed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eupdated\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eDelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;DELETE FROM websites WHERE id = ?\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRowsAffected\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003erowsAffected\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrDeleteFailed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e\u003ccode\u003emain.go\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e82\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e83\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;database/sql\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/gosamples-dev/samples/sqlite-intro/website\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/mattn/go-sqlite3\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efileName\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;sqlite.db\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRemove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efileName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003esql\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sqlite3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efileName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewSQLiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMigrate\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egolang\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eWebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Golang official website\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://golang.org\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecreatedGolang\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003egolang\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egotGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGetByName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;get by name: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003egotGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUpdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreatedGosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\nAll websites:\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;website: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreatedGolang\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eID\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsiteRepository\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\nAll websites:\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eall\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;website: %+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ewebsite\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
    "date": "2021-11-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6f44df50d4d164d91706dacef854831e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Eventually consistent (managing data at scale)",
    "url": "https://changelog.com/gotime/206",
    "resume": "Tiago Mendes joins Mat, Jon, and Johnny to discuss eventual consistency and strategies for changing data at scale.",
    "date": "2021-11-18T22:00:00Z",
    "vote": 0
  },
  {
    "id": "3c9ae2d3a0368e9a3a827deb5f160f51",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Coding Interviews - Why you shouldn't give homework",
    "url": "https://blog.boot.dev/jobs/coding-interviews-why-you-shouldnt-give-homework/",
    "resume": "A while back I went through the interview process at a company I won\u0026rsquo;t name here.",
    "date": "2021-11-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cb90bd7652087cf226b4cc1841e76bb9",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Python vs C++: The Best Language To Learn For You",
    "url": "https://blog.boot.dev/python/python-vs-c-the-best-language-to-learn-for-you/",
    "resume": "It’s either a blessing or a curse when choosing to learn Python or C++ because there couldn’t be two more opposing languages to compare.",
    "date": "2021-11-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b25a6e80c45528a9c5e56532ae628a2b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hacking with Go: Part 1",
    "url": "https://changelog.com/gotime/205",
    "resume": "Natalie and Mat explore hacking in Go from the eyes of 2 security researchers. Joakim Kennedy and JAGS have both used Go for hacking: writing malware, hardware hacking, reverse engineering Go code, and more.",
    "date": "2021-11-11T17:15:00Z",
    "vote": 0
  },
  {
    "id": "fc53cfa6f1e920f3cc59bc87f23a02f1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "PHP vs JavaScript: Which is Best for Web Development?",
    "url": "https://blog.boot.dev/javascript/php-vs-javascript/",
    "resume": "When comparing programming languages, it’s not often that you come across two that actually work well together, but that happens to be the case when it comes to PHP and JavaScript.",
    "date": "2021-11-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a86015c22bb0bdca765b8a7c02f67352",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Node.js vs JavaScript: The Low-Down",
    "url": "https://blog.boot.dev/javascript/nodejs-vs-javascript/",
    "resume": "So you’re a fan of web development? Great! You’re probably already familiar with JavaScript (if not, check out our JavaScript course here) and may have heard of Node.",
    "date": "2021-11-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9a684aca21e6d72ad23491e9f072a846",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Python vs PHP: 9 Critical Differences Examined",
    "url": "https://blog.boot.dev/python/python-versus-php/",
    "resume": "PHP famously claims to be the backend programming language for just under 80% of the Internet.",
    "date": "2021-11-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "992f6b40e2d231ba4a759bdeabb24d13",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Ruby vs JavaScript: Which Language Should You Learn First?",
    "url": "https://blog.boot.dev/javascript/ruby-vs-javascript-which-language-should-you-learn-first/",
    "resume": "When broken down into core features – like programming style and code execution – JavaScript and Ruby seem deceivingly similar, but there are a few constitutional differences.",
    "date": "2021-11-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "42146877c64729ae40421b1d8772049b",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔎 Check if the slice contains the given value in Go",
    "url": "https://gosamples.dev/slice-contains/",
    "resume": "\u003cp\u003eGo does not provide a language construct or a standard library function to check whether a given value is in a slice. To do this, you need to write your own \u003ccode\u003econtains()\u003c/code\u003e function that takes two arguments: the slice and the element to find. As a result, it should return \u003ccode\u003etrue\u003c/code\u003e if the slice contains this element and \u003ccode\u003efalse\u003c/code\u003e otherwise.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you want to operate on a slice of a different type, you must implement a separate function. For example, for \u003ccode\u003eint64\u003c/code\u003e, the function would look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis function works well if your slice is not too large. For longer lists of data, you should consider using a map for storage, which has generally much better lookup performance than iterating over slices.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://golang.org/ref/spec\" target=\"_blank\"\u003eGo Programming Language Specification\u003c/a\u003e does not make any \u003ca href=\"https://en.wikipedia.org/wiki/Time_complexity\" target=\"_blank\"\u003ecomplexity\u003c/a\u003e guarantees but in general map lookup should have a complexity of O(1), while finding an element in a slice is O(n).\u003c/p\u003e\n\u003c/blockquote\u003e",
    "date": "2021-11-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f34e014979235f4610779648ffe0a473",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Discussing Go's annual developer survey",
    "url": "https://changelog.com/gotime/204",
    "resume": "Each year a group of user researchers and the Go team get together and create a survey for the Go community. The results of the survey are analyzed and turned into a report made available to everyone in the Go community. In this episode we sit down with Alice Merrick and Todd Kulesza to discuss the survey, how it’s made, and some of the interesting results from this year’s survey.",
    "date": "2021-11-04T16:30:00Z",
    "vote": 0
  },
  {
    "id": "1807e45f28ea82162064452f43db43d5",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Struct Tags with Underscore Before Function Names",
    "url": "https://golangcode.com/using-go-struct-tags-with-an-underscore-before-function-names/",
    "resume": "In the Go world, an underscore (_) before an expression is called a blank identifier. As you may already know, identifiers—user-defined program components, e.g., name of a function, variable, or package—in Go must be preceded by an underscore or a letter (a-z or A-Z). If they aren’t, you’ll receive the compile- time error which essentially means Go cannot read the syntax of your code (you didn’t write your code correctly).",
    "date": "2021-11-03T15:00:00Z",
    "vote": 0
  },
  {
    "id": "14f79ddca781c9c7368f31a4922e13ef",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Best Product Managers Have The Worst Ideas",
    "url": "https://blog.boot.dev/misc/the-best-product-managers-have-terrible-ideas/",
    "resume": "It\u0026rsquo;s hard finding good product people. That fact is really a tragedy because they are probably the most important part of any product-focused organization.",
    "date": "2021-11-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ac38f1604e008be8b271740898f3b7a0",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "GIS in Go",
    "url": "https://www.ardanlabs.com/blog/2021/11/gis-in-go.html",
    "resume": "Introduction You are jogging and want to show off your route to your friends. Let’s imagine the data you have for your route is a CSV file in the following format:\nListing 1: track.csv\ntime,lat,lng,height 2015-08-20 03:48:07.235,32.519585,35.015021,136.1999969482422 2015-08-20 03:48:24.734,32.519606,35.014954,126.5999984741211 2015-08-20 03:48:25.660,32.519612,35.014871,123.0 2015-08-20 03:48:26.819,32.519654,35.014824,120.5 2015-08-20 03:48:27.828,32.519689,35.014776,118.9000015258789 2015-08-20 03:48:29.720,32.519691,35.014704,119.9000015258789 2015-08-20 03:48:30.669,32.519734,35.014657,120.9000015258789 Listing 1 shows the first few lines of track.csv. Each line contains a time stamp in UTC, latitude, longitude and height above sea level in meters.",
    "date": "2021-11-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3706f47fc66bb22c4f2ba1e46a3c8c6a",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🍒 Concatenate strings in Go",
    "url": "https://gosamples.dev/concatenate-strings/",
    "resume": "\u003cp\u003eIn Go, there are several methods for string concatenation. The simplest one (but not the best one) is to add two strings using the plus (\u003ccode\u003e+\u003c/code\u003e) operator. You can also use the \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e function if you have a couple of strings that want to combine into one. A more efficient way to concatenate strings is to use the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e structure which minimizes memory copying and is recommended for building longer results. Alternatively, you can also use the \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e function if you know all the strings to join and their separator before calling it, or \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e and byte slices to operate directly on string bytes.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eThere is no single best method to concatenate strings, so it is a good idea to know most of them, their pros and cons, and use them depending on your use case.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAll benchmarks in the examples below were run in Go 1.17.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"use-the-plus--operator-to-simply-concatenate-strings\"\u003eUse the plus (\u003ccode\u003e+\u003c/code\u003e) operator to simply concatenate strings\u003c/h2\u003e\n\u003cp\u003eUsing the plus (\u003ccode\u003e+\u003c/code\u003e) operator is the simplest way of strings concatenation. However, you should be careful when calling this method because strings in Go are immutable, and every time you add a string to an existing variable, a new string is allocated in memory. As a result, this method is inefficient if you need to concatenate multiple strings, for example, in a loop. In that case, you should use the \u003ca href=\"https://gosamples.dev/concatenate-strings/#use-stringsbuilder-to-efficiently-concatenate-strings\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e method\u003c/a\u003e to build the final string.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis and all the following examples give the output: \u003ccode\u003eHello https://gosamples.dev\u003c/code\u003e 😉.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePros and cons of concatenating strings using the plus (\u003ccode\u003e+\u003c/code\u003e) operator:\u003c/p\u003e\n\u003cdiv class=\"pros-cons\"\u003e\n\u003cspan class=\"pros\"\u003e\n\u003cdiv class=\"pros-cons__header pros__header\"\u003ePros\u003c/div\u003e\n\u003cul class=\"fa-ul pros__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nThe easiest way of concatenating strings\n\u003c/li\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nNo need to use external dependencies\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003cspan class=\"cons\"\u003e\n\u003cdiv class=\"pros-cons__header cons__header\"\u003eCons\u003c/div\u003e\n\u003cul class=\"fa-ul cons__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\nInefficient when used to concatenate a long list of strings\n\u003c/li\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\u003cp\u003eLess readable than \u003ca href=\"https://gosamples.dev/concatenate-strings/#use-the-fmtsprintf-function-to-format-multiple-strings-into-one\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e method\u003c/a\u003e when building a formatted string\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003c/div\u003e\n\u003ch2 id=\"use-the-fmtsprintf-function-to-format-multiple-strings-into-one\"\u003eUse the \u003ccode\u003efmt.Sprintf()\u003c/code\u003e function to format multiple strings into one\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e function takes a template and arguments and returns this template with the appropriate fields replaced by the arguments. This is the most idiomatic and readable method for creating short strings with variable values but is not suitable for concatenation when you do not know the number of strings in advance.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s %s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePros and cons of concatenating strings using the \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"pros-cons\"\u003e\n\u003cspan class=\"pros\"\u003e\n\u003cdiv class=\"pros-cons__header pros__header\"\u003ePros\u003c/div\u003e\n\u003cul class=\"fa-ul pros__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nA clear and idiomatic way of creating strings with variable values\n\u003c/li\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nAllows to easily create strings from arguments of different types e.g. string, int, bool, etc., without explicit conversion\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003cspan class=\"cons\"\u003e\n\u003cdiv class=\"pros-cons__header cons__header\"\u003eCons\u003c/div\u003e\n\u003cul class=\"fa-ul cons__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\nNot suitable when you do not know in advance the number of elements to concatenate\n\u003c/li\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\u003cp\u003eInconvenient for a longer list of arguments\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003c/div\u003e\n\u003ch2 id=\"use-stringsbuilder-to-efficiently-concatenate-strings\"\u003eUse \u003ccode\u003estrings.Builder\u003c/code\u003e to efficiently concatenate strings\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e was created to build long strings in a simple and efficient way. This method minimizes the number of copies and memory allocations and works particularly well if you have a large list of strings to concatenate or if the process of building the resulting string is multi-step. If you need to perform string concatenation efficiently, this method is the most recommended and natural choice in Go.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuilder\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you know the size of the output in advance, it is a good practice to use the \u003ca href=\"https://pkg.go.dev/strings#Builder.Grow\" target=\"_blank\"\u003e\u003ccode\u003eGrow()\u003c/code\u003e\u003c/a\u003e method to preallocate the needed memory. This increases the speed of concatenation by avoiding unnecessary copying of partial results:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGrow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e27\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePros and cons of concatenating strings using the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"pros-cons\"\u003e\n\u003cspan class=\"pros\"\u003e\n\u003cdiv class=\"pros-cons__header pros__header\"\u003ePros\u003c/div\u003e\n\u003cul class=\"fa-ul pros__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nEfficient for concatenating a long list of strings or for building a string in multiple steps\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003cspan class=\"cons\"\u003e\n\u003cdiv class=\"pros-cons__header cons__header\"\u003eCons\u003c/div\u003e\n\u003cul class=\"fa-ul cons__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\nMore complicated to use than the previous methods\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003c/div\u003e\n\u003ch2 id=\"use-the-stringsjoin-function-to-create-a-single-string-from-a-slice\"\u003eUse the \u003ccode\u003estrings.Join()\u003c/code\u003e function to create a single string from a slice\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e constructs a single string from joining a fixed slice of strings with a defined separator between them. It uses the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e internally. Since the number of elements to be concatenated is known, it allocates the necessary amount of memory, which makes this method very efficient.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eJoin\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePros and cons of concatenating strings using the \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"pros-cons\"\u003e\n\u003cspan class=\"pros\"\u003e\n\u003cdiv class=\"pros-cons__header pros__header\"\u003ePros\u003c/div\u003e\n\u003cul class=\"fa-ul pros__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nSuper-efficient for concatenating a fixed list of strings with the same separator\n\u003c/li\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nSimple and easy to use\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003cspan class=\"cons\"\u003e\n\u003cdiv class=\"pros-cons__header cons__header\"\u003eCons\u003c/div\u003e\n\u003cul class=\"fa-ul cons__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\nNot suitable when you do not know in advance the number of elements to concatenate or if you want to use different separators\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003c/div\u003e\n\u003ch2 id=\"use-bytesbuffer-to-efficiently-build-a-byte-buffer\"\u003eUse \u003ccode\u003ebytes.Buffer\u003c/code\u003e to efficiently build a byte buffer\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e was introduced in Go 1.10. Before that, the \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e was used to concatenate strings efficiently. It has similar methods but is slightly slower, so in the new code, you should use the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e instead.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuffer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://gosamples.dev/concatenate-strings/#use-stringsbuilder-to-efficiently-concatenate-strings\"\u003eAs with the \u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e, you can use the \u003ca href=\"https://pkg.go.dev/bytes#Buffer.Grow\" target=\"_blank\"\u003e\u003ccode\u003eGrow()\u003c/code\u003e\u003c/a\u003e method to preallocate the needed memory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGrow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e27\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePros and cons of concatenating strings using the \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"pros-cons\"\u003e\n\u003cspan class=\"pros\"\u003e\n\u003cdiv class=\"pros-cons__header pros__header\"\u003ePros\u003c/div\u003e\n\u003cul class=\"fa-ul pros__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nEfficient for concatenating a long list of strings or for building a string in multiple steps\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003cspan class=\"cons\"\u003e\n\u003cdiv class=\"pros-cons__header cons__header\"\u003eCons\u003c/div\u003e\n\u003cul class=\"fa-ul cons__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\u003cp\u003eSince Go 1.10, there is the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e which has similar methods and is more efficient\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003c/div\u003e\n\u003ch2 id=\"use-byte-slice-to-extend-a-string\"\u003eUse byte slice to extend a string\u003c/h2\u003e\n\u003cp\u003eStrings in Go are \u003ca href=\"https://gosamples.dev/string-byte-slice\"\u003eread-only slices of bytes\u003c/a\u003e, so there is no problem extending a byte slice of a string by appending bytes of another string. As a result, after converting to a string, we get the concatenated output. However, this method is low-level and less idiomatic than the others. In practice, it is much better to use the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e instead.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePros and cons of concatenating strings using appending to a byte slice:\u003c/p\u003e\n\u003cdiv class=\"pros-cons\"\u003e\n\u003cspan class=\"pros\"\u003e\n\u003cdiv class=\"pros-cons__header pros__header\"\u003ePros\u003c/div\u003e\n\u003cul class=\"fa-ul pros__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nEasy to use\n\u003c/li\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-check\"\u003e\u003c/i\u003e\u003c/span\u003e\nDo not require any dependencies\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003cspan class=\"cons\"\u003e\n\u003cdiv class=\"pros-cons__header cons__header\"\u003eCons\u003c/div\u003e\n\u003cul class=\"fa-ul cons__content\"\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\u003cp\u003eWorks on byte slices instead of strings - requires final conversion to string\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cspan class=\"fa-li\"\u003e\u003ci class=\"fas fa-times\"\u003e\u003c/i\u003e\u003c/span\u003e\u003cp\u003eNot as efficient as the \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/span\u003e\n\u003c/div\u003e\n\u003ch2 id=\"benchmarks\"\u003eBenchmarks\u003c/h2\u003e\n\u003cp\u003eTo check which method of concatenating strings is the fastest, we prepared a simple benchmark that compares all the above methods. Each of them concatenates 399 elements into a single result. We simulated two variants of concatenation: when we know the size of the result string in advance (benchmarks named \u003ccode\u003eBenchmark\u0026lt;XXX\u0026gt;KnownSize\u003c/code\u003e), and when we do not know the exact size of the result string (benchmarks named \u003ccode\u003eBenchmark\u0026lt;XXX\u0026gt;UnknownSize\u003c/code\u003e). We did this because some methods are only suitable when we know the number of elements to concatenate (\u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e), some work without considering the number of elements (\u003ca href=\"https://gosamples.dev/concatenate-strings/#use-the-plus--operator-to-simply-concatenate-strings\"\u003ethe plus (\u003ccode\u003e+\u003c/code\u003e) operator\u003c/a\u003e), and some work in both variants (\u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://gosamples.dev/concatenate-strings/#use-byte-slice-to-extend-a-string\"\u003ebyte slice\u003c/a\u003e):\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e requires a slice of strings as an argument, so the number of elements to concatenate must be known before calling this function.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e works for a finite and known number of arguments equal to the number of arguments in the template.\u003c/li\u003e\n\u003cli\u003ethe plus (\u003ccode\u003e+\u003c/code\u003e) operator concatenates only one argument at a time (\u003ccode\u003eresult += argument\u003c/code\u003e), and you cannot specify how many elements you have or preallocate a fixed amount of memory for the result.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e can build strings when we do not know the number of elements that will finally be in the result. When necessary, they allocate more memory for the output. Therefore, these methods work well for creating strings dynamically, for example, in a loop. On the other hand, when we know the number of elements to concatenate and the size of the result, we can immediately allocate the needed amount of memory using the \u003ca href=\"https://pkg.go.dev/strings#Builder.Grow\" target=\"_blank\"\u003e\u003ccode\u003eGrow()\u003c/code\u003e\u003c/a\u003e method (available in \u003ca href=\"https://pkg.go.dev/strings#Builder.Grow\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e as well as in \u003ca href=\"https://pkg.go.dev/bytes#Buffer.Grow\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e), avoiding unnecessary copying of partial results.\u003c/li\u003e\n\u003cli\u003ebyte slices, like \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e, can be initialized as empty using \u003ccode\u003evar byteSlice []byte\u003c/code\u003e or with a specified capacity using \u003ccode\u003ebyteSlice := make([]byte, 0, size)\u003c/code\u003e. In this way, this method can be used both with a known number of elements and without specifying the size of the result.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe fastest method does not mean the best. Always consider the readability of the code and try to fit the method to the use case.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 82\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 83\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 84\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 85\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 86\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 87\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 88\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 89\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 90\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 91\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 92\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 93\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 94\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 95\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 96\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 97\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 98\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 99\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e100\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e101\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e102\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e103\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e104\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e105\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e106\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e107\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e108\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e109\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e110\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e111\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e112\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e113\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e114\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e115\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e116\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e117\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e118\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e119\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e120\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e121\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e122\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e123\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e124\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e125\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e126\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e127\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e128\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e129\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e130\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e131\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e132\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e133\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e134\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e135\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e136\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e137\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e138\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e139\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e140\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e141\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e142\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e143\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e144\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e145\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e146\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e147\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e148\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e149\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e150\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e151\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003ebenchmark\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;testing\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewithSeparator\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ewithSeparator\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003egosamples\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ewithSeparator\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ewithSeparator\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkPlusOperatorUnknownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkSprintfKnownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003einterfaceData\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einterfaceData\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einterfaceData\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eformat\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einterfaceData\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eformat\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTrimSuffix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003einterfaceData\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkStringBuilderUnknownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuilder\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkStringBuilderKnownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuilder\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGrow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkJoinKnownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eJoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkBytesBufferUnknownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuffer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkBytesBufferKnownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuffer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGrow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkByteSliceUnknownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkByteSliceKnownSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etesting\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerateStrings\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebyteSlice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eRunning the benchmark with the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"nx\"\u003etest\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003ebench\u003c/span\u003e\u003cspan class=\"p\"\u003e=.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ewe got the results:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkPlusOperatorUnknownSize-8 \u003cspan class=\"m\"\u003e166\u003c/span\u003e \u003cspan class=\"m\"\u003e12008232\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkSprintfKnownSize-8 \u003cspan class=\"m\"\u003e184053\u003c/span\u003e \u003cspan class=\"m\"\u003e6421\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkStringBuilderUnknownSize-8 \u003cspan class=\"m\"\u003e269620\u003c/span\u003e \u003cspan class=\"m\"\u003e4365\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkStringBuilderKnownSize-8 \u003cspan class=\"m\"\u003e422790\u003c/span\u003e \u003cspan class=\"m\"\u003e2735\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkJoinKnownSize-8 \u003cspan class=\"m\"\u003e475293\u003c/span\u003e \u003cspan class=\"m\"\u003e2370\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkBytesBufferUnknownSize-8 \u003cspan class=\"m\"\u003e219260\u003c/span\u003e \u003cspan class=\"m\"\u003e5441\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkBytesBufferKnownSize-8 \u003cspan class=\"m\"\u003e321973\u003c/span\u003e \u003cspan class=\"m\"\u003e3639\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkByteSliceUnknownSize-8 \u003cspan class=\"m\"\u003e175533\u003c/span\u003e \u003cspan class=\"m\"\u003e6803\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eBenchmarkByteSliceKnownSize-8 \u003cspan class=\"m\"\u003e230568\u003c/span\u003e \u003cspan class=\"m\"\u003e5046\u003c/span\u003e ns/op\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eThe benchmark is also available as a \u003ca href=\"https://gist.github.com/gosamplesdev/3a319617bd3afb8b9b47edc3fcf29d5d\" target=\"_blank\"\u003eGithub Gist\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003eAs you can see, the plus (\u003ccode\u003e+\u003c/code\u003e) operator is much slower than the other methods, and you should not use them to concatenate a longer list of elements.\u003c/li\u003e\n\u003cli\u003eIn terms of performance, it is best to use the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e to join a long list of strings. In our case, \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e turned out to be even faster than the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eYou get a big speedup when you preallocate the amount of memory necessary for the output.\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"https://pkg.go.dev/bytes#Buffer\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Buffer\u003c/code\u003e\u003c/a\u003e and byte slice methods are slower and not as readable as the \u003ca href=\"https://pkg.go.dev/strings#Builder\" target=\"_blank\"\u003e\u003ccode\u003estrings.Builder\u003c/code\u003e\u003c/a\u003e because they operate on bytes rather than strings. So, they should not be your first choice for string concatenation.\u003c/li\u003e\n\u003c/ul\u003e",
    "date": "2021-10-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "eb2a34f92dbdebe5f1cc51c1d1c248c0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Just about managing",
    "url": "https://changelog.com/gotime/203",
    "resume": "Ashley Willis and Ela Krief join Natalie to discuss the ins and outs of management. They discuss what makes a good manager, common mistakes managers make, how to communicate effectively, dealing with conflict, and much more.",
    "date": "2021-10-28T17:30:00Z",
    "vote": 0
  },
  {
    "id": "140f6199e035a064124000fe617a3577",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Ruby vs Python: 10 Questions to Ask Before You Choose",
    "url": "https://blog.boot.dev/python/ruby-vs-python/",
    "resume": "A ruby is a beautiful red gemstone; a python is a beautiful green snake. Aside from that, they\u0026rsquo;re both very popular programming languages.",
    "date": "2021-10-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "465f05583835e62b0919c0e544e19274",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Maintaining ourselves",
    "url": "https://changelog.com/gotime/202",
    "resume": "With the constant demands of work and life we often don’t take much time to ensure that we’re maintaining ourselves. In this third episode of the maintenance series, Kris is joined by co-host Natalie, along with Ian Lopshire to discuss the ways in which we can maintain ourselves in this busy and chaotic world.",
    "date": "2021-10-21T16:00:00Z",
    "vote": 0
  },
  {
    "id": "ec52f1edb479f0cd9b5173d53d9e672d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔌 Handle 'connection reset by peer' error in Go",
    "url": "https://gosamples.dev/connection-reset-by-peer/",
    "resume": "\u003cp\u003eThe \u003ccode\u003econnection reset by peer\u003c/code\u003e is a \u003ca href=\"https://www.ibm.com/docs/en/db2/11.1?topic=message-tcpip-errors\" target=\"_blank\"\u003eTCP/IP\u003c/a\u003e error that occurs when the other end (peer) has unexpectedly closed the connection. It happens when you send a packet from your end, but the other end crashes and forcibly closes the connection with the \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e packet instead of the \u003ca href=\"https://ipwithease.com/what-is-tcp-fin-packet/\" target=\"_blank\"\u003e\u003ccode\u003eTCP FIN\u003c/code\u003e\u003c/a\u003e, which is used to close a connection under normal circumstances. In Go, you can detect the \u003ccode\u003econnection reset by peer\u003c/code\u003e by checking if the error returned by the peer is equal to \u003ca href=\"https://pkg.go.dev/syscall#ECONNRESET\" target=\"_blank\"\u003e\u003ccode\u003esyscall.ECONNRESET\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"reproduce-the-connection-reset-by-peer-error\"\u003eReproduce the \u003ccode\u003econnection reset by peer\u003c/code\u003e error\u003c/h2\u003e\n\u003cp\u003eWe can reproduce the error by creating a server and client that do the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe server reads a single byte and then closes the connection\u003c/li\u003e\n\u003cli\u003ethe client sends more than one byte\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf the server closes the connection with the remaining bytes in the socket\u0026rsquo;s receive buffer, then an \u003ccode\u003eRST\u003c/code\u003e packet is sent to the client. When the client tries to read from such a closed connection, it will get the \u003ccode\u003econnection reset by peer\u003c/code\u003e error.\u003c/p\u003e\n\u003cp\u003eSee the following example, which simulates this behavior.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;syscall\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elistener\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003enet\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eListen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003elistener\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003elistener\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;server\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;server\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003enet\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDial\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;localhost:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ab\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// wait for close on the server side\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esyscall\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eECONNRESET\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;This is connection reset by peer error\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// wait for server to run\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/10/20 19:01:58 client: \u003cspan class=\"nb\"\u003eread\u003c/span\u003e tcp \u003cspan class=\"o\"\u003e[\u003c/span\u003e::1\u003cspan class=\"o\"\u003e]\u003c/span\u003e:59897-\u0026gt;\u003cspan class=\"o\"\u003e[\u003c/span\u003e::1\u003cspan class=\"o\"\u003e]\u003c/span\u003e:8080: read: connection reset by peer\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/10/20 19:01:58 This is connection reset by peer error\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"handle-the-connection-reset-by-peer-error\"\u003eHandle the \u003ccode\u003econnection reset by peer\u003c/code\u003e error\u003c/h2\u003e\n\u003cp\u003eTypically, you can see the \u003ccode\u003econnection reset by peer\u003c/code\u003e error in response to a request being sent from the client to the server. It means that something bad has happened to the server: it has rebooted, the program has crashed, or other problems have occurred that cause the connection to be forcibly closed. Since TCP connections can be broken, there is no need to handle the \u003ccode\u003econnection reset by peer\u003c/code\u003e in any special way on the client side. You can log the error, ignore it or retry the connection when it occurs. In the example above, we detect the error using the \u003ca href=\"https://gosamples.dev/check-error-type\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e function\u003c/a\u003e by checking if the returned error is an instance of \u003ca href=\"https://pkg.go.dev/syscall#ECONNRESET\" target=\"_blank\"\u003e\u003ccode\u003esyscall.ECONNRESET\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"difference-between-connection-reset-by-peer-and-broken-pipe\"\u003eDifference between \u003ccode\u003econnection reset by peer\u003c/code\u003e and \u003ccode\u003ebroken pipe\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eBoth \u003ccode\u003econnection reset by peer\u003c/code\u003e and \u003ccode\u003ebroken pipe\u003c/code\u003e errors occur when a peer (the other end) unexpectedly closes the underlying connection. However, there is a subtle difference between them. Usually, you get the \u003ccode\u003econnection reset by peer\u003c/code\u003e when you \u003cstrong\u003eread\u003c/strong\u003e from the connection after the server sends the \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e packet, and when you \u003cstrong\u003ewrite\u003c/strong\u003e to the connection after the \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e instead, you get the \u003ccode\u003ebroken pipe\u003c/code\u003e error.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCheck \u003ca href=\"https://gosamples.dev/broken-pipe\"\u003ehow to handle the \u003ccode\u003ebroken pipe\u003c/code\u003e error in Go\u003c/a\u003e post, where will find another example of generating an \u003ccode\u003eRST\u003c/code\u003e packet and the \u003ccode\u003ebroken pipe\u003c/code\u003e error.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eReplace the \u003ccode\u003eclient()\u003c/code\u003e function in the example above with the following code to reproduce the \u003ccode\u003ebroken pipe\u003c/code\u003e error.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003enet\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDial\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;localhost:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ab\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// wait for close on the server side\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWith the new client, you will see the output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/10/20 19:55:40 client: write tcp \u003cspan class=\"o\"\u003e[\u003c/span\u003e::1\u003cspan class=\"o\"\u003e]\u003c/span\u003e:60399-\u0026gt;\u003cspan class=\"o\"\u003e[\u003c/span\u003e::1\u003cspan class=\"o\"\u003e]\u003c/span\u003e:8080: write: broken pipe\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNote that these simple examples do not cover all cases where \u003ccode\u003econnection reset by peer\u003c/code\u003e and \u003ccode\u003ebroken pipe\u003c/code\u003e may occur. There are much more situations where you can see these errors, and what error you see in what situation requires a deep understanding of the \u003ca href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol\" target=\"_blank\"\u003eTCP\u003c/a\u003e design.\u003c/p\u003e",
    "date": "2021-10-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6edefaf4df3ebd3a82dedcdeb8cec8fa",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "MySQL Tutorial: Selecting Single and Multiple Rows",
    "url": "https://golangbot.com/mysql-select-single-multiple-rows/",
    "resume": "In this tutorial, we will learn how to select a single row as well as multiple rows from a MySQL table using Go.",
    "date": "2021-10-16T18:00:04Z",
    "vote": 0
  },
  {
    "id": "6ee48c6b4559da10008440518d687a71",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "eBPF and Go",
    "url": "https://changelog.com/gotime/201",
    "resume": "eBPF (7 years old) is a sandbox that can run code inside the linux kernel. It started as a technology to build firewalls, and has evolved over time to include a range of new features. The panel discuss the origins of eBPF and how it works, as well as dig into some real-world use cases. While eBPF programs themselves aren’t written in Go (more like C), we will hear about how you can communicate with eBPF programs from your Go code.",
    "date": "2021-10-14T15:40:00Z",
    "vote": 0
  },
  {
    "id": "d14e772bfa58f8972eb7da92da387ad6",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "👈 Decode Base64 to a string in Go",
    "url": "https://gosamples.dev/decode-base64/",
    "resume": "\u003cp\u003eTo decode a \u003ca href=\"https://en.wikipedia.org/wiki/Base64\" target=\"_blank\"\u003eBase64\u003c/a\u003e encoded string, use the \u003ca href=\"https://pkg.go.dev/encoding/base64#Encoding.DecodeString\" target=\"_blank\"\u003e\u003ccode\u003eDecodeString()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/encoding/base64\" target=\"_blank\"\u003e\u003ccode\u003eencoding/base64\u003c/code\u003e\u003c/a\u003e standard library package. This function takes an encoded string as an argument and returns a byte slice, along with the decoding error. To get the decoded string, convert the byte slice to a string.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCheck also \u003ca href=\"https://gosamples.dev/encode-base64\"\u003ehow to encode a string to Base64 in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/base64\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erawDecodedText\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebase64\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdEncoding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDecodeString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;aGVsbG8gZnJvbSBnb3NhbXBsZXMuZGV2IGJhc2U2NCBlbmNvZGluZyBleGFtcGxlIQ==\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Decoded text: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erawDecodedText\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eDecoded text: hello from gosamples.dev base64 encoding example!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003eStdEncoding\u003c/code\u003e is an object representing the standard base64 encoding, as defined in \u003ca href=\"https://www.rfc-editor.org/rfc/rfc4648.html\" target=\"_blank\"\u003eRFC 4648\u003c/a\u003e, and the \u003ca href=\"https://pkg.go.dev/encoding/base64#Encoding.DecodeString\" target=\"_blank\"\u003e\u003ccode\u003eDecodeString()\u003c/code\u003e\u003c/a\u003e is its method.\u003c/p\u003e",
    "date": "2021-10-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0d041c56d0b3af523c963f4bb7cd320b",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "👉 Encode a string to Base64 in Go",
    "url": "https://gosamples.dev/encode-base64/",
    "resume": "\u003cp\u003eTo encode a string to \u003ca href=\"https://en.wikipedia.org/wiki/Base64\" target=\"_blank\"\u003eBase64\u003c/a\u003e in Go, use the \u003ca href=\"https://pkg.go.dev/encoding/base64#Encoding.EncodeToString\" target=\"_blank\"\u003e\u003ccode\u003eEncodeToString()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/encoding/base64\" target=\"_blank\"\u003e\u003ccode\u003eencoding/base64\u003c/code\u003e\u003c/a\u003e standard library package. This function takes a byte slice and converts it to a Base64 encoded string, but it can also be used for a string argument by converting it to a byte slice.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCheck also \u003ca href=\"https://gosamples.dev/decode-base64\"\u003ehow to decode Base64 to a string in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/base64\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etext\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;hello from gosamples.dev base64 encoding example!\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eencodedText\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebase64\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdEncoding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEncodeToString\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Encoded text: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eencodedText\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eEncoded text: \u003cspan class=\"nv\"\u003eaGVsbG8gZnJvbSBnb3NhbXBsZXMuZGV2IGJhc2U2NCBlbmNvZGluZyBleGFtcGxlIQ\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/encoding/base64#Encoding.EncodeToString\" target=\"_blank\"\u003e\u003ccode\u003eEncodeToString()\u003c/code\u003e\u003c/a\u003e is a method of \u003ccode\u003eStdEncoding\u003c/code\u003e which is an object representing the standard base64 encoding, as defined in \u003ca href=\"https://www.rfc-editor.org/rfc/rfc4648.html\" target=\"_blank\"\u003eRFC 4648\u003c/a\u003e.\u003c/p\u003e",
    "date": "2021-10-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "07d0d354bf5b1c3d8c37b1e61cbd9d32",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🖨️ Convert string to []byte or []byte to string in Go",
    "url": "https://gosamples.dev/string-byte-slice/",
    "resume": "\u003cp\u003eTo convert a string to a byte slice in Go, use the standard \u003ccode\u003e[]byte\u003c/code\u003e conversion expression \u003ccode\u003e[]byte(string)\u003c/code\u003e. To convert a byte slice to a string, use the \u003ccode\u003estring([]byte)\u003c/code\u003e conversion.\u003c/p\u003e\n\u003ch2 id=\"convert-a-string-to-a-byte-slice\"\u003eConvert a string to a byte slice\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// string to []byte\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello on https://gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e72\u003c/span\u003e \u003cspan class=\"m\"\u003e101\u003c/span\u003e \u003cspan class=\"m\"\u003e108\u003c/span\u003e \u003cspan class=\"m\"\u003e108\u003c/span\u003e \u003cspan class=\"m\"\u003e111\u003c/span\u003e \u003cspan class=\"m\"\u003e32\u003c/span\u003e \u003cspan class=\"m\"\u003e111\u003c/span\u003e \u003cspan class=\"m\"\u003e110\u003c/span\u003e \u003cspan class=\"m\"\u003e32\u003c/span\u003e \u003cspan class=\"m\"\u003e104\u003c/span\u003e \u003cspan class=\"m\"\u003e116\u003c/span\u003e \u003cspan class=\"m\"\u003e116\u003c/span\u003e \u003cspan class=\"m\"\u003e112\u003c/span\u003e \u003cspan class=\"m\"\u003e115\u003c/span\u003e \u003cspan class=\"m\"\u003e58\u003c/span\u003e \u003cspan class=\"m\"\u003e47\u003c/span\u003e \u003cspan class=\"m\"\u003e47\u003c/span\u003e \u003cspan class=\"m\"\u003e103\u003c/span\u003e \u003cspan class=\"m\"\u003e111\u003c/span\u003e \u003cspan class=\"m\"\u003e115\u003c/span\u003e \u003cspan class=\"m\"\u003e97\u003c/span\u003e \u003cspan class=\"m\"\u003e109\u003c/span\u003e \u003cspan class=\"m\"\u003e112\u003c/span\u003e \u003cspan class=\"m\"\u003e108\u003c/span\u003e \u003cspan class=\"m\"\u003e101\u003c/span\u003e \u003cspan class=\"m\"\u003e115\u003c/span\u003e \u003cspan class=\"m\"\u003e46\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e \u003cspan class=\"m\"\u003e101\u003c/span\u003e 118\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"convert-a-byte-slice-to-a-string\"\u003eConvert a byte slice to a string\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// []byte to string\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e72\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e101\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e108\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e108\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e111\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e111\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e110\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e104\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e116\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e116\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e112\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e115\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e58\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e47\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e47\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e103\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e111\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e115\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e97\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e109\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e112\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e108\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e101\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e115\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e46\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e101\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e118\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello on https://gosamples.dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"the-difference-between-a-string-and-a-byte-slice\"\u003eThe difference between a string and a byte slice\u003c/h2\u003e\n\u003cp\u003eThe conversion between a string and a byte slice is so simple because a string is technically \u003cstrong\u003ea read-only slice of bytes\u003c/strong\u003e. You can take a fragment of a string just like a fragment of a slice or an array:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES.dev is the best Golang website in the world!\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGOSAMPLES.dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut \u003cstrong\u003eyou can\u0026rsquo;t modify a string\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;🌈 GOSAMPLES.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e \u003cspan class=\"c1\"\u003e// compiler error: cannot assign to s[5] (strings are immutable)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eA byte slice can be modified\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;🌈 GOSAMPLES.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e🌈 OSAMPLES.dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can also loop over the individual bytes of a string in the same way as with a byte slice, using the \u003ccode\u003efor\u003c/code\u003e loop. The examples:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;🌈 GOSAMPLES.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;🌈 GOSAMPLES.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ereturn the same output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e240\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e159\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e140\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e136\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"m\"\u003e32\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e5\u003c/span\u003e \u003cspan class=\"m\"\u003e71\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e6\u003c/span\u003e \u003cspan class=\"m\"\u003e79\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e7\u003c/span\u003e \u003cspan class=\"m\"\u003e83\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e8\u003c/span\u003e \u003cspan class=\"m\"\u003e65\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e9\u003c/span\u003e \u003cspan class=\"m\"\u003e77\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e \u003cspan class=\"m\"\u003e80\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e11\u003c/span\u003e \u003cspan class=\"m\"\u003e76\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e12\u003c/span\u003e \u003cspan class=\"m\"\u003e69\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e13\u003c/span\u003e \u003cspan class=\"m\"\u003e83\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e14\u003c/span\u003e \u003cspan class=\"m\"\u003e46\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e15\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e16\u003c/span\u003e \u003cspan class=\"m\"\u003e101\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e17\u003c/span\u003e \u003cspan class=\"m\"\u003e118\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou may wonder why the 13-character text is 18 bytes long. This is because the character 🌈 is encoded with 4 bytes in UTF-8 (all strings in Go are UTF-8). For texts containing characters encoded with more than 1 byte, there is another difference between using strings and byte slices, in the behavior of the \u003ccode\u003efor range\u003c/code\u003e loop. \u003cstrong\u003eWhen you use the \u003ccode\u003efor range\u003c/code\u003e loop on a string, you iterate over \u003ccode\u003erunes\u003c/code\u003e (\u003ca href=\"https://en.wikipedia.org/wiki/Code_point\" target=\"_blank\"\u003eUnicode code points\u003c/a\u003e)\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;🌈 GOSAMPLES.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%d: %c\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e0: 🌈\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e4:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e5: G\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e6: O\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e7: S\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e8: A\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e9: M\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e10: P\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e11: L\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12: E\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e13: S\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e14: .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e15: d\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e16: e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e17: v\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eWhen you use the \u003ccode\u003efor range\u003c/code\u003e on a byte slice, you iterate over individual bytes\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;🌈 GOSAMPLES.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%d: %c\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e0: ð\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e1:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e3:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e4:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e5: G\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e6: O\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e7: S\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e8: A\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e9: M\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e10: P\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e11: L\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e12: E\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e13: S\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e14: .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e15: d\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e16: e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e17: v\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-10-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8e73d9b120ed5464bf06071619ec7815",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 7 Best Ways to Learn Python",
    "url": "https://blog.boot.dev/python/best-ways-to-learn-python/",
    "resume": "Everyone wants to know the best way to learn to code Python nowadays. It’s a great language, as I’ve written about before, with great career prospects and tons of useful features.",
    "date": "2021-10-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5544a8c271ac654df748f90b84009822",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🧠 Print the memory address of a variable in Go",
    "url": "https://gosamples.dev/print-address/",
    "resume": "\u003cp\u003eIn Go, to print the memory address of a variable, struct, array, slice, map, or any other structure, you need to generate a pointer to the value with the address operator \u003ccode\u003e\u0026amp;\u003c/code\u003e and use the \u003ca href=\"https://pkg.go.dev/fmt#Println\" target=\"_blank\"\u003e\u003ccode\u003efmt.Println()\u003c/code\u003e\u003c/a\u003e function (or any other print function from the \u003ca href=\"https://pkg.go.dev/fmt\" target=\"_blank\"\u003e\u003ccode\u003efmt\u003c/code\u003e\u003c/a\u003e package) to write the value address to the standard output. If you want to put the address as part of the text, you can use the \u003ccode\u003e%p\u003c/code\u003e format \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003everb\u003c/a\u003e in the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003ch4 id=\"example-1-print-the-address-of-a-variable\"\u003eExample 1: Print the address of a variable\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// pointer to the variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e0xc00001c088\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e0xc00001c088\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"example-2-format-the-address-of-a-variable\"\u003eExample 2: Format the address of a variable\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of i=%d:\\t%p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// pointer to the variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of p=\u0026amp;i=%d:\\t%p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e32: 0xc00001c088\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e32: 0xc00001c088\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"example-3-format-addresses-of-various-go-data-structures-array-slice-struct-struct-field-and-map\"\u003eExample 3: Format addresses of various Go data structures: array, slice, struct, struct field, and map\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eText\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of array = %v: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// slice\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of slice = %v: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// struct\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003estructInstance\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of struct = %+v: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estructInstance\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003estructInstance\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// struct field\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of struct field = %s: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estructInstance\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003estructInstance\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// map\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003emapInstance\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of map = %v: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emapInstance\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003emapInstance\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003earray\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e 3\u003cspan class=\"o\"\u003e]\u003c/span\u003e: 0xc0000b4000\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003eslice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e 3\u003cspan class=\"o\"\u003e]\u003c/span\u003e: 0xc0000a4018\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003estruct\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eNumber:23 Text:abc\u003cspan class=\"o\"\u003e}\u003c/span\u003e: 0xc0000a4048\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of struct \u003cspan class=\"nv\"\u003efield\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e abc: 0xc0000a4050\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003emap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e map\u003cspan class=\"o\"\u003e[\u003c/span\u003e0:1\u003cspan class=\"o\"\u003e]\u003c/span\u003e: 0xc0000aa020\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eAs you may know, map index expressions \u003ca href=\"https://gosamples.dev/cannot-take-address\"\u003eare not addressable\u003c/a\u003e, so it is not possible to print the address of a map value with a specific key.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"print-the-address-of-a-pointer\"\u003ePrint the address of a pointer\u003c/h2\u003e\n\u003cp\u003eIn \u003ca href=\"https://gosamples.dev/print-address/#example-1-print-the-address-of-a-variable\"\u003eExample 1\u003c/a\u003e and \u003ca href=\"https://gosamples.dev/print-address/#example-2-format-the-address-of-a-variable\"\u003eExample 2\u003c/a\u003e, we created a new pointer \u003ccode\u003ep\u003c/code\u003e of type \u003ccode\u003e*int\u003c/code\u003e and assigned to it the address of variable \u003ccode\u003ei\u003c/code\u003e. Then, we printed \u003cstrong\u003ethe value of the pointer \u003ccode\u003ep\u003c/code\u003e\u003c/strong\u003e with \u003ccode\u003efmt.Println(p)\u003c/code\u003e, which is the address of the variable \u003ccode\u003ei\u003c/code\u003e. Since the pointer itself is a value, we can also print the address of that value using \u003ccode\u003efmt.Println(\u0026amp;p)\u003c/code\u003e. Compare outputs of printing the address of the variable \u003ccode\u003ei\u003c/code\u003e, the value of \u003ccode\u003ep\u003c/code\u003e, and the pointer of \u003ccode\u003ep\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// get the address of a variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of i=%d: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// get the address the pointer points to\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of p=\u0026amp;i=%d: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// get the address of pointer\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of pointer p=\u0026amp;i=%d: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e32: 0xc00001c088\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of \u003cspan class=\"nv\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e32: 0xc00001c088\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of pointer \u003cspan class=\"nv\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e32: 0xc00000e030\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe diagram below shows the relationship between variables and pointers in memory.\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/print-address/pointer.png\" alt=\"Variable vs pointer in memory\"\u003e\u003c/div\u003e\n\u003ch2 id=\"print-the-address-of-a-slice-underlying-array\"\u003ePrint the address of a slice underlying array\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://gosamples.dev/capacity-and-length\"\u003eSlices are values\u003c/a\u003e, so to print the address of a slice, you need to use the address operator \u003ccode\u003e\u0026amp;\u003c/code\u003e, just as you would for normal variables. But the verb \u003ccode\u003e%p\u003c/code\u003e also has a special meaning for slices. Quoting \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003ethe documentation\u003c/a\u003e of the \u003ca href=\"https://pkg.go.dev/fmt\" target=\"_blank\"\u003e\u003ccode\u003efmt\u003c/code\u003e\u003c/a\u003e package:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e%p address of 0th element in base 16 notation, with leading 0x\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo print the address of the 0th element of the slice, which is equivalent to the address of the slice underlying array, you just need to use the \u003ccode\u003e%p\u003c/code\u003e format with the slice value argument. See the code below to compare the address of an example array, the address of a slice created by \u0026ldquo;slicing\u0026rdquo; the array, and the address of the 0th element of the slice (the address of the underlying array).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// print address of array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of arr: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// print address of slice\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// \u0026#34;slicing\u0026#34; the array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[:]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of slice: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// print address of the slice underlying array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of the slice underlying array: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// print address of 0th element of the slice\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of 0th element of the slice: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of arr: 0xc000014120\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of slice: 0xc00000c030\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of the slice underlying array: 0xc000014120\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of 0th element of the slice: 0xc000014120\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"print-an-address-without-leading-0x\"\u003ePrint an address without leading 0x\u003c/h2\u003e\n\u003cp\u003eTo print the address without leading 0x, use the formatting pointer verb with the \u003ccode\u003e#\u003c/code\u003e flag: \u003ccode\u003e%#p\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// print address of array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Address of arr: %#p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAddress of arr: c000014120\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"assign-an-address-to-a-string\"\u003eAssign an address to a string\u003c/h2\u003e\n\u003cp\u003eTo get the address of a variable and assign it to string, use \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf()\u003c/code\u003e\u003c/a\u003e function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eaddr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%p\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e0xc0000b4000\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-10-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cc54a50ed872cd956842249332748c74",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Go: Write Log to a File",
    "url": "https://www.jajaldoang.com/post/go-write-log-to-file/",
    "resume": "\u003cp\u003eIf you run your application on a server, you need to write your application log to a file. It will help you debug and analyze your application. A good log file will tell you what the error is, when it happened, and where it is come from. This article will show you how to write logs to a file in Go.\u003c/p\u003e",
    "date": "2021-10-10T05:43:21+07:00",
    "vote": 0
  },
  {
    "id": "825fa467eccb369b59b4295a68756639",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "19 Simple JavaScript Projects for Beginners [2023 Updated]",
    "url": "https://blog.boot.dev/javascript/javascript-projects-for-beginners/",
    "resume": "JavaScript is one of those things that you use one thousand times every single day, probably without even realizing it.",
    "date": "2021-10-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a43f94eaffca364a5e68e8e8a15b8571",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Gophers Say What!?",
    "url": "https://changelog.com/gotime/200",
    "resume": "We’re celebrating our 200th episode with a crazy game of Gophers Say! Mat Ryer hosts two epic teams including Go Time OGs Carlisia, Erik, and Brian!",
    "date": "2021-10-07T17:30:00Z",
    "vote": 0
  },
  {
    "id": "e525f486838f40fa4c7edcd4c29be58d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "C# vs JavaScript: Choosing the Best Language for You",
    "url": "https://blog.boot.dev/javascript/c-sharp-vs-javascript/",
    "resume": "JavaScript (JS), once regarded as simply a \u0026ldquo;glue language\u0026rdquo;, has gone on to become the most popular programming language in the world.",
    "date": "2021-10-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f42999c03e97a485509568f0de9e8999",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "17 Fascinating Python Projects for Beginners",
    "url": "https://blog.boot.dev/python/python-projects-for-beginners/",
    "resume": "I’ve made no secret of the fact that I love Python, and that I believe one of the best ways to learn Python is by finding an awesome project you care about to work on.",
    "date": "2021-10-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ab6e5a9dd0f58f6f61462e88e1aa3af5",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🏟️ Capacity and length of a slice in Go",
    "url": "https://gosamples.dev/capacity-and-length/",
    "resume": "\u003cp\u003eIn Go, the length of a slice tells you how many elements it contains. It can be obtained using the \u003ca href=\"https://pkg.go.dev/builtin#len\" target=\"_blank\"\u003e\u003ccode\u003elen()\u003c/code\u003e\u003c/a\u003e function. The capacity is the size of the slice\u0026rsquo;s underlying array and can be obtained with the \u003ca href=\"https://pkg.go.dev/builtin#cap\" target=\"_blank\"\u003e\u003ccode\u003ecap()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003ch2 id=\"difference-between-arrays-and-slices\"\u003eDifference between arrays and slices\u003c/h2\u003e\n\u003cp\u003eTo better understand the difference between the capacity and length of a slice, first, you should know the differences between arrays and slices.\u003c/p\u003e\n\u003ch3 id=\"arrays\"\u003eArrays\u003c/h3\u003e\n\u003cp\u003eAn array is an indexed collection of a certain \u003cstrong\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/strong\u003e with values of the same \u003cstrong\u003e\u003ccode\u003etype\u003c/code\u003e\u003c/strong\u003e, declared as:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003evar name [size]type\u003c/code\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/go_array.png\" alt=\"Go array\"\u003e\u003c/div\u003e\n\u003ch4 id=\"initializing-an-array\"\u003eInitializing an array\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array with zero values\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e// partially initialized array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array initialization\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ... - means that array size equals the number of elements in the array literal\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;b: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;c: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;d: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ea: length: 4, capacity: 4, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eb: length: 4, capacity: 4, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ec: length: 4, capacity: 4, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e 4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ed: length: 4, capacity: 4, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e5\u003c/span\u003e \u003cspan class=\"m\"\u003e6\u003c/span\u003e \u003cspan class=\"m\"\u003e7\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"properties-of-arrays\"\u003eProperties of arrays\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eArrays have a fixed size and cannot be resized. Slices can be resized.\u003c/li\u003e\n\u003cli\u003eThe type of the array includes its size. The \u003ccode\u003e[4]int\u003c/code\u003e array type is distinct from \u003ccode\u003e[5]int\u003c/code\u003e, and they cannot be compared.\u003c/li\u003e\n\u003cli\u003eInitializing an array with \u003ccode\u003evar name [size]type\u003c/code\u003e creates a collection of \u003ccode\u003esize\u003c/code\u003e elements of type \u003ccode\u003etype\u003c/code\u003e and each of them is the \u003ca href=\"https://golang.org/ref/spec#The_zero_value\" target=\"_blank\"\u003ezero value\u003c/a\u003e for the given \u003ccode\u003etype\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eArrays are \u003cstrong\u003epassed by value\u003c/strong\u003e. It means that when you assign one array to another, you will make a new copy of its contents:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e999\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e999\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e 4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e 4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"slices\"\u003eSlices\u003c/h3\u003e\n\u003cp\u003eA slice declared as:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003evar name []type\u003c/code\u003e\u003c/div\u003e\n\u003cp\u003eis a data structure describing a piece of an array with three properties:\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/go_slice.png\" alt=\"Go slice\"\u003e\u003c/div\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eptr\u003c/code\u003e - a pointer to the underlying array\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elen\u003c/code\u003e - length of the slice - number of elements in the slice\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecap\u003c/code\u003e - capacity of the slice - length of the underlying array, which is also the maximum length the slice can take (until it grows)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eA slice \u003cstrong\u003eis not an array\u003c/strong\u003e. It describes a section of the underlying array stored under the \u003ccode\u003eptr\u003c/code\u003e pointer.\u003c/p\u003e\n\u003ch4 id=\"initializing-a-slice\"\u003eInitializing a slice\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"c1\"\u003e// nil slice\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e// slice initialized with specified array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// slice of size 4 initialized with zero-valued array of size 4\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// slice of size 4 initialized with zero-valued array of size 5\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a: length: %d, capacity: %d, pointer to underlying array: %p, data: %v, is nil: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;b: length: %d, capacity: %d, pointer to underlying array: %p, data: %v, is nil: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;c: length: %d, capacity: %d, pointer to underlying array: %p, data: %v, is nil: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;d: length: %d, capacity: %d, pointer to underlying array: %p, data: %v, is nil: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ea: length: 0, capacity: 0, pointer to underlying array: 0x0, data: \u003cspan class=\"o\"\u003e[]\u003c/span\u003e, is nil: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eb: length: 4, capacity: 4, pointer to underlying array: 0xc00001e060, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e 3\u003cspan class=\"o\"\u003e]\u003c/span\u003e, is nil: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ec: length: 4, capacity: 4, pointer to underlying array: 0xc00001e080, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e, is nil: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ed: length: 4, capacity: 5, pointer to underlying array: 0xc000016180, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e, is nil: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs we see in the output, \u003ccode\u003evar a []int\u003c/code\u003e creates a \u003ccode\u003enil\u003c/code\u003e slice - a slice that has the length and capacity equal to 0, and no underlying array.\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/nil_slice.png\" alt=\"Go nil slice\"\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eInitializing a slice with the specified array, i.e., \u003ccode\u003eb := []int{0, 1, 2, 3}\u003c/code\u003e, creates a new slice with capacity and length taken from the underlying array.\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/specified_array_slice.png\" alt=\"Slice initialized with specified array\"\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eA slice can also be initialized with the built-in \u003ca href=\"https://pkg.go.dev/builtin#make\" target=\"_blank\"\u003e\u003ccode\u003emake()\u003c/code\u003e\u003c/a\u003e function that takes the type of a slice as the first argument and the length as the second. The resulting slice has a capacity equals to the length, and the underlying array is initialized with \u003ca href=\"https://golang.org/ref/spec#The_zero_value\" target=\"_blank\"\u003ezero values\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/make_slice.png\" alt=\"Slice initialized with make(Type, len)\"\u003e\u003c/div\u003e\n\u003cp\u003eThere is also an alternative version of the \u003ca href=\"https://pkg.go.dev/builtin#make\" target=\"_blank\"\u003e\u003ccode\u003emake()\u003c/code\u003e\u003c/a\u003e function with three arguments: the first is the type of a slice, the second is the length, and the third is the capacity. In this way, you can create a slice with a capacity greater than the length.\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/make_cap_slice.png\" alt=\"Slice initialized with make(Type, len, cap)\"\u003e\u003c/div\u003e\n\u003ch4 id=\"properties-of-slices\"\u003eProperties of slices\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eA slice is automatically resized when the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function is called. Resizing here means that the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e adds new elements to the end of the slice, and if there is not sufficient capacity in the underlying array, a new array will be allocated. The \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function always returns a new, updated slice, so if you want to resize a slice \u003ccode\u003es\u003c/code\u003e it is necessary to store the result in the same variable \u003ccode\u003es\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eSlices are \u003ca href=\"https://golang.org/ref/spec#Comparison_operators\" target=\"_blank\"\u003enot comparable\u003c/a\u003e and simple equality comparison \u003ccode\u003ea == b\u003c/code\u003e is not possible. See \u003ca href=\"https://gosamples.dev/compare-slices\"\u003ehow to compare slices\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eInitializing a slice with \u003ccode\u003evar name []type\u003c/code\u003e creates a \u003ccode\u003enil\u003c/code\u003e slice that has length and capacity equal to 0 and no underlying array. See \u003ca href=\"https://gosamples.dev/empty-vs-nil-slice/\"\u003ewhat is the difference between nil and empty slices\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eJust like arrays (and everything in Go), slices are \u003cstrong\u003epassed by value\u003c/strong\u003e. When you assign a slice to a new variable, the \u003ccode\u003eptr\u003c/code\u003e, \u003ccode\u003elen\u003c/code\u003e, and \u003ccode\u003ecap\u003c/code\u003e are copied, including the \u003ccode\u003eptr\u003c/code\u003e pointer that will \u003cstrong\u003epoint to the same underlying array\u003c/strong\u003e. If you modify the copied slice, you modify the same shared array which makes all changes visible in the old and new slices:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e999\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e999\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e 4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e999\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e 4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"length-and-capacity\"\u003eLength and capacity\u003c/h2\u003e\n\u003cp\u003eYou already know that capacity is the size of the slice\u0026rsquo;s underlying array and length is the number of the slice elements, but what is the relationship between them? To understand this better, let\u0026rsquo;s analyze the re-slicing and appending operations.\u003c/p\u003e\n\u003ch3 id=\"re-slicing\"\u003eRe-slicing\u003c/h3\u003e\n\u003cp\u003eRe-slicing is an operation that creates a new slice from an existing one or an array. To \u0026ldquo;slice\u0026rdquo; an array or \u0026ldquo;re-slice\u0026rdquo; an existing slice, use a half-open range with two indices separated by a colon:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003earr\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ea: length: 2, capacity: 3, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e 3\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe get the same results for the slice:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ea: length: 2, capacity: 3, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e 3\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/reslice_slice_a.png\" alt=\"Re-slicing - slice a\"\u003e\u003c/div\u003e\n\u003cp\u003eRe-slicing a slice or an array creates a new slice with length given by indices range and capacity equal to the number of elements in the underlying array from the index of the first element of the slice to the end of the array. See two more examples of re-slicing operation - for range without the first index \u003ccode\u003es[:3]\u003c/code\u003e, and without the last index \u003ccode\u003es[3:]\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;b: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eb: length: 3, capacity: 4, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e 3\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/reslice_slice_b.png\" alt=\"Re-slicing - slice b\"\u003e\u003c/div\u003e\n\u003chr\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e:]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;c: length: %d, capacity: %d, data: %v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ec: length: 1, capacity: 1, data: \u003cspan class=\"o\"\u003e[\u003c/span\u003e4\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/capacity-and-length/reslice_slice_c.png\" alt=\"Re-slicing - slice c\"\u003e\u003c/div\u003e\n\u003ch3 id=\"the-append-function\"\u003eThe append() function\u003c/h3\u003e\n\u003cp\u003eAppending is one of the most important operations for slices. Since arrays in Go are immutable, only with the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function we can get a variable-length data collection. However, as we know, underneath slices still use arrays. The example below shows what happens when the number of slice items exceeds its capacity.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;length: %d, capacity: %d, address: %p\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 0, capacity: 0, address: 0x0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 1, capacity: 1, address: 0xc00001c0a0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 2, capacity: 2, address: 0xc00001c0b0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 3, capacity: 4, address: 0xc00001e080\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 4, capacity: 4, address: 0xc00001e080\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 5, capacity: 8, address: 0xc000020140\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 6, capacity: 8, address: 0xc000020140\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 7, capacity: 8, address: 0xc000020140\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 8, capacity: 8, address: 0xc000020140\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elength: 9, capacity: 16, address: 0xc000026200\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see in the output, every time the length of the slice is beyond its capacity (the length of the underlying array), the \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function expands the slice by allocating a new underlying array of twice its size and copying all of its elements there. Notice that the pointer to the underlying array changes with each change in capacity.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eTo understand the length and capacity of slices in Go, it is important to understand how slices work and what is the difference between slices and arrays. Slices are built on top of arrays to provide variable-length data collections. They consist of three elements - a pointer to the underlying array (underneath, slices use arrays as data storage), the length of the slice, and the capacity - the size of the underlying array. These 3 properties are copied when a slice value is passed, but the new pointer always points to the same shared array. The \u003ca href=\"https://pkg.go.dev/builtin#append\" target=\"_blank\"\u003e\u003ccode\u003eappend()\u003c/code\u003e\u003c/a\u003e function makes slices expandable, creating a powerful and expressive data structure, one of the most used in Go.\u003c/p\u003e",
    "date": "2021-10-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "14b5b1a00b18afaa58026b3d00e7290d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Four-Course Python Data Structures and Algorithms Track Released",
    "url": "https://blog.boot.dev/news/python-track-announcement/",
    "resume": "We recently took a look at our course curriculum and felt that our current Learn Algorithms course, written in Go, would be better served if it covered Python instead.",
    "date": "2021-10-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5bebf0a00290fbebe1238e3b9193e214",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🕵️ Solve 'cannot take address of XXX' error in Go",
    "url": "https://gosamples.dev/cannot-take-address/",
    "resume": "\u003cp\u003eWhen you try to assign a pointer of a \u003ca href=\"https://golang.org/ref/spec#Composite_literals\" target=\"_blank\"\u003eliteral\u003c/a\u003e, map value, or a function return value, your IDE or compiler prints the error:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003e\u0026quot;cannot take address of XXX\u0026quot;\u003c/code\u003e\u003c/div\u003e\nwhere \u003ccode\u003eXXX\u003c/code\u003e is an element you want to assign. See the examples of invalid assignments and the compiler errors:\u003c/p\u003e\n\u003ch4 id=\"get-address-of-value-returned-by-a-function\"\u003eGet address of value returned by a function\u003c/h4\u003e\n\u003cp\u003eFor\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e// returns compiler error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou get\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecannot take the address of time.Now\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand for\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efooPtr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e// returns compiler error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou get\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecannot take the address of foo\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"get-address-of-map-value\"\u003eGet address of map value\u003c/h4\u003e\n\u003cp\u003eFor\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e// returns compiler error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou get\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecannot take the address of m\u003cspan class=\"o\"\u003e[\u003c/span\u003e1\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"get-address-of-untyped-constant\"\u003eGet address of untyped constant\u003c/h4\u003e\n\u003cp\u003eFor\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"c1\"\u003e// returns compiler error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou get\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecannot take the address of \u003cspan class=\"m\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"get-address-of-typed-constant\"\u003eGet address of typed constant\u003c/h4\u003e\n\u003cp\u003eFor\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nb\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// returns compiler error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou get\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecannot take the address of int64\u003cspan class=\"o\"\u003e(\u003c/span\u003e4\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"why-you-cannot-do-that\"\u003eWhy you cannot do that\u003c/h2\u003e\n\u003cp\u003eTo be able to get an address with the \u003ccode\u003e\u0026amp;\u003c/code\u003e operator, i.e., to perform the \u003ccode\u003e\u0026amp;x\u003c/code\u003e operation, \u003ccode\u003ex\u003c/code\u003e must be addressable. As The Go Programming Language Specification \u003ca href=\"https://golang.org/ref/spec#Address_operators\" target=\"_blank\"\u003esays\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003eFor an operand x of type T, the address operation \u0026amp;x generates a pointer of type *T to x. The operand must be addressable, that is, either a variable, pointer indirection, or slice indexing operation; or a field selector of an addressable struct operand; or an array indexing operation of an addressable array. As an exception to the addressability requirement, x may also be a (possibly parenthesized) composite literal. If the evaluation of x would cause a run-time panic, then the evaluation of \u0026amp;x does too.\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eConstants, map index expressions, and values returned by a function are not addressable, so you cannot use the \u003ccode\u003e\u0026amp;\u003c/code\u003e operator on them. Practically speaking, the constants like \u003ccode\u003e4\u003c/code\u003e, \u003ccode\u003eint64(4)\u003c/code\u003e, or function return values like \u003ccode\u003efoo()\u003c/code\u003e have no address because there is no specific memory allocated for them; they can reside in processor registers. You can similarly think of map index values. A map is reallocated if the number of its elements grows above a certain threshold. If it were possible to retrieve the address of a map element, such a pointer could point to an invalid address after this reallocation. For this reason, taking the address of a map value is not allowed.\u003c/p\u003e\n\u003cp\u003eAs a rule of thumb, you can think about \u003ccode\u003e\u0026amp;\u003c/code\u003e as an operator for taking the address of some \u003cstrong\u003eexisting variable\u003c/strong\u003e with one exception: you can create a composite literal and use \u003ccode\u003e\u0026amp;\u003c/code\u003e to retrieve its address, for example, \u003ccode\u003e\u0026amp;T{}\u003c/code\u003e, \u003ccode\u003e\u0026amp;map[string]int64{\u0026quot;a\u0026quot;: 1}\u003c/code\u003e or \u003ccode\u003e\u0026amp;[]int{}\u003c/code\u003e are valid expressions.\u003c/p\u003e\n\u003ch2 id=\"what-you-can-do\"\u003eWhat you can do\u003c/h2\u003e\n\u003cp\u003eIn everyday coding, a common pattern, especially in writing tests, is to assign a constant to a struct pointer. Having a struct:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVal\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou cannot assign the constant in the way that seems the most simple:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"c1\"\u003e// compiler error: cannot take address of int(3)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHowever, there are other options. Let\u0026rsquo;s analyze them.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThere is a lot of discussion about solving the problem of creating pointers to simple types as this becomes a real pain for many programmers. See the Github issue: \u003ca href=\"https://github.com/golang/go/issues/45624\" target=\"_blank\"\u003e#45624\u003c/a\u003e in The Go Programming Language repository to follow the progress.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"use-a-helper-variable\"\u003eUse a helper variable\u003c/h3\u003e\n\u003cp\u003eThe simplest and recommended way to assign a pointer to a value is to create a helper variable whose address can be taken.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"use-a-helper-function\"\u003eUse a helper function\u003c/h3\u003e\n\u003cp\u003eIf you have multiple places where you want to assign a pointer to a constant, you can create a helper function that takes a concrete value and returns its address.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eintPtr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nf\"\u003eintPtr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"use-new-function\"\u003eUse \u003ccode\u003enew()\u003c/code\u003e function\u003c/h3\u003e\n\u003cp\u003eIf you need to assign a zero value of a given type, you can use a built-in \u003ca href=\"https://pkg.go.dev/builtin#new\" target=\"_blank\"\u003e\u003ccode\u003enew()\u003c/code\u003e\u003c/a\u003e function to create a new variable and take its address.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"use-an-anonymous-function\"\u003eUse an anonymous function\u003c/h3\u003e\n\u003cp\u003eThis is equivalent to creating a helper function, but here we are creating an anonymous, single-line function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e}(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"use-a-slice\"\u003eUse a slice\u003c/h3\u003e\n\u003cp\u003eThe slice indexing operation is addressable, so you can initialize a new slice with a given value and take the address of its first element. However, \u003cstrong\u003ethis method is considered ugly and is not recommended\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e}[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-10-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d965ffb81c5710d9c3c430261cfad5f0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Matlab vs Python: 9 Key Points",
    "url": "https://blog.boot.dev/python/matlab-vs-python/",
    "resume": "Matlab and Python both can do quite different and incredible things, which makes the question of \u0026ldquo;Matlab versus Python\u0026rdquo; interesting.",
    "date": "2021-10-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "587ab74e1789ce55f62ef63c84df75dd",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go on hardware: TinyGo in the wild",
    "url": "https://changelog.com/gotime/199",
    "resume": "In this episode, we will be exploring the tiny world of Go and Hardware. We are joined by three gophers, Vladimir Vivien, Tobias Theel, and Ron Evans, who will be discussing the use of Linux API (V4L2) to control video hardware and capture image data in realtime, programming Bluetooth devices, working on WiFi communication using an Arduino Nano 33 IoT NINA chip, and much more.",
    "date": "2021-09-30T15:00:00Z",
    "vote": 0
  },
  {
    "id": "6de942a3de9f135c2bd274f0ce275c87",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Upload File to Amazon S3 With Go",
    "url": "https://www.jajaldoang.com/post/upload-file-to-aws-s3-with-go/",
    "resume": "\u003cp\u003eWhen your application handles a large number of files, you need to store the files in a certain storage system outside your application server. One of the best storage services is Amazon S3. This article will show you how to create an Amazon S3 Bucket, create access key id and secret, and upload files to Amazon S3 with Go.\u003c/p\u003e",
    "date": "2021-09-30T13:45:02+07:00",
    "vote": 0
  },
  {
    "id": "d9008733f92225d6588f508bdda286a3",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔟 Convert string to bool in Go",
    "url": "https://gosamples.dev/string-to-bool/",
    "resume": "\u003cp\u003eTo convert a string to a bool in Go, use \u003ca href=\"https://pkg.go.dev/strconv#ParseBool\" target=\"_blank\"\u003e\u003ccode\u003estrconv.ParseBool()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/strconv\" target=\"_blank\"\u003e\u003ccode\u003estrconv\u003c/code\u003e\u003c/a\u003e package. It takes one of the accepted string values: \u003ccode\u003e\u0026quot;1\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;t\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;T\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;TRUE\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;true\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;True\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;0\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;f\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;F\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;FALSE\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;false\u0026quot;\u003c/code\u003e, \u003ccode\u003e\u0026quot;False\u0026quot;\u003c/code\u003e and converts it to the equivalent boolean value: \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e. For any other string, the function returns an error.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strconv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eboolValues\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;t\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;T\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;TRUE\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;True\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;F\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;FALSE\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;false\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;False\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eboolValues\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eboolValue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParseBool\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eboolValue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e1: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003et: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eT: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eTRUE: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etrue: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eTrue: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e0: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ef: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eF: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFALSE: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efalse: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFalse: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-09-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "aa94eededb17859727ef193f516bf91d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "👯 Remove duplicate spaces from a string in Go",
    "url": "https://gosamples.dev/remove-duplicate-spaces/",
    "resume": "\u003cp\u003eTo remove duplicate whitespaces from a string in Go, use \u003ca href=\"https://pkg.go.dev/strings#Fields\" target=\"_blank\"\u003e\u003ccode\u003estrings.Fields()\u003c/code\u003e\u003c/a\u003e function that splits the string around one or more whitespace characters, then join the slice of substrings using \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e with a single space separator. Alternatively, you can use a regular expression to find duplicate whitespace characters and replace them using the \u003ca href=\"https://pkg.go.dev/regexp#Regexp.ReplaceAllString\" target=\"_blank\"\u003e\u003ccode\u003eReplaceAllString()\u003c/code\u003e\u003c/a\u003e method from the \u003ca href=\"https://pkg.go.dev/regexp\" target=\"_blank\"\u003e\u003ccode\u003eregexp\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003ch2 id=\"remove-duplicate-whitespaces-using-stringsfieldshttpspkggodevstringsfields-function\"\u003eRemove duplicate whitespaces using \u003ca href=\"https://pkg.go.dev/strings#Fields\" target=\"_blank\"\u003e\u003ccode\u003estrings.Fields()\u003c/code\u003e\u003c/a\u003e function\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES.dev is \\t \\r\\n the best Golang \\t\\t\\t\\t website in the \\n world!\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eJoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFields\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this method, we do two things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe split the string around one or more whitespace characters using the \u003ca href=\"https://pkg.go.dev/strings#Fields\" target=\"_blank\"\u003e\u003ccode\u003estrings.Fields()\u003c/code\u003e\u003c/a\u003e function. The whitespace characters are defined by \u003ca href=\"https://pkg.go.dev/unicode#IsSpace\" target=\"_blank\"\u003e\u003ccode\u003eunicode.IsSpace()\u003c/code\u003e\u003c/a\u003e, and include \u003ccode\u003e'\\t'\u003c/code\u003e, \u003ccode\u003e'\\n'\u003c/code\u003e, \u003ccode\u003e'\\r'\u003c/code\u003e, \u003ccode\u003e' '\u003c/code\u003e, among others. As a result, we get the slice:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;is\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;best\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Golang\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;website\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;in\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;world!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eWe join the slice of substrings using the \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e function with a single space \u003ccode\u003e\u0026quot; \u0026quot;\u003c/code\u003e as a separator. This way, we construct the result string with all duplicate whitespaces removed.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"remove-duplicate-whitespaces-using-regular-expressions\"\u003eRemove duplicate whitespaces using regular expressions\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;regexp\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES.dev is \\t \\r\\n the best Golang \\t\\t\\t\\t website in the \\n world!\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003epattern\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eregexp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMustCompile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e`\\s+`\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReplaceAllString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUsing regular expressions, we can achieve the same effect as in the previous method. We define \u003ccode\u003e\\s+\u003c/code\u003e pattern that matches at least one whitespace character (\u003ccode\u003e[ \\t\\r\\n\\f]\u003c/code\u003e) and then replace all occurrences of that expression with a single space, obtaining the string with duplicate whitespaces removed.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eBoth methods produce the same result, which is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003eGOSAMPLES.dev\u003c/span\u003e \u003cspan class=\"err\"\u003eis\u003c/span\u003e \u003cspan class=\"err\"\u003ethe\u003c/span\u003e \u003cspan class=\"err\"\u003ebest\u003c/span\u003e \u003cspan class=\"err\"\u003eGolang\u003c/span\u003e \u003cspan class=\"err\"\u003ewebsite\u003c/span\u003e \u003cspan class=\"err\"\u003ein\u003c/span\u003e \u003cspan class=\"err\"\u003ethe\u003c/span\u003e \u003cspan class=\"err\"\u003eworld!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-09-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9983e61b0c102dc4f9abbb230fc4c5bd",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "HTML vs CSS vs JavaScript Explained",
    "url": "https://blog.boot.dev/javascript/html-css-javascript/",
    "resume": "HTML, CSS, and JavaScript are the most important tools in your arsenal for all your web design escapades.",
    "date": "2021-09-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4b2dc8506a65bdab3fcd2039bee7f19f",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Well, We Might Have a Video Call for That!",
    "url": "https://blog.boot.dev/misc/well-we-might-have-a-video-call-for-that/",
    "resume": "This article contains some of my thoughts on communications for distributed teams and is a response to No, we won’t have a video call for that!",
    "date": "2021-09-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1b86e62647048d9d7f616900d114bed9",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The little known team that keeps Go going",
    "url": "https://changelog.com/gotime/198",
    "resume": "Ever wonder how new features get added to the go command? Or where tools like gopls come from? Well, there’s an open team that handles just those things. Just like the programming language itself, many of the tools that Go engineers use everyday are discussed and developed in the open. In this episode we’ll talk about this team, how it started, where it’s going, and how you can get involved.",
    "date": "2021-09-23T20:30:00Z",
    "vote": 0
  },
  {
    "id": "d401f1234612b36d908078b7c88de29c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Node.js vs Golang: Compared Over 6 Key Areas",
    "url": "https://blog.boot.dev/golang/node-js-vs-go/",
    "resume": "In 2009, the computer science world was blessed with two powerful tools: Golang and Node.js.",
    "date": "2021-09-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7abd5129d702c7686ac625ced3981b2d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Go vs C#: Compared Over 5 Key Areas",
    "url": "https://blog.boot.dev/golang/go-vs-c-sharp/",
    "resume": "Golang and C# offer a unique mixture of similarities and differences, having both been inspired by the same language, C.",
    "date": "2021-09-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c4e5188f8d90e288348901010913766a",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🪠 Handle 'broken pipe' error in Go",
    "url": "https://gosamples.dev/broken-pipe/",
    "resume": "\u003cp\u003eThe \u003ccode\u003ebroken pipe\u003c/code\u003e is a \u003ca href=\"https://www.ibm.com/docs/en/db2/11.1?topic=message-tcpip-errors\" target=\"_blank\"\u003eTCP/IP\u003c/a\u003e error occurring when you write to a stream where the other end (the peer) has closed the underlying connection. The first write to the closed connection causes the peer to reply with an \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e packet indicating that the connection should be terminated immediately. The second write to the socket that has already received the \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e causes the \u003ccode\u003ebroken pipe\u003c/code\u003e error. To detect the \u003ccode\u003ebroken pipe\u003c/code\u003e in Go, check if the error returned by the peer is equal to \u003ca href=\"https://pkg.go.dev/syscall#EPIPE\" target=\"_blank\"\u003e\u003ccode\u003esyscall.EPIPE\u003c/code\u003e\u003c/a\u003e. Usually, this error can be seen when the server crashes while the client is sending data to it.\u003c/p\u003e\n\u003ch2 id=\"reproduce-the-broken-pipe-error\"\u003eReproduce the \u003ccode\u003ebroken pipe\u003c/code\u003e error\u003c/h2\u003e\n\u003cp\u003eIn the following example, we reproduce the \u003ccode\u003ebroken pipe\u003c/code\u003e error by creating a server and client that do the following:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe server reads a single byte and then closes the connection\u003c/li\u003e\n\u003cli\u003ethe client sends three bytes with an interval of one second between them\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe server receives the first client byte and closes the connection. The next byte of the client sent to the closed connection causes the server to reply with an \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e packet. The socket that received the \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e will return the \u003ccode\u003ebroken pipe\u003c/code\u003e error when more bytes are sent to it. This is what happens when the client sends the last byte to the server.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;syscall\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elistener\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003enet\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eListen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003elistener\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003elistener\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;server\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eExit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;server\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003enet\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDial\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tcp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;localhost:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write to make the connection closed on the server side\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write to generate an RST packet\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write to generate the broken pipe error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;client: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003esyscall\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eEPIPE\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;This is broken pipe error\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"nf\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// wait for server to run\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/10/21 19:10:01 client: write tcp 127.0.0.1:50389-\u0026gt;127.0.0.1:8080: write: broken pipe\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/10/21 19:10:01 This is broken pipe error\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"handle-the-broken-pipe-error\"\u003eHandle the \u003ccode\u003ebroken pipe\u003c/code\u003e error\u003c/h2\u003e\n\u003cp\u003eTo handle the \u003ccode\u003ebroken pipe\u003c/code\u003e, you need to check if the error returned from the other end of the connection is an instance of \u003ca href=\"https://pkg.go.dev/syscall#EPIPE\" target=\"_blank\"\u003e\u003ccode\u003esyscall.EPIPE\u003c/code\u003e\u003c/a\u003e. In the example above, we perform this check using the \u003ca href=\"https://gosamples.dev/check-error-type\"\u003e\u003ccode\u003eerrors.Is()\u003c/code\u003e function\u003c/a\u003e and print the message \u003ccode\u003e\u0026quot;This is broken pipe error\u0026quot;\u003c/code\u003e if it occurs. The \u003ccode\u003ebroken pipe\u003c/code\u003e can be seen on either the client or server side, depending on which one is trying to write to the closed connection. Typically there is no need to handle it in any special way since it is normal that a connection may be interrupted by either side of the communication. For example, you can ignore the error, log it or reconnect when it occurs.\u003c/p\u003e\n\u003ch2 id=\"difference-between-broken-pipe-and-connection-reset-by-peer\"\u003eDifference between \u003ccode\u003ebroken pipe\u003c/code\u003e and \u003ccode\u003econnection reset by peer\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eUsually, you get the \u003ccode\u003ebroken pipe\u003c/code\u003e error when you \u003cstrong\u003ewrite\u003c/strong\u003e to the connection after the \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e is sent, and when you \u003cstrong\u003eread\u003c/strong\u003e from the connection after the \u003ca href=\"https://ipwithease.com/tcp-rst-flag/\" target=\"_blank\"\u003e\u003ccode\u003eRST\u003c/code\u003e\u003c/a\u003e instead, you get the \u003ccode\u003econnection reset by peer\u003c/code\u003e error. Check our \u003ca href=\"https://gosamples.dev/connection-reset-by-peer\"\u003earticle about connection reset by peer\u003c/a\u003e error to better understand the difference between these two errors.\u003c/p\u003e",
    "date": "2021-09-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "425a2b047794ecc2eb07f940bcd157d3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Books that teach Go",
    "url": "https://changelog.com/gotime/197",
    "resume": "Natalie sits down with Go book authors Bill Kennedy \u0026 Sau Sheong Chang to discuss the ins and outs of writing (and reading) books about Go!",
    "date": "2021-09-16T18:20:00Z",
    "vote": 0
  },
  {
    "id": "645692813e0f91d170ebefc4d5b70d03",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Rust vs Python in Data Science, Systems Development \u0026 More",
    "url": "https://blog.boot.dev/python/rust-vs-python/",
    "resume": "Rust and Python contrast in a unique way because while they both provide back-end web support, Python thrives as a flexible and consistent language, while Rust makes a name for itself with raw power and speed.",
    "date": "2021-09-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "54bd9f15e1beb83f6526f3e60e65810c",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📚 Convert byte slice to io.Reader in Go",
    "url": "https://gosamples.dev/byte-slice-to-io-reader/",
    "resume": "\u003cp\u003eTo convert a byte slice to \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e in Go, create a new \u003ca href=\"https://pkg.go.dev/bytes#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Reader\u003c/code\u003e\u003c/a\u003e object using \u003ca href=\"https://pkg.go.dev/bytes#NewReader\" target=\"_blank\"\u003e\u003ccode\u003ebytes.NewReader()\u003c/code\u003e\u003c/a\u003e function with the byte slice argument. The \u003ca href=\"https://pkg.go.dev/bytes#Reader\" target=\"_blank\"\u003e\u003ccode\u003ebytes.Reader\u003c/code\u003e\u003c/a\u003e type implements the \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e interface and can be used in any function that requires it as an argument.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test byte slice\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// byte slice to bytes.Reader, which implements the io.Reader interface\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// read the data from reader\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-09-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ca62fe1cd02a804f38b985702428c504",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "9 Outstanding Reasons to Learn Python for Finance",
    "url": "https://blog.boot.dev/python/learn-python-for-finance/",
    "resume": "If you’re thinking about dipping your toe into the finance sector for your career and you stumble across this article, you may be wondering, \u0026ldquo;How can Python help in finance?",
    "date": "2021-09-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0fe148e912f31cd38d3af0e423e3b1a7",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📁 Create a directory in Go",
    "url": "https://gosamples.dev/create-directory/",
    "resume": "\u003cp\u003eTo create a single directory in Go, use the \u003ca href=\"https://pkg.go.dev/os#Mkdir\" target=\"_blank\"\u003e\u003ccode\u003eos.Mkdir()\u003c/code\u003e\u003c/a\u003e function. If you want to create a hierarchy of folders (nested directories), use \u003ca href=\"https://pkg.go.dev/os#MkdirAll\" target=\"_blank\"\u003e\u003ccode\u003eos.MkdirAll()\u003c/code\u003e\u003c/a\u003e. Both functions require a path and \u003ca href=\"https://en.wikipedia.org/wiki/File-system_permissions\" target=\"_blank\"\u003epermission bits\u003c/a\u003e of the folder as arguments.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the examples below, we use the \u003ca href=\"https://pkg.go.dev/io/fs#ModePerm\" target=\"_blank\"\u003e\u003ccode\u003eos.ModePerm\u003c/code\u003e\u003c/a\u003e constant as permission bits which is equivalent to \u003ca href=\"https://linuxize.com/post/what-does-chmod-777-mean/\" target=\"_blank\"\u003e\u003ccode\u003e0777\u003c/code\u003e\u003c/a\u003e. \u003ca href=\"https://unix.stackexchange.com/a/21252\" target=\"_blank\"\u003eFor directories\u003c/a\u003e in \u003ca href=\"https://en.wikipedia.org/wiki/Unix-like\" target=\"_blank\"\u003eUnix-like systems\u003c/a\u003e, it means that a user has rights to list, modify and search files in the directory.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"create-a-single-directory\"\u003eCreate a single directory\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eModePerm\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/os#Mkdir\" target=\"_blank\"\u003e\u003ccode\u003eos.Mkdir()\u003c/code\u003e\u003c/a\u003e creates a new directory with the specified name, but cannot create subdirectories. For example, if you use \u003ca href=\"https://pkg.go.dev/os#Mkdir\" target=\"_blank\"\u003e\u003ccode\u003eos.Mkdir()\u003c/code\u003e\u003c/a\u003e with \u003ccode\u003e\u0026quot;a/b/c/d\u0026quot;\u003c/code\u003e as a \u003ccode\u003ename\u003c/code\u003e argument:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a/b/c/d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eModePerm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou get the error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emkdir a/b/c/d: no such file or directory\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-a-hierarchy-of-directories-nested-directories\"\u003eCreate a hierarchy of directories (nested directories)\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdirAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a/b/c/d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eModePerm\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/os#MkdirAll\" target=\"_blank\"\u003e\u003ccode\u003eos.MkdirAll()\u003c/code\u003e\u003c/a\u003e creates a given directory, along with any necessary parent folder. Use this function if you need to create a nested hierarchy of directories in your program.\u003c/p\u003e",
    "date": "2021-09-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ae2e84df4ab1d1f740b971895f125f45",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Extract, Transform, and Load in Go",
    "url": "https://www.ardanlabs.com/blog/2021/09/extract-transform-load-in-go.html",
    "resume": "Introduction You are about to visit Boston, and would like to taste some good food. You ask your friend who lives there what are good places to eat. They reply with \u0026ldquo;Everything is good, you can\u0026rsquo;t go wrong\u0026rdquo;. Which makes you think, maybe I should check where not to eat.\nThe data geek in you arises, and you find out that the city of Boson has a dataset of food violations.",
    "date": "2021-09-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3527479e15f12c5be6eb8c1459cae546",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📎 Convert JSON to CSV in Go",
    "url": "https://gosamples.dev/json-to-csv/",
    "resume": "\u003cp\u003eTo convert JSON data to a CSV file in Go, you need to create a new struct for JSON data, then decode the JSON file into an array of these structs, and finally save the data from this array as subsequent rows of the CSV file. The two main packages necessary to do this are \u003ca href=\"https://pkg.go.dev/encoding/json\" target=\"_blank\"\u003e\u003ccode\u003eencoding/json\u003c/code\u003e\u003c/a\u003e to decode the JSON data with the \u003ca href=\"https://pkg.go.dev/encoding/json#Decoder\" target=\"_blank\"\u003e\u003ccode\u003ejson.Decoder\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/encoding/csv\" target=\"_blank\"\u003e\u003ccode\u003eencoding/csv\u003c/code\u003e\u003c/a\u003e to write the output CSV data using \u003ca href=\"https://pkg.go.dev/encoding/csv#Writer\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Writer\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSee also our examples of \u003ca href=\"https://gosamples.dev/csv-to-json\"\u003ehow to convert CSV to JSON\u003c/a\u003e and \u003ca href=\"https://gosamples.dev/read-csv\"\u003ehow to read CSV file\u003c/a\u003e or \u003ca href=\"https://gosamples.dev/write-csv\"\u003ehow to write data to a CSV file\u003c/a\u003e in Go.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn the example below, we use the \u003ccode\u003edata.json\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;vegetable\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;banana\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;vegetable\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"code\"\u003eCode\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e62\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/csv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruitAndVegetableRank\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 1. Create a new struct for storing read JSON objects\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;vegetable\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;fruit\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;rank\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003econvertJSONToCSV\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edestination\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 2. Read the JSON file into the struct array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003esourceFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file at the end of the function\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003esourceFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eranking\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruitAndVegetableRank\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewDecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esourceFile\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eDecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eranking\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 3. Create a new file to store CSV data\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eoutputFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003eoutputFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 4. Write the header of the CSV file and the successive rows by iterating through the JSON struct array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eoutputFile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFlush\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eheader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;vegetable\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eranking\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003econvertJSONToCSV\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;data.json\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;data.csv\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe contents of the output \u003ccode\u003edata.csv\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evegetable,fruit,rank\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecarrot,banana,1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epotato,strawberry,2\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate a new struct for storing read JSON objects\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruitAndVegetableRank\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 1. Create a new struct for storing read JSON objects\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;vegetable\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;fruit\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;rank\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe first step of JSON to CSV conversion is to load the JSON data to a Go struct. So, we define a proper type, with the fields matching the data in the file and annotate them with \u003ca href=\"https://pkg.go.dev/encoding/json#Marshal\" target=\"_blank\"\u003eJSON struct field tags\u003c/a\u003e to enable JSON decoding into that struct.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eRead the JSON file into the struct array\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 2. Read the JSON file into the struct array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003esourceFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// remember to close the file at the end of the function\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003esourceFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eranking\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruitAndVegetableRank\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewDecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esourceFile\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eDecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eranking\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eWe can start processing our JSON file. We open it (remember to close the file to release resources back to the system, for example, using \u003ca href=\"https://go.dev/blog/defer-panic-and-recover\" target=\"_blank\"\u003e\u003ccode\u003edefer\u003c/code\u003e\u003c/a\u003e keyword) and then create a new \u003ca href=\"https://pkg.go.dev/encoding/json#Decoder\" target=\"_blank\"\u003e\u003ccode\u003ejson.Decoder\u003c/code\u003e\u003c/a\u003e with this file as an argument. Since \u003ca href=\"https://pkg.go.dev/encoding/json#NewDecoder\" target=\"_blank\"\u003e\u003ccode\u003ejson.NewDecoder(r io.Reader)\u003c/code\u003e\u003c/a\u003e requires \u003ca href=\"https://pkg.go.dev/io#Reader\" target=\"_blank\"\u003e\u003ccode\u003eio.Reader\u003c/code\u003e\u003c/a\u003e, we do not need to read the content of the file beforehand. If we were to use the \u003ca href=\"https://pkg.go.dev/encoding/json#Unmarshal\" target=\"_blank\"\u003e\u003ccode\u003ejson.Unmarshal()\u003c/code\u003e\u003c/a\u003e function, it would be necessary. With \u003ca href=\"https://pkg.go.dev/encoding/json#Decoder.Decode\" target=\"_blank\"\u003e\u003ccode\u003eDecode()\u003c/code\u003e\u003c/a\u003e method, we read the JSON file and convert it to the slice of \u003ccode\u003eFruitAndVegetableRank\u003c/code\u003e objects.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate a new file to store CSV data\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 3. Create a new file to store CSV data\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eoutputFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003eoutputFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe CSV data will be saved to a file, so in this step, we create a new \u003ccode\u003edestination\u003c/code\u003e file in a pretty standard way.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eWrite the header of the CSV file and the successive rows by iterating through the JSON struct array\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 4. Write the header of the CSV file and the successive rows by iterating through the JSON struct array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eoutputFile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFlush\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;vegetable\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eranking\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecsvRow\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eAs the last step, we create a new \u003ca href=\"https://pkg.go.dev/encoding/csv#Writer\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Writer\u003c/code\u003e\u003c/a\u003e that writes the data in CSV format to the output file. Remember to call \u003ca href=\"https://pkg.go.dev/encoding/csv#Writer.Flush\" target=\"_blank\"\u003e\u003ccode\u003ewriter.Flush\u003c/code\u003e\u003c/a\u003e to ensure that all the buffered content is written before the function finishes. The writing process consists of iterating through the array of \u003ccode\u003eFruitAndVegetableRank\u003c/code\u003e objects and making a CSV row for each of them. Then, This row is saved using \u003ca href=\"https://pkg.go.dev/encoding/csv#Writer.Write\" target=\"_blank\"\u003e\u003ccode\u003ewriter.Write()\u003c/code\u003e\u003c/a\u003e method. In the example, we also wrote the header row as the first line of the file.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e",
    "date": "2021-09-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a8349720592546c7b8af30f3aa1a477a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Python vs Java: Performance, Salary \u0026 More Compared",
    "url": "https://blog.boot.dev/python/python-vs-java/",
    "resume": "Comparing Python and Java is a bit like comparing boats and cars. They both get you from point A to B and are fun to show off, but that’s where the similarities end.",
    "date": "2021-09-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "99e6f7328b32090e9a117c8fc351f38d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building actually maintainable software",
    "url": "https://changelog.com/gotime/196",
    "resume": "Building software is difficult and time consuming, but the maintenance of software is where we spend the majority of our time. In this episode, Ian and sam join Johnny and Kris to discuss how to build actually maintainable software, the features of Go that make it good for writing maintainable software, and different ways that we might define the term “maintenance”.",
    "date": "2021-09-09T15:00:00Z",
    "vote": 0
  },
  {
    "id": "a57b9de10772280e3b9f741b9250c801",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Why Learn Python? 9 Key Reasons",
    "url": "https://blog.boot.dev/python/why-learn-python/",
    "resume": "Simple to learn, endlessly versatile, and perennially in demand by employers paying higher and higher salaries every year — it feels like there’s a million reasons to learn Python.",
    "date": "2021-09-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b50c5ad95c7db7a78ba5c04954f74b52",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗄️ Unzip a file in Go",
    "url": "https://gosamples.dev/unzip-file/",
    "resume": "\u003cp\u003eTo unzip a compressed archive in Go using the standard library, you need to use \u003ca href=\"https://pkg.go.dev/archive/zip\" target=\"_blank\"\u003e\u003ccode\u003earchive/zip\u003c/code\u003e\u003c/a\u003e package and open the file with the \u003ca href=\"https://pkg.go.dev/archive/zip#OpenReader\" target=\"_blank\"\u003e\u003ccode\u003ezip.OpenReader(name string)\u003c/code\u003e\u003c/a\u003e function. Extracting a ZIP file in this way involves iterating through all the archive files. For each of them, we create a new empty file or directory in the target path and then uncompress its byte content there.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou can also check our example on \u003ca href=\"https://gosamples.dev/zip-file\"\u003ehow to zip a file in Go\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e82\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;archive/zip\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;path/filepath\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eunzipSource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edestination\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 1. Open the zip file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpenReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 2. Get the absolute destination path\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAbs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 3. Iterate over zip files inside the archive and unzip each of them\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFile\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003eunzipFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eunzipFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edestination\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 4. Check if file paths are not vulnerable to Zip Slip\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eJoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHasPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClean\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ePathSeparator\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;invalid file path: %s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 5. Create directory tree\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFileInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsDir\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdirAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eModePerm\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdirAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eModePerm\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 6. Create a destination file for unzipped content\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003edestinationFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpenFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eO_WRONLY\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eO_CREATE\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eO_TRUNC\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMode\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003edestinationFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 7. Unzip the content of a file and copy it to the destination file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ezippedFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ezippedFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestinationFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ezippedFile\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003eunzipSource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder.zip\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eOpen the zip file\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 1. Open the zip file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpenReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eTo unzip the file, first, open it with the \u003ca href=\"https://pkg.go.dev/archive/zip#OpenReader\" target=\"_blank\"\u003e\u003ccode\u003ezip.OpenReader(name string)\u003c/code\u003e\u003c/a\u003e function. As always, when working with files, remember to close it if you no longer need it, using the \u003ca href=\"https://pkg.go.dev/archive/zip#ReadCloser.Close\" target=\"_blank\"\u003e\u003ccode\u003eReadCloser.Close()\u003c/code\u003e\u003c/a\u003e method in this case.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eGet the absolute destination path\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 2. Get the absolute destination path\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAbs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eConvert our relative \u003ccode\u003edestination\u003c/code\u003e path to the absolute representation, which will be needed in the step of \u003ca href=\"https://snyk.io/research/zip-slip-vulnerability\" target=\"_blank\"\u003eZip Slip vulnerability\u003c/a\u003e checking.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eIterate over zip files inside the archive and unzip each of them\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 3. Iterate over zip files inside the archive and unzip each of them\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFile\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003eunzipFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe actual process of unzipping files in Go using \u003ca href=\"https://pkg.go.dev/archive/zip\" target=\"_blank\"\u003e\u003ccode\u003earchive/zip\u003c/code\u003e\u003c/a\u003e is to iterate through the files of the opened ZIP file and unpack each one individually to its final destination.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCheck if file paths are not vulnerable to Zip Slip\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eunzipFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edestination\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 4. Check if file paths are not vulnerable to Zip Slip\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eJoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHasPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClean\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestination\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ePathSeparator\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;invalid file path: %s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe first step of an individual file unzipping function is to check whether the path of this file does not make use of the \u003ca href=\"https://snyk.io/research/zip-slip-vulnerability\" target=\"_blank\"\u003eZip Slip vulnerability\u003c/a\u003e, which was discovered in 2018 and affected thousands of projects. With a specially crafted archive that holds directory traversal filenames, e.g., \u003ccode\u003e../../evil.sh\u003c/code\u003e, an attacker can gain access to parts of the file system outside of the target folder in which the unzipped files should reside. The attacker can then overwrite executable files and other sensitive resources, causing significant damage to the victim machine.\u003c/p\u003e\n\u003cp\u003eTo detect this vulnerability, prepare the target file path by combining the \u003ccode\u003edestination\u003c/code\u003e and the name of the file inside the ZIP archive. It can be done using \u003ca href=\"https://pkg.go.dev/path/filepath#Join\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Join()\u003c/code\u003e\u003c/a\u003e function. Then we check if this final file path contains our \u003ccode\u003edestination\u003c/code\u003e path as a prefix. If not, the file may be trying to access the part of the file system other than the \u003ccode\u003edestination\u003c/code\u003e and should be rejected.\u003c/p\u003e\n\u003cp\u003eFor example, when we want to unzip our file into the \u003ccode\u003e/a/b/\u003c/code\u003e directory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003eunzipSource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder.zip\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/a/b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand in the archive there is a file with a name \u003ccode\u003e../../../../evil.sh\u003c/code\u003e, then the output of\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eJoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/a/b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;../../../../evil.sh\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eis\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e/evil.sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this way, the attacker can unzip the \u003ccode\u003eevil.sh\u003c/code\u003e file in the root directory \u003ccode\u003e/\u003c/code\u003e, which should not be allowed with our check.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate a directory tree\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e55\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 5. Create a directory tree\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFileInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsDir\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdirAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eModePerm\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdirAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eModePerm\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eFor each file or directory in the ZIP archive, we need to create a corresponding directory in the \u003ccode\u003edestination\u003c/code\u003e path, so that the resulting directory tree of the extracted files matches the directory tree inside the ZIP. We use \u003ca href=\"https://pkg.go.dev/os#MkdirAll\" target=\"_blank\"\u003e\u003ccode\u003eos.MkdirAll()\u003c/code\u003e\u003c/a\u003e function to do this. For directories, we create the corresponding folder in the \u003ccode\u003edestination\u003c/code\u003e path, and for files, we create the base directory of the file. Note that we return from the function when the file is a directory as only files need to be unzipped, which we will do in the next steps.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate a destination file for unzipped content\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e62\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 6. Create a destination file for unzipped content\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003edestinationFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpenFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eO_WRONLY\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eO_CREATE\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eO_TRUNC\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMode\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003edestinationFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eBefore uncompressing a ZIP archive file, we need to create a target file where the extracted content could be saved. Since the \u003ca href=\"https://en.wikipedia.org/wiki/File-system_permissions\" target=\"_blank\"\u003emode\u003c/a\u003e of this target file should match the mode of the file inside the archive, we use \u003ca href=\"https://pkg.go.dev/os#OpenFile\" target=\"_blank\"\u003e\u003ccode\u003eos.OpenFile()\u003c/code\u003e\u003c/a\u003e function, where we can set the mode as an argument.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eUnzip the content of a file and copy it to the destination file\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e74\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 7. Unzip the content of a file and copy it to the destination file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ezippedFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ezippedFile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edestinationFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ezippedFile\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIn the last step, we open an individual ZIP file and copy its content to the file created in the previous step. Opening with \u003ca href=\"https://pkg.go.dev/archive/zip#File.Open\" target=\"_blank\"\u003e\u003ccode\u003ezip.File.Open()\u003c/code\u003e\u003c/a\u003e gives access to the uncompressed data of the archive file while copying.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e",
    "date": "2021-09-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8eb32430e95d890e6ff3f669e64b333e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is Cryptography? A Complete Overview",
    "url": "https://blog.boot.dev/cryptography/what-is-cryptography/",
    "resume": "What is cryptography? 🔗Simply put, Cryptography provides a method for secure communication. It stops unauthorized parties, commonly referred to as adversaries or hackers, from gaining access to the secret messages communicated between authorized parties.",
    "date": "2021-09-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ad460537ecc9b7c38490b2f316d22a5e",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🖐️ Declare enum in Go",
    "url": "https://gosamples.dev/enum/",
    "resume": "\u003cp\u003eIn Go, there is no \u003cstrong\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Enumerated_type\" target=\"_blank\"\u003e\u003ccode\u003eenum\u003c/code\u003e\u003c/a\u003e\u003c/strong\u003e data type known from languages such as C++, Java, or Python. However, this does not mean that \u003cstrong\u003e\u003ccode\u003eenums\u003c/code\u003e\u003c/strong\u003e cannot be created. If you declare constants of custom type and some helper methods, you get a structure very similar to \u003cstrong\u003e\u003ccode\u003eenum\u003c/code\u003e\u003c/strong\u003e in other programming languages.\u003c/p\u003e\n\u003cp\u003eSee the example below to check how to declare \u003cstrong\u003e\u003ccode\u003eenum\u003c/code\u003e\u003c/strong\u003e in Go.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the example, we use constants declaration with \u003ccode\u003eiota\u003c/code\u003e. Check our tutorial on \u003ca href=\"https://gosamples.dev/iota\"\u003ehow to use \u003ccode\u003eiota\u003c/code\u003e in Go\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eiota\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSummer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eAutumn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eseasons\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;spring\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;summer\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;autumn\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;winter\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Season(%d)\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eseasons\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eIsValid\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eSummer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eAutumn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003emySeasons\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eSummer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eAutumn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003emySeasons\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;season: %s, is valid: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsValid\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eseason: spring, is valid: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eseason: summer, is valid: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eseason: autumn, is valid: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eseason: winter, is valid: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eseason: Season\u003cspan class=\"o\"\u003e(\u003c/span\u003e6\u003cspan class=\"o\"\u003e)\u003c/span\u003e, is valid: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eDeclare custom type and elements of our \u003ccode\u003eenum\u003c/code\u003e\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eiota\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSummer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eAutumn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs a first step, we declare new integer type \u003ccode\u003eSeason\u003c/code\u003e and create successive constant values using the \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/a\u003e keyword.\u003c/p\u003e\n\u003ch3 id=\"why-do-we-use-int-type-instead-of-string\"\u003eWhy do we use int type instead of string?\u003c/h3\u003e\n\u003cp\u003eConstants are usually used to compare to a variable, e.g.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nx\"\u003eseason\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// do something\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand often we do not need their specific values, just the fact that the constant and the variable are different. In such a case comparing two \u003ccode\u003eint\u003c/code\u003e values is faster than comparing two strings. Constants of type \u003ccode\u003eint\u003c/code\u003e also take less memory space.\u003c/p\u003e\n\u003ch3 id=\"why-do-we-declare-the-custom-type-season-instead-of-using-untyped-constants\"\u003eWhy do we declare the custom type \u003ccode\u003eSeason\u003c/code\u003e instead of using untyped constants?\u003c/h3\u003e\n\u003cp\u003eA custom type protects against passing invalid values already at the compilation stage. If we declared seasons as untyped constants, the code below of assigning invalid season value 6 to the variable would execute without any error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eseason\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eseason\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhen using \u003ccode\u003eSeason\u003c/code\u003e type, to make this code run without any error, you need to explicitly convert the \u003ccode\u003ed\u003c/code\u003e variable, so it is not possible to do it by accident:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ed\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eseason\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eseason\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlso, a custom type of \u003cstrong\u003e\u003ccode\u003eenum\u003c/code\u003e\u003c/strong\u003e makes the code cleaner. For example, declaring the function\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou immediately see that the function requires season as an argument, and in the case of\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyou only know that it needs an integer argument, without any semantic meaning. Thanks to the custom types we also can add methods to the \u003cstrong\u003e\u003ccode\u003eenum\u003c/code\u003e\u003c/strong\u003e elements like \u003ccode\u003eString()\u003c/code\u003e and \u003ccode\u003eIsValid()\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate \u003ccode\u003eString()\u003c/code\u003e method\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eseasons\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;spring\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;summer\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;autumn\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;winter\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Season(%d)\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eseasons\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eString()\u003c/code\u003e method adds the ability to print \u003ccode\u003eSeason\u003c/code\u003e constants as a \u003ccode\u003estring\u003c/code\u003e rather than an \u003ccode\u003eint\u003c/code\u003e, so for the statement \u003ccode\u003efmt.Println(Spring)\u003c/code\u003e we get \u003ccode\u003espring\u003c/code\u003e instead of \u003ccode\u003e1\u003c/code\u003e. For variables outside the range \u003ccode\u003eSpring..Winter\u003c/code\u003e, we print \u003ccode\u003eSeason(X)\u003c/code\u003e, where \u003ccode\u003eX\u003c/code\u003e is an integer value of the \u003ccode\u003eSeason\u003c/code\u003e type variable.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate \u003ccode\u003eIsValid()\u003c/code\u003e method\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eIsValid\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eSummer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eAutumn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eIsValid()\u003c/code\u003e is a helper method that validates whether the \u003ccode\u003eSeason\u003c/code\u003e type variable is one of the values \u003ccode\u003eSpring\u003c/code\u003e, \u003ccode\u003eSummer\u003c/code\u003e, \u003ccode\u003eAutumn\u003c/code\u003e, or \u003ccode\u003eWinter\u003c/code\u003e. This function should always be called for user input, to verify that the user has not passed an invalid value of the \u003cstrong\u003e\u003ccode\u003eenum\u003c/code\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003e\u003ccode\u003emain()\u003c/code\u003e function\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003emySeasons\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eSeason\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eSpring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eSummer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eAutumn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eWinter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003emySeasons\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;season: %s, is valid: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsValid\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003emain()\u003c/code\u003e function presents what you get when you use the \u003ccode\u003eString()\u003c/code\u003e and \u003ccode\u003eIsValid()\u003c/code\u003e methods for defined values of \u003ccode\u003eSeason\u003c/code\u003e constants as well as values out of range.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e",
    "date": "2021-09-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "35366272dff784f685d4dae0e0bc7b10",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "JavaScript vs TypeScript: What’s the Difference?",
    "url": "https://blog.boot.dev/javascript/javascript-vs-typescript/",
    "resume": "Whether you’re new or old to the computer science community, you’ve probably asked yourself, \u0026ldquo;What is TypeScript?",
    "date": "2021-09-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3306e20d634c0fedc6abea7709ab1afd",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🧐 iota in Go - how to use?",
    "url": "https://gosamples.dev/iota/",
    "resume": "\u003cp\u003eThe \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003cstrong\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e keyword within a \u003ca href=\"https://golang.org/ref/spec#Constant_declarations\" target=\"_blank\"\u003econstant declaration\u003c/a\u003e represents successive untyped integers starting from zero. When declaring constants, it often does not matter what their specific values are, but that they are distinct from each other, so instead of declaring constants in the form:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eStrawberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eBlueberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRaspberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ewe can declare them as integers:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eStrawberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eBlueberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRaspberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand this declaration can be further simplified by the \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003cstrong\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e keyword:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eStrawberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eiota\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eBlueberry\u003c/span\u003e \u003cspan class=\"c1\"\u003e// in Go, omitting the value of constant\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"c1\"\u003e// within the constants list declaration is equivalent\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"c1\"\u003e// to repeating the previous line value\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eRaspberry\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003cstrong\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e keyword starts a counter that increments for each line of the \u003ccode\u003econst\u003c/code\u003e declaration. Because its initial value is zero, in the example above, we declare the first constant as \u003cstrong\u003e\u003ccode\u003eiota + 1\u003c/code\u003e\u003c/strong\u003e. As a result, we receive \u003ccode\u003e1\u003c/code\u003e for \u003ccode\u003eStrawberry\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e for \u003ccode\u003eBlueberry\u003c/code\u003e, and \u003ccode\u003e3\u003c/code\u003e for \u003ccode\u003eRaspberry\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"skip-iotahttpsgolangorgrefspeciota-value\"\u003eSkip \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/a\u003e value\u003c/h2\u003e\n\u003cp\u003eIf you want to skip an integer value in \u003ccode\u003econst\u003c/code\u003e declaration with \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003cstrong\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e, you can use the blank identifier \u003ccode\u003e_\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eStrawberry\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eiota\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eBlueberry\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRaspberry\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eApple\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eStrawberry\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eBlueberry\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eRaspberry\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eApple\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"advanced-example\"\u003eAdvanced example\u003c/h2\u003e\n\u003cp\u003eIn addition to simply incrementing values, the \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003cstrong\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e keyword can also be used to compute more complex expressions. The example below, from \u003ca href=\"https://golang.org/doc/effective_go#constants\" target=\"_blank\"\u003eEffective Go\u003c/a\u003e, shows the combination of the \u003ca href=\"https://golang.org/ref/spec#Iota\" target=\"_blank\"\u003e\u003cstrong\u003e\u003ccode\u003eiota\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e keyword, bitwise shift, and a custom type declaration with a \u003ca href=\"https://pkg.go.dev/fmt#Stringer\" target=\"_blank\"\u003e\u003ccode\u003eString()\u003c/code\u003e\u003c/a\u003e method that formats the data differently depending on the value.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eByteSize\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eKB\u003c/span\u003e \u003cspan class=\"nx\"\u003eByteSize\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eiota\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eMB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eGB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"nx\"\u003eByteSize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003eGB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%.2fGB\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eGB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003eMB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%.2fMB\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eMB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"nx\"\u003eKB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%.2fKB\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eKB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%.2fB\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1001\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eKB\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.5\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eMB\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.5\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eGB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eByteSize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e121000000\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e1001.00KB 2.50MB 3.50GB\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e115.39MB\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-09-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "12fc6b29b2b400a6cf37c5a9b5c4895e",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Instant Go",
    "url": "https://appliedgo.net/instantgo/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eEdit and run Go code right in the browser. No backend required.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2021-09-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f2b91e2a9287a91e99413f955e09d689",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "To build, or to buy, that is the question",
    "url": "https://changelog.com/gotime/195",
    "resume": "To build or to buy, that’s a constant question we ask ourselves as software engineers. In this episode we dig into the nuance of these options and the space between them with an eye toward both the building of software and its eventual maintenance.",
    "date": "2021-09-02T16:00:00Z",
    "vote": 0
  },
  {
    "id": "c51ca1955b05105351795f0616605ca1",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "💡 Empty slice vs nil slice in Go",
    "url": "https://gosamples.dev/empty-vs-nil-slice/",
    "resume": "\u003cp\u003eSlices in Go can be represented by 3 elements:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eptr\u003c/code\u003e - a pointer to the underlying array that contains data of the slice\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elen\u003c/code\u003e - length, number of elements in the slice\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecap\u003c/code\u003e - capacity, number of elements in the underlying data array, starting from the element pointed by the \u003ccode\u003eptr\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eA \u003ccode\u003enil\u003c/code\u003e slice declared as \u003ccode\u003evar s1 []string\u003c/code\u003e has no underlying data array - it points to nothing. An empty slice, declared as \u003ccode\u003es2 := []string{}\u003c/code\u003e or \u003ccode\u003es3 := make([]string, 0)\u003c/code\u003e points to an empty, non-nil array.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSee also in detail \u003ca href=\"https://gosamples.dev/capacity-and-length\"\u003ewhat is the difference between length and capacity of slices\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSee the table to compare the properties of the \u003ccode\u003enil\u003c/code\u003e and empty slices.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003eptr\u003c/th\u003e\n\u003cth\u003elen\u003c/th\u003e\n\u003cth\u003ecap\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003enil: \u003ccode\u003e[]string\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eempty: \u003ccode\u003e[]string{}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u0026lt;addr\u0026gt;\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eempty: \u003ccode\u003emake([]string, 0)\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u0026lt;addr\u0026gt;\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eThe \u003ccode\u003e\u0026lt;addr\u0026gt;\u003c/code\u003e is a non-zero address to an empty, non-nil array.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es1\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"c1\"\u003e// nil\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e \u003cspan class=\"c1\"\u003e// empty\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003es3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// empty, equivalent to s2 := []string{}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s1 is nil: %t, len: %d, cap: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s2 is nil: %t, len: %d, cap: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s3 is nil: %t, len: %d, cap: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003es3\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es1 is nil: true, len: 0, cap: \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es2 is nil: false, len: 0, cap: \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es3 is nil: false, len: 0, cap: \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eEmpty and \u003ccode\u003enil\u003c/code\u003e slices behave in the same way that is the built-in functions like \u003ccode\u003elen()\u003c/code\u003e, \u003ccode\u003ecap()\u003c/code\u003e, \u003ccode\u003eappend()\u003c/code\u003e, and \u003ccode\u003efor .. range\u003c/code\u003e loop return the same results. So, since the \u003ccode\u003enil\u003c/code\u003e slice declaration is simpler, you should prefer it to creating an empty slice. However, there are some cases when you may need the empty, non-nil slice. For instance, when you want to return an empty JSON array \u003ccode\u003e[]\u003c/code\u003e as an HTTP response, you should create the empty slice (\u003ccode\u003e[]string{}\u003c/code\u003e or \u003ccode\u003emake([]string, 0)\u003c/code\u003e) because if you use a \u003ccode\u003enil\u003c/code\u003e slice, you will get a \u003ccode\u003enull\u003c/code\u003e JSON array after encoding:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003es1\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"c1\"\u003e// nil\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e \u003cspan class=\"c1\"\u003e// empty\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003es3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// empty, equivalent to s2 := []string{}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es1JSON\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s1 JSON: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es1JSON\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es2JSON\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s2 JSON: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es2JSON\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003es3JSON\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;s3 JSON: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003es3JSON\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es1 JSON: null\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es2 JSON: \u003cspan class=\"o\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003es3 JSON: \u003cspan class=\"o\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-09-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "822442c99cfb4ebdf2815e2640f7187d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📰 String padding in Go",
    "url": "https://gosamples.dev/string-padding/",
    "resume": "\u003cp\u003eIf you want your strings in Go to be printed in aligned columns, you need to add the padding, i.e., filling the string with whitespace characters at the beginning or end so that the output has a fixed number of characters. To do this, you can use special flags, like \u003ccode\u003e\u0026quot;%-10s\u0026quot;\u003c/code\u003e, added to format \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003e\u0026ldquo;verbs\u0026rdquo;\u003c/a\u003e when formatting text. You can also use an external package or the built-in \u003ca href=\"https://pkg.go.dev/text/tabwriter\" target=\"_blank\"\u003e\u003ccode\u003etext/tabwriter\u003c/code\u003e\u003c/a\u003e to print the data in aligned columns.\u003c/p\u003e\n\u003ch2 id=\"print-a-string-with-padding-using-fmthttpspkggodevfmt\"\u003ePrint a string with padding using \u003ca href=\"https://pkg.go.dev/fmt\" target=\"_blank\"\u003e\u003ccode\u003efmt\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eUsing the built-in \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e function, you can set the format of the printed data using so-called \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003everbs\u003c/a\u003e such as \u003ccode\u003e\u0026quot;%s\u0026quot;\u003c/code\u003e. Moreover, there are several flags to improve the display of strings. One of them is the flag to add padding, which is the number specifying its size in the verb \u003ccode\u003e\u0026quot;%s\u0026quot;\u003c/code\u003e, between \u003ccode\u003e\u0026quot;%\u0026quot;\u003c/code\u003e and \u003ccode\u003e\u0026quot;s\u0026quot;\u003c/code\u003e. By default, the string is padded with spaces on the left (the text is right-justified). If you want right padding and left alignment, add the \u003ccode\u003e-\u003c/code\u003e flag before the padding size.\u003c/p\u003e\n\u003cp\u003eExamples:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eformat\u003c/th\u003e\n\u003cth\u003edescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026quot;%s\u0026quot;\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eStandard string format\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026quot;%20s\u0026quot;\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePad string with the spaces on the left (right-justified string)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026quot;%-20s\u0026quot;\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePad string with the spaces on the right (left-justified string)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"left-padding-example\"\u003eLeft padding example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// left padding\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;+%s+\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;| %20s | %20s |\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;vegetables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fruits\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;|%s|\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;| %20s | %20s |\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;+%s+\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+---------------------------------------------+\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e vegetables \u003cspan class=\"p\"\u003e|\u003c/span\u003e fruits \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e---------------------------------------------\u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e potato \u003cspan class=\"p\"\u003e|\u003c/span\u003e strawberry \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+---------------------------------------------+\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"right-padding-example\"\u003eRight padding example\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// right padding\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;+%s+\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;| %-20s | %-20s |\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;vegetables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fruits\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;|%s|\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;| %-20s | %-20s |\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;+%s+\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+---------------------------------------------+\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e vegetables \u003cspan class=\"p\"\u003e|\u003c/span\u003e fruits \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e---------------------------------------------\u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e potato \u003cspan class=\"p\"\u003e|\u003c/span\u003e strawberry \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+---------------------------------------------+\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003chr\u003e\n\u003ch3 id=\"variable-padding-size\"\u003eVariable padding size\u003c/h3\u003e\n\u003cp\u003eBut what if we would like to print a large table with columns of different widths, whose size would adapt to the length of the strings? In this case, the padding size will be variable, but that is not a problem for the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e function. The example below shows how to do this.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eprintTable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etable\u003c/span\u003e \u003cspan class=\"p\"\u003e[][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// get number of columns from the first table row\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolumnLengths\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etable\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003etable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolumnLengths\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecolumnLengths\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003elineLength\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolumnLengths\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elineLength\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nx\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"c1\"\u003e// +3 for 3 additional characters before and after each field: \u0026#34;| %s \u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elineLength\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"c1\"\u003e// +1 for the last \u0026#34;|\u0026#34; in the line\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003etable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// table header\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;+%s+\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elineLength\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"c1\"\u003e// lineLength-2 because of \u0026#34;+\u0026#34; as first and last character\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;| %-*s \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolumnLengths\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;|\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etable\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// table header or last line\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;+%s+\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRepeat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003elineLength\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"c1\"\u003e// lineLength-2 because of \u0026#34;+\u0026#34; as first and last character\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etable\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;vegetables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fruits\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lettuce\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;broccoli\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pomegranate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eprintTable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etable\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+---------------------------------+\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e vegetables \u003cspan class=\"p\"\u003e|\u003c/span\u003e fruits \u003cspan class=\"p\"\u003e|\u003c/span\u003e rank \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+---------------------------------+\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e potato \u003cspan class=\"p\"\u003e|\u003c/span\u003e strawberry \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e lettuce \u003cspan class=\"p\"\u003e|\u003c/span\u003e raspberry \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e carrot \u003cspan class=\"p\"\u003e|\u003c/span\u003e apple \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e broccoli \u003cspan class=\"p\"\u003e|\u003c/span\u003e pomegranate \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+---------------------------------+\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eMost of the code is used to calculate the number of characters to print, and you will have no trouble understanding it if you carefully follow it. What interests us the most is the line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;| %-*s \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolumnLengths\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAn asterisk \u003ccode\u003e*\u003c/code\u003e in the format specifies that the padding size should be given as an argument to the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e function. In this case, the padding is \u003ccode\u003ecolumnLengths[j]\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"rearrange-the-arguments\"\u003eRearrange the arguments\u003c/h3\u003e\n\u003cp\u003eIt is also possible to rearrange the arguments in the format string. The example below shows that by adding numeric values in square brackets in front of the formatting placeholders, we can control the order in which each argument occurs.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;| %-[2]*[1]s \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolumnLengths\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003e[n]\u003c/code\u003e notation is especially useful if we have repeating values in the string format. In such a situation they can only be given as an argument once:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;I\u0026#39;m a %[1]s, a great %[1]s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;programmer\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cbr\u003e\nSummarized examples with the variable size padding:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eformat\u003c/th\u003e\n\u003cth\u003edescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026quot;%s\u0026quot;\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eStandard string format\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026quot;%*s\u0026quot;\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePad string with a variable number of spaces on the left (right-justified string)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026quot;%-*s\u0026quot;\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePad string with a variable number of spaces on the right (left-justified string)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003e\u0026quot;%-[2]*[1]s\u0026quot;\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eAs above but the first argument is the string, and the second, the padding size\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"print-text-in-aligned-columns-using-texttabwriterhttpspkggodevtexttabwriter\"\u003ePrint text in aligned columns using \u003ca href=\"https://pkg.go.dev/text/tabwriter\" target=\"_blank\"\u003e\u003ccode\u003etext/tabwriter\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThe Go standard library also includes a useful \u003ca href=\"https://pkg.go.dev/text/tabwriter\" target=\"_blank\"\u003e\u003ccode\u003etext/tabwriter\u003c/code\u003e\u003c/a\u003e package that creates properly aligned tables from strings separated by \u003ccode\u003e\\t\u003c/code\u003e characters. This type of formatting is particularly useful for creating command-line applications that print tabular data. In the example below, we initialize \u003ca href=\"https://pkg.go.dev/text/tabwriter#NewWriter\" target=\"_blank\"\u003e\u003ccode\u003etabwriter.Writer\u003c/code\u003e\u003c/a\u003e by setting output to the standard output \u003ca href=\"https://pkg.go.dev/os#pkg-variables\" target=\"_blank\"\u003e\u003ccode\u003eos.Stdout\u003c/code\u003e\u003c/a\u003e, \u003ccode\u003e\\t\u003c/code\u003e as the padding character and \u003ccode\u003e4\u003c/code\u003e as the width of the tab character. For printing, the line cells should be concatenated into a single string separated by tabs. We do this using the \u003ca href=\"https://pkg.go.dev/strings#Join\" target=\"_blank\"\u003e\u003ccode\u003estrings.Join()\u003c/code\u003e\u003c/a\u003e function. The \u003ca href=\"https://pkg.go.dev/text/tabwriter#NewWriter\" target=\"_blank\"\u003e\u003ccode\u003etabwriter.Writer\u003c/code\u003e\u003c/a\u003e requires every column cell to be tab-terminated, so we also add the \u003ccode\u003e\\t\u003c/code\u003e for the last cell in the row.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;text/tabwriter\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eprintTable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etable\u003c/span\u003e \u003cspan class=\"p\"\u003e[][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etabwriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eStdout\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;\\t\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003etable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eJoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\t\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\t\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFlush\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etable\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;vegetables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fruits\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lettuce\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;broccoli\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pomegranate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;4\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nf\"\u003eprintTable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etable\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evegetables fruits rank\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epotato strawberry \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elettuce raspberry \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecarrot apple \u003cspan class=\"m\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebroccoli pomegranate \u003cspan class=\"m\"\u003e4\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ee3836d9af97595b1549bf6f82c4c906",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Don't forget about memory management",
    "url": "https://changelog.com/gotime/194",
    "resume": "Bryan Boreham (Grafana Labs) and Jordan Lewis (Cockroach Labs) join Mat and Jon to talk about memory management in Go. We learn about the heap, the stack, and the garbage collector. There are also some absolute gems of wisdom scattered throughout this episode, don’t miss it.",
    "date": "2021-08-26T21:00:00Z",
    "vote": 0
  },
  {
    "id": "0f06b7fd1594b7a7059e2efc1ff576f0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "R vs Python: Which Is Best for Data?",
    "url": "https://blog.boot.dev/python/r-vs-python/",
    "resume": "Python and R made a name for themselves as top-end competitors in the world of data science for their ability to seamlessly navigate and handle data.",
    "date": "2021-08-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9e57e3d55392f49f275d799c4a782179",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗜️ Zip a file in Go",
    "url": "https://gosamples.dev/zip-file/",
    "resume": "\u003cp\u003eTo zip a file or a directory in Go using the standard library, use \u003ca href=\"https://pkg.go.dev/archive/zip#Writer\" target=\"_blank\"\u003e\u003ccode\u003ezip.Writer\u003c/code\u003e\u003c/a\u003e type from the \u003ca href=\"https://pkg.go.dev/archive/zip\" target=\"_blank\"\u003e\u003ccode\u003earchive/zip\u003c/code\u003e\u003c/a\u003e package. Creating a compressed archive using this method involves going through all the files you want to include, generating a \u003ca href=\"https://en.wikipedia.org/wiki/ZIP_%28file_format%29\" target=\"_blank\"\u003elocal file header\u003c/a\u003e for each one, and writing its contents to the resulting ZIP file.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCheck also our example on \u003ca href=\"https://gosamples.dev/unzip-file\"\u003ehow to unzip a file in Go\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;archive/zip\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;path/filepath\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ezipSource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etarget\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 1. Create a ZIP file and zip.Writer\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 2. Go through all the files of the source\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003einfo\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFileInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 3. Create a local file header\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFileInfoHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// set compression\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethod\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDeflate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 4. Set relative path of a file as the header name\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsDir\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 5. Create writer for the file header and save content of the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eheaderWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreateHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsDir\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheaderWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ezipSource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;testFolder.zip\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ezipSource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder/1/1.1/1.1.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;1.1.zip\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eIn the example above, we use a sample directory \u003ccode\u003etestFolder\u003c/code\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ └── 1.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│ └── 1.1.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── test.txt\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003chr\u003e\n\u003cp\u003eThe \u003ccode\u003ezipSource(source, target string)\u003c/code\u003e function does the following:\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate a ZIP file and \u003ccode\u003ezip.Writer\u003c/code\u003e\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 1. Create a ZIP file and zip.Writer\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the first step, we need to create a ZIP file and initialize \u003ca href=\"https://pkg.go.dev/archive/zip#Writer\" target=\"_blank\"\u003e\u003ccode\u003ezip.Writer\u003c/code\u003e\u003c/a\u003e that writes the compressed data to the file. Notice that we defer closing the file and the writer to the end of the \u003ccode\u003ezipSource()\u003c/code\u003e function.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eGo through all the files of the source\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 2. Go through all the files of the source\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003einfo\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFileInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe want the \u003ccode\u003ezipSource()\u003c/code\u003e function to work on both a single file and a folder, so we need to walk through each file of the \u003ccode\u003esource\u003c/code\u003e path using the \u003ca href=\"https://pkg.go.dev/path/filepath#Walk\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Walk()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate a local file header\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 3. Create a local file header\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFileInfoHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// set compression\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethod\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDeflate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor each file in the archive, we need to create a \u003ca href=\"https://en.wikipedia.org/wiki/ZIP_%28file_format%29\" target=\"_blank\"\u003elocal file header\u003c/a\u003e using the \u003ca href=\"https://pkg.go.dev/archive/zip#FileInfoHeader\" target=\"_blank\"\u003e\u003ccode\u003eFileInfoHeader()\u003c/code\u003e\u003c/a\u003e function. The generated header does not have the compression method set, so we explicitly set it to \u003ca href=\"https://pkg.go.dev/archive/zip#pkg-constants\" target=\"_blank\"\u003e\u003ccode\u003ezip.Deflate\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eSet the relative path of a file as the header name\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 4. Set relative path of a file as the header name\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsDir\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the previous step, we created a file header using \u003ca href=\"https://pkg.go.dev/archive/zip#FileInfoHeader\" target=\"_blank\"\u003e\u003ccode\u003eFileInfoHeader(fi fs.FileInfo)\u003c/code\u003e\u003c/a\u003e function with the name from \u003ca href=\"https://pkg.go.dev/io/fs#FileInfo\" target=\"_blank\"\u003e\u003ccode\u003efs.FileInfo\u003c/code\u003e\u003c/a\u003e argument. However, this is just a base name, so we need to modify it to preserve the directory structure in the generated ZIP. We do this by calculating the relative path from the \u003ccode\u003esource\u003c/code\u003e path directory to the specified file \u003ccode\u003epath\u003c/code\u003e using \u003ca href=\"https://pkg.go.dev/path/filepath#Dir\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Dir()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/path/filepath#Rel\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Rel()\u003c/code\u003e\u003c/a\u003e functions. For example, compressing the \u003ccode\u003e/a/b/c\u003c/code\u003e directory with \u003ccode\u003e/a/b/c/d/test.txt\u003c/code\u003e file gives us:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/a/b/c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/a/b/c/d/test.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ewhich is equivalent to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/a/b/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/a/b/c/d/test.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs a result, we get the relative path:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#34;c/d/test.txt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlso, if the file is a directory, it should be marked with a trailing slash.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate writer for the file header and save content of the file\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 5. Create a writer for the file header and save the content of the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eheaderWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreateHeader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsDir\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCopy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eheaderWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe last step is to create a writer for the specified file data based on the header. The data is transferred to the ZIP file using the \u003ca href=\"https://pkg.go.dev/io#Copy\" target=\"_blank\"\u003e\u003ccode\u003eio.Copy()\u003c/code\u003e\u003c/a\u003e function. Files that are directories should not be copied to avoid an error.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\u003c/p\u003e",
    "date": "2021-08-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ad47c6f9419769ccbf622377bc851aa1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Python vs JavaScript: What's the Difference and Which Should You Learn?",
    "url": "https://blog.boot.dev/python/python-vs-javascript/",
    "resume": "From the outset, comparing JavaScript and Python seems a bit like comparing apples and oranges. Surprisingly however, there are quite a few similarities hidden beneath their popular respective exteriors.",
    "date": "2021-08-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6fa573d86a4956df442e1ec96b9d870d",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🍕 Compare two slices in Go",
    "url": "https://gosamples.dev/compare-slices/",
    "resume": "\u003cp\u003eSlices in Go \u003ca href=\"https://golang.org/ref/spec#Comparison_operators\" target=\"_blank\"\u003eare not comparable\u003c/a\u003e, so a simple equality comparison \u003ccode\u003ea == b\u003c/code\u003e is not possible. To check if two slices are equal, write a custom function that compares their lengths and corresponding elements in a loop.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote that comparing two \u003cstrong\u003earrays\u003c/strong\u003e is \u003ca href=\"https://golang.org/ref/spec#Comparison_operators\" target=\"_blank\"\u003epossible\u003c/a\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;slices equal: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003estringSlicesEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;slices equal: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003estringSlicesEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;slices equal: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003estringSlicesEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eslices equal: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eslices equal: false\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can also use the \u003ca href=\"https://pkg.go.dev/reflect#DeepEqual\" target=\"_blank\"\u003e\u003ccode\u003ereflect.DeepEqual()\u003c/code\u003e\u003c/a\u003e function that compares two values recursively, which means it traverses and checks the equality of the corresponding data values at each level. However, this solution is much slower and less safe than comparing values in a loop. A general rule of thumb when using the \u003ca href=\"https://pkg.go.dev/reflect\" target=\"_blank\"\u003e\u003ccode\u003ereflect\u003c/code\u003e\u003c/a\u003e package is: \u003ca href=\"https://go.dev/blog/laws-of-reflection\" target=\"_blank\"\u003eit should be used with care and avoided unless strictly necessary\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;reflect\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;slices equal: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDeepEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;slices equal: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDeepEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eslices equal: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eslices equal: false\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8d85f68961297dfaf40e6402268b1db0",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⌛ Temporary file in Go - how to create?",
    "url": "https://gosamples.dev/temp-file/",
    "resume": "\u003cp\u003eWhen you write a program that processes large amounts of data, or you test a program that creates files, you often need the ability to create temporary files that allow you to store your data for a short time without cluttering your project\u0026rsquo;s disk space. In Go, you can create a temporary file with \u003ca href=\"https://pkg.go.dev/os#CreateTemp\" target=\"_blank\"\u003e\u003ccode\u003eos.CreateTemp()\u003c/code\u003e\u003c/a\u003e function and a temporary directory with \u003ca href=\"https://pkg.go.dev/os#MkdirTemp\" target=\"_blank\"\u003e\u003ccode\u003eos.MkdirTemp()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://pkg.go.dev/os#CreateTemp\" target=\"_blank\"\u003e\u003ccode\u003eos.CreateTemp()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/os#MkdirTemp\" target=\"_blank\"\u003e\u003ccode\u003eos.MkdirTemp()\u003c/code\u003e\u003c/a\u003e are available since Go 1.17. For older versions you can use \u003ca href=\"https://pkg.go.dev/io/ioutil#TempFile\" target=\"_blank\"\u003e\u003ccode\u003eioutil.TempFile()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://pkg.go.dev/io/ioutil#TempDir\" target=\"_blank\"\u003e\u003ccode\u003eioutil.TempDir()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"create-a-temporary-file\"\u003eCreate a temporary file\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create and open a temporary file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreateTemp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;tmpfile-\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// in Go version older than 1.17 you can use ioutil.TempFile\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// close and remove the temporary file at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRemove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write data to the temporary file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;abc abc abc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe function \u003ca href=\"https://pkg.go.dev/os#CreateTemp\" target=\"_blank\"\u003e\u003ccode\u003efunc CreateTemp(dir, pattern string) (*File, error)\u003c/code\u003e\u003c/a\u003e has two parameters:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edir\u003c/code\u003e which is a directory where a temporary file should be created. If left empty, the default directory for temporary files (for a given OS) is used.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epattern\u003c/code\u003e that is used to generate names of temporary files. The name is created by appending a random string to the end of the pattern. In this way, in the example, we get names such as \u003ccode\u003etmpfile-483140887\u003c/code\u003e. You can also use \u003ccode\u003e*\u003c/code\u003e to indicate where the random string should be placed. Giving \u003ccode\u003etmpfile-*.txt\u003c/code\u003e you get, for example, \u003ccode\u003etmpfile-483140887.txt\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you don\u0026rsquo;t use the temporary file anymore, it is a good practice to remove it using \u003ca href=\"https://pkg.go.dev/os#Remove\" target=\"_blank\"\u003e\u003ccode\u003eos.Remove()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"create-a-temporary-directory\"\u003eCreate a temporary directory\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create a temporary directory\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMkdirTemp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;dir\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// in Go version older than 1.17 you can use ioutil.TempDir\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remove the temporary directory at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRemoveAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// print path of the directory\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eParameters of the \u003ca href=\"https://pkg.go.dev/os#MkdirTemp\" target=\"_blank\"\u003e\u003ccode\u003efunc MkdirTemp(dir, pattern string) (string, error)\u003c/code\u003e\u003c/a\u003e function work the same way as in the case of \u003ca href=\"https://pkg.go.dev/os#CreateTemp\" target=\"_blank\"\u003e\u003ccode\u003eos.CreateTemp()\u003c/code\u003e\u003c/a\u003e. As before, after you finish working with the temporary folder, you should remember to delete it, for example, via \u003ca href=\"https://pkg.go.dev/os#RemoveAll\" target=\"_blank\"\u003e\u003ccode\u003eos.RemoveAll\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
    "date": "2021-08-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b5dae02e02569015aade84cc47138843",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "👣 Print struct variables in Go",
    "url": "https://gosamples.dev/print-struct-variables/",
    "resume": "\u003cp\u003eStandard \u003ca href=\"https://pkg.go.dev/fmt#Print\" target=\"_blank\"\u003e\u003ccode\u003efmt.Print()\u003c/code\u003e\u003c/a\u003e does not print variable names of Go structs, but it does not mean you cannot do that. To print struct variables in Go, you can use the following methods:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e with format \u0026ldquo;verbs\u0026rdquo; \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003e\u003ccode\u003e%+v\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003e\u003ccode\u003e%#v\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eConvert the struct to JSON and print the output.\u003c/li\u003e\n\u003cli\u003eUse external packages to pretty-print structs, for example, \u003ca href=\"https://github.com/davecgh/go-spew\" target=\"_blank\"\u003e\u003ccode\u003ego-spew\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee the example below and compare these three options.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;github.com/davecgh/go-spew/spew\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecolor\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSimilar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estrawberry\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSimilar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eraspberry\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pink\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eSimilar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003estrawberry\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// fmt.Printf with format verbs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;fmt.Printf with format verbs\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%+v\\n%#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eraspberry\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eraspberry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// json encoding\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;---\\njson encoding\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ejsonData\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eraspberry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ejsonData\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// go-spew\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;---\\ngo-spew\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003espew\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eraspberry\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efmt.Printf with format verbs\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003eName:raspberry color:pink Similar:0xc000070390\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emain.Fruit\u003cspan class=\"o\"\u003e{\u003c/span\u003eName:\u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e, color:\u003cspan class=\"s2\"\u003e\u0026#34;pink\u0026#34;\u003c/span\u003e, Similar:\u003cspan class=\"o\"\u003e(\u003c/span\u003e*main.Fruit\u003cspan class=\"o\"\u003e)(\u003c/span\u003e0xc000070390\u003cspan class=\"o\"\u003e)}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ejson encoding\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Name\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;Similar\u0026#34;\u003c/span\u003e:\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Name\u0026#34;\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;Similar\u0026#34;\u003c/span\u003e:null\u003cspan class=\"o\"\u003e}}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ego-spew\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003emain.Fruit\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e Name: \u003cspan class=\"o\"\u003e(\u003c/span\u003estring\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003elen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e9\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e color: \u003cspan class=\"o\"\u003e(\u003c/span\u003estring\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003elen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e4\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;pink\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e Similar: \u003cspan class=\"o\"\u003e(\u003c/span\u003e*main.Fruit\u003cspan class=\"o\"\u003e)(\u003c/span\u003e0xc000070390\u003cspan class=\"o\"\u003e)({\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e Name: \u003cspan class=\"o\"\u003e(\u003c/span\u003estring\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003elen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e10\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e color: \u003cspan class=\"o\"\u003e(\u003c/span\u003estring\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003elen\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e Similar: \u003cspan class=\"o\"\u003e(\u003c/span\u003e*main.Fruit\u003cspan class=\"o\"\u003e)(\u003c/span\u003e\u0026lt;nil\u0026gt;\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNote the differences:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e prints only field values, which in the case of a pointer, it is the memory address of the variable it points to.\u003c/li\u003e\n\u003cli\u003eEncoding to JSON requires all struct fields to be exported (the first letter capitalized). Otherwise, unexported fields such as \u003ccode\u003ecolor\u003c/code\u003e will not appear in the resulting JSON.\u003c/li\u003e\n\u003cli\u003ePackage \u003ca href=\"https://github.com/davecgh/go-spew\" target=\"_blank\"\u003e\u003ccode\u003ego-spew\u003c/code\u003e\u003c/a\u003e prints detailed information about the struct, but it is an external dependency that needs to be imported.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDepending on your use case, you should choose the method that suits you best.\u003c/p\u003e",
    "date": "2021-08-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "21a1a6653f41852db93e543aad53dc87",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Caddy V2",
    "url": "https://changelog.com/gotime/193",
    "resume": "Matt Holt joins Jon Calhoun to discuss Caddy, its history, and the process of creating a v2 of the popular web server. In the episode they discuss some of the challenges encountered while building the v2, reasons for doing a major rewrite, and more.",
    "date": "2021-08-19T15:30:00Z",
    "vote": 0
  },
  {
    "id": "88a2c278db397b8bc7051d0fb86db817",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "10 Compelling Reasons to Learn Python for Data Science",
    "url": "https://blog.boot.dev/python/python-for-data-science/",
    "resume": "Read this if you don’t know where to start learning data science\nData science is a vast field with tons of entry points, depending on where and how you want to start.",
    "date": "2021-08-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "002114f55c661b5efb539204ddfff111",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📡 Handle Context Deadline Exceeded error in Go",
    "url": "https://gosamples.dev/context-deadline-exceeded/",
    "resume": "\u003cp\u003e\u003ca href=\"https://pkg.go.dev/context#pkg-variables\" target=\"_blank\"\u003e\u003ccode\u003eContext Deadline Exceeded\u003c/code\u003e\u003c/a\u003e is an error occurring in Go when a \u003ca href=\"https://pkg.go.dev/net/http#Request.Context\" target=\"_blank\"\u003econtext\u003c/a\u003e of an HTTP request has a \u003ca href=\"https://pkg.go.dev/context#WithDeadline\" target=\"_blank\"\u003edeadline\u003c/a\u003e or a \u003ca href=\"https://pkg.go.dev/context#WithTimeout\" target=\"_blank\"\u003etimeout\u003c/a\u003e set, i.e., the time after which the request should abort. This error is returned if the time of a server response is greater than the set timeout. Setting timeouts on requests is a good practice in a production environment to ensure that you always get a response (or error) in a finite time.\u003c/p\u003e\n\u003ch2 id=\"context-deadline-exceeded-example\"\u003e\u003ccode\u003eContext deadline exceeded\u003c/code\u003e example\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowServer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ew\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eResponseWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello world!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ecall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eMethodGet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://localhost:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecancel\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWithTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eContext\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nf\"\u003ecancel\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWithContext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ectx\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eDo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// run slow server\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003ego\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHandleFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eslowServer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eListenAndServe\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// wait for server to run\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// call server\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ecall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eDeadlineExceeded\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ContextDeadlineExceeded: true\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;IsTimeoutError: true\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/19 06:39:09 ContextDeadlineExceeded: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/19 06:39:09 IsTimeoutError: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/19 06:39:09 Get \u003cspan class=\"s2\"\u003e\u0026#34;http://localhost:8080\u0026#34;\u003c/span\u003e: context deadline exceeded\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the example above, we:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003erun our slow server, whose task is to return a response after 10 seconds\u003c/li\u003e\n\u003cli\u003ecreate a new request in the \u003ccode\u003ecall()\u003c/code\u003e function, which will be sent to the server\u003c/li\u003e\n\u003cli\u003eset a timeout of 1 second on this request, i.e., the value of time after the waiting for the server response is interrupted\u003c/li\u003e\n\u003cli\u003esend the request to the server\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSince a timeout for this request is set to 1 second and the server responds after 10 seconds, the HTTP client returns an error.\u003c/p\u003e\n\u003ch2 id=\"handle-context-deadline-exceeded-error\"\u003eHandle \u003ccode\u003eContext deadline exceeded\u003c/code\u003e error\u003c/h2\u003e\n\u003cp\u003eAn HTTP client returns the \u003ca href=\"https://pkg.go.dev/context#pkg-variables\" target=\"_blank\"\u003e\u003ccode\u003econtext.DeadlineExceeded\u003c/code\u003e\u003c/a\u003e error when the set timeout is exceeded. This error can also be handled with the more general \u003ca href=\"https://pkg.go.dev/os#IsTimeout\" target=\"_blank\"\u003e\u003ccode\u003eos.IsTimeout()\u003c/code\u003e\u003c/a\u003e function that checks if the error is known to report that a timeout occurred.\u003c/p\u003e\n\u003ch2 id=\"context-deadline-exceeded-clienttimeout-exceeded-while-awaiting-headers-example\"\u003e\u003ccode\u003eContext deadline exceeded (Client.Timeout exceeded while awaiting headers)\u003c/code\u003e example\u003c/h2\u003e\n\u003cp\u003eThe timeout can be set not only at the level of a single HTTP request but also at the level of the entire HTTP client. In this case, each request made by such a client has the same timeout value. See the example of a \u003ccode\u003ecall()\u003c/code\u003e function using the client timeout option:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ecall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eClient\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003eTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://localhost:8080\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/19 07:35:14 IsTimeoutError: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/19 07:35:14 Get \u003cspan class=\"s2\"\u003e\u0026#34;http://localhost:8080\u0026#34;\u003c/span\u003e: context deadline exceeded \u003cspan class=\"o\"\u003e(\u003c/span\u003eClient.Timeout exceeded \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e awaiting headers\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn this case, we get the \u003ccode\u003econtext deadline exceeded (Client.Timeout exceeded while awaiting headers)\u003c/code\u003e error. Note that this is not an instance of \u003ca href=\"https://pkg.go.dev/context#pkg-variables\" target=\"_blank\"\u003e\u003ccode\u003econtext.DeadlineExceeded\u003c/code\u003e\u003c/a\u003e error.\u003c/p\u003e",
    "date": "2021-08-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f0414d7c1a6326a645334a46a52c3206",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Scala vs Go: Comparing Everything You Need to Know",
    "url": "https://blog.boot.dev/golang/scala-vs-go/",
    "resume": "Scala and Golang are newer languages, only coming onto the scene after the turn of the century, but in that time they’ve managed to become two of the highest-paid languages for developers, with the industry benefiting from their fresh creation.",
    "date": "2021-08-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d9f068fe9c0b53953d56b30c01b109a6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Death, Taxes, and Database Migrations",
    "url": "https://blog.boot.dev/clean-code/death-taxes-and-database-migrations/",
    "resume": "In this world, nothing can be said to be certain, except death, taxes, and migrations.",
    "date": "2021-08-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1d7c45760976d15e16035f5348f62361",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔄 Convert CSV to JSON in Go",
    "url": "https://gosamples.dev/csv-to-json/",
    "resume": "\u003cp\u003eTo convert CSV data to JSON in Go, you should follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a struct for storing CSV lines and annotate it with \u003ca href=\"https://pkg.go.dev/encoding/json#Marshal\" target=\"_blank\"\u003eJSON struct field tags\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eRead CSV file using \u003ca href=\"https://pkg.go.dev/encoding/csv#Reader\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Reader\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eAssign successive lines of raw CSV data to instances of the created struct.\u003c/li\u003e\n\u003cli\u003eConvert an array of structs to JSON using marshaling functions from the \u003ca href=\"https://pkg.go.dev/encoding/json\" target=\"_blank\"\u003e\u003ccode\u003eencoding/json\u003c/code\u003e\u003c/a\u003e package.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the example below, we use \u003ccode\u003edata.csv\u003c/code\u003e file:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evegetables,fruits,rank\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecarrot,banana,1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epotato,strawberry,2\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSee also our examples of \u003ca href=\"https://gosamples.dev/json-to-csv\"\u003ehow to convert JSON to CSV\u003c/a\u003e and \u003ca href=\"https://gosamples.dev/read-csv\"\u003ehow to read CSV file\u003c/a\u003e or \u003ca href=\"https://gosamples.dev/write-csv\"\u003ehow to write data to a CSV file\u003c/a\u003e in Go\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/csv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strconv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 1. Create a struct for storing CSV lines and annotate it with JSON struct field tags\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;vegetable\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;fruit\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eRank\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;rank\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreateShoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// convert csv lines to array of structs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// omit header line\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e \u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efield\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efield\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efield\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRank\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAtoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// open file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;data.csv\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 2. Read CSV file using csv.Reader\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvReader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvReader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 3. Assign successive lines of raw CSV data to fields of the created structs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreateShoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// 4. Convert an array of structs to JSON using marshaling functions from the encoding/json package\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ejsonData\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshalIndent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ejsonData\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;vegetable\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;banana\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;vegetable\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;rank\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a783572d0ff439ccc3fa6b9ad25c7e83",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗒️ Read a CSV file in Go",
    "url": "https://gosamples.dev/read-csv/",
    "resume": "\u003cp\u003eTo easily read and parse \u003ca href=\"https://en.wikipedia.org/wiki/Comma-separated_values\" target=\"_blank\"\u003eCSV\u003c/a\u003e (or \u003ca href=\"https://en.wikipedia.org/wiki/Tab-separated_values\" target=\"_blank\"\u003eTSV\u003c/a\u003e) files in Go, you can use two methods of \u003ca href=\"https://pkg.go.dev/encoding/csv\" target=\"_blank\"\u003e\u003ccode\u003eencoding/csv\u003c/code\u003e\u003c/a\u003e package:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/encoding/csv#Reader.ReadAll\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Reader.ReadAll()\u003c/code\u003e\u003c/a\u003e to read and parse the entire file at once. Note however that a very large file may not fit into the memory.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://pkg.go.dev/encoding/csv#Reader.Read\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Reader.Read()\u003c/code\u003e\u003c/a\u003e to read the CSV file line by line.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSee also our example of \u003ca href=\"https://gosamples.dev/write-csv\"\u003ehow to write data to a CSV file in Go\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the examples below, we use \u003ccode\u003edata.csv\u003c/code\u003e file:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evegetables,fruits\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecarrot,banana\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epotato,strawberry\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"read-the-entire-csv-file-at-once\"\u003eRead the entire CSV file at once\u003c/h2\u003e\n\u003cp\u003eIn this example, we open the CSV file, initialize \u003ca href=\"https://pkg.go.dev/encoding/csv#NewReader\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Reader\u003c/code\u003e\u003c/a\u003e and read all the data into a \u003ccode\u003e[][]string\u003c/code\u003e slice where the first index is the file\u0026rsquo;s line number and the second is an index of the comma-separated value in this line. We can do something with these data, for example, convert to an array of structs.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/csv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreateShoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e[][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// omit header line\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e \u003cspan class=\"nx\"\u003eShoppingRecord\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efield\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eVegetable\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efield\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efield\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// open file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;data.csv\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// read csv values using csv.Reader\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvReader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvReader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadAll\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// convert records to array of structs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreateShoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// print the array\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eshoppingList\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[{\u003c/span\u003eVegetable:carrot Fruit:banana\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003eVegetable:potato Fruit:strawberry\u003cspan class=\"o\"\u003e}]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"read-a-csv-file-line-by-line\"\u003eRead a CSV file line by line\u003c/h2\u003e\n\u003cp\u003eReading line by line is similar to \u003ca href=\"https://gosamples.dev/read-csv/#read-the-entire-csv-file-at-once\"\u003ereading the whole file at once\u003c/a\u003e, but in this case, we use \u003ca href=\"https://pkg.go.dev/encoding/csv#Reader.Read\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Reader.Read()\u003c/code\u003e\u003c/a\u003e method to read the next line of data in the infinite loop. This loop is exited when no more data are available, i.e., \u003ca href=\"https://pkg.go.dev/io#EOF\" target=\"_blank\"\u003e\u003ccode\u003eio.EOF\u003c/code\u003e\u003c/a\u003e error occurs.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/csv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// open file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;data.csv\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// read csv values using csv.Reader\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvReader\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewReader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsvReader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRead\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eEOF\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// do something with read line\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%+v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003evegetables fruits\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003ecarrot banana\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003epotato strawberry\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"use-a-non-default-field-delimiter-and-read-a-tsv-file\"\u003eUse a non-default field delimiter and read a TSV file\u003c/h2\u003e\n\u003cp\u003eThe standard separator for \u003ca href=\"https://pkg.go.dev/encoding/csv#Reader\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Reader\u003c/code\u003e\u003c/a\u003e is the comma, but it\u0026rsquo;s easy to change it to any rune. For instance, you can change it to the tab character \u003ccode\u003e\\t\u003c/code\u003e, and in this way, you get the \u003ca href=\"https://en.wikipedia.org/wiki/Tab-separated_values\" target=\"_blank\"\u003eTSV\u003c/a\u003e reader:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ecsvReader\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eComma\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;\\t\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7e1f07f7714528860f37e7d865d0851b",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📨 Validate an email address in Go",
    "url": "https://gosamples.dev/validate-email/",
    "resume": "\u003cp\u003eAn email address in Golang can be validated using the standard library function \u003ca href=\"https://pkg.go.dev/net/mail#ParseAddress\" target=\"_blank\"\u003e\u003ccode\u003email.ParseAddress\u003c/code\u003e\u003c/a\u003e. This function parses an \u003ca href=\"https://rfc-editor.org/rfc/rfc5322.html\" target=\"_blank\"\u003eRFC 5322\u003c/a\u003e address, but by using it appropriately, we can also check if a string is a valid email address and get it from the \u003ccode\u003e\u0026quot;name \u0026lt;local-part@domain\u0026gt;\u0026quot;\u003c/code\u003e format.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/mail\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidMailAddress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddress\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003email\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParseAddress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddress\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eAddress\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddresses\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;foo@gmail.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;Gopher \u0026lt;from@example.com\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;example\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddresses\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidMailAddress\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;value: %-30s valid email: %-10t address: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;value: %-30s valid email: %-10t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eok\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: foo@gmail.com valid email: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e address: foo@gmail.com\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: Gopher \u0026lt;from@example.com\u0026gt; valid email: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e address: from@example.com\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: example valid email: \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e \u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a2a1452a02254b9de6032e9c08892829",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Data streaming and Benthos",
    "url": "https://changelog.com/gotime/192",
    "resume": "Mihai and Ashley join Jon to discuss data streaming. What is it, why is it being used, and common mistakes developers make when setting up. They also discuss some of the tools in the ecosystem, including Benthos, a tool created by Ashley Jeff’s to make the plumbing part of data streaming easier to get right.",
    "date": "2021-08-12T20:45:00Z",
    "vote": 0
  },
  {
    "id": "8a3f7afe0f3c10bfe3ccfc1405cf58f2",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⚙️ Convert interface to string in Go",
    "url": "https://gosamples.dev/interface-to-string/",
    "resume": "\u003cp\u003eTo convert interface to string in Go, use \u003ca href=\"https://pkg.go.dev/fmt#Sprint\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprint\u003c/code\u003e\u003c/a\u003e function, which gets the default string representation of any value. If you want to format an interface using a non-default format, use \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf\u003c/code\u003e\u003c/a\u003e with \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003e\u003ccode\u003e%v\u003c/code\u003e\u003c/a\u003e verb.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://pkg.go.dev/fmt#Sprint\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprint(val)\u003c/code\u003e\u003c/a\u003e is equivalent to \u003ca href=\"https://pkg.go.dev/fmt#Sprintf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Sprintf(\u0026quot;%v\u0026quot;, val)\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etestValues\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{}{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mf\"\u003e3.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eB\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;A\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// method 1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;METHOD 1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003etestValues\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003evalStr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003evalStr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// method 2\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\\nMETHOD 2\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003etestValues\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003evalStr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;value: %v\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003evalStr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eMETHOD \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003etest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e3.2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e 5\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003eA 5\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eMETHOD \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: \u003cspan class=\"nb\"\u003etest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: 3.2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e 5\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evalue: \u003cspan class=\"o\"\u003e{\u003c/span\u003eA 5\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAlternatively, you can use the \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003e\u003ccode\u003e%+v\u003c/code\u003e\u003c/a\u003e verb to add field names to struct representation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003etest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e3.2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e 5\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003eA:A B:5\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eor use \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003e\u003ccode\u003e%#v\u003c/code\u003e\u003c/a\u003e to format value in the Go-syntax style:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e3.2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003eint\u003cspan class=\"o\"\u003e{\u003c/span\u003e1, 2, 3, 4, 5\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estruct \u003cspan class=\"o\"\u003e{\u003c/span\u003e A string\u003cspan class=\"p\"\u003e;\u003c/span\u003e B int \u003cspan class=\"o\"\u003e}{\u003c/span\u003eA:\u003cspan class=\"s2\"\u003e\u0026#34;A\u0026#34;\u003c/span\u003e, B:5\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6d7b6fdad4c19d2b52da9986fcb65fa5",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⏲️ Measure execution time in Go",
    "url": "https://gosamples.dev/measure-time/",
    "resume": "\u003cp\u003eMeasuring the execution time of a given code block in Go consists of two steps that need to be done before and after a measured function. Before the function, you need to record the current time using \u003ca href=\"https://pkg.go.dev/time#Now\" target=\"_blank\"\u003e\u003ccode\u003etime.Now()\u003c/code\u003e\u003c/a\u003e. Then, after executing the measured block, you can check how much time has elapsed since this time using \u003ca href=\"https://pkg.go.dev/time#Since\" target=\"_blank\"\u003e\u003ccode\u003etime.Since()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estart\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;main, execution time %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSince\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/10 14:32:13 main, execution \u003cspan class=\"nb\"\u003etime\u003c/span\u003e 2.003051562s\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eYou can shorten the measuring time procedure to one-liner using \u003ccode\u003edefer\u003c/code\u003e statement. The \u003ccode\u003etrack\u003c/code\u003e function in the example below takes the name of the measured code block (\u003ccode\u003e\u0026quot;main\u0026quot;\u003c/code\u003e) and returns a closure function that calculates the time elapsed since the call of the \u003ccode\u003etrack\u003c/code\u003e. You only need to call this function at the end of the code block using \u003ccode\u003edefer\u003c/code\u003e statement that defers execution until the current function (\u003ccode\u003emain()\u003c/code\u003e in the example below) returns.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003etrack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estart\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s, execution time %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSince\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nf\"\u003etrack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;main\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)()\u003c/span\u003e \u003cspan class=\"c1\"\u003e// do not forget about the second parentheses\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/10 14:32:39 main, execution \u003cspan class=\"nb\"\u003etime\u003c/span\u003e 2.004788787s\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dafe261f6bdbc1221dffc6f42eafff12",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📁 List files in a directory in Go",
    "url": "https://gosamples.dev/list-files/",
    "resume": "\u003cp\u003eThe Go standard library has many functions that allow listing files in a folder. You can list only top-level content of a folder or go through all files and directories recursively in a nested directory structure, as well as list files matching a specific pattern.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn all examples we use a folder tree:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── file1.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── file2.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── folder1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e └── fileInFolder1.txt\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"list-files-in-a-directory-by-using-ioutilreaddirhttpspkggodevioioutilreaddir\"\u003eList files in a directory by using \u003ca href=\"https://pkg.go.dev/io/ioutil#ReadDir\" target=\"_blank\"\u003e\u003ccode\u003eioutil.ReadDir\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eUse \u003ca href=\"https://pkg.go.dev/io/ioutil#ReadDir\" target=\"_blank\"\u003e\u003ccode\u003eioutil.ReadDir\u003c/code\u003e\u003c/a\u003e when you want to retrieve files at the top-level of the directory tree.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io/ioutil\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eioutil\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadDir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003efiles\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efile1.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efile2.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efolder1\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"list-files-in-a-directory-by-using-osfilereaddirhttpspkggodevosfilereaddir\"\u003eList files in a directory by using \u003ca href=\"https://pkg.go.dev/os#File.Readdir\" target=\"_blank\"\u003e\u003ccode\u003eos.File.Readdir\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThe function \u003ca href=\"https://pkg.go.dev/os#File.Readdir\" target=\"_blank\"\u003e\u003ccode\u003eos.File.Readdir\u003c/code\u003e\u003c/a\u003e works in the same way as \u003ca href=\"https://pkg.go.dev/io/ioutil#ReadDir\" target=\"_blank\"\u003e\u003ccode\u003eioutil.ReadDir\u003c/code\u003e\u003c/a\u003e, but it does not sort the result list by name.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edir\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003edir\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReaddir\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003efiles\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efile2.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efile1.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efolder1\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"list-files-recursively-by-using-filepathwalkhttpspkggodevpathfilepathwalk\"\u003eList files recursively by using \u003ca href=\"https://pkg.go.dev/path/filepath#Walk\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Walk\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eGo provides a convenient function \u003ca href=\"https://pkg.go.dev/path/filepath#Walk\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Walk(root string, fn WalkFunc) error\u003c/code\u003e\u003c/a\u003e to list files recursively. It starts at the \u003ccode\u003eroot\u003c/code\u003e folder and calls \u003ca href=\"https://pkg.go.dev/path/filepath#WalkFunc\" target=\"_blank\"\u003e\u003ccode\u003efn WalkFunc\u003c/code\u003e\u003c/a\u003e function for each file and directory in the tree, in lexical order.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;path/filepath\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eFileInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder/file1.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder/file2.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder/folder1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder/folder1/fileInFolder1.txt\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"list-files-that-match-given-pattern-by-using-filepathglobhttpspkggodevpathfilepathglob\"\u003eList files that match given pattern by using \u003ca href=\"https://pkg.go.dev/path/filepath#Glob\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Glob\u003c/code\u003e\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eIf you are interested only in files that match a given pattern, you can use \u003ca href=\"https://pkg.go.dev/path/filepath#Glob\" target=\"_blank\"\u003e\u003ccode\u003efilepath.Glob\u003c/code\u003e\u003c/a\u003e, for example, to list all files with \u003ccode\u003e.go\u003c/code\u003e extension 🙂. Pattern syntax can be found \u003ca href=\"https://pkg.go.dev/path/filepath#Match\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;path/filepath\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efilepath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGlob\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testFolder/*.go\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efile\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003efiles\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etestFolder/file1.go\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b1f1d0cf2aab425ffedc0f0fa35ccc50",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "LambdaTest: Manually Setting Pass or Fail",
    "url": "https://sdet.us/lambdatest-manually-setting-pass-or-fail/",
    "resume": "I have been using LambdaTest to leverage their vast emulator base on mobile devices with my automation suite. My automation suite is using a Python framework called Golem. I love Golem because it has its own database, storing results, and its own lightweight web front end for displaying results. It\u0026#8217;s pretty awesome, compared to a [\u0026#8230;]",
    "date": "2021-08-08T19:16:32Z",
    "vote": 0
  },
  {
    "id": "da576f5ff77849111414808ab04442cf",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "LambdaTest and Golem: Dynamically Naming Build",
    "url": "https://sdet.us/lambdatest-and-golem-dynamically-naming-build/",
    "resume": "I\u0026#8217;ve become a big fan of LambdaTest recently. As I use Golem as my internal test framework, it was a breeze to point my browsers to the LambDa framework as a remote browser/grid. However, when I first started I noticed my tests came through as random token\u0026#8217;s for names: XNDND-DNDND-NDNDN-NDNDN \u0026#60;- such a test name [\u0026#8230;]",
    "date": "2021-08-06T20:32:47Z",
    "vote": 0
  },
  {
    "id": "d40f3351aa928c9000951d6a1ed7708d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Opening up the opinion box",
    "url": "https://changelog.com/gotime/191",
    "resume": "Mat Ryer and Jerod Santo sit down to review and discuss the MOST and LEAST unpopular “unpopular opinions” since we started keeping track of such things. Also Generics.",
    "date": "2021-08-05T16:30:00Z",
    "vote": 0
  },
  {
    "id": "19f7dfbfab0c5b38943d3ed41f6a270e",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📂 Check if a file exists in Go",
    "url": "https://gosamples.dev/file-exists/",
    "resume": "\u003cp\u003eAccess to files in Go is provided by the \u003ca href=\"https://pkg.go.dev/os\" target=\"_blank\"\u003e\u003ccode\u003eos\u003c/code\u003e\u003c/a\u003e package. When the file does not exist, functions of this package return \u003ca href=\"https://pkg.go.dev/os#pkg-variables\" target=\"_blank\"\u003e\u003ccode\u003eos.ErrNotExist\u003c/code\u003e\u003c/a\u003e error. As a result, to verify that the file exists, you need to check whether you received this error or not, for example, after opening the file when you want to do something with it like reading the first 100 bytes:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eread100Bytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrNotExist\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file not exists error\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/foo/bar/file.go\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003eread100Bytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e2021/08/05 18:30:46 file not exists error\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e status \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIt\u0026rsquo;s also possible to check if a file exists without doing anything with it, but keep in mind that if you later want to do something with it, such as opening it, you should also check its existence as it may have been modified or deleted in the meantime:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eStat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eErrNotExist\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/foo/bar/file.go\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efileExists\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s exists: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efileExists\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e/foo/bar/file.go exists: false\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "05a7dc3abb31e718c62e345a3521e7b8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Golang vs Java: 6 Key Comparisons",
    "url": "https://blog.boot.dev/golang/golang-vs-java-go/",
    "resume": "Golang (or Go) and Java offer an interesting comparison because despite their wide differences, there are also key similarities in how and where they\u0026rsquo;re used by programmers.",
    "date": "2021-08-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c9a46c92a750ba6fca1282847831c406",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🐛 Handle errors in Go with errors.Is() and errors.As()",
    "url": "https://gosamples.dev/check-error-type/",
    "resume": "\u003cp\u003eSince Go 1.13, we have new helpful ways to find out the type of error, even if we use error wrapping. If we want to check if a given error matches another specific error, we need to use \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eIs()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/errors\" target=\"_blank\"\u003e\u003ccode\u003eerrors\u003c/code\u003e\u003c/a\u003e package. If we are interested in whether the error is of a given type, we should call the \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eAs()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003ch2 id=\"ishttpspkggodeverrorsis-function\"\u003e\u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eIs()\u003c/code\u003e\u003c/a\u003e function\u003c/h2\u003e\n\u003cp\u003eIn the example below, we can see that the function \u003ccode\u003evalidateInput\u003c/code\u003e returns an error for \u003ccode\u003ebadInput\u003c/code\u003e. This error is \u003ccode\u003eErrBadInput\u003c/code\u003e wrapped in an error created by \u003ca href=\"https://pkg.go.dev/fmt#Errorf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Errorf()\u003c/code\u003e\u003c/a\u003e. Using the \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eIs(err, target error) bool\u003c/code\u003e\u003c/a\u003e function, we can detect the \u003ccode\u003eErrBadInput\u003c/code\u003e even if it is wrapped since this function checks if any error in the chain of wrapped errors matches the target. Therefore, this form should be preferable to comparison \u003ccode\u003eif err == ErrBadInput\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInput\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrBadInput\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;bad input\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidateInput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInput\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;validateInput: %w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrBadInput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidateInput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eErrBadInput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;bad input error\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebad input error\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"ashttpspkggodeverrorsas-function\"\u003e\u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eAs()\u003c/code\u003e\u003c/a\u003e function\u003c/h2\u003e\n\u003cp\u003eSimilar to \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eIs()\u003c/code\u003e\u003c/a\u003e, the \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eAs(err error, target interface{}) bool\u003c/code\u003e\u003c/a\u003e checks if any error in the chain of wrapped errors matches the target. The difference is that this function checks whether the error has a specific type, unlike the \u003ca href=\"https://pkg.go.dev/errors#Is\" target=\"_blank\"\u003e\u003ccode\u003eIs()\u003c/code\u003e\u003c/a\u003e, which examines if it is a particular error object. Because \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eAs\u003c/code\u003e\u003c/a\u003e considers the whole chain of errors, it should be preferable to the type assertion \u003ccode\u003eif e, ok := err.(*BadInputError); ok\u003c/code\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003etarget\u003c/code\u003e argument of the \u003ca href=\"https://pkg.go.dev/errors#As\" target=\"_blank\"\u003e\u003ccode\u003eAs(err error, target interface{}) bool\u003c/code\u003e\u003c/a\u003e function should be a pointer to the error type, which in this case is \u003ccode\u003e*BadInputError\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;errors\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInput\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eBadInputError\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eBadInputError\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nf\"\u003eError\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;bad input: %s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidateInput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInput\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErrorf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;validateInput: %w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eBadInputError\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003einput\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidateInput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInputErr\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nx\"\u003eBadInputError\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ebadInputErr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;bad input error occured: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ebadInputErr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebad input error occured: bad input: abc\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5a61c74b4b933fa570426cc7ed7c2489",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗃️ 3 ways to pretty print JSON in Go",
    "url": "https://gosamples.dev/pretty-print-json/",
    "resume": "\u003cp\u003eIn everyday programming work (especially as a web developer), you often have to debug and analyze JSON responses. In such cases, it is good to display them with an appropriate indentation for better readability, which is often called pretty printing or beautifying JSON. In Go, we can do this in several ways using the \u003ca href=\"https://pkg.go.dev/encoding/json\" target=\"_blank\"\u003e\u003ccode\u003eencoding/json\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003ch2 id=\"json-pretty-print-by-marshaling-value\"\u003eJSON pretty print by marshaling value\u003c/h2\u003e\n\u003cp\u003eFunction \u003ca href=\"https://pkg.go.dev/encoding/json#MarshalIndent\" target=\"_blank\"\u003e\u003ccode\u003ejson.MarshalIndent\u003c/code\u003e\u003c/a\u003e generates JSON encoding of the value with indentation. You can specify a \u003ccode\u003eprefix\u003c/code\u003e of each JSON line and \u003ccode\u003eindent\u003c/code\u003e copied one or more times according to the indentation level. In our example, we pretty-print JSON using four spaces for indentation.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrettyStruct\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{})\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshalIndent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;name\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;color\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruit\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrettyStruct\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"json-pretty-print-by-encoding-value\"\u003eJSON pretty print by encoding value\u003c/h2\u003e\n\u003cp\u003eIf you use \u003ca href=\"https://pkg.go.dev/encoding/json#Encoder\" target=\"_blank\"\u003e\u003ccode\u003ejson.Encode\u003c/code\u003e\u003c/a\u003e, you can set indentation through \u003ca href=\"https://pkg.go.dev/encoding/json#Encoder.SetIndent\" target=\"_blank\"\u003e\u003ccode\u003eEncoder.SetIndent\u003c/code\u003e\u003c/a\u003e method similarly to as in marshaling, by defining a \u003ccode\u003eprefix\u003c/code\u003e and \u003ccode\u003eindent\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrettyEncode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"nx\"\u003eout\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eenc\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewEncoder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eenc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSetIndent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eenc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEncode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;name\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;color\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruit\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eFruit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuffer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrettyEncode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"pretty-print-json-string\"\u003ePretty print JSON string\u003c/h2\u003e\n\u003cp\u003ePackage \u003ca href=\"https://pkg.go.dev/encoding/json\" target=\"_blank\"\u003e\u003ccode\u003eencoding/json\u003c/code\u003e\u003c/a\u003e also has a useful function \u003ca href=\"https://pkg.go.dev/encoding/json#Indent\" target=\"_blank\"\u003e\u003ccode\u003ejson.Indent\u003c/code\u003e\u003c/a\u003e to beautify JSON string without indentation to JSON with indentation. The function needs the source JSON, output buffer, \u003ccode\u003eprefix\u003c/code\u003e, and \u003ccode\u003eindent\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrettyString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eprettyJSON\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBuffer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIndent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eprettyJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eprettyJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efruitJSON\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e`{\u0026#34;name\u0026#34;: \u0026#34;Strawberry\u0026#34;, \u0026#34;color\u0026#34;: \u0026#34;red\u0026#34;}`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrettyString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efruitJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAll methods print JSON string with indentation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;color\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9b118d12c1162f28e851244d867875e5",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🗺️ Convert map to JSON in Go",
    "url": "https://gosamples.dev/map-to-json/",
    "resume": "\u003cp\u003eIn Go, you can easily convert a map to a JSON string using \u003ca href=\"https://pkg.go.dev/encoding/json\" target=\"_blank\"\u003e\u003ccode\u003eencoding/json\u003c/code\u003e\u003c/a\u003e package. It does not matter if the map contains strings, arrays, structures, numerical values, or another map. The only thing you should remember is that JSON allows only string keys, so if you have an integer key in your map, it will be converted to a string.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etype\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolor\u003c/span\u003e \u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;name\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eHexCode\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"s\"\u003e`json:\u0026#34;hex_code\u0026#34;`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{}{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;best_fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// string value\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;best_vegetables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;cabbage\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array value\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;best_websites\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kd\"\u003einterface\u003c/span\u003e\u003cspan class=\"p\"\u003e{}{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// map value\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;gosamples.dev\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// integer key, string value\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;best_color\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eHexCode\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;#FF0000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"c1\"\u003e// struct value\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ejsonBytes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMarshalIndent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ejsonBytes\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://pkg.go.dev/encoding/json#MarshalIndent\" target=\"_blank\"\u003e\u003ccode\u003ejson.MarshalIndent\u003c/code\u003e\u003c/a\u003e produces JSON encoding of the map with indentation. If you need output without indentation, use \u003ca href=\"https://pkg.go.dev/encoding/json#Marshal\" target=\"_blank\"\u003e\u003ccode\u003ejson.Marshal\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;best_color\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;hex_code\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;#FF0000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;best_fruit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;best_vegetables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s2\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s2\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s2\"\u003e\u0026#34;cabbage\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;best_websites\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nt\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;gosamples.dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-08-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0fe1a04b6ca148ab3efaa4254e2e83c7",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Monitoring Errors in Jaeger",
    "url": "https://www.jajaldoang.com/post/monitoring-errors-in-jaeger/",
    "resume": "\u003cp\u003eDistributed tracing with Jaeger can be used to monitor error. We can find which span got an error and see the error log. This article will show you how.\u003c/p\u003e",
    "date": "2021-08-01T06:13:12+07:00",
    "vote": 0
  },
  {
    "id": "3411cf8d35c994a5264c0764b5659272",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "How to make mistakes in Go",
    "url": "https://changelog.com/gotime/190",
    "resume": "The panel are joined by Teiva Harsanyi, author of 100 Go Mistakes, to talk about how best to make mistakes when writing Go.",
    "date": "2021-07-29T14:00:00Z",
    "vote": 0
  },
  {
    "id": "8dec4064446f9a826e541c710fe48baa",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 20 Entry-Level JavaScript Interview Questions",
    "url": "https://blog.boot.dev/javascript/javascript-interview-questions-entry-level/",
    "resume": "Versatile, powerful and ever-present, JavaScript is the world\u0026rsquo;s most used programming language (for eight years and counting!",
    "date": "2021-07-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6c2da18b705868d562df1fb55354b792",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Our Learn Python Course Has Released",
    "url": "https://blog.boot.dev/news/python-fundamentals-course-announcement/",
    "resume": "We’ve just launched our latest course, Learn Python.\nStart the \u0026ldquo;Learn Python\u0026rdquo; Course Now\nWhat’s more: to celebrate the release, we’re offering full FREE access to the entire course — yep, you can take the entire course for free for a month — but the code expires in just 14 days.",
    "date": "2021-07-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0671c3d89ebdb9860b68fac6690aa104",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Data Science in Go: How Much To Tip",
    "url": "https://www.ardanlabs.com/blog/2021/07/go-data-science-how-much-tip.html",
    "resume": "The Question When you work on data science problems, you always start with a question you\u0026rsquo;re trying to answer. This question will affect the data you pick, your exploration process, and how you interpret the results.\nThe question for this article is: How much (in percentage) should you tip your taxi driver?\nTo answer the question, we\u0026rsquo;ll use a portion of the NYC Taxi dataset. The data file we\u0026rsquo;ll be using is taxi-01-2020-sample.",
    "date": "2021-07-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e63e187b84d15630d4eaa99ae58355b8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What are UUIDs, and are they better than regular IDs?",
    "url": "https://blog.boot.dev/clean-code/what-are-uuids-and-should-you-use-them/",
    "resume": "In the context of back-end web development, an ID is just a unique identifier for a record of data.",
    "date": "2021-07-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2ead4740071debce160c5bf378501092",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔢 Convert int to string in Go",
    "url": "https://gosamples.dev/convert-int-to-string/",
    "resume": "\u003cp\u003eUse \u003ca href=\"https://pkg.go.dev/strconv#FormatInt\" target=\"_blank\"\u003e\u003ccode\u003estrconv.FormatInt\u003c/code\u003e\u003c/a\u003e function to convert an integer variable to a string in Go.\u003c/p\u003e\n\u003ch2 id=\"int64-to-a-decimal-string\"\u003eint64 to a decimal string\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormatInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"int-int32-int16-int8-to-a-decimal-string\"\u003eint, int32, int16, int8 to a decimal string\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"c1\"\u003e// you can use any integer here: int32, int16, int8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormatInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo convert \u003ccode\u003eint\u003c/code\u003e to \u003ccode\u003estring\u003c/code\u003e you can also use \u003ca href=\"https://pkg.go.dev/strconv#Itoa\" target=\"_blank\"\u003e\u003ccode\u003estrconv.Itoa\u003c/code\u003e\u003c/a\u003e which is equivalent to \u003ca href=\"https://pkg.go.dev/strconv#FormatInt\" target=\"_blank\"\u003e\u003ccode\u003estrconv.FormatInt(int64(i), 10)\u003c/code\u003e\u003c/a\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eItoa\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"int64-to-a-hexadecimal-string\"\u003eint64 to a hexadecimal string\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"c1\"\u003e// you can use any integer here: int, int32, int16, int8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormatInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"int64-to-an-octal-string\"\u003eint64 to an octal string\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"c1\"\u003e// int, int32, int16, int8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormatInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"int64-to-a-binary-string\"\u003eint64 to a binary string\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003enumber\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"c1\"\u003e// int, int32, int16, int8\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrconv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFormatInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-07-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f8550a7a2ea9b0945aea40d2aadde11b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Do devs need a product manager?",
    "url": "https://changelog.com/gotime/189",
    "resume": "What is a Product Manager, and do Engineers need them? In this episode, we will be discussing what a Product Manager does, what makes a good Product Manager, and debating if engineering teams truly need them, with some tech companies going without them. We are joined by Gaëlle Sharma, Senior Technical Product Manager, at the New York Times, leading the Identity group.",
    "date": "2021-07-22T16:20:00Z",
    "vote": 0
  },
  {
    "id": "fb0388a8aa42884c63ae7e795c944dac",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is Go Good For? (And What Is Golang Used For?)",
    "url": "https://blog.boot.dev/golang/what-is-go-good-for-golang/",
    "resume": "In 2007, frustrated by some of C++’s inefficiencies and overcomplicated nature, and desiring a programming language designed specifically for multi-core processors and effectively managing large projects, three Google engineers, Robert Griesemer, Rob Pike, and Ken Thompson, designed the Go language.",
    "date": "2021-07-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8453ee0a87915452f2b0a0a104bba3a2",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "SIV and the V2+ issue",
    "url": "https://changelog.com/gotime/188",
    "resume": "Go modules brought about quite a few changes to the Go ecosystem. One of those changes is semantic import versioning (SIV), which has a fairly pronounced effect on how libraries are identified. In this episode we are joined by Tim Heckman and Peter Bourgon to discuss some of the downsides to these changes and how it has lead to what a subset of the Go community refers to as the “v2+ problem.”",
    "date": "2021-07-15T15:30:00Z",
    "vote": 0
  },
  {
    "id": "83c3519cd0a8a94425200fab097e3160",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Golang vs C++: Which is Best For Your Next Project",
    "url": "https://blog.boot.dev/golang/go-vs-c-plus-plus-golang/",
    "resume": "Needing to be a math genius to learn to code is a thing of the past.",
    "date": "2021-07-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "af73f7178ca8eb16872acc09743be0cd",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Fuzzing in the standard library",
    "url": "https://changelog.com/gotime/187",
    "resume": "Fuzzing is coming to the standard library. We speak to Katie Hockman and Jay Conrod who were part of the team responsible for designing and implementing it. We dig into the details, hear some best practices, where fuzzing can help your code, and learn more about how it works.",
    "date": "2021-07-08T16:15:00Z",
    "vote": 0
  },
  {
    "id": "f2201e9e093b5eb9e1bdfdd5ff5b33e0",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Makefile Example Usage",
    "url": "https://www.jajaldoang.com/post/makefile-example-usage/",
    "resume": "\u003cp\u003eIf you never used Makefile before, you better check out this article. You will find out what Makefile is and how it will be useful for you.\u003c/p\u003e",
    "date": "2021-07-07T10:06:11+07:00",
    "vote": 0
  },
  {
    "id": "fc01ec0f344b5f5b2f891c6f8a6360ae",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "How I turned a binary search tree into a generic data structure with go2go",
    "url": "https://appliedgo.net/generictree/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eSome time ago I wrote about how to create a balanced binary search tree. The search keys and the data payload were both plain strings. Now it is time to get rid of this limitation. go2go lets us do that while waiting for the official generics release.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2021-07-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dffa3d4be31c900a4bdc825ed3a0e824",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Pop quiz time! 😱",
    "url": "https://changelog.com/gotime/186",
    "resume": "Learning Go with code pop quizzes is a fun way to zoom in on different language features. People are looking forward to pop quizzes on Twitter and in conferences, and they also learn from that. Let’s chat about pop quizzes!",
    "date": "2021-07-01T16:10:00Z",
    "vote": 0
  },
  {
    "id": "e9d0fdc27d5551a3ea08c45761831036",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Beautiful Language and Beautiful Code",
    "url": "https://blog.boot.dev/clean-code/beautiful-language-and-beautiful-code/",
    "resume": "\u0026ldquo;Dead Poet\u0026rsquo;s Society\u0026rdquo; is a classic film, and has become a recent favorite of mine. There\u0026rsquo;s a scene in particular that I enjoy, where Robin William\u0026rsquo;s character explains that it\u0026rsquo;s bad practice to use terms like \u0026ldquo;very tired\u0026rdquo; or \u0026ldquo;very sad\u0026rdquo;, instead we should use descriptive words like \u0026ldquo;exhausted\u0026rdquo; or \u0026ldquo;morose\u0026rdquo;!",
    "date": "2021-06-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6ce332bd677498208d664e695b87eee4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Intro to the One-Time Pad Cipher",
    "url": "https://blog.boot.dev/cryptography/one-time-pad-cipher/",
    "resume": "In cryptography, the one-time pad, or OTP is a way of encrypting information so securely that it\u0026rsquo;s impossible to be cracked.",
    "date": "2021-06-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "725b18882ada0462ea873d3bc5c12405",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Giving TDD a Go",
    "url": "https://changelog.com/gotime/185",
    "resume": "We discuss how Test Driven Development (TDD) can help you write better code, and build better software. Packed with tips and tricks, gotchas and best practices, the panel explore the subject and share their real-world experiences.",
    "date": "2021-06-24T16:15:00Z",
    "vote": 0
  },
  {
    "id": "6aef0d86d6e53c7176dd0d1ea746efbd",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "16 Great Coding Challenges You Can Try Out",
    "url": "https://blog.boot.dev/misc/best-coding-challenges/",
    "resume": "Coding challenges are a fun way to improve your coding quickly.\nWhen I started to learn coding in school, coding challenges were the furthest thing from my mind.",
    "date": "2021-06-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0fb50aa4d86af259c8824e9712017517",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Building a Red-Black Binary Tree in Python",
    "url": "https://blog.boot.dev/python/red-black-tree-python/",
    "resume": "A red-black tree is a kind of self-balancing binary search tree. Each node stores an extra bit, which we will call the color, red or black.",
    "date": "2021-06-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "174429b9e1c322f7fd359ed820063998",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Resumable file uploader: Testing the server using curl and dd  commands",
    "url": "https://golangbot.com/resumable-file-uploader-testing-the-server-using-curl-dd/",
    "resume": "In this tutorial we will use the curl and dd commands to test our resumable file upload server.",
    "date": "2021-06-19T00:59:00Z",
    "vote": 0
  },
  {
    "id": "cf5af982b8a084cf782caebb80af37d3",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Resumable file uploader: Understanding tus protocol",
    "url": "https://golangbot.com/understanding-tus/",
    "resume": "This tutorial explains how  tus protocol works and how it can be used to create a resumable file uploader in Go.",
    "date": "2021-06-19T00:26:00Z",
    "vote": 0
  },
  {
    "id": "b0d87ecdfb46fef37c726936127a21dc",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Resumable file uploader: Creating http handlers",
    "url": "https://golangbot.com/resumable-file-uploader-creating-http-handlers/",
    "resume": "In this tutorial we create the GET, POST and PATCH handlers needed for implementing the tus server using Go.",
    "date": "2021-06-18T00:59:00Z",
    "vote": 0
  },
  {
    "id": "827ba32c0eac693270a50c6eba9860ca",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "All about Porter",
    "url": "https://changelog.com/gotime/184",
    "resume": "Porter lets you package your application artifacts, client tools, configuration and deployment logic together as a versioned bundle that you can distribute, and then install with a single command. Written entirely in Go, we speak to one of the creators about running an open source project, the importance of documentation, and more.",
    "date": "2021-06-17T16:00:00Z",
    "vote": 0
  },
  {
    "id": "d64c876c08dd17810f101cc7a156e89f",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Resumable file uploader: Implementing DB CRUD methods",
    "url": "https://golangbot.com/resumable-file-uploader-implementing-db-crud-methods/",
    "resume": "This tutorial deals with the creation of the DB CRUD methods needed for the resumable file upload tus server in Go. We will use PostgreSQL as the database.",
    "date": "2021-06-17T00:59:00Z",
    "vote": 0
  },
  {
    "id": "fe720c7f3915a607f36ff32200b371c0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Quick Sort in Golang",
    "url": "https://blog.boot.dev/golang/quick-sort-golang/",
    "resume": "Quicksort is an efficient sorting algorithm commonly used in production sorting implementations. Like Merge Sort, Quicksort is a divide-and-conquer algorithm.",
    "date": "2021-06-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f14ca997a2d6577887b82a2f9c7c8971",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Write Insertion Sort in Go",
    "url": "https://blog.boot.dev/golang/insertion-sort-golang/",
    "resume": "Insertion sort builds a final sorted list one item at a time. It\u0026rsquo;s much less efficient on large lists than more advanced algorithms like quicksort or merge sort.",
    "date": "2021-06-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "888297736bf6168ae1bad6449bda21fe",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Using Go in unusual ways",
    "url": "https://changelog.com/gotime/183",
    "resume": "This episode was recorded live from GopherCon Europe 2021! Natalie \u0026 Mat host three amazing devs who gave talks that showcase using Go in unusual ways: Dr. Joakim Kennedy is tracking Go in malware, Mathilde Raynal is building quantum-resistant cryptography algorithms, and Preslav Rachev is creating digital art. We hear from our speakers how they got into Go, how they made the choice to use Go for their unusual use case, and how it compares to other languages for their specific needs. We also chat about conference talks, submissions and public speaking - how to start, good practices, and tips they collected along the way.",
    "date": "2021-06-10T15:45:00Z",
    "vote": 0
  },
  {
    "id": "e86331b600180ef5570dcc3980f6e43b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Merge Sort in Golang with Examples",
    "url": "https://blog.boot.dev/golang/merge-sort-golang/",
    "resume": "Merge sort is a recursive sorting algorithm and, luckily for us, it\u0026rsquo;s quite a bit faster than bubble sort.",
    "date": "2021-06-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7c3ee12e198a43673efb7f5da59cf169",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Writing Bubble Sort in Go from Scratch",
    "url": "https://blog.boot.dev/golang/bubble-sort-golang/",
    "resume": "Bubble sort is named for the way elements \u0026ldquo;bubble up\u0026rdquo; to the top of the list.",
    "date": "2021-06-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d52630a435e7993163555bb572d033e5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Check for Standards Before Creating a New One",
    "url": "https://blog.boot.dev/clean-code/use-existing-standards/",
    "resume": "I recently had a ticket opened on my team\u0026rsquo;s backlog board requesting the ability to bypass our API\u0026rsquo;s caching system.",
    "date": "2021-06-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "17ec5726020dc19f6219573d601c17d4",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go Battlesnake Go!",
    "url": "https://changelog.com/gotime/182",
    "resume": "In the past decade a variety of games have emerged where players need to create an AI to play the game rather than play the game directly. In this episode we speak with the creator of one of those games - Battlesnake. Brad Van Vugt joins us to talk about building a game engine using Go, making programming games easier for beginners to get started with, the long term vision for games like Battlesnake, and more.",
    "date": "2021-06-03T16:20:00Z",
    "vote": 0
  },
  {
    "id": "93e2cf4083437c613576753c33a6b377",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "How to become the richest person on earth (and learn some Go along the way)",
    "url": "https://appliedgo.net/rich/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eOk, to be frank, this article is mostly about the second part of the title. We will build a market simulation with minimal Go code, and show how the rich get richer even when they are not greedy at all.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2021-06-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dbc1be6cd241e26202b203fb3c37bd45",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Properly Use Defer in Golang",
    "url": "https://blog.boot.dev/golang/defer-golang/",
    "resume": "What is the \u0026ldquo;defer\u0026rdquo; keyword in Go? 🔗In the Go programming language, defer is a keyword that allows developers to delay the execution of a function until the current function returns.",
    "date": "2021-06-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "18853e8c38d3b8c7f727dfc834350684",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "✒️ Write to a CSV file in Go",
    "url": "https://gosamples.dev/write-csv/",
    "resume": "\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Comma-separated_values\" target=\"_blank\"\u003eCSV\u003c/a\u003e is a popular data format used by Excel, Google Sheets and other spreadsheet apps to save and load tabular data. In this format, rows are separated by a newline character and each cell in a row is separated by a comma (or a tab in TSV format). Go has great built-in support for writing and reading CSV files. Check out how easy it is to write a simple CSV file.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSee also our example of \u003ca href=\"https://gosamples.dev/read-csv\"\u003ehow to read a CSV file in Go\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;encoding/csv\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[][]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;vegetables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fruits\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;carrot\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;banana\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;potato\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create a file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;result.csv\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// initialize csv writer\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecsv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFlush\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write all rows at once\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write single row\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eextraData\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lettuce\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eextraData\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the first step, you need to create a file where the CSV data can be saved. You can do this with the \u003ca href=\"https://golang.org/pkg/os/#Create\" target=\"_blank\"\u003e\u003ccode\u003eCreate\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://golang.org/pkg/os/\" target=\"_blank\"\u003e\u003ccode\u003eos\u003c/code\u003e\u003c/a\u003e package. Be sure to call \u003ca href=\"https://golang.org/pkg/os/#File.Close\" target=\"_blank\"\u003e\u003ccode\u003efile.Close()\u003c/code\u003e\u003c/a\u003e to close the file after the data has been written.\u003c/p\u003e\n\u003cp\u003eThen, we initialize \u003ca href=\"https://golang.org/pkg/encoding/csv/#NewWriter\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Writer\u003c/code\u003e\u003c/a\u003e from the \u003ca href=\"https://golang.org/pkg/encoding/csv/\" target=\"_blank\"\u003e\u003ccode\u003eencoding/csv\u003c/code\u003e\u003c/a\u003e package, that allows us to write data in CSV format. It\u0026rsquo;s a buffered writer, so we should call \u003ca href=\"https://golang.org/pkg/encoding/csv/#Writer.Flush\" target=\"_blank\"\u003e\u003ccode\u003ewriter.Flush()\u003c/code\u003e\u003c/a\u003e at the end of the write to make sure all data is saved to the file.\u003c/p\u003e\n\u003cp\u003eThe CSV writer has two methods for saving data rows. We can use \u003ca href=\"https://golang.org/pkg/encoding/csv/#Writer.WriteAll\" target=\"_blank\"\u003e\u003ccode\u003ewriter.WriteAll()\u003c/code\u003e\u003c/a\u003e method when we know all the data at the time of writing, or \u003ca href=\"https://golang.org/pkg/encoding/csv/#Writer.WriteAll\" target=\"_blank\"\u003e\u003ccode\u003ewriter.Write()\u003c/code\u003e\u003c/a\u003e to write the data line by line.\u003c/p\u003e\n\u003ch2 id=\"write-to-a-tsv-file\"\u003eWrite to a TSV file\u003c/h2\u003e\n\u003cp\u003eThe standard separator of \u003ca href=\"https://golang.org/pkg/encoding/csv/#Writer\" target=\"_blank\"\u003e\u003ccode\u003ecsv.Writer\u003c/code\u003e\u003c/a\u003e is a comma, but you can easily change this by replacing the comma rune with another character:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ewriter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eComma\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"sc\"\u003e\u0026#39;\\t\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this way, our writer uses \u003ca href=\"https://en.wikipedia.org/wiki/Tab-separated_values\" target=\"_blank\"\u003eTSV\u003c/a\u003e (tab-separated values) encoding that is also a commonly used tabular data format.\u003c/p\u003e",
    "date": "2021-06-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "04dc09f288b65ef8c9a01bcbc01f0afb",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building for Ethereum in Go",
    "url": "https://changelog.com/gotime/181",
    "resume": "In this episode, we will talk about building for Blockchain in Go. We are joined by two of the co-founders of Prysmatic Labs (a company behind the upgrades to the Ethereum network). Raul Jordan and Preston Van Loon tell Angelica how they started the company, as well as what it’s like to build technical infrastructure for the Ethereum blockchain using Go.",
    "date": "2021-05-27T15:30:00Z",
    "vote": 0
  },
  {
    "id": "9cc205a74c4c44fd1000c94850b7097b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "7 Critical Reasons Beginner Programmers Should Learn JavaScript in 2022",
    "url": "https://blog.boot.dev/javascript/why-learn-javascript/",
    "resume": "\u0026ldquo;Why learn JavaScript?\u0026rdquo; I asked my sister when she was in college and starting to pick up the fundamentals of JavaScript.",
    "date": "2021-05-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5e5061939cf4783c5cad67f696042b87",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🙌 Case-insensitive string comparison in Go",
    "url": "https://gosamples.dev/case-insensitive-string-comparison/",
    "resume": "\u003cp\u003eIs there a case-insensitive string comparison function in Go? Of course! Although the name does not seem to indicate it, \u003ca href=\"https://golang.org/pkg/strings/#EqualFold\" target=\"_blank\"\u003e\u003ccode\u003estrings.EqualFold\u003c/code\u003e\u003c/a\u003e deals with it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efoo1\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;foo\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efoo2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;FOO\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEqualFold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efoo1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efoo2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou may ask now why we can\u0026rsquo;t convert both strings to upper or lowercase and, in this way, compare if they are case-insensitive equal. Of course, it works, but not for any case and any language. For example, in Greek, there are 3 forms of sigma letter:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eg1\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;ς\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// a final lowercase sigma\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eg2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Σ\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// a capital sigma\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nx\"\u003eg3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;σ\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// a non-final sigma\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToLower\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eg1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToLower\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eg2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToLower\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eg3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEqualFold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eg1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eg2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEqualFold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eg1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eg3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEqualFold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eg2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eg3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eς\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eσ\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eσ\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etrue\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etrue\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etrue\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eConverting them to lowercase doesn\u0026rsquo;t give the same form, but a comparison using \u003ca href=\"https://golang.org/pkg/strings/#EqualFold\" target=\"_blank\"\u003e\u003ccode\u003estrings.EqualFold\u003c/code\u003e\u003c/a\u003e informs that they are equal. This is because \u003ca href=\"https://golang.org/pkg/strings/#EqualFold\" target=\"_blank\"\u003e\u003ccode\u003estrings.EqualFold\u003c/code\u003e\u003c/a\u003e uses \u003ca href=\"https://en.wikipedia.org/wiki/Letter_case#Unicode_case_folding_and_script_identification\" target=\"_blank\"\u003ecase folding\u003c/a\u003e (now it\u0026rsquo;s clear why the function is named \u003ccode\u003eEqualFold\u003c/code\u003e) method which respects the case rules of different languages, so it always should be preffered method of case-insensitive comparison.\u003c/p\u003e",
    "date": "2021-05-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ddea4a2dd0f14b253a1ec9ce7d3c30cb",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Are frameworks getting an Encore?",
    "url": "https://changelog.com/gotime/180",
    "resume": "Tools and frameworks that aim to boost developer productivity are always worth a closer look, but we don’t often consider the trade-offs for whichever we settle on. In this episode, we discuss the questions one should be asking when evaluating developer productivity tools and frameworks in the Go ecosystem in particular. Joining us to discuss is André Eriksson, the creator of Encore, a backend framework that aims to make development and deployment as productive as it can be.",
    "date": "2021-05-20T16:40:00Z",
    "vote": 0
  },
  {
    "id": "163cf4f39e7007f180a84cb199e4927b",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Profiling A Go App With pprof",
    "url": "https://www.jajaldoang.com/post/profiling-go-app-with-pprof/",
    "resume": "\u003cp\u003eProfiling an application is helpful to identify resource consumption at runtime. We can see which function consumes the most CPU or memory. We can see if our application is already efficient or not and then find a chance of improvement. In Go, there is pprof, a built-in library for profiling that we can easily use and integrate.\u003c/p\u003e",
    "date": "2021-05-19T03:20:26+07:00",
    "vote": 0
  },
  {
    "id": "c9af9ccf3dee41e0f51315817ad77262",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Comprehensive Guide to Dates and Times in Go",
    "url": "https://blog.boot.dev/golang/golang-date-time/",
    "resume": "Keeping track of time in code has long been every developer\u0026rsquo;s nightmare. While no language or package manages time perfectly, I think Golang does a pretty good job out-of-the-box.",
    "date": "2021-05-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b47cf07ec85554832920c7ba8b53031b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Event-driven systems",
    "url": "https://changelog.com/gotime/179",
    "resume": "In this episode we talk with Daniel and Steve about their experience with event-driven systems and shed some light on what they are and who they might be for. We explore topics like the complexity of setting up an event-driven system, the need to embrace eventual consistency, useful tools for building event-driven systems, and more.",
    "date": "2021-05-13T16:00:00Z",
    "vote": 0
  },
  {
    "id": "cb71525ee6fbbfd61b5409ceda1a6ecd",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🏁 Check if a string starts with a substring in Go",
    "url": "https://gosamples.dev/starts-with/",
    "resume": "\u003cp\u003eIt\u0026rsquo;s really simple to check if a given string starts with another substring in Go. In many programming languages, there is a \u003ccode\u003estartsWith()\u003c/code\u003e function to do this. In Go, we have \u003ca href=\"https://golang.org/pkg/strings/#HasPrefix\" target=\"_blank\"\u003e\u003ccode\u003eHasPrefix()\u003c/code\u003e\u003c/a\u003e from the \u003ca href=\"https://golang.org/pkg/strings/\" target=\"_blank\"\u003e\u003ccode\u003estrings\u003c/code\u003e\u003c/a\u003e package. It returns true when a substring is the prefix of a string or false otherwise.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GO is at the beginning of GOSAMPLES: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHasPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GO\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;SAMPLES is at the beginning of GOSAMPLES: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHasPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;SAMPLES\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGO is at the beginning of GOSAMPLES: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSAMPLES is at the beginning of GOSAMPLES: false\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-05-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "14daee62e5ed2033bd1b3ce4ae7fe2bb",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 10x Meeting - Solving for Too Many Meetings",
    "url": "https://blog.boot.dev/misc/too-many-meetings/",
    "resume": "Perhaps you\u0026rsquo;ve heard of the fabled 10x developer (or 10x engineer) - the one on the team that\u0026rsquo;s 10x as productive as their average colleague.",
    "date": "2021-05-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8ce663f4ae799047042ff52688df0e6e",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Packaging a project release (goreleaser part 2)",
    "url": "https://appliedgo.net/release2/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eIn the previous post, I used goreleaser to add binaries to a project release. Now let\u0026rsquo;s have goreleaser build a Homebrew formula as well. Automatically, and for macOS and Linux alike.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2021-05-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0edcb8b0ca79296a1d043f663223b6cc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "What makes wonderful workshops?",
    "url": "https://changelog.com/gotime/178",
    "resume": "Perspectives from both the workshop leaders perspective, as well as the workshop participants. What are some top tips, things to watch out for, and ways to innovate and keep your participants engaged, especially in the remote world we are now living in.",
    "date": "2021-05-06T15:25:00Z",
    "vote": 0
  },
  {
    "id": "7b29bcf407b53a87808dfa116bee56a4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Concatenating with strings.Builder Quickly in Golang",
    "url": "https://blog.boot.dev/golang/strings-builder-concatenation-golang/",
    "resume": "The Go standard library makes concatenating strings easy. Concatenation is just a fancy word for adding strings together to make a larger string.",
    "date": "2021-05-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3f2bbde41512b5d7a15d48feb7089ddb",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building startups with Go",
    "url": "https://changelog.com/gotime/177",
    "resume": "Startups are all about iterating quickly, building MVPs, and finding that elusive product market fit, so how does Go fit into that picture? Is Go a good choice for startups, or is it exclusively for the larger corporations? In this episode Jon is joined by four startup founders to learn about their experience building a startup with Go.",
    "date": "2021-04-29T15:45:00Z",
    "vote": 0
  },
  {
    "id": "6e2b6e415d8fe39082cdd9c93be54e63",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Golang vs Python: Which Language is Best For You?",
    "url": "https://blog.boot.dev/golang/golang-vs-python/",
    "resume": "These two coding languages duke it out - but who’s the winner? 🔗In a world where the ability to write any code at all is a tremendous advantage, often the biggest problem coders face is knowing which language to start learning, rather than whether to learn one at all.",
    "date": "2021-04-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8da86669f6654f6a2f28dacdf8162a11",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "✍️ Write to a file in Go",
    "url": "https://gosamples.dev/write-file/",
    "resume": "\u003cp\u003eGo has excellent built-in support for file operations. Using the \u003ca href=\"https://golang.org/pkg/os/\" target=\"_blank\"\u003e\u003ccode\u003eos\u003c/code\u003e\u003c/a\u003e package, you can easily open, read from, write to and close the file. In this example, we focus on writing data to a file. We show you how you can write text and binary data in different ways - entire data at once, line by line, as an array of bytes in a specific place, or in a buffered manner.\u003c/p\u003e\n\u003ch2 id=\"write-the-entire-content-to-a-file-at-once\"\u003eWrite the entire content to a file at once\u003c/h2\u003e\n\u003cp\u003eThe shortest way of writing data to a file is to use the \u003ca href=\"https://golang.org/pkg/os/#WriteFile\" target=\"_blank\"\u003e\u003ccode\u003eos.WriteFile()\u003c/code\u003e\u003c/a\u003e function. It takes three input parameters:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ePath to the file that we want to write to\u003c/li\u003e\n\u003cli\u003eByte data which we want to write to the file\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/File-system_permissions\" target=\"_blank\"\u003ePermission bits\u003c/a\u003e of the file that will be created\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eCreating and closing the file is done by the function itself, so it\u0026rsquo;s no need to create or close the file before and after writing.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you are using the Go version earlier than 1.16, you will find the \u003ca href=\"https://golang.org/pkg/io/ioutil/#WriteFile\" target=\"_blank\"\u003e\u003ccode\u003eWriteFile()\u003c/code\u003e\u003c/a\u003e function in the \u003ca href=\"https://golang.org/pkg/io/ioutil\" target=\"_blank\"\u003e\u003ccode\u003eioutil\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"nb\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello GOSAMPLES!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mo\"\u003e0666\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"write-text-data-to-a-file-line-by-line\"\u003eWrite text data to a file line by line\u003c/h2\u003e\n\u003cp\u003eIf you have your file\u0026rsquo;s lines in separate variables, an array, or want to do some processing before writing a single line, you can write the data line by line using the \u003ca href=\"https://golang.org/pkg/os/#File.WriteString\" target=\"_blank\"\u003e\u003ccode\u003efunc (*File) WriteString()\u003c/code\u003e\u003c/a\u003e method. All you need to do is create a file, write your strings to it, and finally close the file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;Go\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;is\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;best\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;programming\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;language\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;in\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"write-byte-data-to-a-file\"\u003eWrite byte data to a file\u003c/h2\u003e\n\u003cp\u003eAs with writing strings line by line, we can also write byte data using the \u003ca href=\"https://golang.org/pkg/os/#File.Write\" target=\"_blank\"\u003e\u003ccode\u003efunc (*File) Write()\u003c/code\u003e\u003c/a\u003e method or \u003ca href=\"https://golang.org/pkg/os/#File.WriteAt\" target=\"_blank\"\u003e\u003ccode\u003efunc (*File) WriteAt()\u003c/code\u003e\u003c/a\u003e if you want to write data at a given offset.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mh\"\u003e0x47\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// G\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x4f\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// O\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// \u0026lt;space\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// \u0026lt;space\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// \u0026lt;space\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// P\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x4c\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// L\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x45\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// E\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x53\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// S\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eadditionalBytes\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"mh\"\u003e0x53\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// S\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x41\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// A\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x4d\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// M\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write bytes to the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebytes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// write additional bytes to the file, start at index 2\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteAt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eadditionalBytes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"write-formatted-strings-to-a-file\"\u003eWrite formatted strings to a file\u003c/h2\u003e\n\u003cp\u003eIn addition to the \u003ca href=\"https://golang.org/pkg/os/#File\" target=\"_blank\"\u003e\u003ccode\u003eFile\u003c/code\u003e\u003c/a\u003e methods, we can use \u003ca href=\"https://golang.org/pkg/fmt/#Fprintln\" target=\"_blank\"\u003e\u003ccode\u003efmt.Fprintln()\u003c/code\u003e\u003c/a\u003e function to write data to a file. This function formats its operands, adds spaces between them, a new line at the end, and writes the output to the writer (first argument). It\u0026rsquo;s great for simple line formatting or writing the string representation of a \u003ccode\u003estruct\u003c/code\u003e to a file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;Go\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;is\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;best\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;programming\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;language\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;in\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"write-to-a-file-using-a-buffered-writer\"\u003eWrite to a file using a buffered writer\u003c/h2\u003e\n\u003cp\u003eIf you frequently write a small amount of data to a file, it can hurt the performance of your program. Each write is a costly system call, and if you don\u0026rsquo;t need immediate file updates, it is a better idea to group these small writes into one. To do this, we can use \u003ca href=\"https://golang.org/pkg/bufio/#Writer\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Writer\u003c/code\u003e\u003c/a\u003e structure. Its writing functions do not save data directly to the file but keep it until the buffer underneath is full (default size is 4096 bytes) or the \u003ca href=\"https://golang.org/pkg/bufio/#Writer.Flush\" target=\"_blank\"\u003e\u003ccode\u003eFlush()\u003c/code\u003e\u003c/a\u003e method is called. So make sure to call \u003ca href=\"https://golang.org/pkg/bufio/#Writer.Flush\" target=\"_blank\"\u003e\u003ccode\u003eFlush()\u003c/code\u003e\u003c/a\u003e after the completed write to save the remaining data to the file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;Go\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;is\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;best\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;programming\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;language\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;in\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;the\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// create new buffer\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewWriter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWriteString\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// flush buffered data to the file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFlush\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3f5b63e894693f5d540b5e5945d0bf07",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Ultimate Guide to JSON in Go",
    "url": "https://blog.boot.dev/golang/json-golang/",
    "resume": "As a language designed for the web, Go provides extensive support for working with JSON data.",
    "date": "2021-04-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "416fa1dce022ab6e4a34cc1ee0dcc9bb",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📖 Read a file in Go",
    "url": "https://gosamples.dev/read-file/",
    "resume": "\u003cp\u003eReading files is one of the most common tasks in everyday programmer\u0026rsquo;s work. You can do it in different ways depending on your needs. In this tutorial, we show you how to \u003ca href=\"https://gosamples.dev/read-file/#read-an-entire-file\"\u003eread the entire file at once\u003c/a\u003e, \u003ca href=\"https://gosamples.dev/read-file/#read-a-file-line-by-line\"\u003eline by line\u003c/a\u003e, \u003ca href=\"https://gosamples.dev/read-file/#read-a-file-word-by-word\"\u003eword by word\u003c/a\u003e, and \u003ca href=\"https://gosamples.dev/read-file/#read-a-file-in-chunks\"\u003ein chunks\u003c/a\u003e. All of these methods are very simple in Go 🙂.\u003c/p\u003e\n\u003ch2 id=\"read-an-entire-file\"\u003eRead an entire file\u003c/h2\u003e\n\u003cp\u003eThe simplest way of reading a text or binary file in Go is to use the \u003ca href=\"https://golang.org/pkg/os/#ReadFile\" target=\"_blank\"\u003e\u003ccode\u003eReadFile()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://golang.org/pkg/os/\" target=\"_blank\"\u003e\u003ccode\u003eos\u003c/code\u003e\u003c/a\u003e package. This function reads the entire content of the file into a byte slice, so you should be careful when trying to read a large file - in this case, you should read the file line by line or in chunks. For small files, this function is more than sufficient.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you are using the Go version earlier than 1.16, you will find the \u003ca href=\"https://golang.org/pkg/io/ioutil/#ReadFile\" target=\"_blank\"\u003e\u003ccode\u003eReadFile()\u003c/code\u003e\u003c/a\u003e function in the \u003ca href=\"https://golang.org/pkg/io/ioutil\" target=\"_blank\"\u003e\u003ccode\u003eioutil\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eThis is txt file read by Go!\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"read-a-file-line-by-line\"\u003eRead a file line by line\u003c/h2\u003e\n\u003cp\u003eTo read a file line by line, we can use a convenient \u003ca href=\"https://golang.org/pkg/bufio/#Scanner\" target=\"_blank\"\u003e\u003ccode\u003ebufio.Scanner\u003c/code\u003e\u003c/a\u003e structure. Its constructor, \u003ca href=\"https://golang.org/pkg/bufio/#NewScanner\" target=\"_blank\"\u003e\u003ccode\u003eNewScanner()\u003c/code\u003e\u003c/a\u003e, takes an opened file (remember to close the file after the operation is done, for example, by using \u003ccode\u003edefer\u003c/code\u003e statement) and lets you read subsequent lines through \u003ca href=\"https://golang.org/pkg/bufio/#Scanner.Scan\" target=\"_blank\"\u003e\u003ccode\u003eScan()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://golang.org/pkg/bufio/#Scanner.Text\" target=\"_blank\"\u003e\u003ccode\u003eText()\u003c/code\u003e\u003c/a\u003e methods. Using \u003ca href=\"https://golang.org/pkg/bufio/#Scanner.Err\" target=\"_blank\"\u003e\u003ccode\u003eErr()\u003c/code\u003e\u003c/a\u003e method, you can check errors encountered during file reading.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// open file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// read the file line by line using scanner\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// do something with a line\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;line: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErr\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eline: Hello World!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eline: This is txt file read by Go!\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"read-a-file-word-by-word\"\u003eRead a file word by word\u003c/h2\u003e\n\u003cp\u003eReading a file word by word is almost the same as reading \u003ca href=\"https://gosamples.dev/read-file/#read-a-file-line-by-line\"\u003eline by line\u003c/a\u003e. You only need to change the split function of the \u003ca href=\"https://golang.org/pkg/bufio/#Scanner\" target=\"_blank\"\u003e\u003ccode\u003eScanner\u003c/code\u003e\u003c/a\u003e from the default \u003ca href=\"https://golang.org/pkg/bufio/#ScanLines\" target=\"_blank\"\u003e\u003ccode\u003eScanLines()\u003c/code\u003e\u003c/a\u003e to \u003ca href=\"https://golang.org/pkg/bufio/#ScanWords\" target=\"_blank\"\u003e\u003ccode\u003eScanWords()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;bufio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// open file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// read the file word by word using scanner\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNewScanner\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebufio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eScanWords\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eScan\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// do something with a word\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003escanner\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eErr\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eWorld!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eThis\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eis\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etxt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eread\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eby\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eGo!\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"read-a-file-in-chunks\"\u003eRead a file in chunks\u003c/h2\u003e\n\u003cp\u003eWhen you have a very large file or don\u0026rsquo;t want to store the entire file in memory, you can read the file in fixed-size chunks. In this case, you need to create a byte slice of the specified size (\u003ccode\u003echunkSize\u003c/code\u003e in the example) as a buffer for storing the subsequent read bytes. Using \u003ca href=\"https://golang.org/pkg/os/#File.Read\" target=\"_blank\"\u003e\u003ccode\u003eRead()\u003c/code\u003e\u003c/a\u003e method of the \u003ca href=\"https://golang.org/pkg/os/#File\" target=\"_blank\"\u003e\u003ccode\u003eFile\u003c/code\u003e\u003c/a\u003e type, we can load the next chunk of the file data. The reading loop finishes when an \u003ca href=\"https://golang.org/pkg/io/#pkg-variables\" target=\"_blank\"\u003e\u003ccode\u003eio.EOF\u003c/code\u003e\u003c/a\u003e error occurs, indicating the end of the file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;io\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003echunkSize\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// open file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOpen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;file.txt\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// remember to close the file at the end of the program\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003edefer\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([]\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003echunkSize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eRead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eEOF\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eEOF\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"nx\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e]))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello Worl\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ed!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eThis is\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e txt file\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eread by Go\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e!\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4d2fcd8a96981dac8b8430a333da91c8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Migrating From Vue-CLI \u0026 Webpack to Vitejs",
    "url": "https://blog.boot.dev/javascript/migrating-vue-webpack-to-vitejs/",
    "resume": "Boot.dev\u0026rsquo;s web app that hosts all of my coding courses is a single-page application written in Vue 2, with plans to migrate to Vue 3 soon™©®.",
    "date": "2021-04-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "20c42d2767cb4123c17c952004ceb65c",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "CLI tools FTW (or: how to distribute your CLI tools with goreleaser)",
    "url": "https://appliedgo.net/release/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;go get\u0026rdquo; is a super-simple way of installing Go binaries, but not everyone has a Go compiler installed. If you want to make your CLI tools and apps available to the world, have a look at goreleaser.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2021-04-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ec00afa72e2195048b64b5955feff09d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "TCP \u0026 UDP",
    "url": "https://changelog.com/gotime/176",
    "resume": "The internet wouldn’t exist as we know it if it weren’t for TCP and UDP, yet many developers don’t quite understand the technology powering the web. In this episode we talk with Adam Woodbeck, author of Network Programming with Go, to learn about TCP and UDP; what they are, how they work, and how one can experiment with tools like Wireshark and Go to learn more.",
    "date": "2021-04-22T16:15:00Z",
    "vote": 0
  },
  {
    "id": "f39ff6defe6a52139beb94ec009be495",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔢 Generate a random number in Go",
    "url": "https://gosamples.dev/random-numbers/",
    "resume": "\u003cp\u003eTo generate a random number in Go (actually, it\u0026rsquo;s \u003ca href=\"https://en.wikipedia.org/wiki/Pseudorandom_number_generator\" target=\"_blank\"\u003epseudo-random\u003c/a\u003e, but in this article, we will refer to it as random), you just need to use the \u003ca href=\"https://golang.org/pkg/math/rand/\" target=\"_blank\"\u003e\u003ccode\u003emath/rand\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003ch2 id=\"examples\"\u003eExamples\u003c/h2\u003e\n\u003ch3 id=\"generate-random-integer-number-also-in-a-given-range\"\u003eGenerate random integer number (also in a given range)\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math/rand\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003erandInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emax\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIntn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSeed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixNano\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;random integer: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;random integer in range [5, 10): %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003erandInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch3 id=\"generate-random-float64-number-also-in-a-given-range\"\u003eGenerate random float64 number (also in a given range)\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;math/rand\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003erandFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emax\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSeed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixNano\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;random float64: %f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;random float64 in range [2.4, 3.2): %f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003erandFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e2.4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eSeed\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSeed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eNow\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnixNano\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn the first line of the \u003ccode\u003emain\u003c/code\u003e function, we set \u003ca href=\"https://en.wikipedia.org/wiki/Random_seed\" target=\"_blank\"\u003eseed\u003c/a\u003e to initialize a pseudorandom number generator. The default \u003ca href=\"https://golang.org/pkg/math/rand/\" target=\"_blank\"\u003e\u003ccode\u003emath/rand\u003c/code\u003e\u003c/a\u003e number generator is deterministic, so it will give the same output sequence for the same seed value. You can check this by removing the first line of the main function and running the program a couple of times - we always get the same \u0026ldquo;random\u0026rdquo; numbers. It is because the algorithm produces new values by performing some operations on the previous value, and when the initial value (the seed value) stays the same, we get the same output numbers. To avoid this, we use current time - \u003ccode\u003etime.Now().UnixNano()\u003c/code\u003e as the seed.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eRandom number generating function\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;random integer: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;random float64: %f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eAfter the seed initialization, we can generate a random number using one of the \u003ca href=\"https://golang.org/pkg/math/rand/\" target=\"_blank\"\u003e\u003ccode\u003emath/rand\u003c/code\u003e\u003c/a\u003e package functions, for example:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/math/rand/#Int\" target=\"_blank\"\u003e\u003ccode\u003efunc Int() int\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/math/rand/#Intn\" target=\"_blank\"\u003e\u003ccode\u003efunc Intn(n int) int\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/math/rand/#Int63\" target=\"_blank\"\u003e\u003ccode\u003efunc Int63() int64\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/math/rand/#Int63n\" target=\"_blank\"\u003e\u003ccode\u003efunc Int63n(n int64) int64\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/math/rand/#Uint64\" target=\"_blank\"\u003e\u003ccode\u003efunc Uint64() uint64\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/math/rand/#Float64\" target=\"_blank\"\u003e\u003ccode\u003efunc Float64() float64\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee \u003ca href=\"https://golang.org/pkg/math/rand/\" target=\"_blank\"\u003e\u003ccode\u003emath/rand\u003c/code\u003e\u003c/a\u003e package documentation for more information.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eRandom number in a range\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003erandInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emax\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIntn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003erandFloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003emax\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThere is no function in the \u003ca href=\"https://golang.org/pkg/math/rand/\" target=\"_blank\"\u003e\u003ccode\u003emath/rand\u003c/code\u003e\u003c/a\u003e package that generates random numbers in the \u003ccode\u003e[min, max)\u003c/code\u003e range, so we have to shift the results from the function \u003ca href=\"https://golang.org/pkg/math/rand/#Intn\" target=\"_blank\"\u003e\u003ccode\u003erand.Intn()\u003c/code\u003e\u003c/a\u003e or \u003ca href=\"https://golang.org/pkg/math/rand/#Float64\" target=\"_blank\"\u003e\u003ccode\u003erand.Float64()\u003c/code\u003e\u003c/a\u003e to achieve a similar result. The \u003ca href=\"https://golang.org/pkg/math/rand/#Intn\" target=\"_blank\"\u003e\u003ccode\u003erand.Intn()\u003c/code\u003e\u003c/a\u003e can generate a value in the range \u003ccode\u003e[0, n)\u003c/code\u003e, so to get a value in the range \u003ccode\u003e[min, max)\u003c/code\u003e we need to generate a value in the range \u003ccode\u003e[0, max-min)\u003c/code\u003e and add \u003ccode\u003emin\u003c/code\u003e to the result.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://golang.org/pkg/math/rand/#Float64\" target=\"_blank\"\u003e\u003ccode\u003erand.Float64()\u003c/code\u003e\u003c/a\u003e produces number in \u003ccode\u003e[0.0, 1.0)\u003c/code\u003e. To get number in \u003ccode\u003e[min, max)\u003c/code\u003e range multiply the result by \u003ccode\u003emax-min\u003c/code\u003e and add \u003ccode\u003emin\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e",
    "date": "2021-04-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fc89e4551886bd10f073d6b184ffe1f5",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🍃 Environment variables in Go",
    "url": "https://gosamples.dev/environment-variables/",
    "resume": "\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Environment_variable\" target=\"_blank\"\u003eEnvironment variables\u003c/a\u003e are often used as a way to store the app configuration values. Instead of keeping sensitive data like passwords in a code repository, we can just set them as environment variables that the program then reads while running. In Golang\u0026rsquo;s \u003ca href=\"https://golang.org/pkg/os/\" target=\"_blank\"\u003e\u003ccode\u003eos\u003c/code\u003e\u003c/a\u003e package, there are some functions that make it easy to set or unset environment variables, get or list environment variables, and clear environment variables.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/os/#Getenv\" target=\"_blank\"\u003e\u003ccode\u003efunc Getenv(key string) string\u003c/code\u003e\u003c/a\u003e gets value of the \u003ccode\u003ekey\u003c/code\u003e environment variable. If the variable is not set it returns empty string.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/os/#LookupEnv\" target=\"_blank\"\u003e\u003ccode\u003efunc LookupEnv(key string) (string, bool)\u003c/code\u003e\u003c/a\u003e returns the value of the \u003ccode\u003ekey\u003c/code\u003e environment variable and a boolean flag that is true if the variable is set. With \u003ccode\u003eLookupEnv()\u003c/code\u003e, you can test if an environment variable exists.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/os/#Setenv\" target=\"_blank\"\u003e\u003ccode\u003efunc Setenv(key, value string) error\u003c/code\u003e\u003c/a\u003e sets the \u003ccode\u003evalue\u003c/code\u003e of the \u003ccode\u003ekey\u003c/code\u003e environment variable. It returns an error if it\u0026rsquo;s not possible.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/os/#Unsetenv\" target=\"_blank\"\u003e\u003ccode\u003efunc Unsetenv(key string) error\u003c/code\u003e\u003c/a\u003e unsets the \u003ccode\u003ekey\u003c/code\u003e environment variable and returns an error if it\u0026rsquo;s not possible.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/os/#Environ\" target=\"_blank\"\u003e\u003ccode\u003efunc Environ() []string\u003c/code\u003e\u003c/a\u003e returns all environment variables as \u003ccode\u003ekey=value\u003c/code\u003e strings.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/os/#Clearenv\" target=\"_blank\"\u003e\u003ccode\u003efunc Clearenv()\u003c/code\u003e\u003c/a\u003e deletes all environment variables.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLook at the example to compare how these functions work:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;GOSAMPLES_USER\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// set environment variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSetenv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;admin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// get environment variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;os.Getenv(): %s=%s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGetenv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// iterate over all environment variables and check if our variable is set\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eenvStr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEnviron\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eHasPrefix\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eenvStr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;os.Environ(): %s environment variable is set: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eenvStr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// lookup environment variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eisSet\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLookupEnv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;os.LookupEnv(): %s variable is set: %t, value: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eisSet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// unset environment variable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnsetenv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// lookup environment variable again - now it should not be set\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eisSet\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLookupEnv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;os.Unsetenv(); %s variable is set: %t, value: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003euserKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eisSet\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// clear environment variables\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eClearenv\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;os.Clearenv(): number of environment variables: %d\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEnviron\u003c/span\u003e\u003cspan class=\"p\"\u003e()))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eos.Getenv\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"nv\"\u003eGOSAMPLES_USER\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eadmin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eos.Environ\u003cspan class=\"o\"\u003e()\u003c/span\u003e: GOSAMPLES_USER environment variable is set: \u003cspan class=\"nv\"\u003eGOSAMPLES_USER\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eadmin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eos.LookupEnv\u003cspan class=\"o\"\u003e()\u003c/span\u003e: GOSAMPLES_USER variable is set: true, value: admin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eos.Unsetenv\u003cspan class=\"o\"\u003e()\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e GOSAMPLES_USER variable is set: false, value:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eos.Clearenv\u003cspan class=\"o\"\u003e()\u003c/span\u003e: number of environment variables: \u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "014017a4fd09e57aa6c1a466cbb59243",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Replace a String in Go - Top 5 Examples",
    "url": "https://blog.boot.dev/golang/replace-strings-golang/",
    "resume": "Go has a powerful standard library that makes string manipulation easy right out of the box.",
    "date": "2021-04-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "60d38d975e56c4d7c7bb0539697680e5",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "💤 While loop in Golang",
    "url": "https://gosamples.dev/while-loop/",
    "resume": "\u003cp\u003eAs with the \u003ca href=\"https://gosamples.dev/foreach\"\u003eforeach\u003c/a\u003e, there is no \u003ccode\u003ewhile\u003c/code\u003e keyword in Golang. However, we can make a \u003ccode\u003ewhile\u003c/code\u003e loop with the \u003ccode\u003efor\u003c/code\u003e statement. Classic \u003ccode\u003efor\u003c/code\u003e has the form of:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003einitialization\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"nx\"\u003econdition\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ewhere:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003einitialization\u003c/code\u003e is executed before the first iteration\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econdition\u003c/code\u003e is boolean expression evaluated before every iteration\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epost-condition\u003c/code\u003e is executed after every iteration\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhen we omit the initialization and post-condition statements, we get the conditional \u003ccode\u003efor\u003c/code\u003e loop that has the same effect as \u003ccode\u003ewhile\u003c/code\u003e loop available in other programming languages:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003econdition\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003egte1000\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003egte1000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egte1000\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSince Go\u0026rsquo;s \u003ccode\u003efor\u003c/code\u003e statement is very flexible, we can initialize the condition variable inside the loop and ignore the post-condition statement (notice \u003ccode\u003e;\u003c/code\u003e at the end of the \u003ccode\u003efor\u003c/code\u003e declaration - we use classic \u003ccode\u003efor\u003c/code\u003e here):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003egte1000\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003egte1000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003egte1000\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eOutput:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e100\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"m\"\u003e1000\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e",
    "date": "2021-04-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a8b015b444f2cd57e731ba7248b538ce",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How and Why to Write Enums in Go",
    "url": "https://blog.boot.dev/golang/golang-enum/",
    "resume": "An enum (short for enumerator), is a set of named constant values. An enum is a powerful tool that allows developers to create complex sets of constants that have useful names and yet simple and unique values.",
    "date": "2021-04-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3663fcfe04ba9e67f0cd916defe68c30",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🪓 8 ways to split a string in Go",
    "url": "https://gosamples.dev/split-string/",
    "resume": "\u003cp\u003eString splitting is one of the most common actions in everyday programming. Often, one single string has to be split into a list of substrings according to a specific separator, such as when parsing user-entered arguments, environment variables, or column data from a CSV file row. In Go, there are many different ways to split strings. We found 8 of them in the standard packages, so you have a wide range of tools you can use to perform this task.\u003c/p\u003e\n\u003ch2 id=\"split-a-string-by-separator\"\u003eSplit a string by separator\u003c/h2\u003e\n\u003cp\u003eTo split a string in Go, use the \u003ca href=\"https://pkg.go.dev/strings#Split\" target=\"_blank\"\u003e\u003ccode\u003estrings.Split()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/strings\" target=\"_blank\"\u003e\u003ccode\u003estrings\u003c/code\u003e\u003c/a\u003e package. It splits a string into a list of substrings using the specified delimiter. The output substrings do not contain the separator.\u003c/p\u003e\n\u003cp\u003eThe function signature is\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#Split\" target=\"_blank\"\u003e\u003ccode\u003efunc Split(s, sep string) []string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\nwhere\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003es\u003c/code\u003e is the string to split\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esep\u003c/code\u003e is a separator (delimiter) by which the string is split\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"example\"\u003eExample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry, blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.Split(): %#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;, \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.Split\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"split-a-string-without-removing-the-separator\"\u003eSplit a string without removing the separator\u003c/h2\u003e\n\u003cp\u003eTo split a string in Go into substrings containing the separator by which they were split, use the \u003ca href=\"https://pkg.go.dev/strings#SplitAfter\" target=\"_blank\"\u003e\u003ccode\u003estrings.SplitAfter()\u003c/code\u003e\u003c/a\u003e function. It splits a string after each occurrence of the delimiter.\u003c/p\u003e\n\u003cp\u003eThe functions signature:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#SplitAfter\" target=\"_blank\"\u003e\u003ccode\u003efunc SplitAfter(s, sep string) []string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003es\u003c/code\u003e is the string to split\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esep\u003c/code\u003e is a separator (delimiter) by which the string is split\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"example-1\"\u003eExample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry, blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.SplitAfter(): %#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSplitAfter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;, \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.SplitAfter\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;strawberry, \u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;blueberry, \u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"cut-a-string-into-2-parts\"\u003eCut a string into 2 parts\u003c/h2\u003e\n\u003cp\u003eTo cut a string on the first occurrence of the delimiter in Go, use the \u003ca href=\"https://pkg.go.dev/strings#Cut\" target=\"_blank\"\u003e\u003ccode\u003estrings.Cut()\u003c/code\u003e\u003c/a\u003e function. It slices a string and returns the text before and after the separator.\u003c/p\u003e\n\u003cp\u003eThe function signature:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#Cut\" target=\"_blank\"\u003e\u003ccode\u003efunc Cut(s, sep string) (before, after string, found bool)\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\nThe \u003ca href=\"https://pkg.go.dev/strings#Cut\" target=\"_blank\"\u003e\u003ccode\u003estrings.Cut()\u003c/code\u003e\u003c/a\u003e takes a string \u003ccode\u003es\u003c/code\u003e and a separator \u003ccode\u003esep\u003c/code\u003e as arguments and splits the string \u003ccode\u003es\u003c/code\u003e on the first occurrence of the \u003ccode\u003esep\u003c/code\u003e. It returns the text before and after the \u003ccode\u003esep\u003c/code\u003e, and the boolean value \u003ccode\u003efound\u003c/code\u003e indicating whether \u003ccode\u003esep\u003c/code\u003e appears in the \u003ccode\u003es\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"example-2\"\u003eExample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry, blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ebefore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eafter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efound\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCut\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;, \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.Cut():\\nbefore: %s\\nafter: %s\\nseparator found: %t\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ebefore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eafter\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efound\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.Cut\u003cspan class=\"o\"\u003e()\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebefore: strawberry\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eafter: blueberry, raspberry\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eseparator found: \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"split-a-string-to-at-most-n-substrings\"\u003eSplit a string to at most \u003ccode\u003en\u003c/code\u003e substrings\u003c/h2\u003e\n\u003cp\u003eTo split a string in Go and receive at most \u003ccode\u003en\u003c/code\u003e substrings, use the \u003ca href=\"https://pkg.go.dev/strings#SplitN\" target=\"_blank\"\u003e\u003ccode\u003estrings.SplitN()\u003c/code\u003e\u003c/a\u003e function. The last substring in this case will be the unsplit remainder.\u003c/p\u003e\n\u003cp\u003eThe function signature:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#SplitN\" target=\"_blank\"\u003e\u003ccode\u003efunc SplitN(s, sep string, n int) []string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/strings#SplitN\" target=\"_blank\"\u003e\u003ccode\u003estrings.SplitN()\u003c/code\u003e\u003c/a\u003e function works the same way as \u003ca href=\"https://pkg.go.dev/strings#Split\" target=\"_blank\"\u003e\u003ccode\u003estrings.Split()\u003c/code\u003e\u003c/a\u003e except that it finishes after \u003ccode\u003en\u003c/code\u003e substrings.\u003c/p\u003e\n\u003ch3 id=\"example-3\"\u003eExample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry, blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.SplitN(): %#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSplitN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;, \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.SplitN\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;blueberry, raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"split-a-string-without-removing-the-separator-to-at-most-n-substrings\"\u003eSplit a string without removing the separator to at most \u003ccode\u003en\u003c/code\u003e substrings\u003c/h2\u003e\n\u003cp\u003eTo split a string in Go into output substrings containing a separator and getting at most \u003ccode\u003en\u003c/code\u003e substrings, use the \u003ca href=\"https://pkg.go.dev/strings#SplitAfterN\" target=\"_blank\"\u003e\u003ccode\u003estrings.SplitAfterN()\u003c/code\u003e\u003c/a\u003e function. It splits a string after each occurrence of the delimiter, and the last substring will be the unsplit remainder.\u003c/p\u003e\n\u003cp\u003eThe function signature:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#SplitAfterN\" target=\"_blank\"\u003e\u003ccode\u003efunc SplitAfterN(s, sep string, n int) []string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/strings#SplitAfterN\" target=\"_blank\"\u003e\u003ccode\u003estrings.SplitAfterN()\u003c/code\u003e\u003c/a\u003e function works the same way as \u003ca href=\"https://pkg.go.dev/strings#SplitAfter\" target=\"_blank\"\u003e\u003ccode\u003estrings.SplitAfter()\u003c/code\u003e\u003c/a\u003e except that it finishes after \u003ccode\u003en\u003c/code\u003e substrings.\u003c/p\u003e\n\u003ch3 id=\"example-4\"\u003eExample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry, blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.SplitAfterN(): %#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSplitAfterN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;, \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.SplitAfterN\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;strawberry, \u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;blueberry, raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"split-a-string-by-white-space-characters\"\u003eSplit a string by white space characters\u003c/h2\u003e\n\u003cp\u003eTo split a string by white space characters in Go, use the \u003ca href=\"https://pkg.go.dev/strings#Fields\" target=\"_blank\"\u003e\u003ccode\u003estrings.Fields()\u003c/code\u003e\u003c/a\u003e function. It takes a string as an argument and splits it according to the white space characters defined by the \u003ca href=\"https://pkg.go.dev/unicode#IsSpace\" target=\"_blank\"\u003e\u003ccode\u003eunicode.IsSpace()\u003c/code\u003e\u003c/a\u003e function.\u003c/p\u003e\n\u003cp\u003eThe function signature:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#Fields\" target=\"_blank\"\u003e\u003ccode\u003efunc Fields(s string) []string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"example-5\"\u003eExample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry, blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.Fields(): %#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFields\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.Fields\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;strawberry,\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;blueberry,\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"split-a-string-by-a-splitting-function\"\u003eSplit a string by a splitting function\u003c/h2\u003e\n\u003cp\u003eTo split a string according to a custom split function in Go, use the \u003ca href=\"https://pkg.go.dev/strings#FieldsFunc\" target=\"_blank\"\u003e\u003ccode\u003estrings.FieldsFunc()\u003c/code\u003e\u003c/a\u003e. As arguments, it gets the string to split and the \u003ccode\u003efunc(rune) bool\u003c/code\u003e function, which should return \u003ccode\u003etrue\u003c/code\u003e if splitting should be done for a given rune.\u003c/p\u003e\n\u003cp\u003eThe function signature:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/strings#FieldsFunc\" target=\"_blank\"\u003e\u003ccode\u003efunc FieldsFunc(s string, f func(rune) bool) []string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"example-6\"\u003eExample\u003c/h3\u003e\n\u003cp\u003eIn the example, the string is split on runes that are not Unicode letters.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;unicode\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry, blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strings.FieldsFunc(): %#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003estrings\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFieldsFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e \u003cspan class=\"kt\"\u003erune\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eunicode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsLetter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrings.FieldsFunc\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"split-a-string-using-the-regexp\"\u003eSplit a string using the regexp\u003c/h2\u003e\n\u003cp\u003eIn Go, you can also split a string using a \u003ca href=\"https://en.wikipedia.org/wiki/Regular_expression\" target=\"_blank\"\u003eRegular Expression\u003c/a\u003e. To do this, you must first create a new regular expression object \u003ca href=\"https://pkg.go.dev/regexp#Regexp\" target=\"_blank\"\u003e\u003ccode\u003eRegexp\u003c/code\u003e\u003c/a\u003e, for example, by calling the \u003ca href=\"https://pkg.go.dev/regexp#MustCompile\" target=\"_blank\"\u003e\u003ccode\u003eregexp.MustCompile()\u003c/code\u003e\u003c/a\u003e function. The \u003ca href=\"https://pkg.go.dev/regexp#Regexp\" target=\"_blank\"\u003e\u003ccode\u003eRegexp\u003c/code\u003e\u003c/a\u003e object has the \u003ca href=\"https://pkg.go.dev/regexp#Regexp.Split\" target=\"_blank\"\u003e\u003ccode\u003eSplit()\u003c/code\u003e\u003c/a\u003e method that splits a given string \u003ccode\u003es\u003c/code\u003e by the regular expression into at most \u003ccode\u003en\u003c/code\u003e substrings (the last substring will be the unsplit remainder).\u003c/p\u003e\n\u003cp\u003eThe method signature:\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ca href=\"https://pkg.go.dev/regexp#Regexp.Split\" target=\"_blank\"\u003e\u003ccode\u003efunc (re *Regexp) Split(s string, n int) []string\u003c/code\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"example-7\"\u003eExample\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;regexp\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry,blueberry, raspberry\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eregex\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eregexp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMustCompile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;,\\\\s*\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Regexp.Split(): %#v\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eregex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRegexp.Split\u003cspan class=\"o\"\u003e()\u003c/span\u003e: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1507471d18d1a8cf0839ff1ca5292116",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The ultimate guide to crafting your GopherCon proposal",
    "url": "https://changelog.com/gotime/175",
    "resume": "The Call for Proposals for GopherCon 2021 is open from Monday, April 5th to Sunday, April 25th. Kris Brandow, an experienced GopherCon speaker, has published a series of guides to assist Gophers as they craft their proposals and think about submitting. In this episode Kris reads through his guide, discussing the four parts with a GopherCon newbie, Angelica Hill, who spoke for the first time at GopherCon last year, and is a first time CFP reviewer this year.",
    "date": "2021-04-15T14:00:00Z",
    "vote": 0
  },
  {
    "id": "2fd30a820c1459e50ae717ebfea7303e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Splitting a String into a Slice in Golang",
    "url": "https://blog.boot.dev/golang/split-strings-golang/",
    "resume": "I can\u0026rsquo;t begin to tell you how often I split strings in Go. More often than not I\u0026rsquo;m just parsing a comma-separated list from an environment variable, and Go\u0026rsquo;s standard library gives us some great tools for that kind of manipulation.",
    "date": "2021-04-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bf5056662d6311f50a4cb4aab47a097e",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "⛓️ URL Decode in Go",
    "url": "https://gosamples.dev/url-decode/",
    "resume": "\u003cp\u003eURL encoding or \u003ca href=\"https://en.wikipedia.org/wiki/Percent-encoding\" target=\"_blank\"\u003epercent-encoding\u003c/a\u003e, is a method of encoding URLs using only a limited set of characters so that the URL can be transmitted safely over the Internet. To decode such an encoded URL in Go, you can just use the parsing URL function \u003ca href=\"https://golang.org/pkg/net/url/#Parse\" target=\"_blank\"\u003e\u003ccode\u003eurl.Parse()\u003c/code\u003e\u003c/a\u003e from the \u003ca href=\"https://golang.org/pkg/net/url\" target=\"_blank\"\u003e\u003ccode\u003eurl\u003c/code\u003e\u003c/a\u003e package. It parses and decodes all parts of the URL.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you want to URL encode a path, a query, or the whole URL, see \u003ca href=\"https://gosamples.dev/url-encode\"\u003eURL Encode in Go\u003c/a\u003e post.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eA typical URL consists of the following components:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003escheme://host:port/path?query\u003c/div\u003e\n\u003cp\u003eThe \u003ca href=\"https://golang.org/pkg/net/url/#Parse\" target=\"_blank\"\u003e\u003ccode\u003eurl.Parse()\u003c/code\u003e\u003c/a\u003e takes an URL string as an argument and create the \u003ca href=\"https://pkg.go.dev/net/url#URL\" target=\"_blank\"\u003e\u003ccode\u003eurl.URL\u003c/code\u003e\u003c/a\u003e struct containing all the components decoded. In case of problems, it returns an error.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// decode URL by url.Parse\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eparsedURL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://example.com/foo+bar%21?query=ab%2Bc\u0026amp;query2=de%24f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;scheme: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eparsedURL\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eScheme\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;host: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eparsedURL\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;path: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eparsedURL\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ePath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;query args:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003evalues\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eparsedURL\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; %s = %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eResult:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003escheme: https\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehost: example.com\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epath: /foo+bar!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003equery args:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nv\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e ab+c\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nv\"\u003equery2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e de\u003cspan class=\"nv\"\u003e$f\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlternatively, you can use functions that decode specific components of an URL:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/net/url/#PathUnescape\" target=\"_blank\"\u003e\u003ccode\u003eurl.PathUnescape()\u003c/code\u003e\u003c/a\u003e - to decode the URL \u003cstrong\u003epath\u003c/strong\u003e component. The \u003cstrong\u003epath\u003c/strong\u003e segment is encoded differently from the \u003cstrong\u003equery\u003c/strong\u003e (for example, the \u003ccode\u003e+\u003c/code\u003e character is allowed in the \u003cstrong\u003epath\u003c/strong\u003e), so it needs a different method than the \u003cstrong\u003equery\u003c/strong\u003e part.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/net/url/#QueryUnescape\" target=\"_blank\"\u003e\u003ccode\u003eurl.QueryUnescape()\u003c/code\u003e\u003c/a\u003e - to decode the URL \u003cstrong\u003equery\u003c/strong\u003e component.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://golang.org/pkg/net/url/#ParseQuery\" target=\"_blank\"\u003e\u003ccode\u003eurl.ParseQuery()\u003c/code\u003e\u003c/a\u003e - to decode the URL \u003cstrong\u003equery\u003c/strong\u003e component and parse it to the form of \u003ca href=\"https://golang.org/pkg/net/url/#Values\" target=\"_blank\"\u003e\u003ccode\u003eurl.Values\u003c/code\u003e\u003c/a\u003e that maps a \u003cstrong\u003equery\u003c/strong\u003e key to the values.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee the example to compare these functions:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;log\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// decode path by url.PathUnescape\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;foo+bar%21\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eunescapedPath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePathUnescape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unescaped path: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eunescapedPath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// decode query by url.QueryUnescape\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;query=ab%2Bc\u0026amp;query2=de%24f\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eunescapedQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQueryUnescape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unescaped query: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eunescapedQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// decode query and parse by url.ParseQuery\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eparsedQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eParseQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFatal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;parsed query args:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003evalues\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003eparsedQuery\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; %s = %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eResult:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunescaped path: foo+bar!\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eunescaped query: \u003cspan class=\"nv\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eab+c\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nv\"\u003equery2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ede\u003cspan class=\"nv\"\u003e$f\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eparsed query args:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nv\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e ab+c\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nv\"\u003equery2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e de\u003cspan class=\"nv\"\u003e$f\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4b5437c7ddf2d1613f4e351666d89990",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🔗 URL Encode in Go",
    "url": "https://gosamples.dev/url-encode/",
    "resume": "\u003cp\u003eURL encoding, also known as \u003ca href=\"https://en.wikipedia.org/wiki/Percent-encoding\" target=\"_blank\"\u003epercent-encoding\u003c/a\u003e, is a method of encoding URLs using only a limited set of characters so that the URL can be transmitted safely. A typical URL consists of the following components:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003escheme://host:port/path?query\u003c/div\u003e\n\u003cp\u003eIn the examples below, we will show how to encode the \u003cstrong\u003equery\u003c/strong\u003e part of the URL, the \u003cstrong\u003epath\u003c/strong\u003e part, and also how to build a full encoded URL.\u003c/p\u003e\n\u003ch2 id=\"encode-the-query-part-of-the-url\"\u003eEncode the query part of the URL\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/net/url#QueryEscape\" target=\"_blank\"\u003e\u003ccode\u003eurl.QueryEscape()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/net/url\" target=\"_blank\"\u003e\u003ccode\u003enet/url\u003c/code\u003e\u003c/a\u003e package is used to encode a string placed inside a URL \u003cstrong\u003equery\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equery1Val\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQueryEscape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ab+c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equery2Val\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQueryEscape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;de$f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equery1Val\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003equery2Val\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eab%2Bc\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ede%24f\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo create an encoded multiple key-value \u003cstrong\u003equery\u003c/strong\u003e parameters string, use the \u003ca href=\"https://pkg.go.dev/net/url#Values\" target=\"_blank\"\u003e\u003ccode\u003eurl.Values\u003c/code\u003e\u003c/a\u003e structure from the \u003ca href=\"https://pkg.go.dev/net/url\" target=\"_blank\"\u003e\u003ccode\u003enet/url\u003c/code\u003e\u003c/a\u003e package.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eValues\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;query\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;ab+c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;query2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;de$f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eencodedQuery\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEncode\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eencodedQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eab%2Bc\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nv\"\u003equery2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ede%24f\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"encode-the-path-part-of-the-url\"\u003eEncode the path part of the URL\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://pkg.go.dev/net/url#PathEscape\" target=\"_blank\"\u003e\u003ccode\u003eurl.PathEscape()\u003c/code\u003e\u003c/a\u003e function from the \u003ca href=\"https://pkg.go.dev/net/url\" target=\"_blank\"\u003e\u003ccode\u003enet/url\u003c/code\u003e\u003c/a\u003e package is used to encode a string that is placed inside a URL \u003cstrong\u003epath\u003c/strong\u003e segment. The \u003cstrong\u003epath\u003c/strong\u003e segment is encoded differently from the \u003cstrong\u003equery\u003c/strong\u003e, for example, the \u003ccode\u003e+\u003c/code\u003e character is allowed in the \u003cstrong\u003epath\u003c/strong\u003e, and should be encoded in the \u003cstrong\u003equery\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePathEscape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;foo+bar!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efoo+bar%21\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"build-a-full-encoded-url\"\u003eBuild a full encoded URL\u003c/h2\u003e\n\u003cp\u003eThere are two ways to construct a full encoded URL. You can create it manually by joining different parts of the URL, where the \u003cstrong\u003equery\u003c/strong\u003e and \u003cstrong\u003epath\u003c/strong\u003e parts are escaped with the previously used functions.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// build url manually\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003ehost\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://example.com/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePathEscape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;foo+bar!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equery1Val\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQueryEscape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ab+c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equery2Val\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eQueryEscape\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;de$f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;query=%s\u0026amp;query2=%s\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003equery1Val\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003equery2Val\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s %s%s?%s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Manually built URL:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eManually built URL: https://example.com/foo+bar%21?query\u003cspan class=\"o\"\u003e=\u003c/span\u003eab%2Bc\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nv\"\u003equery2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ede%24f\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHowever, it is generally better idea to build the encoded URL by using the \u003ca href=\"https://pkg.go.dev/net/url#URL\" target=\"_blank\"\u003e\u003ccode\u003eurl.URL\u003c/code\u003e\u003c/a\u003e structure. This way is easier and less error-prone than manually constructing the resulting URL. You just need to set the \u003ccode\u003eScheme\u003c/code\u003e, \u003ccode\u003eHost\u003c/code\u003e, \u003ccode\u003ePath\u003c/code\u003e of the URL and build the \u003ccode\u003eRawQuery\u003c/code\u003e string by encoding query parameters inside the \u003ca href=\"https://pkg.go.dev/net/url#Values\" target=\"_blank\"\u003e\u003ccode\u003eurl.Values\u003c/code\u003e\u003c/a\u003e struct.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;net/url\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// build url using url.URL struct\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003eexampleURL\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eScheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003ePath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/foo+bar!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eValues\u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;query\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;ab+c\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;query2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;de$f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003eexampleURL\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRawQuery\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003equeryValues\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eEncode\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;URL built using url.URL struct:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eexampleURL\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eURL built using url.URL struct: https://example.com/foo+bar%21?query\u003cspan class=\"o\"\u003e=\u003c/span\u003eab%2Bc\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"nv\"\u003equery2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ede%24f\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "613b93b9980dc41e8c85d704e2537e85",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Backend Developers are UX Designers Too",
    "url": "https://blog.boot.dev/clean-code/backend-ux-design/",
    "resume": "Too often I neglect the idea of UX design in backend work. The goal of user experience design is to give users a product that\u0026rsquo;s easy to use.",
    "date": "2021-04-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2cce617f0ebefa65d15c57522eba8a36",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "😴 Sleep function in Go - pause the program execution",
    "url": "https://gosamples.dev/sleep/",
    "resume": "\u003cp\u003eTo pause the execution of a current program in Go, delay code execution, and wait for a specified period of time, you just need to use the \u003ccode\u003eSleep()\u003c/code\u003e function defined in the \u003ca href=\"https://golang.org/pkg/time/#Sleep\" target=\"_blank\"\u003etime\u003c/a\u003e package. As an argument, this function takes a variable of type \u003ccode\u003etime.Duration\u003c/code\u003e, which is the amount of time the program execution should be stopped for. It can be expressed as a number multiplied by a unit constant. For example \u003ccode\u003e3*time.Second\u003c/code\u003e means that the execution will be stopped for 3 seconds. Available units are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etime.Nanosecond\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etime.Microsecond\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etime.Millisecond\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etime.Second\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etime.Minute\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etime.Hour\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!-- end of unordered list --\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;before Sleep()\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eSecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;waking up after Sleep()\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "389831b0f404f6ff5c6722ce91369344",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "For Loops in Go",
    "url": "https://blog.boot.dev/golang/golang-for-loop/",
    "resume": "For loops are a programmer\u0026rsquo;s best friend! They allow us execute blocks of code repeatedly and iterate over collections of items.",
    "date": "2021-04-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4545ff62836611fc7b064d80d329c1d7",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Using Bitmasks In Go",
    "url": "https://www.ardanlabs.com/blog/2021/04/using-bitmasks-in-go.html",
    "resume": "Introduction You write a server for a massively multiplayer online role-playing game (MMORPG).\nIn the game, players collect keys and you want to design how to store the set of keys each player has.\nAs an example, imagine the set of keys are copper, jade and crystal. You consider the following options for storing a player key sets:\n[]string map[string]bool Both options will work, but did you consider a third option of using a bitmask?",
    "date": "2021-04-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1a99e3811dfb5af3ddbeea07bb2e11c7",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Trials and tribulations of testing in Go",
    "url": "https://changelog.com/gotime/174",
    "resume": "Testing can be hard, how to test, where to test, what is a good test? All questions that can be deceptively difficult to answer. In this episode we talk about the trials and tribulations of testing and why it can be argued to be especially difficult in Go.",
    "date": "2021-04-08T15:45:00Z",
    "vote": 0
  },
  {
    "id": "d909c3bea266e9b03617f83f6d8b422f",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "🤔 Print type of variable in Go",
    "url": "https://gosamples.dev/print-type/",
    "resume": "\u003cp\u003eTo print a variable\u0026rsquo;s type, you can use the \u003ca href=\"https://pkg.go.dev/fmt#hdr-Printing\" target=\"_blank\"\u003e\u003ccode\u003e%T\u003c/code\u003e\u003c/a\u003e verb in the \u003ca href=\"https://pkg.go.dev/fmt#Printf\" target=\"_blank\"\u003e\u003ccode\u003efmt.Printf()\u003c/code\u003e\u003c/a\u003e function format. It\u0026rsquo;s the simplest and most recommended way of printing type of a variable.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et1\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et4\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et5\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mf\"\u003e4.5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et6\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t1: %T\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t2: %T\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t3: %T\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t4: %T\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t5: %T\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t6: %T\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003et6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlternatively, you can use the \u003ca href=\"https://pkg.go.dev/reflect#TypeOf\" target=\"_blank\"\u003e\u003ccode\u003eTypeOf()\u003c/code\u003e\u003c/a\u003e function from the reflection package \u003ca href=\"https://pkg.go.dev/reflect\" target=\"_blank\"\u003e\u003ccode\u003ereflect\u003c/code\u003e\u003c/a\u003e. However, it uses complex and expensive runtime reflection, so if you just need to print the type of a variable, it is better to use the first method.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;reflect\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et1\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et2\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et3\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et4\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et5\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mf\"\u003e4.5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003et6\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t1: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t2: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t3: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et3\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t4: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et4\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t5: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;t6: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ereflect\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003et6\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBoth methods return the same output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003et1: string\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003et2: \u003cspan class=\"o\"\u003e[]\u003c/span\u003estring\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003et3: map\u003cspan class=\"o\"\u003e[\u003c/span\u003estring\u003cspan class=\"o\"\u003e]\u003c/span\u003efloat64\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003et4: int\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003et5: float64\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003et6: bool\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-04-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f8f0c8bd9144aede0b3c1bbf1f6625f7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Advanced Algorithms Course Released on Boot.dev",
    "url": "https://blog.boot.dev/computer-science/advanced-algorithms-course-released/",
    "resume": "Sorry it took so long for me to get this one out! Learn Advanced Algorithms was just released, and I\u0026rsquo;m excited to let you all get your hands on it, even if you\u0026rsquo;re just auditing it for free!",
    "date": "2021-04-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "00e09013e2faa70b14aa0fe57c3059c6",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Distributed Tracing with Jaeger in Go",
    "url": "https://www.jajaldoang.com/post/distributed-tracing-with-jaeger-in-go/",
    "resume": "\u003cp\u003eDistributed tracing is used by software engineers to monitor or debug their applications. It is very useful to find which process takes the most time or which function causes errors. One of the systems to do distributed tracing is Jaeger. This article will show you how to run Jaeger in the local environment and trace a Go application.\u003c/p\u003e",
    "date": "2021-04-02T04:10:09+07:00",
    "vote": 0
  },
  {
    "id": "0ca8b8530ecbb0d03397511f85c79454",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Releasing with (and without) GoReleaser",
    "url": "https://changelog.com/gotime/173",
    "resume": "Carlos Alexandro Becker joins Mat, Natalie, \u0026 Johnny to discuss the ins and outs of releasing your Go code. Carlos created and maintains GoReleaser, a popular tool that helps you deliver your Go binaries as fast and easily as possible.",
    "date": "2021-04-01T16:00:00Z",
    "vote": 0
  },
  {
    "id": "055170e8ad9c6d5963d3baadb4c99a0a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Naming Variables the Right Way",
    "url": "https://blog.boot.dev/clean-code/naming-variables/",
    "resume": "I\u0026rsquo;ve noticed that bugs introduced into an existing code base are often due to poor variable naming more than one might suspect.",
    "date": "2021-04-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "db82e491efb34c7c1edeaedf497809d5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Which is Worth It, Coding Bootcamp or a Computer Science Degree?",
    "url": "https://blog.boot.dev/jobs/is-coding-bootcamp-worth-it/",
    "resume": "When you\u0026rsquo;re in a position of wondering, \u0026ldquo;Is a coding bootcamp worth it?\u0026rdquo; you should look at several factors.",
    "date": "2021-03-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f313138209dc098967bcddeecee3fcb4",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "➰ Foreach loop in Go",
    "url": "https://gosamples.dev/foreach/",
    "resume": "\u003cp\u003eThere is no \u003ccode\u003eforeach\u003c/code\u003e loop and \u003ccode\u003eforeach\u003c/code\u003e keyword in Go, but the usual \u003ccode\u003efor\u003c/code\u003e loop can be adapted to work in a similar way. Using the \u003ccode\u003erange\u003c/code\u003e keyword, you can create the \u003ccode\u003erange\u003c/code\u003e form of the \u003ccode\u003efor\u003c/code\u003e loop that is very useful when iterating over a slice or map. This kind of loop has the form of:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nx\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ewhere:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;index\u0026gt;\u003c/code\u003e is a numeric ordinal number that returns 0 for the first element in the array, 1 for the second, and so on\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;value\u0026gt;\u003c/code\u003e is a copy of a slice/array element at that \u003ccode\u003e\u0026lt;index\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFor maps, the \u003ccode\u003efor range\u003c/code\u003e loop has \u003ccode\u003e\u0026lt;key\u0026gt;\u003c/code\u003e instead of \u003ccode\u003e\u0026lt;index\u0026gt;\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ewhere:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;key\u0026gt;\u003c/code\u003e is the key of a given map entry\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;value\u0026gt;\u003c/code\u003e is a copy of a map element at that \u003ccode\u003e\u0026lt;key\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"example\"\u003eExample\u003c/h2\u003e\n\u003cp\u003eIn the following example, we iterate through a slice and map to print each element. We do not need the \u003ccode\u003e\u0026lt;index\u0026gt;\u003c/code\u003e to print the slice items, so it can be ignored using the blank identifier (underscore). In such a case, the \u003ccode\u003efor range\u003c/code\u003e loop is almost identical to the \u003ccode\u003eforeach\u003c/code\u003e known from other programming languages. When printing map items, we use the \u003ccode\u003e\u0026lt;key\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;value\u0026gt;\u003c/code\u003e to output the color (value) of the fruit (key).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// array foreach loop\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efruits\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efruit\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003efruits\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Fruit: %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e// map foreach loop\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e \u003cspan class=\"nx\"\u003efruitColors\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kd\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;green\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"s\"\u003e\u0026#34;raspberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pink\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nx\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolor\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"k\"\u003erange\u003c/span\u003e \u003cspan class=\"nx\"\u003efruitColors\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%s color is %s\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003efruit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOutput:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFruit: apple\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFruit: strawberry\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFruit: raspberry\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eapple color is green\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003estrawberry color is red\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eraspberry color is pink\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "date": "2021-03-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "39ed2361617338540b4307ea55d942d3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Design philosophy",
    "url": "https://changelog.com/gotime/172",
    "resume": "In this insight-filled episode, Bill Kennedy joins Johnny and Kris to discuss best practices around the design of software in Go. Bill talks through scenarios, lessons learned, and pitfalls to avoid in both architecture and coding of Go projects.",
    "date": "2021-03-25T15:30:00Z",
    "vote": 0
  },
  {
    "id": "8ff6256cabdb82a350b6b20a6291807b",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "📝 Visual Studio Code keyboard shortcuts: toggle sidebar",
    "url": "https://gosamples.dev/vscode-toggle-sidebar/",
    "resume": "\u003cp\u003eTo toggle sidebar in Visual Studio Code you need to use:\u003c/p\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003eCtrl+B\u003c/code\u003e on Windows or Linux\u003c/div\u003e\n\u003cdiv class=\"highlight-text text--center\"\u003e\u003ccode\u003e⌘B\u003c/code\u003e (\u003ccode\u003eCmd+B\u003c/code\u003e) on macOS\u003c/div\u003e\n\u003cp\u003ePress the shortcut combination to hide the sidebar first, then do it a second time to show it.\u003c/p\u003e\n\u003cdiv class=\"image--center\"\u003e\u003cimg src=\"https://gosamples.dev/vscode-toggle-sidebar/toggle_sidebar.gif\" alt=\"Toggle\"\u003e\u003c/div\u003e",
    "date": "2021-03-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "56d8a636afe3dbcb7e46bc7964b7f073",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Can You Get a Programming Job with Just an Associate's Degree?",
    "url": "https://blog.boot.dev/jobs/programming-job-with-associates-degree/",
    "resume": "Changing majors is a tale as old as time. A degree that would normally require four years to complete can quickly turn into a more expensive endeavor that takes five or six years for a student that can\u0026rsquo;t decide what they want to study.",
    "date": "2021-03-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6b8d1348fd1041b196b109597f3b8694",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "go:embed",
    "url": "https://changelog.com/gotime/171",
    "resume": "Carl (Director of Technology for Spotlight PA) and Wayne (Principal Engineer at GoDaddy) join Mat and Mark to talk about the new go:embed feature in Go 1.16. They discuss how and when to use it, common gotchas to watch out for, and some rather meaty unpopular opinions thrown in for good measure.",
    "date": "2021-03-18T15:45:00Z",
    "vote": 0
  },
  {
    "id": "1b0e319205fd56779b4dfedb13b3af26",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How I Organize My Local Development Environment",
    "url": "https://blog.boot.dev/misc/how-i-organize-my-local-development-environment/",
    "resume": "When I was just getting into coding, I was very disorganized. I would create a new text file in My Documents, work on it, never create a Git repository, accidentally delete it later, you get the idea.",
    "date": "2021-03-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bd4f438917acae9e98c2c4bc9ca4d0eb",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "All Coding Courses on boot.dev Are Now Free to Audit",
    "url": "https://blog.boot.dev/news/free-coding-courses-audit/",
    "resume": "Last weekend I did a major revamp of boot.dev\u0026rsquo;s payment strategy, after toying with the first version since I launched in the summer of 2020, as it turns out, the microtransaction (gem) strategy didn\u0026rsquo;t work out to the benefit of my students, nor to the growth of boot.",
    "date": "2021-03-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "856d7734069e3f63f3949219624acd8b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Where Can You Get a Programming Certificate Online?",
    "url": "https://blog.boot.dev/jobs/where-to-get-a-programming-certificate/",
    "resume": "There are two main options to get a programming certificate online - online courses and universities.",
    "date": "2021-03-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "12915da430a93713e18155ea37bd7ee7",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Golang Function Timeout With Context",
    "url": "https://www.jajaldoang.com/post/golang-function-timeout-with-context/",
    "resume": "\u003cp\u003eTimeouts can be important for an application. It can limit how long is the maximum duration of a process. We can save resources by cancel further processes when timeout happened. We can use context to apply a timeout to a function call in Go.\u003c/p\u003e",
    "date": "2021-03-14T04:21:58+07:00",
    "vote": 0
  },
  {
    "id": "4049e029355e2699aee11b7832afd7b6",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Talkin' 'bout code generation",
    "url": "https://changelog.com/gotime/170",
    "resume": "O.G. Brian Ketelsen joins the panel to discuss code generation; programs that write programs. They also discuss IDLs, DSLs, overusing language features, generics, and more. Also Brian plays his guitar. 🤘",
    "date": "2021-03-11T17:30:00Z",
    "vote": 0
  },
  {
    "id": "2264ddd61539ace6a248cf29160a2d1c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Using a High-Level RabbitMQ Client in Golang",
    "url": "https://blog.boot.dev/golang/connecting-to-rabbitmq-in-golang-easy/",
    "resume": "If you\u0026rsquo;ve already read my previous post, you know that the amqp package is awesome and you can get up and running with just 40-50 lines of simple code.",
    "date": "2021-03-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bcd9f5a28be5f1d52d8ec48e8828af90",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "MySQL Tutorial: Creating a Table and Inserting Rows",
    "url": "https://golangbot.com/mysql-create-table-insert-row/",
    "resume": "Learn how to create a table and insert rows in MySQL using Go. This tutorial also covers multiple row insertion.",
    "date": "2021-03-07T00:58:00Z",
    "vote": 0
  },
  {
    "id": "e0f6bb4629da8be5be1bf6ac9fbb2779",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Two Classes of Software Engineer",
    "url": "https://blog.boot.dev/jobs/the-two-classes-of-software-engineer/",
    "resume": "\u0026ldquo;Software engineer\u0026rdquo; has become a ubiquitous term for people who write, deploy, architect, or sometimes even simply test code.",
    "date": "2021-03-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b50732a88c54b0ec8d67769dbb7c41ec",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go at Clever",
    "url": "https://changelog.com/gotime/169",
    "resume": "In this episode we explore how Clever started using Go. What technologies did Clever start with, how did they transition to Go, and what were the motivations behind those changes? We then explore some of the OS tech written by the team at Clever.",
    "date": "2021-03-04T16:30:00Z",
    "vote": 0
  },
  {
    "id": "c15e2f71a56bb465dad4fe7aa50edf0a",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "Webdriver.IO (2021)",
    "url": "https://sdet.us/webdriver-io-2021/",
    "resume": "I recently looked at the Web Automation framework, Webdriver IO, in 2021 and compared it to what I currently use. There are certainly some useful aspects to it, but there are also many drawbacks. To start with let me mention what I currently use for automation\u0026#8230;. I build a lot of automation tools for specific [\u0026#8230;]",
    "date": "2021-02-26T01:16:25Z",
    "vote": 0
  },
  {
    "id": "a8ea4f58a6b001f859b8a5b4415bd002",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "7 Ways for Beginner Coders to Monetize Programming Blogs",
    "url": "https://blog.boot.dev/jobs/monetize-your-programming-blog/",
    "resume": "Why shouldn’t your hobby earn you money? 🔗Programming is a very lucrative skill to have, whether as a professional career, a freelance gig, or even just a hobby.",
    "date": "2021-02-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2fb8538f9dbe771a07779be94a9ca18c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Indecent (language) Proposals: Part 2",
    "url": "https://changelog.com/gotime/168",
    "resume": "This is the second part of a discussion about Go language proposals that may or may not make it into the language. Listen to part one as well!",
    "date": "2021-02-25T18:15:00Z",
    "vote": 0
  },
  {
    "id": "f2ad11e79ebe33d6347aeb501df31506",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 8 Benefits of Functional Programming",
    "url": "https://blog.boot.dev/clean-code/benefits-of-functional-programming/",
    "resume": "Functional programming is a way to writing code where programs are created strictly through functions. Functional programming has gained quite a bit of traction in recent years among the development community, mostly because of the benefits it provides.",
    "date": "2021-02-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "13ae4eabe06fba3138872d6eba6059c9",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Run PostgreSQL Database With Docker",
    "url": "https://www.jajaldoang.com/post/run-postgresql-database-with-docker/",
    "resume": "\u003cp\u003eRunning PostgreSQL with docker is very useful for testing purposes. You can run it everywhere. You can create any testing data, use it then destroy it after testing is done. Integration testing and automation testing are made easy by it.\u003c/p\u003e",
    "date": "2021-02-25T04:11:18+07:00",
    "vote": 0
  },
  {
    "id": "49085fe403cb12a201e6f6e49810c81d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 8 Tricks to Learn Coding Fast",
    "url": "https://blog.boot.dev/jobs/learn-coding-fast/",
    "resume": "The journey to becoming a gainfully employed software engineer can feel long. The good news is, you can learn smarter not harder.",
    "date": "2021-02-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c9a439672afdcfa2a0009b680099e27b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The art of reading the docs",
    "url": "https://changelog.com/gotime/167",
    "resume": "Documentation. You can treat it as a dictionary or reference manual that you look up things in when you get stuck during your day-to-day work OR (and this is where things get interesting) you can immerse yourself in a subject, domain, or technology by deeply and purposefully consuming its manuals cover-to-cover to develop expertise, not just passing familiarity. In this episode we pull in perspectives and anecdotes from beginners and veterans alike to understand the impact of RTFM deeply. Also Sweet Filepath O’ Mine?!?!",
    "date": "2021-02-18T17:15:00Z",
    "vote": 0
  },
  {
    "id": "6b0d6afffd1ac33267781604f2a1c3b1",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "2 Methods to Run Golang App With Docker",
    "url": "https://www.jajaldoang.com/post/2-methods-run-golang-app-with-docker/",
    "resume": "\u003cp\u003eDo you want to run your Golang application with docker? Read this post. We will try two methods of running a golang application with docker. You can see which method is more suitable for you.\u003c/p\u003e",
    "date": "2021-02-16T16:37:22+07:00",
    "vote": 0
  },
  {
    "id": "c618f4165b47545d289bd4028daa0659",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Is There a Case for Programmers to Unionize?",
    "url": "https://blog.boot.dev/jobs/is-there-a-case-for-programmers-to-unionize/",
    "resume": "I\u0026rsquo;ve seen a lot of buzz recently about software developers wanting to form unions. I\u0026rsquo;m particularly interested in this topic while I\u0026rsquo;m #indiehacking boot.",
    "date": "2021-02-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "eddf87a34fef34c19c022398fda320e1",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Indecent (language) Proposals: Part 1",
    "url": "https://changelog.com/gotime/166",
    "resume": "In this episode, we discuss some proposed changes to Go covering a range of subjects, from magical interfaces, to enhancing range loops, make and new with inferred types, lazy values, and more. We also talk a lot about ints, so get this episode in your ears.",
    "date": "2021-02-11T16:30:00Z",
    "vote": 0
  },
  {
    "id": "72c2d0ec2a37b51af77cb8a02fd25fc5",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Zero Downtime Reload With Socketmaster",
    "url": "https://www.jajaldoang.com/post/zero-downtime-reload-with-socketmaster/",
    "resume": "\u003cp\u003eNowadays, zero downtime reload is mandatory for most systems. Especially for the system that is accessed all the time. Stakeholders demand the high availability of the system. So it is bad if the system needs downtime for reloads even if it\u0026rsquo;s in milliseconds. Socketmaster is there to help your system reload with zero downtime.\u003c/p\u003e",
    "date": "2021-02-10T11:24:47+07:00",
    "vote": 0
  },
  {
    "id": "d1993fd34861de9200364ce8c8d6b68c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "View Git Tags with Semver Ordering",
    "url": "https://blog.boot.dev/open-source/view-git-tags-with-semver-ordering/",
    "resume": "If you\u0026rsquo;re like me, you wish all Git tags adhered to the Semantic Versioning standard. Unfortunately, Semver is just a convention, so Git tags can basically be any string of text.",
    "date": "2021-02-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "10cef24348abcc36df14bd71ea9f975d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Why should you learn Golang? [2022]",
    "url": "https://blog.boot.dev/golang/why-learn-golang/",
    "resume": "Golang has skyrocketed in popularity year over year, making it one of the best choices for career-conscious developers to learn.",
    "date": "2021-02-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fa6b64c3d91c88dbeb16fb7c892cf8a6",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Capture Traffic and Replay It With GoReplay (gor)",
    "url": "https://www.jajaldoang.com/post/capture-traffic-and-replay-it-with-gor/",
    "resume": "\u003cp\u003eGoReplay or gor is an open-source tool to monitor incoming traffic to your server. It is written in Go. We can record the traffic to a file, then replay it again to a specified URL. It is a great tool to have.\u003c/p\u003e",
    "date": "2021-02-08T04:09:05+07:00",
    "vote": 0
  },
  {
    "id": "52a71de6ed43b8f11b1fc75bcc9e50d4",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "When Go programs end",
    "url": "https://changelog.com/gotime/165",
    "resume": "Michael Knyszek from the Go team joins us to talk about what happens when a program ends. How are file handles cleaned up? When are deferred functions run, and when are they skipped entirely? Is there a way to terminate all running goroutines? Tune in to learn the answers to these questions and more!",
    "date": "2021-02-04T17:00:00Z",
    "vote": 0
  },
  {
    "id": "c37bbab66398caac2bc7039aa16488ba",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Handle Panic in HTTP Server by Using Middleware in Go",
    "url": "https://www.jajaldoang.com/post/handle-panic-in-http-server-using-middleware-go/",
    "resume": "\u003cp\u003eIf you have code in Go, most likely you have ever encountered a panic. Panic can stop your application if it is not recovered. Fortunately, in the Go HTTP server, there is already a panic recovery, so the server will continue to run if panic is encountered. But the client will not get any response from the server if a panic happens. It is good that you have your own panic recovery that responds with an error message.\u003c/p\u003e",
    "date": "2021-02-03T09:51:37+07:00",
    "vote": 0
  },
  {
    "id": "bd0b824bc13a34fd4a25793233db0c55",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Why writing is important",
    "url": "https://changelog.com/gotime/164",
    "resume": "In this episode we talk about various types of writing and how we as Go developers can learn from them. Whether it is planning and preparing to write, communicating with team members, or making our code clearer for future developers to read through style guides.",
    "date": "2021-01-28T17:00:00Z",
    "vote": 0
  },
  {
    "id": "14841436152a8d986a411e57fbdd5895",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What Is Dry Code, and Is It Always A Good Thing?",
    "url": "https://blog.boot.dev/clean-code/dry-code/",
    "resume": "\u0026ldquo;Don\u0026rsquo;t repeat yourself\u0026rdquo;, or \u0026ldquo;DRY\u0026rdquo; for short, is a somewhat controversial principle of software development. It aims to make code cleaner, which is to say less buggy and easier to work with.",
    "date": "2021-01-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cc3642998c731888d618065199a238a1",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Wait for Goroutine to Finish With WaitGroup",
    "url": "https://www.jajaldoang.com/post/wait-goroutine-finish-with-waitgroup/",
    "resume": "\u003cp\u003eGoroutine is very useful to execute a process asynchronously. You can use multiple goroutines to run multiple processes at the same time. But what if you want to wait for the goroutines to finish before continue to the next process? You can use WaitGroup to wait for goroutines to finish.\u003c/p\u003e",
    "date": "2021-01-24T11:11:08+07:00",
    "vote": 0
  },
  {
    "id": "41210f5f38ed76238f36b189ae5dc569",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "CUE: Configuration superpowers for everyone",
    "url": "https://changelog.com/gotime/163",
    "resume": "On this episode we learn how to Configure, Unify, and Execute things. What’s CUE all about? Well, it’s an open source language with a rich set of APIs and tooling for defining, generating, and validating all kinds of data: configuration, APIs, database schemas, code, … you name it. Now that we’ve copy/pasted the project’s description… let’s dig in and learn how we can use CUE to make our Go programs better!",
    "date": "2021-01-21T19:30:00Z",
    "vote": 0
  },
  {
    "id": "849e896c4bd223285476e116aba3ec49",
    "source": {
      "path": "examples",
      "name": "Go Samples",
      "url": "https://gosamples.dev/index.xml"
    },
    "name": "👋 Hello World - Write your first application in Go",
    "url": "https://gosamples.dev/hello-world/",
    "resume": "\u003cp\u003eIn this example, you will learn how to write the classic \u0026ldquo;Hello World\u0026rdquo; program. \u0026ldquo;Hello World\u0026rdquo; is a simple program that displays the word \u003ccode\u003eHello World\u003c/code\u003e on the screen. Traditionally, this is the first program written by people learning to code in a new programming language.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s check how to write Golang \u0026ldquo;Hello World\u0026rdquo; program step by step.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you don\u0026rsquo;t have Golang installed, visit \u003ca href=\"https://golang.org/doc/install\" target=\"_blank\"\u003ethe official Go website\u003c/a\u003e and install the version appropriate for your operating system.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch2 id=\"golang-hello-world-program\"\u003eGolang \u0026ldquo;Hello World\u0026rdquo; program\u003c/h2\u003e\n\u003col class=\"steps\"\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eCreate \u003ccode\u003ehello-world\u003c/code\u003e directory\u003c/span\u003e\n\u003cp\u003eIt is a good practice that each new project has its own directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eSave the following program as \u003ccode\u003emain.go\u003c/code\u003e in the \u003ccode\u003ehello-world\u003c/code\u003e directory\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003cli class=\"steps__item\"\u003e\n\u003cspan class=\"steps__itemTitle\"\u003eRun your program\u003c/span\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ go run hello-world/main.go\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eOutput\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello World!\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eCongratulations! You have just created your first program in Go 🚀.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2 id=\"how-golang-hello-world-program-works\"\u003eHow Golang \u0026ldquo;Hello World\u0026rdquo; program works\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eIn Go, every program starts with a package declaration. A package is a collection of source files used to organize related code into a single unit. \u003cstrong\u003eWe are declaring a package called \u003ccode\u003emain\u003c/code\u003e here because we will need to declare the \u003ccode\u003emain()\u003c/code\u003e function, which can only be declared in a package named \u003ccode\u003emain\u003c/code\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eNext, we have the package import statement. In our program, the \u003ca href=\"https://pkg.go.dev/fmt\" target=\"_blank\"\u003e\u003ccode\u003efmt\u003c/code\u003e\u003c/a\u003e package has been imported and will be used in the \u003ccode\u003emain()\u003c/code\u003e function to print the \u0026ldquo;Hello World\u0026rdquo; text to the standard output (your screen).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"c1\"\u003e//...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003efunc main()\u003c/code\u003e starts the definition of the \u003ccode\u003emain()\u003c/code\u003e function. The \u003ccode\u003emain()\u003c/code\u003e is a special function that is executed first when the program starts. \u003cstrong\u003eAs you already know, the \u003ccode\u003emain()\u003c/code\u003e function in Go should always be declared in the \u003ccode\u003emain\u003c/code\u003e package.\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThe \u003ccode\u003emain()\u003c/code\u003e calls the \u003ca href=\"https://pkg.go.dev/fmt#Println\" target=\"_blank\"\u003e\u003ccode\u003ePrintln()\u003c/code\u003e\u003c/a\u003e function of the \u003ca href=\"https://pkg.go.dev/fmt\" target=\"_blank\"\u003e\u003ccode\u003efmt\u003c/code\u003e\u003c/a\u003e package. After starting the program, it prints the passed argument (our text \u0026ldquo;Hello World!\u0026rdquo;) to the standard output together with a new line.\u003c/p\u003e",
    "date": "2021-01-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "75a8c4617ce94d5f6ce81dcb2e550f31",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Benefits of Gamified Learning",
    "url": "https://blog.boot.dev/misc/the-benefits-of-gamified-learning/",
    "resume": "Why was that adjustment to college classes so hard? Sitting through hours of lectures and PowerPoints can be challenging for even the most dedicated students.",
    "date": "2021-01-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0eeca1e360a2373e1e8a1fe176a010f9",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "NLP is Hard Because Even Humans Don't Agree",
    "url": "https://blog.boot.dev/misc/building-an-nlp-engine-is-hard-but-not-as-hard-as-defining-terms/",
    "resume": "In my full-time role at Nuvi, I\u0026rsquo;ve been lucky enough to work on a team where we\u0026rsquo;re able to push the boundaries in the natural language processing field.",
    "date": "2021-01-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c62b04852aa3679f7c72fb9fb18b2fc0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 8 Crucial Mistakes Holding You Back From a Programming Job",
    "url": "https://blog.boot.dev/jobs/reasons-you-cant-get-a-programming-job/",
    "resume": "If you’re reading this article, you’re well aware of the great benefits that come with a programming job - high salaries for programmers, an expanding job market, exciting opportunities.",
    "date": "2021-01-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "22b3b5ad5222327fe741f5881ab8c3e5",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "NGINX Custom Error Response",
    "url": "https://www.jajaldoang.com/post/nginx-custom-error-response/",
    "resume": "\u003cp\u003eIf you use NGINX as a proxy, you may want to use a custom error response, because the default error response from NGINX is not pretty. Read this post to know how to use custom error responses in NGINX.\u003c/p\u003e",
    "date": "2021-01-15T04:36:02+07:00",
    "vote": 0
  },
  {
    "id": "5376f013a1a6cfa04e50679841ac6781",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "We're talkin' CI/CD",
    "url": "https://changelog.com/gotime/162",
    "resume": "Continuous integration and continuous delivery are both terms we have heard, but what do they really mean? What does CI/CD look like when done well? What are some pitfalls we might want to avoid? In this episode Jérôme and Marko, authors of the book “CI/CD with Docker and Kubernetes” join us to share their thoughts.",
    "date": "2021-01-14T16:30:00Z",
    "vote": 0
  },
  {
    "id": "275e1c910eee5aaaff26331715d8fda4",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Writing Simulations Using Go",
    "url": "https://www.ardanlabs.com/blog/2021/01/writing-simulations-using-go.html",
    "resume": "Introduction If you can write a for-loop, you can do statistics. - Jake Vanderplas\nA lot of developers shy away from problems which involve statistics or probability. Which is shameful since in today\u0026rsquo;s data-rich environment, you can gain a lot of insights from data.\nIn this blog post, I\u0026rsquo;ll show you how to write a simulation tool which requires no knowledge in statistics or probability. Simulations are easy to write and can be a very effective tool in research.",
    "date": "2021-01-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5b015239aca1241fd5b9ee8023c79940",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Writing a Binary Search Tree in Python with Examples",
    "url": "https://blog.boot.dev/computer-science/binary-search-tree-in-python/",
    "resume": "What is a binary search tree? 🔗A binary search tree, or BST for short, is a tree where each node is a value greater than all of its left child nodes and less than all of its right child nodes.",
    "date": "2021-01-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3ba0d854e48877da08ac92ac4d4eaae4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Building a Linked List in Python with Examples",
    "url": "https://blog.boot.dev/computer-science/building-a-linked-list-in-python-with-examples/",
    "resume": "A linked list is a linear data structure where elements are not stored next to each other in memory.",
    "date": "2021-01-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9020764fe4d7ca70e08707421c16c931",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go Panic!",
    "url": "https://changelog.com/gotime/161",
    "resume": "Mat Ryer hosts our don’t-call-it-jeopardy game show live at GopherCon! Kat Zień, Mark Bates, and L Körbes put their Go knowledge to the test! Can you outwit our intrepid contestants?",
    "date": "2021-01-07T22:30:00Z",
    "vote": 0
  },
  {
    "id": "1e6fd0acb2eecd5c3f0e642a36a356d7",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Enable WordPress HTTPS With AWS CloudFront",
    "url": "https://www.jajaldoang.com/post/enable-wordpress-https-with-aws/",
    "resume": "\u003ch3 id=\"why-do-you-need-to-enable-https-for-your-wordpress-site\"\u003eWhy do you need to enable HTTPS for your WordPress site?\u003c/h3\u003e\n\u003cp\u003eHTTPS secures your data transmitted in the network by encrypting it so that the intruder can\u0026rsquo;t see and tamper the data. It is important to protect your web with HTTPS, whether your web is big e-commerce or just a simple blog. This article will show you how to enable HTTPS for your WordPress site using Amazon CloudFront.\u003c/p\u003e",
    "date": "2021-01-07T20:14:43+07:00",
    "vote": 0
  },
  {
    "id": "ccda1081bde005bcadeacfac52fabbe4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Best Ways To Get a Programming Job with No Experience",
    "url": "https://blog.boot.dev/jobs/get-a-programming-job-with-no-experience/",
    "resume": "It sounds like a pipe dream. A well-paid programming job, with no experience? Get out of town.",
    "date": "2021-01-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "47cfca1d060a5802e2c0f4424395ce10",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "A few bytes here, a few there, pretty soon you’re talking real memory",
    "url": "https://dave.cheney.net/2021/01/05/a-few-bytes-here-a-few-there-pretty-soon-youre-talking-real-memory",
    "resume": "Today\u0026#8217;s post comes from a recent Go pop quiz. Consider this benchmark fragment. A convenience wrapper around sort.Sort(sort.StringSlice(s)), sort.Strings sorts the input in place, so it isn\u0026#8217;t expected to allocate (or at least that\u0026#8217;s what 43% of the tweeps who responded thought). However it turns out that, at least in recent versions of Go, each [\u0026#8230;]",
    "date": "2021-01-05T12:39:20Z",
    "vote": 0
  },
  {
    "id": "d27852b263a41df7d0ed23555dc5783a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The 8 Most Popular Coding Languages of 2022",
    "url": "https://blog.boot.dev/misc/popular-coding-languages-2021/",
    "resume": "And more importantly, how to choose the most popular coding language you should learn. 🔗How can you decide what the most popular coding language is?",
    "date": "2021-01-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ceda1202bb78358f5daf5f1801372e9b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev's Refer a Friend Program",
    "url": "https://blog.boot.dev/news/refer-a-friend/",
    "resume": "We think learning is better with friends! For every person you invite to join, you’ll both earn some free gems.",
    "date": "2020-12-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dd3673526234ebabc10ea4a1581db86e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Converting an Array to a JSON Object in JavaScript",
    "url": "https://blog.boot.dev/javascript/converting-an-array-to-json-object-in-javascript/",
    "resume": "JSON, or \u0026ldquo;JavaScript Object Notation\u0026rdquo;, is a highly popular data exchange format that\u0026rsquo;s widely used in web development.",
    "date": "2020-12-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "48efd26434b3ffcc0731f919bdb992a4",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go in other spoken languages",
    "url": "https://changelog.com/gotime/160",
    "resume": "L Körbes– creator of Aprenda Go– joins our panel of gophers to discuss teaching and learning Go in non-English languages. Along the way: Mat reveals his origin story, Kris explains why all idioms are garbage, and Natalie gives conference tips.",
    "date": "2020-12-17T17:10:00Z",
    "vote": 0
  },
  {
    "id": "78b4db1b6a69bb8b2223e2bd257130f4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Should you Learn Computer Science or Software Engineering?",
    "url": "https://blog.boot.dev/computer-science/computer-science-vs-software-engineering/",
    "resume": "The most important thing to understand about these two fields of study is that, ultimately, they are similar.",
    "date": "2020-12-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "896a28aaaa803110f1ad2efc5829242d",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "The story of the one line fix",
    "url": "https://dave.cheney.net/2020/12/15/the-story-of-the-one-line-fix",
    "resume": "Picture yourself, an engineer working at the hottest distributed microservices de jour, assigned to fix a bug. You jump into an unfamiliar codebase and quickly locate the line where the problem occurred. The fix is simple, just return early or substitute a default value in the case that one cannot be determined from your input. [\u0026#8230;]",
    "date": "2020-12-15T04:45:54Z",
    "vote": 0
  },
  {
    "id": "3db9178436fe28b787fb39055642aa10",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Guide to Getting a Certificate in Computer Science",
    "url": "https://blog.boot.dev/computer-science/guide-to-certificate-in-computer-science/",
    "resume": "There are so many reasons to want to get a certificate in computer science in 2021, especially when you compare it to alternatives like getting a degree or attending a coding bootcamp.",
    "date": "2020-12-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "293d20deb4ed2db81047dd35d46682b7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "6 Computer Science Resume Examples",
    "url": "https://blog.boot.dev/computer-science/computer-science-resumes/",
    "resume": "It\u0026rsquo;s really hard to get your foot in the door for engineering interviews, especially if you have no experience and are looking for an entry-level position.",
    "date": "2020-12-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "70b799af003e8cece9abb60123b8f852",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "What to expect when you’re NOT expecting",
    "url": "https://changelog.com/gotime/159",
    "resume": "Mat Ryer hosts a spectacular panel with expert debuggers Derek Parker, Grant Seltzer Richman, and Hana Kim from the Go Team. Let’s face it, even the best-intended code doesn’t always do what you want it to. What’s a Gopher to do? Listen to this, that’s what!",
    "date": "2020-12-10T17:00:00Z",
    "vote": 0
  },
  {
    "id": "b25dd23f5bb2383f25d5490d327c0931",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Highest-Paying Computer Science Jobs",
    "url": "https://blog.boot.dev/computer-science/highest-paying-computer-science-jobs/",
    "resume": "There are many jobs within the software industry, and most of them are easier to land or are higher-paying once you land them, if you have a solid grasp of computer science fundamentals.",
    "date": "2020-12-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cece7044c5499b25400acae820c5c3d0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The engineer who changed the game",
    "url": "https://changelog.com/gotime/takeover-clh-s6e1",
    "resume": "Today we’re sharing a full-length episode of Command Line Heroes from Season 6 for you to check out. We hand picked this episode for you to listen to. Many of us grew up playing cartridge-based games. But there’s few who know the story behind how those cartridges came to be. And even fewer who know the story of the man behind them: Jerry Lawson. Before Jerry, a gaming console could only play one game. Jerry quite literally changed the game. This episode shares Jerry’s story of inventing the cartridge-based system for gaming consoles.",
    "date": "2020-12-04T14:30:00Z",
    "vote": 0
  },
  {
    "id": "80f17a367f943371f2133f8a15ec7f11",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Play with Go",
    "url": "https://changelog.com/gotime/158",
    "resume": "Play with Go is a set of hands-on, interactive tutorials for learning the tools used while programming in Go. In this episode we are joined by its creators, Paul Jolly and Marcos Nils, as we learn more about what motivated the creation of the project, what technology it was built on, and how you can help contribute additional guides to help your fellow gophers!",
    "date": "2020-12-03T17:30:00Z",
    "vote": 0
  },
  {
    "id": "26a23cbbc1af0688810f6fa83f810044",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Computer Information Systems vs Computer Science",
    "url": "https://blog.boot.dev/computer-science/should-you-learn-computer-information-systems-or-computer-science/",
    "resume": "As technology continues to advance, the need for professionals who are capable of utilizing and understanding computers continues to grow.",
    "date": "2020-12-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "de1bf6ba0b370ca37941b0cdaaada087",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The History of Computer Science - A Timeline",
    "url": "https://blog.boot.dev/computer-science/the-history-of-computer-science/",
    "resume": "Prehistory 🔗The Antikthyera Mechanism\nFor as long as humans have needed to count, they have endeavored to find ways to make that process simpler.",
    "date": "2020-12-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "94c17da322f9212dc68acd27b7b7f4cb",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Certificates vs Diplomas in Computer Science [2022 Updated]",
    "url": "https://blog.boot.dev/computer-science/compsci-certificate-vs-degree/",
    "resume": "When I was looking into getting my first job related to programming, I had no idea what the difference between a certificate and a diploma was.",
    "date": "2020-12-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "92a196214f0ecb4851ddba6f88187862",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Examples of Heuristics in Computer Science",
    "url": "https://blog.boot.dev/computer-science/examples-of-heuristics-in-computer-science/",
    "resume": "Heuristics in computer science and artificial intelligence are \u0026ldquo;rules of thumb\u0026rdquo; used in algorithms to assist in finding approximate solutions to complex problems.",
    "date": "2020-11-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e338c60460c1f12c77f29d907fe4a5a8",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Working with SQLite using Go and Python",
    "url": "https://www.ardanlabs.com/blog/2020/11/working-with-sqlite-using-go-python.html",
    "resume": "Introduction I prefer to use relational (SQL) databases in general since they provide several features that are very useful when working with data. SQLite is a great choice since the database is a single file, which makes it easier to share data. Even though it\u0026rsquo;s a single file, SQLite can handle up to 281 terabytes of data. SQLite also comes with a command line client called sqlite3 which is great for quick prototyping.",
    "date": "2020-11-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "60ef47b02bf240f8b5caa8e069be2e26",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Cannot import main: a Go Module gotcha",
    "url": "https://appliedgo.net/testmain/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eTwo questions for you: Do you name an app module simply \u0026ldquo;main\u0026rdquo;? And do you happen to write tests for a main package? If so, you are in big trouble! (Ok, that was a bit clickbait-ey\u0026hellip;) Well, the world is not exactly going to end; however, you might encounter an unexpected error that is hard to track down.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2020-11-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a365b4c56e5271c4a5f34507e159eaa3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The secret life of gophers",
    "url": "https://changelog.com/gotime/157",
    "resume": "Join Mat Ryer for a fun conversation with Kris Brandow, Angelica Hill, and Natalie Pistunovich about how these Gophers get work/life done in this crazy world! Expect to learn about work environment must-haves, communication tips \u0026 tricks, developer tool recommendations, and much more!",
    "date": "2020-11-26T15:00:00Z",
    "vote": 0
  },
  {
    "id": "7bad975869b9fec1d5109ea3913ff8cf",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Create a Custom Checkbox Form in Vue",
    "url": "https://blog.boot.dev/javascript/how-to-create-a-custom-checkbox-form-in-vue/",
    "resume": "You have a problem. The browser\u0026rsquo;s default checkbox form is ugly and outdated, but importing an entire library just to change the styling seems like overkill.",
    "date": "2020-11-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7a6e95b243c75d343dc119a2ee3e43d5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Make a Custom Slider Component in Vue",
    "url": "https://blog.boot.dev/javascript/custom-slider-component-vue/",
    "resume": "Creating a custom slider component can be tricky, especially if you want to create a lean standalone Vue component.",
    "date": "2020-11-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2817de03ec6b24093028ce8943418452",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Writing Good Unit Tests; Don't Mock Database Connections",
    "url": "https://blog.boot.dev/clean-code/writing-good-unit-tests-dont-mock-database-connections/",
    "resume": "Unit tests are incredibly important because they allow us to demonstrate the correctness of the code we\u0026rsquo;ve written.",
    "date": "2020-11-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ac55f7500b3cfd6d4a2b7c55d36cdd50",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "When distributed systems Go wrong",
    "url": "https://changelog.com/gotime/156",
    "resume": "Monitoring and debugging distributed systems is hard. In this episode, we catch up with Kelsey Hightower, Stevenson Jean-Pierre, and Carlisia Thompson to get their insights on how to approach these challenges and talk about the tools and practices that make complex distributed systems more observable.",
    "date": "2020-11-19T19:45:00Z",
    "vote": 0
  },
  {
    "id": "7574281c83b53c27c83ff24ed747cb54",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Why Students Struggle Getting a Job After Coding Bootcamp",
    "url": "https://blog.boot.dev/jobs/getting-a-job-after-coding-bootcamp-is-hard/",
    "resume": "Imagine, like so many folks, that you decide what you want to study when you\u0026rsquo;re just 18.",
    "date": "2020-11-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b70ad9db8b1811a51048fbe71aad0663",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Comprehensive Guide to Learn Computer Science Online",
    "url": "https://blog.boot.dev/computer-science/comprehensive-guide-to-learn-computer-science-online/",
    "resume": "Be careful about deciding the best way to learn to code. Not all paths are equally effective.",
    "date": "2020-11-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7a528e1eae378bd10b3b38264e320464",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Should You Commit the Vendor Folder in Go?",
    "url": "https://blog.boot.dev/golang/should-you-commit-the-vendor-folder-in-go/",
    "resume": "If you\u0026rsquo;re asking \u0026ldquo;should I commit the vendor folder in my Go project to Git?\u0026rdquo;, the answer is \u0026ldquo;almost always\u0026rdquo;.",
    "date": "2020-11-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "26233cf8aa93645edda53a65667851bc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "What would you remove from Go?",
    "url": "https://changelog.com/gotime/155",
    "resume": "When we talk about improving a programming language, we often think about what features we would add. Things like generics in Go, async/away in JS, etc. In this episode we take a different approach and talk about what we would remove from Go to make it better.",
    "date": "2020-11-12T16:20:00Z",
    "vote": 0
  },
  {
    "id": "8be0050d8bcb0bcd9ea2cbf92ed87ef0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Long Does It Take To Learn To Code?",
    "url": "https://blog.boot.dev/jobs/how-long-does-it-take-to-learn-to-code/",
    "resume": "There are so many obvious reasons to learn to code: freelancing opportunities, career advancement, salary increase, and personal satisfaction among others.",
    "date": "2020-11-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f74d0f7f7d578e3a8c1d7eaed1d199c0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Much Do Software Engineers Make?",
    "url": "https://blog.boot.dev/jobs/how-much-do-software-engineers-make/",
    "resume": "Software engineering continues to be one of the most lucrative career paths in the tech industry.",
    "date": "2020-11-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6329d7ab1a5c23df074160edf97ee272",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "JavaScript vs Java - Differences, Similarities, and History",
    "url": "https://blog.boot.dev/javascript/javascript-vs-java/",
    "resume": "The naming of Java and JavaScript confuses many new programmers. They sound so similar, so one might think they have the same use-cases, similar properties, or maybe the same company created both languages.",
    "date": "2020-11-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b9371e144d9bbe4d1d02e226e627242a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "How Go helped save HealthCare.gov",
    "url": "https://changelog.com/gotime/154",
    "resume": "Paul Smith (from “Obama’s Trauma Team”) tells us the tale of how Go played a big role in the rescuing and rebuilding of the HealthCare.gov website. Along the way we learn what the original team did wrong, how the rescue team kept it afloat during huge traffic spikes, and what they’ve done since to rebuild it to serve the people’s needs.",
    "date": "2020-11-05T17:15:00Z",
    "vote": 0
  },
  {
    "id": "e0ef95e0ab5a139d560058480579b6e7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top Web Development Programming Languages; A Comparison",
    "url": "https://blog.boot.dev/misc/top-web-development-languages/",
    "resume": "The software development industry is growing at a break-neck pace. Currently, there are close to 19 million software developers in the world, and this number is expected to double by 2030.",
    "date": "2020-11-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b2a9e76390801c01dccca4cdc43e9b2b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Base64 vs Base58 Encoding",
    "url": "https://blog.boot.dev/bitcoin/base64-vs-base58-encoding/",
    "resume": "Base64 is one of the most popular encoding formats for representing data. Have some binary data?",
    "date": "2020-11-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "14cefc521bfbe65bd55a804137f09461",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Learn Go Fast - Top Courses and Resources",
    "url": "https://blog.boot.dev/golang/learn-go-fast/",
    "resume": "Want to learn Go fast? The good news is that Go is one of the simplest programming languages out there.",
    "date": "2020-11-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0d6bd0d276003a8e88c379d8f2f9b699",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Python and Pandas : First Contact with Data",
    "url": "https://www.ardanlabs.com/blog/2020/11/python-pandas-first-contact-with-data.html",
    "resume": "Introduction Every single company I\u0026rsquo;ve worked at and talked to has the same problem without a single exception so far - poor data quality, especially tracking data. Either there\u0026rsquo;s incomplete data, missing tracking data, duplicative tracking data. - DJ Patil\nI spend a lot of my time digging into data at various companies. Most of the time I’m surprised by what I see and so are the engineers and analysts that work at these companies.",
    "date": "2020-11-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b702691ae5b96b56b6e8971ce484535d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "GitHub's Go-powered CLI",
    "url": "https://changelog.com/gotime/153",
    "resume": "In this episode we discuss Mislav’s experience building not one, but two Github CLIs - hub and gh. We dive into questions like, “What lead to the decision to completely rewrite the CLI in Go?”, “How were you testing the CLI, especially during the transition?”, and “What Go libraries are you using to build your CLI?”",
    "date": "2020-10-29T16:15:00Z",
    "vote": 0
  },
  {
    "id": "95fd8e67963d99abdebb70362e23565b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Best Practices for Commenting Code",
    "url": "https://blog.boot.dev/clean-code/code-comments/",
    "resume": "I often hear that we need more and better comments in the code we write. In my experience, we frequently need better comments, we rarely need more, and we sometimes need less.",
    "date": "2020-10-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "babe07e4a1f61b38976c70d300c126d6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Restart All Pods in a Kubernetes Namespace",
    "url": "https://blog.boot.dev/open-source/how-to-restart-all-pods-in-a-kubernetes-namespace/",
    "resume": "Where I work, we use a repo-per-namespace setup and so it often happens that I want to restart all pods and deployments in a single Kubernetes namespace.",
    "date": "2020-10-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "57a49cf9789aabac7db12e6bf079b757",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "#GoVirCon",
    "url": "https://changelog.com/gotime/152",
    "resume": "With Gophercon rapidly approaching, we go behind the scenes to find out what it takes to deliver the world’s largest Go conference.",
    "date": "2020-10-22T21:30:00Z",
    "vote": 0
  },
  {
    "id": "8d050a50a54dd32bfe0fd5ef259c108c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Nuances of Constants in Go; Go Isn't JavaScript",
    "url": "https://blog.boot.dev/clean-code/constants-in-go-vs-javascript-and-when-to-use-them/",
    "resume": "Constants can be confusing and easy to misuse in Go if you are coming from an untyped language.",
    "date": "2020-10-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "efccaba715520b701f6cc40da07a298c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "6 Things to Avoid When Contributing to Open-Source Projects",
    "url": "https://blog.boot.dev/open-source/contributing-to-open-source/",
    "resume": "With #HacktoberFest being a thing, there has been an influx of devs desperately trying to contribute to their favorite Open-Source projects.",
    "date": "2020-10-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d168bf0188852056e1838dc569947ea9",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Go: You Should Know This Before Using Defer",
    "url": "https://www.jajaldoang.com/post/go-you-should-know-this-before-using-defer/",
    "resume": "\u003cp\u003eDefer is one of my favorite things in Go. You can use it to make sure operation is executed before a function returns. It is very useful. I think almost all Go programmer, if not all, has used \u003ccode\u003edefer\u003c/code\u003e statement in their application. But there is one thing you should know before using defer in Go.\u003c/p\u003e",
    "date": "2020-10-19T10:03:52+07:00",
    "vote": 0
  },
  {
    "id": "a1b80b62a9003353935cfd99746fef14",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Functional Programming Course Released",
    "url": "https://blog.boot.dev/news/free-functional-programming-course-released-javascript-and-purescript/",
    "resume": "We just launched our new \u0026ldquo;Learn Functional Programming\u0026rdquo; course, and frankly, I\u0026rsquo;m a bit exhausted (more on that later).",
    "date": "2020-10-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f0c5f2440cca5df35746a11b0ea88834",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Introducing your team to Go",
    "url": "https://changelog.com/gotime/151",
    "resume": "Can’t find a job working in Go? Perhaps introducing your current team to Go is the solution. In this episode we talk about how Go was introduced at different organizations, potential pitfalls that may sabotage your efforts, some advice on how to convince your team and CTO to use Go and more.",
    "date": "2020-10-15T21:00:00Z",
    "vote": 0
  },
  {
    "id": "51e8f661a062faa50206d89aef58f56d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How To Correctly Validate Passwords - Most Websites Do It Wrong",
    "url": "https://blog.boot.dev/open-source/how-to-validate-passwords/",
    "resume": "You\u0026rsquo;ve probably visited a site and attempted to sign-up only to be met with errors such as:",
    "date": "2020-10-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "72fcc662effe7d9bb0926c9ed9de7348",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "6 Tips for Hiring Developers",
    "url": "https://blog.boot.dev/jobs/how-to-hire-developers/",
    "resume": "So you want to hire a developer? Or maybe you just want to know what is going through the heads of employers like myself.",
    "date": "2020-10-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c085be9005f8aafb59edc263da82b97a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Running Rust in the Browser with Web Assembly",
    "url": "https://blog.boot.dev/rust/rust-in-the-browser/",
    "resume": "I\u0026rsquo;ve recently been working on getting Rust support in the boot.dev app. To write a more engaging course, I want students to be able to write and execute code right in the browser.",
    "date": "2020-10-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0bdd11b6568ea24989bb366fa00e1b81",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Cloud Native Go",
    "url": "https://changelog.com/gotime/150",
    "resume": "What is cloud native? In this episode Johnny and Aaron explain it to Mat and Jon. They then dive into questions like, “What problems does this solve?” and “Why was Go such a good fit for this space?”",
    "date": "2020-10-08T15:30:00Z",
    "vote": 0
  },
  {
    "id": "cfdb5c96f775743a291a6868bfb30424",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 4 Coding Languages To Learn For Beginners in 2022",
    "url": "https://blog.boot.dev/misc/top-coding-languages-for-beginners/",
    "resume": "Coding languages, tools, and frameworks are in a constant state of flux, improvement, deprecation, and popularity swings.",
    "date": "2020-10-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a373bca7177d265e13580e2e930aae0c",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "MySQL Tutorial: Connecting to MySQL and Creating a DB using Go",
    "url": "https://golangbot.com/connect-create-db-mysql/",
    "resume": "Learn how to connect to MySQL and create a database using the database/sql package. This tutorial also deals with DB connection pooling in Go.",
    "date": "2020-10-05T19:00:00Z",
    "vote": 0
  },
  {
    "id": "5e79140c672595216838c67eddbbae4c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Education's Shameful State of the Art",
    "url": "https://blog.boot.dev/misc/educations-shameful-state-of-the-art/",
    "resume": "Higher education had its problems before Covid-19. Now the crippling inefficiencies, backbreaking cost, and lack of alternatives are being forced into the spotlight.",
    "date": "2020-10-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "73e05e218ee04da9921bde8693b379f6",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: How Does a Program Recover?",
    "url": "https://medium.com/a-journey-with-go/go-how-does-a-program-recover-fbbbf27cc31e?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-does-a-program-recover-fbbbf27cc31e?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/2600/1*4zRau44piN5HjUnTnJsMOw.png\" width=\"4325\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003ePanics in Go are triggered when the program cannot handle an error properly, such as invalid memory access. It can also be triggered by\u0026#x2026;\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-does-a-program-recover-fbbbf27cc31e?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2020-10-02T15:21:58Z",
    "vote": 0
  },
  {
    "id": "12a598766535cf26064c350a9b8996f3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "There's a lot to learn about teaching Go",
    "url": "https://changelog.com/gotime/149",
    "resume": "In this episode we dive into teaching Go, asking questions like, “What techniques work well for teaching programming?”, “What role does community play in education?”, and “What are the best ways to improve at Go as a beginner/intermediate/senior dev?”",
    "date": "2020-10-01T15:00:00Z",
    "vote": 0
  },
  {
    "id": "1b02e1b8d03377ca48e352610f59d266",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Structure a Golang Project",
    "url": "https://blog.boot.dev/golang/golang-project-structure/",
    "resume": "I lead a team that\u0026rsquo;s responsible for anywhere from 15-25 Go microservices at any given time.",
    "date": "2020-10-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f2e1a02c29213868dc0b29ae0b0915ae",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Generics Part 03: Struct Types and Data Semantics",
    "url": "https://www.ardanlabs.com/blog/2020/09/generics-03-struct-types-and-data-semantics.html",
    "resume": "Series Index Generics Part 01: Basic Syntax\nGenerics Part 02: Underlying Types\nGenerics Part 03: Struct Types and Data Semantics\nIntroduction In the previous post, I showed you how to declare a user-defined type, based on an underlying type. I did this through the progression of writing different versions of the same type using concrete types, the empty interface and then finally, generics. I also provided information on how the compiler was limited in its ability to infer the substitution for the generic type during zero value construction, but it could with initialized construction.",
    "date": "2020-09-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "162c048998c054903bf03c85a0d38437",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What Is Entropy In Cryptography?",
    "url": "https://blog.boot.dev/cryptography/what-is-entropy-in-cryptography/",
    "resume": "If you\u0026rsquo;re familiar with the laws of thermodynamics, you may recognize the second law as the one that deals with entropy.",
    "date": "2020-09-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "28d241e60c6eb3911d3c73831962be69",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Make a Simple Vue Custom Select Component",
    "url": "https://blog.boot.dev/javascript/custom-select-component-in-vue/",
    "resume": "Creating a custom select tag with its own styling is notoriously difficult. Sometimes it\u0026rsquo;s impossible to build from scratch without a combination of styled divs and custom JavaScript.",
    "date": "2020-09-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "92c7497ec36e3ed5d93d7071b455f2a9",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The one with Brad Fitzpatrick",
    "url": "https://changelog.com/gotime/148",
    "resume": "Brad Fitzpatrick returns to the show (last heard on episode 44) to field a mixed bag of questions from Johnny, Mat, and the live listeners. How’d he get in to programming? What languages did he use before Go? What’s he up to now that he’s not working on the Go language? And of course… does he have any unpopular opinions he’d like to share? 😏",
    "date": "2020-09-24T16:00:00Z",
    "vote": 0
  },
  {
    "id": "05d81eacb5dc9dc252b54d076ac6128c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Running Python in the Browser with Web Assembly",
    "url": "https://blog.boot.dev/python/python-in-the-browser/",
    "resume": "I\u0026rsquo;ve been wanting to expand boot.dev\u0026rsquo;s curriculum, and one of the most requested programming languages has been Python.",
    "date": "2020-09-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a1f2785c8e4caddb9f2445cbff0d344d",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: Goroutine Leak Detector",
    "url": "https://medium.com/a-journey-with-go/go-goroutine-leak-detector-61a949beb88?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-goroutine-leak-detector-61a949beb88?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/1806/1*40XhRjPvLrI887jEAg_N1w.png\" width=\"1806\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003eA goroutine leak can easily be detected via an APM that monitors the number of live goroutines. Here is an example from NewRelic of a\u0026#x2026;\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-goroutine-leak-detector-61a949beb88?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2020-09-23T14:50:40Z",
    "vote": 0
  },
  {
    "id": "9458b330eca4b7c9052093bcc91380dc",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Running Go in the Browser with WASM and Web Workers",
    "url": "https://blog.boot.dev/golang/running-go-in-the-browser-wasm-web-workers/",
    "resume": "We\u0026rsquo;ve recently made big changes to how we execute Go in the browser on boot.dev and want to explain the enhancements.",
    "date": "2020-09-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "54581c449422641a39069e21eb58eb5f",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Practical Patterns for Technical Writing",
    "url": "https://blog.boot.dev/clean-code/practical-patterns-for-technical-writing/",
    "resume": "Writing technical documents like API or architectural documentation which exceeds a simple flow diagram can be a daunting task.",
    "date": "2020-09-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d770cb21a93ed9f783783d125d14ff0f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Community Q\u0026A",
    "url": "https://changelog.com/gotime/147",
    "resume": "A community Q\u0026A special. You asked the questions, and we discussed them live on air. A few example questions include “When is it okay to use init?”, “When should we use constructors?”, and “How should Go code be structured?”",
    "date": "2020-09-17T18:00:00Z",
    "vote": 0
  },
  {
    "id": "f76dd310259bfd01201d86acede291ca",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Elliptic Curve Cryptography: A Basic Introduction",
    "url": "https://blog.boot.dev/cryptography/elliptic-curve-cryptography/",
    "resume": "Elliptic Curve Cryptography (ECC) is a modern public-key encryption technique famous for being smaller, faster, and more efficient than incumbents.",
    "date": "2020-09-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "25eea308b0414102aba10a490f81bffb",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "NSQ: Requeue vs Requeue Without Backoff",
    "url": "https://www.jajaldoang.com/post/nsq-requeue-vs-requeue-without-backoff/",
    "resume": "\u003cp\u003eNSQ enables us to requeue a message with a delay duration. There are two functions to requeue messages, that is \u003cstrong\u003eRequeue\u003c/strong\u003e and \u003cstrong\u003eRequeueWithoutBackoff\u003c/strong\u003e. This article will show you the differences and help you choose the most suitable function for your use case.\u003c/p\u003e",
    "date": "2020-09-15T12:01:36+07:00",
    "vote": 0
  },
  {
    "id": "f60009d4fdc7909ed1ee36427b23777a",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Python and Go : Part IV - Using Python in Memory",
    "url": "https://www.ardanlabs.com/blog/2020/09/using-python-memory.html",
    "resume": "Series Index Python and Go: Part I - gRPC\nPython and Go: Part II - Extending Python With Go\nPython and Go: Part III - Packaging Python Code\nPython and Go: Part IV - Using Python in Memory\nIntroduction In a previous post we used gRPC to call Python code from Go. gRPC is a great framework, but there is a performance cost to it. Every function call needs to marshal the arguments using protobuf, make a network call over HTTP/2, and then un-marshal the result using protobuf.",
    "date": "2020-09-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "26632497448e8b675f34673da1af3fa5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "\"Learn Algorithms\" Course Released",
    "url": "https://blog.boot.dev/news/big-o-algorithms-course-released/",
    "resume": "We\u0026rsquo;ve launched our new Learn Algorithms course! We wrote this course for engineers who need a refresher on computer science basics or want to learn the fundamentals for the first time.",
    "date": "2020-09-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "73ca59f2ccde43e33b034c2c6265556e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hits of the Summer",
    "url": "https://changelog.com/gotime/146",
    "resume": "This episode is different than what you’re used to. We’ve been clipping highlights of the show for awhile now to share on Twitter and YouTube. A side effect of that effort is a bunch of awesome clips just sitting on Jerod’s hard drive collecting digital dust. So, here’s a beta test of a “best of” style clips show covering the summer months. Let us know if you like it!",
    "date": "2020-09-10T15:15:00Z",
    "vote": 0
  },
  {
    "id": "198e6f4f9f43ef6b3325b06208656973",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Is AES-256 Quantum Resistant?",
    "url": "https://blog.boot.dev/cryptography/is-aes-256-quantum-resistant/",
    "resume": "With quantum computers getting more powerful each year, many worry about the safety of modern encryption standards.",
    "date": "2020-09-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "132327391ad24e5b4a5fd3a42d83a974",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Make Pure Functions in Golang",
    "url": "https://blog.boot.dev/golang/pure-functions-in-golang/",
    "resume": "Pure functions are often hyped up in the JavaScript world, probably because of the abundance of stateful front end applications.",
    "date": "2020-09-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a354f5b4dff5da22a05a4a9448433835",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Guard Clauses - How to Clean up Conditionals",
    "url": "https://blog.boot.dev/clean-code/guard-clauses/",
    "resume": "One of the first concepts new developers learn is the if/else statement. If/else statements are the most common way to execute conditional logic.",
    "date": "2020-09-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7f927f27923d6ba8a48303adf7bcca39",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Create a Golang Video Streaming Server Using HLS",
    "url": "https://blog.boot.dev/golang/golang-video-stream-server/",
    "resume": "In this tutorial, we\u0026rsquo;ll go step-by-step through building a video streaming API (which will work for music as well) in Go.",
    "date": "2020-09-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ae75f0b3ca0a51a0ce6f9612d5c3f562",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Füźžįñg",
    "url": "https://changelog.com/gotime/145",
    "resume": "A deep dive on Fuzzing and a close look at the official Fuzzing proposal for Go.",
    "date": "2020-09-03T16:00:00Z",
    "vote": 0
  },
  {
    "id": "74de322982d8e5e8e9dbd8e4a0a08692",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Should You Return Empty or Nil Slices in Go?",
    "url": "https://blog.boot.dev/golang/empty-vs-nil-slices-golang/",
    "resume": "In Go, we often need to return zero values. Idiomatic Go encourages the use of guard clauses, and guard clauses necessitate the need to return early.",
    "date": "2020-09-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d1a435a6a700915cb32a9c7d4a8939ce",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: Multiple Errors Management",
    "url": "https://medium.com/a-journey-with-go/go-multiple-errors-management-a67477628cf1?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-multiple-errors-management-a67477628cf1?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/2124/1*AqxQgrwYwyaNxnlc7GAc6Q.png\" width=\"2124\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003eError management in Go is always prone to debate and a recurrent topic in the annual survey about the biggest challenges developers are\u0026#x2026;\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-multiple-errors-management-a67477628cf1?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2020-09-01T13:44:28Z",
    "vote": 0
  },
  {
    "id": "dbb797f5608203337c8c30c58d2da7aa",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Slow Is Smooth, Smooth Is Fast - 25% of Our Time Refactoring",
    "url": "https://blog.boot.dev/clean-code/spend-time-refactoring/",
    "resume": "My team has been spending less of our \u0026ldquo;free\u0026rdquo; time working on bugs and features from the backlog, and more time refactoring our code and tests.",
    "date": "2020-09-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "732405e9f5d17e41962504b0053c2e1e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 15 Golang Interview Questions [Updated 2022]",
    "url": "https://blog.boot.dev/golang/top-golang-interview-questions/",
    "resume": "Let\u0026rsquo;s take a look at some good technical questions to be familiar with, whether you are the interviewer or the interviewee.",
    "date": "2020-08-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "171e0b8c8be2bb7be2117243d174b416",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Creating a Custom Tooltip Component in Vue",
    "url": "https://blog.boot.dev/javascript/custom-tooltip-component-in-vue/",
    "resume": "There are plenty of libraries out there that will have you up and running with a good tooltip solution in minutes.",
    "date": "2020-08-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ff16b9e2c73bf0db703daf52984abc8e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building desktop apps with Go + web tech",
    "url": "https://changelog.com/gotime/144",
    "resume": "Building desktop applications is tricky. Every OS has its own set of tools, and you often need to learn a new language for each. In this episode we talk with Wails creator Lea Anthony about how the build tool enables developers to create desktop apps using Go and their normal JS frontend (React, Vue, Anguluar, or whatever you want).",
    "date": "2020-08-27T18:45:00Z",
    "vote": 0
  },
  {
    "id": "fe8886663ae446f6f346431ceba99381",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "Selenium: Element not found in cache",
    "url": "https://sdet.us/selenium-element-not-found-in-cache/",
    "resume": "Many years ago, when I first started with web automation, I used a Ruby web framework called Watir. A lot has changed since then and I\u0026#8217;ve used many different automation frameworks, including Golem, Nightwatch and others. Recently I\u0026#8217;ve been going back to direct calls to Selenium, rather than using a framework. Calling Selenium directly is [\u0026#8230;]",
    "date": "2020-08-27T00:55:39Z",
    "vote": 0
  },
  {
    "id": "56990befd8e26f0dcc389e11b20ff4cf",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "\"Interview Prep - Golang\" Course Released",
    "url": "https://blog.boot.dev/news/interview-prep-golang-course-released/",
    "resume": "We just launched Interview Prep - Golang, a quick course for those looking to brush up on some Go quirks before walking into an interview.",
    "date": "2020-08-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7e2d7e3eaf2cfa6bf6dc8d6039f06f41",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Bcrypt Step by Step",
    "url": "https://blog.boot.dev/cryptography/bcrypt-step-by-step/",
    "resume": "Bcrypt is a key derivation function, which can be thought of as a special kind of hash function.",
    "date": "2020-08-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "62242202055e2ad88c39f94d1420fdad",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "(Very) Basic Intro to Lattices in Cryptography",
    "url": "https://blog.boot.dev/cryptography/very-basic-intro-to-lattices-in-cryptography/",
    "resume": "Lattice-based cryptography, an important contender in the race for quantum-safe encryption, describes constructions of cryptographic primitives that involve mathematical lattices.",
    "date": "2020-08-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c6de006dd609fe889be59f33cf8b1e8e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "context.Context",
    "url": "https://changelog.com/gotime/143",
    "resume": "Francesc Campoy and Isobel Redelmeier joins the panel to discuss Go’s context package including real-world insights into its use and misuse.",
    "date": "2020-08-20T21:30:00Z",
    "vote": 0
  },
  {
    "id": "8666783b2057178cde7d10095a8efda3",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Shamir's Secret Sharing Step-By-Step",
    "url": "https://blog.boot.dev/cryptography/shamirs-secret-sharing/",
    "resume": "Adi Shamir\u0026rsquo;s Secret Sharing is a cryptographic algorithm that allows distinct parties to jointly share ownership of a single secret by holding shares.",
    "date": "2020-08-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b814f65672a2f01b039416a40e214d18",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Generics Part 02: Underlying Types",
    "url": "https://www.ardanlabs.com/blog/2020/08/generics-02-underlying-types.html",
    "resume": "Changes The draft is a living document which means these posts will need to change over time. This section documents when changes have taken place to this post.\n21/08/20 : Moving forward with the generics design draft\nSeries Index Generics Part 01: Basic Syntax\nGenerics Part 02: Underlying Types\nGenerics Part 03: Struct Types and Data Semantics\nIntroduction In the previous post, I showed you how to write a generic function in Go using the proposed syntax from the generics draft document.",
    "date": "2020-08-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d29419740fec555fde108baa29a76b30",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "All about that infra(structure)",
    "url": "https://changelog.com/gotime/142",
    "resume": "Infra, Devops, Systems Engineer, SRE, and the list goes on and on. What do these terms mean? Why does every job listing for the same role seem to entail different responsibiliities? Why is it important for developers to be familiar with the infrastructure their code is running on? Tune in to gain some insights into all of this and more!",
    "date": "2020-08-13T16:15:00Z",
    "vote": 0
  },
  {
    "id": "8b9a0d90001b11eab3191dc7318700b0",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: Built-in Functions Optimizations",
    "url": "https://medium.com/a-journey-with-go/go-built-in-functions-optimizations-70c5abb3a680?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-built-in-functions-optimizations-70c5abb3a680?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/2006/1*5T5K8M9VAIHWhClAlKslkA.png\" width=\"2006\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003e\u0026#x2139;\u0026#xFE0F; This article is based on Go 1.13.\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-built-in-functions-optimizations-70c5abb3a680?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2020-08-12T16:01:01Z",
    "vote": 0
  },
  {
    "id": "34afc6775e86c50477923fa85d9492a6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "They Who Control Encryption",
    "url": "https://blog.boot.dev/security/they-who-control-encryption/",
    "resume": "If you\u0026rsquo;ve seen The Imitation Game or studied computer science in school, you have likely heard of Enigma, Alan Turing, or some of the other advances in cryptography that took place during the Second World War.",
    "date": "2020-08-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f582880ca0ab33b3f0fa81ea636287f9",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Python and Go : Part III - Packaging Python Code",
    "url": "https://www.ardanlabs.com/blog/2020/08/packaging-python-code.html",
    "resume": "Series Index Python and Go: Part I - gRPC\nPython and Go: Part II - Extending Python With Go\nPython and Go: Part III - Packaging Python Code\nPython and Go: Part IV - Using Python in Memory\nIntroduction In the previous post we compiled Go code to a shared library and used it from the Python interactive shell. In this post we\u0026rsquo;re going to finish the development process by writing a Python module that hides the low level details of working with a shared library and then package this code as a Python package.",
    "date": "2020-08-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "30668d9d7376193c7c8e498c106bfcaf",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Unexpected Printf Behavior in Go WASM - Nothing Prints",
    "url": "https://blog.boot.dev/golang/unexpected-printf-behavior-in-go-wasm/",
    "resume": "While working on boot.dev\u0026rsquo;s Go Playground, I came across a very strange error. The standard library\u0026rsquo;s fmt.",
    "date": "2020-08-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "87632cef1997bb508eabfd3fbf172746",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: Introduction to the Escape Analysis",
    "url": "https://medium.com/a-journey-with-go/go-introduction-to-the-escape-analysis-f7610174e890?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-introduction-to-the-escape-analysis-f7610174e890?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/2600/1*EtNBbXQuRQDSkgAD_DYe2A.png\" width=\"2698\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003e\u0026#x2139;\u0026#xFE0F; This article is based on Go 1.13.\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-introduction-to-the-escape-analysis-f7610174e890?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2020-08-06T16:01:01Z",
    "vote": 0
  },
  {
    "id": "27e4564d2c641689a4fa5085daea6111",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "{\"encoding\":\"json\"}",
    "url": "https://changelog.com/gotime/141",
    "resume": "JSON (JavaScript Object Notation) is used all over the web as a text-based way of transmitting data. In this episode, we explore Go’s encoding/json package, and others with Daniel Marti.",
    "date": "2020-08-06T16:00:00Z",
    "vote": 0
  },
  {
    "id": "edb55e6da76279ecae13e0c6231464d1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "HMAC and MACs - The Inner Workings of JWTs",
    "url": "https://blog.boot.dev/cryptography/hmac-and-macs-in-jwts/",
    "resume": "HMACs and MACs are authentication codes and are often the backbone of JWT authentication systems. A Message Authentication Code (MAC) is a string of bits that depends on a secret key and is sent with a message to prove the message wasn\u0026rsquo;t tampered with.",
    "date": "2020-08-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "95f3a2fc1cc91377427ec0a9c6c1b7b5",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "Python, Selenium and Conditional Waits",
    "url": "https://sdet.us/python-selenium-and-conditional-waits/",
    "resume": "Recently I came to an issue of needing to wait for an element to load. Selenium does have a WebdriverWait that will wait for an item to load. However it doesn’t have the capability of conditional logic, i.e. “selenium wait for element, if it’s not loaded after waiting expires, then do something else.” This is [\u0026#8230;]",
    "date": "2020-08-04T18:20:56Z",
    "vote": 0
  },
  {
    "id": "b92187a79c238556a9bf7ff7374cdf6c",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: How to Reduce Lock Contention with the Atomic Package",
    "url": "https://medium.com/a-journey-with-go/go-how-to-reduce-lock-contention-with-the-atomic-package-ba3b2664b549?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-to-reduce-lock-contention-with-the-atomic-package-ba3b2664b549?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/1775/1*Jrd9zIc7aD04yk_mlgSbFg.png\" width=\"1775\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003e\u0026#x2139;\u0026#xFE0F; This article is based on Go 1.14.\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-to-reduce-lock-contention-with-the-atomic-package-ba3b2664b549?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2020-08-01T13:08:36Z",
    "vote": 0
  },
  {
    "id": "5c359ff1fde9e14f8dcfb128435dca7e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Your Parent's Internet - How to Mitigate Misinformation",
    "url": "https://blog.boot.dev/misc/online-misinformation-and-censorship/",
    "resume": "The age of information is not what we all hoped it would be. We successfully digitized the majority of human knowledge, and we even made it freely accessible to most.",
    "date": "2020-07-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "896f2a8b86e4a1db508bcd0d6744a097",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The latest on Generics",
    "url": "https://changelog.com/gotime/140",
    "resume": "Robert and Ian join us to talk about the latest updates on generics in Go. What type of feedback are they looking for as developers get their hands on tools designed to experiment with generics and Go? What was the deal with the featherweight Go paper that also discussed generics? Why can’t we use angle brackets for generics?",
    "date": "2020-07-30T18:30:00Z",
    "vote": 0
  },
  {
    "id": "1b3cb540d14a1196d00769123334bd64",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "HLS Video Streaming with Node.JS - A Tutorial",
    "url": "https://blog.boot.dev/javascript/hls-video-streaming-node/",
    "resume": "In this quick tutorial, we\u0026rsquo;ll build a robust video (or music) streaming API using Node JS.",
    "date": "2020-07-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "901e840f61312a1bd87bb45bb3eae3f6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "(Very) Basic Intro to PGP (GPG)",
    "url": "https://blog.boot.dev/cryptography/very-basic-intro-to-pgp-gpg/",
    "resume": "PGP, or its open-source alternative, GPG, is a program used to encrypt data such that only an authorized party can decrypt it.",
    "date": "2020-07-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "95c59ac00249470077ae49839059db77",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "(Very) Basic Intro to the Scrypt Hash",
    "url": "https://blog.boot.dev/cryptography/very-basic-intro-to-the-scrypt-hash/",
    "resume": "Scrypt is a slow-by-design key derivation function designed to create strong cryptographic keys. Simply put, the purpose of the Scrypt hash is to create a fingerprint of its input data but to do it very slowly.",
    "date": "2020-07-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a6972352b8f96e0d1020af31dd5392f7",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The future of Testify",
    "url": "https://changelog.com/gotime/139",
    "resume": "The panel discuss testing frameworks in Go. After a brief overview of the concepts involved, we discuss how testing frameworks can make our lives easier, and why some people still choose to avoid them. Mat Ryer and Mark Bates chat with Boyan Soubachov about the future of the Testify project.",
    "date": "2020-07-23T15:45:00Z",
    "vote": 0
  },
  {
    "id": "52cec768880a8a487b4b58632d556440",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Generics Part 01: Basic Syntax",
    "url": "https://www.ardanlabs.com/blog/2020/07/generics-01-basic-syntax.html",
    "resume": "Changes The draft is a living document which means these posts will need to change over time. This section documents when changes have taken place to this post.\n21/08/20 : Moving forward with the generics design draft\nSeries Index Generics Part 01: Basic Syntax\nGenerics Part 02: Underlying Types\nGenerics Part 03: Struct Types and Data Semantics\nIntroduction In this series of posts about generics in Go, I will present code and teach to the different aspects of the current generics draft.",
    "date": "2020-07-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3267f70c1614996e07f0544a68cefa54",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Authenticate Users with \"Sign In With Google\" in Golang",
    "url": "https://blog.boot.dev/golang/how-to-implement-sign-in-with-google-in-golang/",
    "resume": "Users love convenience. If your goal is to make it easy for users to register with your app or website, then implementing the \u0026ldquo;Sign in with Google\u0026rdquo; option should be at the top of your priority list.",
    "date": "2020-07-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6379a73dacffe7621e46cc132a7dc7f3",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Create a Custom Toggle Switch Component in Vue.js",
    "url": "https://blog.boot.dev/javascript/how-to-create-a-custom-toggle-switch-component-in-vue-js/",
    "resume": "Custom toggle switches are a pain to code from scratch. So many lines for such a simple UI widget!",
    "date": "2020-07-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d3400cd51d675a8ed7eeeb1e082bd699",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "Appium Mobile Browser Tests",
    "url": "https://sdet.us/appium-mobile-browser-tests/",
    "resume": "# This sample code uses the Appium python client # pip install Appium-Python-Client # Then you can paste this into a file and simply run with Python import time import random from appium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.ui import WebDriverWait caps = {} caps[\"deviceName\"] = \"emulator-5554\" [\u0026#8230;]",
    "date": "2020-07-17T23:00:34Z",
    "vote": 0
  },
  {
    "id": "0b7aff55c9639f9bba729ec5b4e17ffd",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "Setting Up Appium (Android Setup)",
    "url": "https://sdet.us/setting-up-appium-android-setup/",
    "resume": "Appium is an automated test harness for both Android and iOS devices. It runs as a standalone server that takes commands to run an emulator/device and execute commands for web, web app, hybrid or native applications. The setup is rather robust, and as things change this document may fall out of sync. You can find [\u0026#8230;]",
    "date": "2020-07-17T22:22:17Z",
    "vote": 0
  },
  {
    "id": "35aa9db287094b8e59aa93094848c6d9",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Rust Backend vs Go Backend in Web Development",
    "url": "https://blog.boot.dev/golang/rust-vs-go-in-backend-web-development/",
    "resume": "Rust and Go are two of the industry\u0026rsquo;s biggest successes when it comes to developing modern programming languages.",
    "date": "2020-07-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b4e4738b33103c018a035c69ea57ffb0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Your first week with Go",
    "url": "https://changelog.com/gotime/138",
    "resume": "Your first week with a new programming language can be tricky. In this episode Jon is joined by Jacquie and DaShaun to talk about their first week with Go. What was their primary focus? What resources did they leverage? What made it stick, and what didn’t?",
    "date": "2020-07-16T15:00:00Z",
    "vote": 0
  },
  {
    "id": "6de16b6cfbe38f184cca770c12fc04b8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Vue History Mode - Support Legacy Hash URLs",
    "url": "https://blog.boot.dev/javascript/vue-history-mode-support-legacy-hash-urls/",
    "resume": "When we first launched the boot.dev\u0026rsquo;s single-page-app, we were using Vue Router\u0026rsquo;s default hash routing. Hash routing looks ugly to the end-user, and when you want to be able to share parts of your app via direct link those hashes can get really annoying.",
    "date": "2020-07-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "864a24646699886bd6a69cd36581e441",
    "source": {
      "path": "blogs",
      "name": "A journey with Go",
      "url": "https://medium.com/feed/a-journey-with-go"
    },
    "name": "Go: How Are Deadlocks Triggered?",
    "url": "https://medium.com/a-journey-with-go/go-how-are-deadlocks-triggered-2305504ac019?source=rss----3730967d0651---4",
    "resume": "\u003cdiv class=\"medium-feed-item\"\u003e\u003cp class=\"medium-feed-image\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-are-deadlocks-triggered-2305504ac019?source=rss----3730967d0651---4\"\u003e\u003cimg src=\"https://cdn-images-1.medium.com/max/2600/1*yvJjqOwI4epwA1RrlpP_6Q.png\" width=\"8298\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp class=\"medium-feed-snippet\"\u003e\u0026#x2139;\u0026#xFE0F; This article is based on Go 1.14.\u003c/p\u003e\u003cp class=\"medium-feed-link\"\u003e\u003ca href=\"https://medium.com/a-journey-with-go/go-how-are-deadlocks-triggered-2305504ac019?source=rss----3730967d0651---4\"\u003eContinue reading on A Journey With Go »\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e",
    "date": "2020-07-11T17:16:10Z",
    "vote": 0
  },
  {
    "id": "bbb19b1ef30e1ad0590314b9fb0fe070",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Focusing in on PostgreSQL",
    "url": "https://changelog.com/gotime/137",
    "resume": "Choosing a database is hard. They each have their pros and cons, and without much experience it is hard to determine which is the best fit for your project. In this episode Johan Brandhorst joins us to talk about Postgres. When is it a good fit? How well does it scale? What libraries exist in Go for using Postgres?",
    "date": "2020-07-09T14:00:00Z",
    "vote": 0
  },
  {
    "id": "8ec3e3609abf78fa12d0a6aa2c816f30",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Redis Hash in Go With HSET, HGET and HGETALL",
    "url": "https://www.jajaldoang.com/post/redis-hash-in-go-with-hset-hget/",
    "resume": "\u003cp\u003eA hash is one of the data types in Redis. Redis hash is a map that that contains keys and their corresponding values. It is useful to store objects. Keys and values in Redis hash are string, but there are client libraries in Go to convert it to our type. In this article, I will show you how to use the hash data type in \u003ca href=\"../../tags/redis/\" \u003eRedis\u003c/a\u003e.\u003c/p\u003e",
    "date": "2020-07-08T16:05:34+07:00",
    "vote": 0
  },
  {
    "id": "ecc0f77070f7aa5048e16a1e34f99453",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What is SHA-256?",
    "url": "https://blog.boot.dev/cryptography/how-sha-2-works-step-by-step-sha-256/",
    "resume": "SHA-2 (Secure Hash Algorithm 2), of which SHA-256 is a part, is one of the most popular hash algorithms around.",
    "date": "2020-07-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f5d93dbe179747c97ed74a0ef7e32b06",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Rerender a Vue Route When Path Parameters Change",
    "url": "https://blog.boot.dev/javascript/how-to-rerender-a-vue-route-when-path-parameters-change/",
    "resume": "In single-page apps that use the Vue Router, it\u0026rsquo;s common to create a path parameter that changes the behavior of a route.",
    "date": "2020-07-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a01bd279dfb933881478992080c90c36",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Announcing a \"Basic Intro to Coding\" Course in JavaScript",
    "url": "https://blog.boot.dev/news/announcing-a-very-basic-intro-to-coding/",
    "resume": "The boot.dev app - our new gamified learning platform - just launched its first JavaScript coding course!",
    "date": "2020-07-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c13a6434796c6c1ce99a3daf0f34cfcd",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Python and Go : Part II - Extending Python With Go",
    "url": "https://www.ardanlabs.com/blog/2020/07/extending-python-with-go.html",
    "resume": "Series Index Python and Go: Part I - gRPC\nPython and Go: Part II - Extending Python With Go\nPython and Go: Part III - Packaging Python Code\nPython and Go: Part IV - Using Python in Memory\nIntroduction In the previous post we saw how a Go service can call a Python service using gRPC. Using gRPC to connect a Go and Python program together can be a great choice, but there’s a complexity price that goes with it.",
    "date": "2020-07-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8d4c0b83cc45e362475e259526c75bf9",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go in production at Pace.dev",
    "url": "https://changelog.com/gotime/136",
    "resume": "Building a new app in Go can involve a lot of technical decisions. How will your code be structured? How will you handle background jobs? What will your deploy process look like? In this episode we will walk through the decisions made while building the public release of Pace.dev.",
    "date": "2020-07-02T15:00:00Z",
    "vote": 0
  },
  {
    "id": "63d9cd339de25d0bf21cd3cc0c956326",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev Launches Golang Crash Course - Learn Go",
    "url": "https://blog.boot.dev/news/qvault-classroom-launches-golang-crash-course/",
    "resume": "We just launched the new boot.dev computer science platform and can\u0026rsquo;t be more excited. Our first crash course in Go, \u0026ldquo;Learn Go\u0026rdquo; is now available!",
    "date": "2020-07-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "816bbf32108d885b7e14acc0dd4b6a7b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Running Go in the Browser With Web Assembly (WASM)",
    "url": "https://blog.boot.dev/golang/running-go-in-the-browser-with-web-assembly-wasm/",
    "resume": "If you are familiar with the Go Playground, then you know how convenient it is to be able to have a Go scratchpad in the browser.",
    "date": "2020-07-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "87cb42b612b722a0e63620ffc0f1f21e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Lint on Save With VS Code Official Golang Extension",
    "url": "https://blog.boot.dev/golang/lint-on-save-vs-code-golang/",
    "resume": "Go has hard opinions about how you should style and format your code, and because of this, setting up your VS Code environment to enforce linting on save can be very efficient.",
    "date": "2020-06-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1cff6359fd3db3a6f6abf435284ee14b",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Validating an Email Address",
    "url": "https://golangcode.com/validate-an-email-address/",
    "resume": "Validating email addresses, like many thing, are one of those things you can put any amount of effort you want into.\nThe solutions range from nice\u0026rsquo;n\u0026rsquo;quick, by using regex to check the email address is formatted correctly - through to complicated, by actually trying to interface with the remote server. There are also some middle grounds available in between, like checking the top level domain has a valid MX record and detecting temporary email addresses (if these aren\u0026rsquo;t wanted).",
    "date": "2020-06-29T19:00:00Z",
    "vote": 0
  },
  {
    "id": "d307db3647d2a1dcf5684900eda5cd8c",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Make Maps and Slices in Golang - A Guide to Initialization",
    "url": "https://blog.boot.dev/golang/golang-make-maps-and-slices/",
    "resume": "There are quite a few ways to create new maps and slices in Go, for example, they can both be initialized using the make() function, the new() function, as literals, or by using the var keyword.",
    "date": "2020-06-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5b3c10f7db12224be01b5f8838dc5eed",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Dgraph Database Semantics",
    "url": "https://www.ardanlabs.com/blog/2020/06/dgraph-database-semantics.html",
    "resume": "Introduction In this paper written by Manish Jain (the founder of Dgraph) he describes Dgraph as:\na distributed graph database which provides horizontal scalability, distributed cluster-wide ACID transactions, low-latency arbitrary-depth joins, synchronous replication, high availability, and crash resilience.\nThere are many claims being stated here which frankly I didn’t understand the meaning of the first time I read this sentence. I decided I wanted to better understand these claims with the hope that it would help me understand Dgraph’s architecture and engineering decisions better.",
    "date": "2020-06-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b9b13ed05c6f92feec802406fff000df",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "We have regrets",
    "url": "https://changelog.com/gotime/135",
    "resume": "Leaning from mistakes is key to progressing. In this episode Ben, Aaron, Kris, and Jon discuss some of our mistakes - like spending too much time designing a feature that isn’t that important, or using channels excessively when first learning Go - and how we learned from them.",
    "date": "2020-06-25T19:00:00Z",
    "vote": 0
  },
  {
    "id": "e15bfe99f2ae3540e5d85c8d543f693e",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "How to Use Single NGINX for Multiple Domains",
    "url": "https://www.jajaldoang.com/post/how-to-use-single-nginx-for-multiple-domains/",
    "resume": "\u003cp\u003eYesterday my friend ask me if a single NGINX can serve more than one domain name. Of course, it can! A singe NGINX instance can serve more than one domain name. It can also serve subdomains. It is useful if you use one server to serve multiple domain names, although it is not recommended.\u003c/p\u003e",
    "date": "2020-06-25T08:12:13+07:00",
    "vote": 0
  },
  {
    "id": "5aee93d0b82b67d050db790e55f2fd7f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Beginnings",
    "url": "https://changelog.com/gotime/134",
    "resume": "Mat Ryer talks to a new full-time Go programmer, an intern at Google, and a high-school programmer about the tech world from their perspective.",
    "date": "2020-06-19T18:00:00Z",
    "vote": 0
  },
  {
    "id": "24f25a16c37afb007c3444846dfc7234",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "How to Use Redis in Golang",
    "url": "https://www.jajaldoang.com/post/how-to-use-redis-in-golang/",
    "resume": "\u003cp\u003eMany developers use Redis to cache data because it stores data in memory. It enables us to reduce load to our database or external service. Data stored in Redis have an expiration time, so Redis can release memory that is no longer used. This article will show you the basics of integrating Redis with Golang.\u003c/p\u003e",
    "date": "2020-06-19T15:50:41+07:00",
    "vote": 0
  },
  {
    "id": "46522e1b45ebff0448998d7418015d25",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "How to dump the GOSSAFUNC graph for a method",
    "url": "https://dave.cheney.net/2020/06/19/how-to-dump-the-gossafunc-graph-for-a-method",
    "resume": "The Go compiler\u0026#8217;s SSA backend contains a facility to produce HTML debugging output of the compilation phases. This post covers how to print the SSA output for function and methods. Let\u0026#8217;s start with a sample program which contains a function, a value method, and a pointer method: Control of the SSA debugging output is via [\u0026#8230;]",
    "date": "2020-06-19T03:36:57Z",
    "vote": 0
  },
  {
    "id": "bf8934b312f343e6fcfe24c15b8b1dd1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "An Intro to Quantum Mechanics and Google's Quantum Supremacy",
    "url": "https://blog.boot.dev/misc/an-intro-to-quantum-mechanics-googles-claim-to-quantum-supremacy/",
    "resume": "The science that deals with the description of the motion and interaction of subatomic particles is known as Quantum Mechanics.",
    "date": "2020-06-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0ed320ee04f21c129c061ac0bb3202d6",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Get Consistent Line Breaks in VS Code (LF vs CRLF)",
    "url": "https://blog.boot.dev/clean-code/line-breaks-vs-code-lf-vs-crlf/",
    "resume": "Have you ever had the problem where you submit a pull request and the diff is much larger than it should be?",
    "date": "2020-06-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ba499e5e5d2c1e85068c1a7c1b5a8ab4",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "How to proxy_pass in NGINX",
    "url": "https://www.jajaldoang.com/post/how-to-proxy_pass-in-nginx/",
    "resume": "\u003cp\u003e\u003ca href=\"https://www.nginx.com/\" target=\"_blank\" \u003eNGINX\u003c/a\u003e is a web server that can be used as a reverse proxy. The request that is received by NGINX is sent to the proxied server, then the response is sent back to the client. To do reverse proxy, NGINX uses \u003ccode\u003eproxy_pass\u003c/code\u003e directive inside a specified \u003ccode\u003elocation\u003c/code\u003e. This article will show you how.\u003c/p\u003e",
    "date": "2020-06-17T11:08:14+07:00",
    "vote": 0
  },
  {
    "id": "5223344ecdf0fb67a97d217010ae045f",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Simple Setup - Vue Linting in VS Code",
    "url": "https://blog.boot.dev/javascript/simple-setup-vue-linting-in-vs-code/",
    "resume": "I\u0026rsquo;m a gopher by nature, so I expect consistent styling and linting in my codebases. More importantly, I don\u0026rsquo;t like to think about styling.",
    "date": "2020-06-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2a46e767c54bd3c88f5b69cf608841d4",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "SQL Query Timeout With Golang Context",
    "url": "https://www.jajaldoang.com/post/sql-query-timeout-with-golang-context/",
    "resume": "\u003cp\u003eOne of \u003ca href=\"../../tags/go/\" \u003eGolang\u003c/a\u003e Context\u0026rsquo;s usage is to provide control over timeouts and cancelation. We can use this to control the timeout of SQL query execution and cancel it. This article will show you how to do that.\u003c/p\u003e",
    "date": "2020-06-15T16:26:51+07:00",
    "vote": 0
  },
  {
    "id": "b016e67fd641dbe9c6d692a96f94bcf1",
    "source": {
      "path": "blogs",
      "name": "SDET",
      "url": "https://sdet.us/feed/"
    },
    "name": "Online Homeschooling Challenge",
    "url": "https://sdet.us/online-homeschooling-challenge/",
    "resume": "If you\u0026#8217;re like me, you\u0026#8217;ve come to a point where you\u0026#8217;re considering homeschooling due to the COVID-19 pandemic. Regardless of how you feel about the pandemic, the school responses have been very chaotic. In California the process for reopening schools is absurd. That\u0026#8217;s when I went out to find online learning. After doing some research [\u0026#8230;]",
    "date": "2020-06-12T16:08:38Z",
    "vote": 0
  },
  {
    "id": "4e1087bd1cb0828a9955b8526189f73e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Reflection and meta programming",
    "url": "https://changelog.com/gotime/133",
    "resume": "Mat, Jon, and Jaana discuss reflection and meta programming. How do other languages use reflection, and how does that differ from Go’s approach? What libraries are using reflection well? What are some examples of bad times to use reflect? What alternative approaches exist? And what are those weird struct tags I keep seeing in Go code?",
    "date": "2020-06-11T21:00:00Z",
    "vote": 0
  },
  {
    "id": "9873866f8be854d5ec948f90cf9f95b1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Go-CoNLLU - Some Much Needed Machine Learning Support in Go",
    "url": "https://blog.boot.dev/open-source/go-conllu-some-much-needed-machine-learning-support-in-go/",
    "resume": "Python is commonly seen as the AI/ML language, but is often a dull blade due to unsafe typing and being slow, like really slow.",
    "date": "2020-06-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "845d1858d724020d2ee39451f3bb1bcd",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Python and Go : Part I - gRPC",
    "url": "https://www.ardanlabs.com/blog/2020/06/python-go-grpc.html",
    "resume": "Series Index Python and Go: Part I - gRPC\nPython and Go: Part II - Extending Python With Go\nPython and Go: Part III - Packaging Python Code\nPython and Go: Part IV - Using Python in Memory\nIntroduction Like tools, programming languages tend to solve problems they are designed to. You can use a knife to tighten a screw, but it\u0026rsquo;s better to use a screwdriver. Plus there is less chance of you getting hurt in the process.",
    "date": "2020-06-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "974ec76806fc27f2d8c367e8c4ed83c6",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Futures in Go, no package required",
    "url": "https://appliedgo.net/futures/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eFutures are mechanisms for decoupling a value from how it was computed. Goroutines and channels allow implementing futures trivially. Does this approach cover all aspects of a future?\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2020-06-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0b9814fb5a6a622a85cc5af78ed108e3",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Create Grafana Alert To Slack Channel",
    "url": "https://www.jajaldoang.com/post/create-grafana-alert-slack/",
    "resume": "\u003cp\u003e\u003ca href=\"https://slack.com\" target=\"_blank\" \u003eSlack\u003c/a\u003e is an application to send messages to your team. A Slack channel is one of the notification channels available in Grafana. You can use it to send an alert to a Slack channel when a metrics match with the alert rule. It is very beneficial to have alerts sent to slack, because you can spot problems immediately.\u003c/p\u003e",
    "date": "2020-06-04T17:31:15+07:00",
    "vote": 0
  },
  {
    "id": "80f2070bb2da52a12c5a56d1e6c4534b",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "About This Blog",
    "url": "https://www.jajaldoang.com/about/",
    "resume": "Hi\nThanks for visiting. My name is Yose. This is a blog about software enginner.\nI write this blog to preserve my knowledge. So that I won\u0026rsquo;t forget about things that I have learned. I also hope that this can help others solve their problem or increase their knowledge. I am very excited if you would leave some comment on my posts, especially if you find wrong information on my post.",
    "date": "2020-06-04T16:25:01+07:00",
    "vote": 0
  },
  {
    "id": "19ed7fbf7d3dd8470a7eab472d6808c7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Go's WaitGroup vs JavaScript's PromiseAll",
    "url": "https://blog.boot.dev/golang/gos-waitgroup-javascripts-promiseall/",
    "resume": "In applications that are i/o heavy, it can get clunky to synchronously execute high-latency functions one after the other.",
    "date": "2020-06-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3f67d06bc5409d29ed4035258e8d7946",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The trouble with databases",
    "url": "https://changelog.com/gotime/132",
    "resume": "Databases are tricky, especially at scale. In this episode Mat, Jaana, and Jon discuss different types of databases, the pros and cons of each, along with the many ways developers can have issues with databases. They also explore questions like, “Why are serial IDs problematic?” and “What alternatives are there if we aren’t using serial IDs?” while at it.",
    "date": "2020-05-28T15:00:00Z",
    "vote": 0
  },
  {
    "id": "03833c78bc73ee0b6b23ab89289b66ae",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Monitor Golang App With Prometheus and Grafana",
    "url": "https://www.jajaldoang.com/post/monitor-golang-app-with-prometheus-grafana/",
    "resume": "\u003cp\u003eAs I have written before, monitoring your server\u0026rsquo;s metrics is important to maintain the reliability of your service. This article will show you the basics of monitoring your \u003ca href=\"../../tags/go/\" \u003eGolang\u003c/a\u003e application. The tools that we are going to use are Prometheus and Grafana.\u003c/p\u003e",
    "date": "2020-05-28T14:43:25+07:00",
    "vote": 0
  },
  {
    "id": "edca79c885fcc9e579ed3351418d492e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Sort a Slice in Go",
    "url": "https://blog.boot.dev/golang/sorting-in-go/",
    "resume": "Sorting is a common task in programming, and for that reason, most languages have a default sorting algorithm in their standard library.",
    "date": "2020-05-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "df3db7e85d3c4afd1f581acf172ec5a8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Using Concurrent Subscribers With RabbitMQ in Python (pika)",
    "url": "https://blog.boot.dev/python/using-concurrent-subscribers-rabbitmq-in-python-pika/",
    "resume": "It\u0026rsquo;s a fairly common scenario to subscribe to a Rabbit queue and process messages before acknowledging receipt.",
    "date": "2020-05-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e2cd58b23a7152535a3f34e5b636594b",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Diamond interface composition in Go 1.14",
    "url": "https://dave.cheney.net/2020/05/24/diamond-interface-composition-in-go-1-14",
    "resume": "Per the overlapping interfaces proposal, Go 1.14 now permits embedding of interfaces with overlapping method sets. This is a brief post explain what this change means: Let\u0026#8217;s start with the definition of the three key interfaces from the io package; io.Reader, io.Writer, and io.Closer: Just as embedding a type inside a struct allows the embedded type\u0026#8217;s [\u0026#8230;]",
    "date": "2020-05-24T08:49:01Z",
    "vote": 0
  },
  {
    "id": "721e66fd52f46515ab066ee3fa3439ac",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Take a Screenshot of a Webpage with Headless Chrome",
    "url": "https://golangcode.com/headless-chrome-screenshot/",
    "resume": "\u003cp\u003eIn this post we will look at leveraging Chrome\u0026rsquo;s \u003ca href=\"https://chromedevtools.github.io/devtools-protocol/\"\u003edebug protocol\u003c/a\u003e to load up a webpage and take a screenshot. This is all made possible from a package called \u003ca href=\"https://github.com/chromedp/chromedp\"\u003e\u003ccode\u003echromedp\u003c/code\u003e\u003c/a\u003e which allows us to control a Chrome instance through our Go code. You will also need Chrome installed or to be using something akin to the \u003ca href=\"https://hub.docker.com/r/chromedp/headless-shell/\"\u003e\u003ccode\u003echrome/headless-shell\u003c/code\u003e\u003c/a\u003e docker image.\u003c/p\u003e\n\u003cp\u003eWe\u0026rsquo;ve split the process in code up into:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStart Chrome\u003c/li\u003e\n\u003cli\u003eRun tasks: like loading the webpage and taking a screenshot\u003c/li\u003e\n\u003cli\u003eSaving the screenshot to file\u003c/li\u003e\n\u003c/ul\u003e",
    "date": "2020-05-22T21:00:00Z",
    "vote": 0
  },
  {
    "id": "93c563b705fac434c28d4c2a43bd2452",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "On community and safety",
    "url": "https://changelog.com/gotime/131",
    "resume": "Johnny and Jon are joined by Denise to talk about her role at GitHub and what the community and safety team does to help open source project creators and contributors, GoCon Canada and the role of organizing a conference, and more.",
    "date": "2020-05-21T14:30:00Z",
    "vote": 0
  },
  {
    "id": "a6e5821fa47aa9abcb67b0a6945462e4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Don't Go To Casting Hell - Use Default Native Types in Go",
    "url": "https://blog.boot.dev/golang/default-native-types-golang/",
    "resume": "Go is strongly typed, and with that, we get many options for simple variable types like integers and floats.",
    "date": "2020-05-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5b75f4393d0eb3729106b6b3c0cdecf3",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Fatih’s question",
    "url": "https://dave.cheney.net/2020/05/16/fatihs-question",
    "resume": "A few days ago Fatih posted this question on twitter. I’m going to attempt to give my answer, however to do that I need to apply some simplifications as my previous attempts to answer it involved a lot of phrases like a pointer to a pointer, and other unhelpful waffling. Hopefully my simplified answer can [\u0026#8230;]",
    "date": "2020-05-16T11:31:37Z",
    "vote": 0
  },
  {
    "id": "d9a9db04494c104a206d56ee7b737085",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Dgraph, GraphQL, Schemas, and CRUD",
    "url": "https://www.ardanlabs.com/blog/2020/05/dgraph-graphql-schemas-crud.html",
    "resume": "Introduction In most of the reviews for this post, I was asked why choose a graph database over something else? This is a hard question to answer since my experience right now is limited on the graph database side. My guess is you’re wondering the same thing, so this is my best answer to date.\nAt this point in my career, I would only choose a relational database if I was writing financial software.",
    "date": "2020-05-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "57b2fc88c3829b18e5cd3c6401c12f30",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Challenges of distributed messaging systems",
    "url": "https://changelog.com/gotime/130",
    "resume": "Distributed systems are hard. Building a distributed messaging system for these systems to communicate is even harder. In this episode, we unpack some of the challenges of building distributed messaging systems (like NATS), including how Go makes that easy and/or hard as applicable.",
    "date": "2020-05-14T16:15:00Z",
    "vote": 0
  },
  {
    "id": "8807f26ce6167c52173a04f4da79279d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Break From Nested Loops in Rust",
    "url": "https://blog.boot.dev/rust/loops-in-rust-breaking-from-nested-loops/",
    "resume": "Loops in Rust aren\u0026rsquo;t the same as standard C-style languages. The syntax is different and there are some powerful options that make looping easier.",
    "date": "2020-05-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3562e1fa998d673fd343c147043f56bf",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Variable Shadowing In Rust - \"Let\" Is Immutable But Not Constant",
    "url": "https://blog.boot.dev/rust/variable-shadowing-in-rust/",
    "resume": "Let\u0026rsquo;s take a look at some of the common pitfalls with the keywords let and mut.",
    "date": "2020-05-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d2be6a161ba3f710d8fb07293455a9af",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Quantum Programming 101: Backend Monitor",
    "url": "https://blog.boot.dev/misc/quantum-programming-101-backend-monitor/",
    "resume": "Introduction 🔗In a previous tutorial we showed how you can get basic information on all quantum devices using backend_overview().",
    "date": "2020-05-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a34cf80d158dc1ce4f5fdc2ccabeb268",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Concurrency In Rust; Can It Stack Up Against Go's Goroutines?",
    "url": "https://blog.boot.dev/rust/concurrency-in-rust-can-it-stack-up-against-gos-goroutines/",
    "resume": "One of the primary goals of the Go programming language is to make concurrency simpler, faster, and more efficient.",
    "date": "2020-05-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f6abac8f01fa7e11a36e72aefd5fb1a8",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "URL Encode a String",
    "url": "https://golangcode.com/url-encode-value/",
    "resume": "If you are coming from a PHP background you\u0026rsquo;re probably very used to functions like urlencode() and rawurlencode(). The good news is you can do the same in Go and rather simply too. In the net/url package there\u0026rsquo;s a QueryEscape function which accepts a string and will return the string with all the special characters encoded so they can be added to a url safely. An example of is converting the \u0026lsquo;+\u0026rsquo; character into %2B.",
    "date": "2020-05-10T15:00:00Z",
    "vote": 0
  },
  {
    "id": "10140ab0493ae25fec85c5dcd86bcc7f",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Ensmallening Go binaries by prohibiting comparisons",
    "url": "https://dave.cheney.net/2020/05/09/ensmallening-go-binaries-by-prohibiting-comparisons",
    "resume": "Conventional wisdom dictates that the larger the number of types declared in a Go program, the larger the resulting binary. Intuitively this makes sense, after all, what\u0026#8217;s the point in defining a bunch of types if you\u0026#8217;re not going to write code that operates on them. However, part of the job of a linker is [\u0026#8230;]",
    "date": "2020-05-09T10:23:17Z",
    "vote": 0
  },
  {
    "id": "4e4411d55c0e127dd19e5d9b94c7a8e3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Black Hat Go",
    "url": "https://changelog.com/gotime/129",
    "resume": "Put on your dark hoodie, turn all the lights off, and join the author of Black Hat Go as we explore the darker side of Go.",
    "date": "2020-05-07T16:00:00Z",
    "vote": 0
  },
  {
    "id": "75e24e1dca00edded114bd223d9defa5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Rust vs Go - Which Is More Popular?",
    "url": "https://blog.boot.dev/golang/rust-vs-go-popularity/",
    "resume": "Go and Rust are two of the hottest compiled programming languages, but which is more popular, Go or Rust?",
    "date": "2020-05-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "353dc3c031187bdf84907349991a6292",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Achieving Data Integrity Using Cryptography",
    "url": "https://blog.boot.dev/bitcoin/achieving-data-integrity-using-cryptography/",
    "resume": "Data integrity refers to the accuracy, legitimacy, and consistency of information in a system. When a message is sent, particularly using an untrusted medium, data integrity provides us with confidence that the message wasn\u0026rsquo;t tampered with.",
    "date": "2020-05-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "24718976e8f4ee1d5392e17f4462bd1e",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Mid-stack inlining in Go",
    "url": "https://dave.cheney.net/2020/05/02/mid-stack-inlining-in-go",
    "resume": "In the previous post I discussed how leaf inlining allows the Go compiler to reduce the overhead of function calls and extend optimisation opportunities across function boundaries. In this post I\u0026#8217;ll discuss the limits of inlining and leaf vs mid-stack inlining. The limits of inlining Inlining a function into its caller removes the call\u0026#8217;s overhead [\u0026#8230;]",
    "date": "2020-05-02T05:09:15Z",
    "vote": 0
  },
  {
    "id": "e92a91c1ccd7fa6572c687e15c7b4df5",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Immediate mode GUIs",
    "url": "https://changelog.com/gotime/128",
    "resume": "Mat, Johnny and Jon are joined by Elias, creator of Gio, to discuss GUIs. Specifically, we explore the pros and cons of immediate vs retained mode and explore some examples of each, as well how some frameworks like React are attempting to bring the benefits of immediate mode to a retained mode world (the DOM).",
    "date": "2020-04-30T15:00:00Z",
    "vote": 0
  },
  {
    "id": "e665963eaad5b7e39e986ba5629aacd8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Range Over Ticker In Go With Immediate First Tick",
    "url": "https://blog.boot.dev/golang/range-over-ticker-in-go-with-immediate-first-tick/",
    "resume": "The Go standard library has a really cool type - Ticker. Tickers are used when you want to do something at a regular interval, similar to JavaScript\u0026rsquo;s setInterval.",
    "date": "2020-04-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3223727861c0a10561d16813cd47e147",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Using a Low-Level RabbitMQ Client in Golang",
    "url": "https://blog.boot.dev/golang/connecting-to-rabbitmq-in-golang/",
    "resume": "RabbitMQ is a great message broker with awesome Golang support. It\u0026rsquo;s a great pub-sub system, and pub-sub has become a staple communication architecture in micro-services.",
    "date": "2020-04-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7e4ea2d6e8f147ba979b8bfda94a02b7",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Debugging Go Applications using Delve",
    "url": "https://golangbot.com/debugging-go-delve/",
    "resume": "This tutorial gives an overview of how to debug Go applications using Delve. It covers the commonly used commands such as breakpoint, continue, next and step.",
    "date": "2020-04-27T11:59:00Z",
    "vote": 0
  },
  {
    "id": "d047858f2c5d8573fb5a42fd9d818c59",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "(Very) Basic Intro To White-Box Cryptography",
    "url": "https://blog.boot.dev/cryptography/very-basic-intro-to-white-box-cryptography/",
    "resume": "White-box cryptography combines methods of encryption and obfuscation to embed secret keys within application code. The goal is to combine code and keys in such a way that the two are indistinguishable to an attacker, and the new \u0026ldquo;white-box\u0026rdquo; program can be safely run in an insecure environment.",
    "date": "2020-04-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "01247867ab6f9d04628c4de1aa20d15d",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Inlining optimisations in Go",
    "url": "https://dave.cheney.net/2020/04/25/inlining-optimisations-in-go",
    "resume": "This is a post about how the Go compiler implements inlining and how this optimisation affects your Go code. n.b. This article focuses on gc, the de facto Go compiler from golang.org. The concepts discussed apply broadly to other Go compilers like gccgo and tinygo but may differ in implementation and efficacy. What is inlining? [\u0026#8230;]",
    "date": "2020-04-25T06:38:17Z",
    "vote": 0
  },
  {
    "id": "bdfab27024e24982163079185b2aa8e3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "WebRTC in Go",
    "url": "https://changelog.com/gotime/127",
    "resume": "The gang discusses WebRTC with Sean DuBois, creator of the Pion project and author of a pure Go WebRTC implementation. What exactly is WebRTC? Why is it so popular for video chatting? How does it work under the hood, and how does it compare with other real-time communication options?",
    "date": "2020-04-23T15:40:00Z",
    "vote": 0
  },
  {
    "id": "9b40e6a65ce547ca850f8d09a2861312",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Using 'Go Generate' To Deploy Multi-Process Apps",
    "url": "https://blog.boot.dev/golang/using-go-generate-to-deploy-multi-process-apps/",
    "resume": "In microservice architectures, it\u0026rsquo;s fairly common to have a project that includes different worker types. A Makefile can be used to manage the creation of multiple programs, but the Go toolchain has a tool that can be used as well, go generate.",
    "date": "2020-04-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "531e32d80ee7dcbe979f9dfcff225fb8",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "What Are Golang's Anonymous Structs?",
    "url": "https://blog.boot.dev/golang/anonymous-structs-golang/",
    "resume": "An anonymous struct is just like a normal struct, but it is defined without a name and therefore cannot be referenced elsewhere in the code.",
    "date": "2020-04-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0b87ee480f967f14f8c7985aadf8f019",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Quantum Programming 101: Superdense Coding Tutorial",
    "url": "https://blog.boot.dev/misc/quantum-programming-101-superdense-coding-tutorial/",
    "resume": "What is Superdense coding? 🔗Superdense coding is a quantum communications protocol that allows a user to send 2 classical bits by sending only 1 qubit.",
    "date": "2020-04-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9c6f3bbf54023af0e16fbbe69e93f964",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Exit an Application, With or Without an Error Code",
    "url": "https://golangcode.com/exit-application-with-error-code/",
    "resume": "Exiting an application in Go happens anyway when the main() function is complete, but the purpose of this post is to show you how to force that to happen. Perhaps at an earlier stage than the end of your code, perhaps with an error code too. This is a well established method in POSIX systems, whereby a program can return a 0-255 integer to indicate if the program ran successfully, and if not, why not.",
    "date": "2020-04-17T17:00:00Z",
    "vote": 0
  },
  {
    "id": "ae4a2fc70fe4bb924078f58c9461aec1",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The monolith vs microservices debate",
    "url": "https://changelog.com/gotime/126",
    "resume": "What is a microservice, and what is a monolith? What differentiates them? When is a good time for your team to start considering the transition from monolith to microservice? And does using microservices mean you can’t use a monorepo?",
    "date": "2020-04-16T16:45:00Z",
    "vote": 0
  },
  {
    "id": "b1ff47c91a450bb8d6512b17753837e0",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Getting Started With Dgraph and GraphQL+-",
    "url": "https://www.ardanlabs.com/blog/2020/04/getting-started-with-dgraph-and-graphql+-.html",
    "resume": "Introduction I have spent a career building business applications that work with databases, starting with SQL and then moving to No-SQL. I’ve been curious how Graph databases work and how to build applications with them. It seems the sweet spot for a Graph database is when your application needs to model the interrelationships of complex and different datasets. I’ve been using No-SQL databases for these types of applications so I am super interested in knowing how Graph databases differ.",
    "date": "2020-04-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6fe05edde9d5d5d601ab3dc32e4ce69e",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Modules Part 06: Vendoring",
    "url": "https://www.ardanlabs.com/blog/2020/04/modules-06-vendoring.html",
    "resume": "Series Index Why and What\nProjects, Dependencies and Gopls\nMinimal Version Selection\nMirrors, Checksums and Athens\nGopls Improvements\nVendoring\nIntroduction It’s no secret that I am a fan of vendoring when it’s reasonable and practical to use it for your application projects. I believe vendoring gives your application projects the most durability since the project owns every line of source code it needs to build the applications. If you want a reproducible build without needing to rely on external services (like module mirrors) and being connected to the network, vendoring is the solution.",
    "date": "2020-04-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2a343703226dcc83a6838fb1bcf7d597",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "what.Happens - a debug logging package for developers only",
    "url": "https://appliedgo.net/what/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003ePackage what provides some handy debug-logging functions that can be enabled and disabled via build flags. No more information leaks in your production code!\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2020-04-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5b8377bb9045a0d7647412e7c686c157",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Organizing for the community",
    "url": "https://changelog.com/gotime/125",
    "resume": "What does it take to organize a community event? How do you ensure it is diverse? What does diversity even mean? Tune in to learn directly from organizers of some of the most diverse Go meetups (Gophercon EU and Go Bridge).",
    "date": "2020-04-09T20:00:00Z",
    "vote": 0
  },
  {
    "id": "68fda741dff167e30dda0480d73481fc",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Modules Part 05: Gopls Improvements",
    "url": "https://www.ardanlabs.com/blog/2020/04/modules-05-gopls-improvements.html",
    "resume": "Series Index Why and What\nProjects, Dependencies and Gopls\nMinimal Version Selection\nMirrors, Checksums and Athens\nGopls Improvements\nVendoring\nPrelude This is a guest post written by Rohan Challa, a member of the Go team working on gopls.\nThis document is a follow up to Bill Kennedy’s post on projects, dependencies and gopls. His post showed that gopls did not work well with modules, particularly when adding and removing dependencies from a project inside of your editor.",
    "date": "2020-04-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b05f93a7393919c0087fd7b5e7770dfc",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Docker Images : Part III - Going Farther To Reduce Image Size",
    "url": "https://www.ardanlabs.com/blog/2020/04/docker-images-part3-going-farther-reduce-image-size.html",
    "resume": "Series Index Reducing Image Size\nDetails Specific To Different Languages\nGoing Farther To Reduce Image Size\nIntroduction In the first two parts of this series, we covered the most common methods to optimize Docker image size. We saw how multi-stage builds, combined with Alpine-based images, and sometimes static builds, would generally give us the most dramatic savings. In this last part, we will see how to go even farther. We will talk about standardizing base images, stripping binaries, assets optimization, and other build systems or add-ons like DockerSlim or Bazel, as well as the NixOS distribution.",
    "date": "2020-04-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4c7aa1fdedd735993c85198f5a76fe12",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Enterprise Go?",
    "url": "https://changelog.com/gotime/124",
    "resume": "Bryan Liles joins Johnny and Mat for a wide-ranging discussion that starts with the question: what even is enterprise Go?",
    "date": "2020-04-02T16:30:00Z",
    "vote": 0
  },
  {
    "id": "120e853b8747dfae50c84ed8739a862d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Announcing Go-TinyTime, Go-TinyDate's Sister Package",
    "url": "https://blog.boot.dev/golang/announcing-go-tinytime-go-tinydates-sister-package/",
    "resume": "time.Time is the perfect choice for handling times in Go in most cases, it even comes in the standard library!",
    "date": "2020-04-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "768935aa10aad717b87fc9b9a3654d98",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Golang Conversions - Ints To Strings And Strong Typing",
    "url": "https://blog.boot.dev/golang/golang-conversions-ints-to-strings-and-strong-typing/",
    "resume": "Go is a strongly typed language, which means at any point a developer should know exactly what type of value they are dealing with.",
    "date": "2020-03-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "556045aea3633cc1db27810b8cb098f7",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Connect to PostgreSQL and Run a Query",
    "url": "https://golangcode.com/postgresql-connect-and-query/",
    "resume": "Sometimes getting a database connection up and running can be a bit fiddly, we\u0026rsquo;ve all been there, and it can help to have an example to work from. This post aims to show you the complete basics of creating a database connection, forming a query to run and populating a struct with our resulting data.\nTo do with we use the database/sql interface and load in the pq driver/library to actually do the work for us.",
    "date": "2020-03-29T20:00:00Z",
    "vote": 0
  },
  {
    "id": "2e6ef9ab561fb7d932666d0c44afd6fe",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How To Separate Library Packages in Go",
    "url": "https://blog.boot.dev/golang/how-to-separate-library-packages-in-go/",
    "resume": "I\u0026rsquo;ve often seen, and have been responsible for, throwing code into packages without much thought. I\u0026rsquo;ve quickly drawn a line in the sand and started putting code into different folders (which in Go are different packages by definition) just for the sake of findability.",
    "date": "2020-03-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "451908793c8424d690cfe7ddb94e31eb",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "WFH",
    "url": "https://changelog.com/gotime/123",
    "resume": "Working from home can be challenging, especially amid school closings and everything else caused by COVID-19. In this episode panelists Jon, Mat, Carmen, and Mark share advice and experiences they have accumulated over many years of working from home. They cover separating your work space from your personal space, signaling to your family that you are busy, ways to keep track of the time, and suggestions for getting some exercise in when you can.",
    "date": "2020-03-26T17:00:00Z",
    "vote": 0
  },
  {
    "id": "39a50cb2c0a1b294040b24c6f3127d30",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "I Wrote Go-TinyDate, The Missing Golang Date Package",
    "url": "https://blog.boot.dev/open-source/i-wrote-go-tinydate-the-missing-golang-date-package/",
    "resume": "time.Time makes dealing with dates and times in Go a breeze, and it even comes bundled in the standard library!",
    "date": "2020-03-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f0e68410d747d21e65482126e0d87ab6",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The Zen of Go",
    "url": "https://changelog.com/gotime/122",
    "resume": "Dave Cheney talks to us about the Zen of Go (ten engineering values for writing simple, readable, maintainable Go code). What makes code good in Go? What guiding principles should we bear in mind when writing Go?",
    "date": "2020-03-19T16:00:00Z",
    "vote": 0
  },
  {
    "id": "71d399d4a7270b6f98a6a1bd41a60027",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Use Mutexes in Go",
    "url": "https://blog.boot.dev/golang/golang-mutex/",
    "resume": "Golang is King when it comes to concurrency. No other language has so many tools right out of the box, and one of those tools is the standard library\u0026rsquo;s sync.",
    "date": "2020-03-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "daa81dc83f6dd1d20b059cafb07bb1dc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "It is Go Time!",
    "url": "https://changelog.com/gotime/trailer-1",
    "resume": "This is THE podcast for diverse discussions from around the Go community. Go Time’s panel hosts special guests like Kelsey Hightower… (clip from episode #114) picks the brains of the Go team at Google… (clip from episode #100) shares their expertise from years in the industry (clip from episode #102) and has an absolute laugh riot along the way… (clip from episode #110) It is Go Time! Please listen to a recent episode that interests you and subscribe today. We’d love to have you with us.",
    "date": "2020-03-16T20:37:40Z",
    "vote": 0
  },
  {
    "id": "f6aa98982b2f2219cec77719513e404b",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Best Practices for Interfaces in Go",
    "url": "https://blog.boot.dev/golang/golang-interfaces/",
    "resume": "Interfaces in Go allow us to treat different types as the same data type temporarily because both types implement the same kind of behavior.",
    "date": "2020-03-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "02aa7336f602f1f81c4cd8875da68c2d",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How to: Handle Errors within Wait Groups",
    "url": "https://golangcode.com/errors-in-waitgroups/",
    "resume": "One of the many benefits of using Go is it\u0026rsquo;s simplicity when it comes to concurrency. With WaitGroups being an excellent example of this. It can be tricky though to handle both concurrency and errors effectively. This post aims to outline how you can run multiple goroutines and handle any errors effectively, without stopping program execution.\nThe essence of this comes down to these three key parts:\n Creating two channels, for passing errors and when the WaitGroup is complete.",
    "date": "2020-03-13T16:00:00Z",
    "vote": 0
  },
  {
    "id": "ecd692bc317fa8b8ff447afd138a294d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Pow! Pow! Power tools!",
    "url": "https://changelog.com/gotime/121",
    "resume": "Johnny and John welcome Thorsten Ball back to the show. This time we’re talking power tools! Editors, operating systems, containers, cloud providers, databases, and more. You name it, we probably talk about.",
    "date": "2020-03-12T15:15:00Z",
    "vote": 0
  },
  {
    "id": "43aef111d3006e35a14d5b19d1f9d5cc",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "go test -v streaming output",
    "url": "https://dave.cheney.net/2020/03/10/go-test-v-streaming-output",
    "resume": "The testing package is one of my favourite packages in the Go standard library, not just because of its low noise approach to unit testing, but, over the lifetime of Go, it has received a steady stream of quality of life improvements driven by real world usage. The most recent example of this is, in [\u0026#8230;]",
    "date": "2020-03-10T07:03:03Z",
    "vote": 0
  },
  {
    "id": "90af9882d6f05d033b3d81945c96bb7f",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Wrapping Errors in Go - How to Handle Nested Errors",
    "url": "https://blog.boot.dev/golang/wrapping-errors-in-go-how-to-handle-nested-errors/",
    "resume": "Errors in Go are a hot topic. Many newcomers to the language immediately level their first criticism, \u0026ldquo;errors in go are clunky!",
    "date": "2020-03-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "52782fbfd873e6ce9a287a34e4e1f6e0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "On the verge of new AI possibilities",
    "url": "https://changelog.com/gotime/120",
    "resume": "In this episode Jaana and Mat are joined by Daniel and Miriah to dive into AI in Go. Why has python historically had a bigger foothold in the AI scene? Is machine learning in Go growing? What libraries and tools are out there for someone looking to get started with AI? And where do you start if you don’t have enough data for your own models?",
    "date": "2020-03-05T17:55:00Z",
    "vote": 0
  },
  {
    "id": "7dca0b2470b2ac2d4f1c838d8a387fd9",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Are large slices more expensive than smaller ones?",
    "url": "https://dave.cheney.net/2020/03/01/are-large-slices-more-expensive-than-smaller-ones",
    "resume": "Programmers have a tendency to be superstitious. Particularly, when a programmer hears that copies are expensive, they start to see them everywhere, especially when they learn that, in Go, every assignment is a copy. Consider this code; x is three orders of magnitude larger than y, is the assignment of x to a more expensive [\u0026#8230;]",
    "date": "2020-03-01T05:35:26Z",
    "vote": 0
  },
  {
    "id": "15896a398e6716d539123449d90a377a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Stop the presses",
    "url": "https://changelog.com/gotime/119",
    "resume": "Newsletters play a unique role for developers. As the Go community continues to grow and mature, these newsletters provide a much-needed filter for the oft overwhelming stream of new articles, talks, and libraries produced by the community on a weekly basis. In this episode Johnny, Jon, and Mat are joined by Peter Cooper of the Golang Weekly newsletter to discuss his role as a newsletter curator. We explore difficult topics that touch on ethics and responsibilities of a curator and of course, the impact Peter and his team have on shaping, at least in part, what many in the Go community get exposed to.",
    "date": "2020-02-27T18:30:00Z",
    "vote": 0
  },
  {
    "id": "da3a04cc96e3c8f20c4a4ebbcdb34672",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Docker Images : Part II - Details Specific To Different Languages",
    "url": "https://www.ardanlabs.com/blog/2020/02/docker-images-part2-details-specific-to-different-languages.html",
    "resume": "Series Index Reducing Image Size\nDetails Specific To Different Languages\nGoing Farther To Reduce Image Size\nIntroduction In the first part, we introduced multi-stage builds, static and dynamic linking, and briefly mentioned Alpine. In this second part, we are going to dive into some details specific to Go. Then we will talk more about Alpine, because it\u0026rsquo;s worth it; and finally we will see how things play out with other languages like Java, Node, Python, Ruby, and Rust.",
    "date": "2020-02-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1ab8ec3ef50faeaeb5126f3db76e099d",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "The Zen of Go",
    "url": "https://dave.cheney.net/2020/02/23/the-zen-of-go",
    "resume": "This article was derived from my GopherCon Israel 2020 presentation. It\u0026#8217;s also quite long. If you\u0026#8217;d prefer a shorter version, head over to the-zen-of-go.netlify.com. A recording of the presentation is available on YouTube. How should I write good code? Something that I’ve been thinking about a lot recently, when reflecting on the body of my [\u0026#8230;]",
    "date": "2020-02-23T06:46:10Z",
    "vote": 0
  },
  {
    "id": "32fbdd4837818a95296080fd8f2ed0d5",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Mock S3 Uploads in Go Tests",
    "url": "https://golangcode.com/mocking-s3-upload/",
    "resume": "A common scenario a back-end web developer might encounter is writing code which uploads a file to an external storage platform, like S3 or Azure. This is simple enough, but writing tests for this code which are isolated from the dependencies isn\u0026rsquo;t quite as straight forward. We can achieve this in Go through the use of interfaces and creating a \u0026ldquo;mock\u0026rdquo; uploader when our tests run.\nBelow we\u0026rsquo;ve build an example to show this, first showing the test and then the code it\u0026rsquo;s testing.",
    "date": "2020-02-22T10:00:00Z",
    "vote": 0
  },
  {
    "id": "a69c049a81ddd8f418adee5d9d7b34b0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Quack like a wha-?",
    "url": "https://changelog.com/gotime/118",
    "resume": "Interfaces are everywhere in Go. The basic error type is an interface, writing with the fmt package means you are probably using an interface, and there are countless other instances where they pop up. In this episode Mark, Mat, Johnny, and Jon discuss interfaces at length, exploring what they are, how they are using them in their own projects, as well as tips for how you can leverage them in your own code.",
    "date": "2020-02-20T12:00:00Z",
    "vote": 0
  },
  {
    "id": "f4c9fd7755e82084dbefa89221fc28ac",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "JWT Authentication in Golang",
    "url": "https://blog.boot.dev/golang/jwts-in-golang/",
    "resume": "Go is becoming very popular for backend web development, and JWT\u0026rsquo;s are one of the most popular ways to handle authentication on API requests.",
    "date": "2020-02-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "12d8598b3cddab8af03ea462f29f1a28",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "Go Packages",
    "url": "https://golangbot.com/go-packages/",
    "resume": "Learn how Go packages work and how to import them in your code. This tutorial also deals with creating custom packages using Go modules.",
    "date": "2020-02-16T15:11:13Z",
    "vote": 0
  },
  {
    "id": "371816501a13579c8205deccd02f1e7e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Telemetry and the art of measuring what matters",
    "url": "https://changelog.com/gotime/117",
    "resume": "Telemetry is tricky to get started with. What metrics should you be tracking? Which metrics are important? Will they help you predict and avoid potential issues? When is a good time to start? Should you put it off until later? In this episode we discuss some common metrics to collect, how to get started with telemetry, and more with guest Dave Blakey of Snapt.",
    "date": "2020-02-13T15:50:00Z",
    "vote": 0
  },
  {
    "id": "40e001f4071b0876245073539fabce76",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How Do Brute-Force Attackers Know They Found The Key?",
    "url": "https://blog.boot.dev/security/how-do-brute-force-attackers-know-they-found-the-key/",
    "resume": "Brute force attackers guess passwords, passphrases, and private keys in an attempt to eventually get the right answer and crack the security of a system.",
    "date": "2020-02-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a9362442465a118cc49f395539bb7762",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Modules Part 04: Mirrors, Checksums and Athens",
    "url": "https://www.ardanlabs.com/blog/2020/02/modules-04-mirros-checksums-athens.html",
    "resume": "Series Index Why and What\nProjects, Dependencies and Gopls\nMinimal Version Selection\nMirrors, Checksums and Athens\nGopls Improvements\nVendoring\nIntroduction One of the longer standing questions I had when first learning about modules was how the module mirror, checksum database and Athens worked. The Go team has written extensively about the module mirror and checksum database, but I hope to consolidate the most important information here. In this post, I provide the purpose of these systems, the different configuration options you have, and show these systems in action using example programs.",
    "date": "2020-02-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a6b68506dd7ada6066430dc91b52227d",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "DIY Pick and Place Robot",
    "url": "https://golangbot.com/diy-pick-and-place-robot/",
    "resume": "Learn how to write firmware for Arduino in Go by creating your own Pick and Place Robot",
    "date": "2020-02-09T15:47:51Z",
    "vote": 0
  },
  {
    "id": "506f73ce806dcb508553094601640cbe",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Unusual uses for Go: GUIs",
    "url": "https://changelog.com/gotime/116",
    "resume": "Johnny and Jon are joined by Andy Williams to talk about some of the unusual ways developers are using Go. In this particular episode they deep dive into building GUIs and discuss all of the challenges imposed by trying to build a UI that is both cross platform and functional. How do you create buttons that work on both mobile and a desktop app? Should you even be designing both apps at the same time? Tune in to find out!",
    "date": "2020-02-06T17:00:00Z",
    "vote": 0
  },
  {
    "id": "6bdbda764fef988bc1645a52c67989e1",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "About Boot.dev",
    "url": "https://blog.boot.dev/about/",
    "resume": "Learning back-end development can be fun - even addicting. We\u0026rsquo;re building a learning path that forces you to delve deep into programming fundamentals and, frankly, write a ton of code.",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c5671bda64c371c8f6a22bdc85f4b73e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "AES-256 Cipher – Python Cryptography Examples",
    "url": "https://blog.boot.dev/cryptography/aes-256-cipher-python-cryptography-examples/",
    "resume": "Want to encrypt text with a password or private key in Python? AES-256 is a solid symmetric cipher that is commonly used to encrypt data for oneself.",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "81967cb3b6d794a2ddc29482019f7fef",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Affiliate Program Terms of Service",
    "url": "https://blog.boot.dev/affiliate-terms/",
    "resume": "Agreement 🔗By signing up to be an Affiliate in the Boot.dev Affiliate Program (\u0026ldquo;Program\u0026rdquo;) you are agreeing to be bound by the following terms and conditions (\u0026ldquo;Terms of Service\u0026rdquo;).",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5a04fef6e25623238db9eab752c07450",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Contact Us",
    "url": "https://blog.boot.dev/contact/",
    "resume": "Email us here:\nhello at boot.dev Or find us on social:\nYouTube Twitter LinkedIn Discord If you\u0026rsquo;re interested in any of the following just shoot us an email 🔗 Team plans 🔗Want to get Boot.",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b961941c50512c3ee72e2bb1035a43a7",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Frequently Asked Questions",
    "url": "https://blog.boot.dev/faq/",
    "resume": "Who is Boot.dev for? 🔗Our courses are beneficial for anyone interested in coding, but they are most useful for those looking to become back-end developers.",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b1631cccde48a56b3c63eb20c915e208",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Privacy Policy",
    "url": "https://blog.boot.dev/privacy/",
    "resume": "Who we are 🔗Our homepage address is: https://boot.dev, and our blog is hosted on https://blog.",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6a0f79afd5becfe4baf6d2b3f1a4f9d3",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Return Policy",
    "url": "https://blog.boot.dev/return-policy/",
    "resume": "Thanks for being a member of Boot.dev! If you are not entirely satisfied with your purchase, we’re here to help.",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6ee0f300a4cb18f2b52c211d64519213",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Terms of Service",
    "url": "https://blog.boot.dev/terms/",
    "resume": "Last updated: May 21, 2021\nPlease read these terms and conditions carefully before using Our Service.",
    "date": "2020-02-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e61ef4f177722b157d2aeba562bac0c4",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Will Banning Cryptography Keep the Country Safe?",
    "url": "https://blog.boot.dev/cryptography/will-banning-cryptography-keep-the-country-safe/",
    "resume": "Politicians in the United States have been claiming recently that end-to-end encryption is certainly too dangerous to permit.",
    "date": "2020-02-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6d18812e2b08076fbcc032f5f038dd84",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How To Cache Images - React Native Expo (Managed)",
    "url": "https://blog.boot.dev/javascript/how-to-cache-images-react-native-expo-managed/",
    "resume": "Caching images in React Native can be easy, even if you are using Expo\u0026rsquo;s managed workflow.",
    "date": "2020-02-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f31f601cc31193f9ec200a43cacdb623",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Docker Images : Part I - Reducing Image Size",
    "url": "https://www.ardanlabs.com/blog/2020/02/docker-images-part1-reducing-image-size.html",
    "resume": "Series Index Reducing Image Size\nDetails Specific To Different Languages\nGoing Farther To Reduce Image Size\nIntroduction When getting started with containers, it\u0026rsquo;s pretty easy to be shocked by the size of the images that we build. We\u0026rsquo;re going to review a number of techniques to reduce image size, without sacrificing developers\u0026rsquo; and ops\u0026rsquo; convenience. In this first part, we will talk about multi-stage builds, because that\u0026rsquo;s where anyone should start if they want to reduce the size of their images.",
    "date": "2020-02-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7116638e09061365bcfe16e7973d289c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Grokking Go.dev",
    "url": "https://changelog.com/gotime/115",
    "resume": "Carmen, Mat, and Jon are joined by Steve Francia and Julie Qiu to discuss the new Go.dev website. What was the motivation behind it? What technology was used to build it? How are they working to make package discovery better? And what resources are there to help you convince your manager to use Go on that upcoming project?",
    "date": "2020-01-30T15:30:00Z",
    "vote": 0
  },
  {
    "id": "c55184f4cf321cb5f958abf36d566faa",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Is Open-Source Cryptography Really Secure?",
    "url": "https://blog.boot.dev/cryptography/is-open-source-cryptography-really-secure/",
    "resume": "The purpose of cryptography is to keep information private, and the purpose of open-source is to make code public\u0026hellip; So we shouldn\u0026rsquo;t open-source our cryptography algorithms right?",
    "date": "2020-01-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c932705d63c4ce95d06a04ae2ac6310a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Hashing Passwords - Python Cryptography Examples",
    "url": "https://blog.boot.dev/cryptography/hashing-passwords-python-cryptography-examples/",
    "resume": "Building a from-scratch server or using a lightweight framework is empowering. With that power comes responsibility, specifically the responsibility to securely store user\u0026rsquo;s passwords.",
    "date": "2020-01-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "247fa5ab04da0b5d6e45ad69f2aad62b",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Argon2 Password Hashing",
    "url": "https://golangcode.com/argon2-password-hashing/",
    "resume": "Argon2 is a password hashing algorithm which was voted the winner in the Password Hashing Competition in 2015. It has implementations in many programming languages these days, with Go being no exception, and is often recommended over tools like bcrypt. It is, however, a little difficult to use the library directly in Go and this post is designed to provide a wrapper for the library and provide two functions at the end of it.",
    "date": "2020-01-25T10:00:00Z",
    "vote": 0
  },
  {
    "id": "abbcd09514a8b47e927e953473a69fae",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Monitor Server Metrics With Prometheus and Grafana",
    "url": "https://www.jajaldoang.com/post/monitor-server-metrics-with-prometheus-grafana/",
    "resume": "\u003cp\u003eMonitoring your server\u0026rsquo;s metrics is important to maintain the reliability of your service. You can also save costs by downgrading your server if the average load is much lower than the maximum capacity of your server. There are many ways and \u003ca href=\"../../tags/tools/\" \u003etools\u003c/a\u003e to monitor your server. One of the most popular is by using Prometheus to scrape and store the metrics. And Grafana to visualize the data. This article will show you how to monitor your server\u0026rsquo;s metrics with Prometheus and Grafana, especially for Linux servers.\u003c/p\u003e",
    "date": "2020-01-22T23:30:14+07:00",
    "vote": 0
  },
  {
    "id": "b1c467b51e6eb47ade0b45dfb67c6126",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Cloudy with a chance of Kelsey Hightower",
    "url": "https://changelog.com/gotime/114",
    "resume": "In this episode, we’re joined by Kelsey Hightower to discuss the evolution of cloud infrastructure management, the role Kubernetes and its API play in it, and how we, as developers and operators, should be adapting to these changes.",
    "date": "2020-01-21T18:00:00Z",
    "vote": 0
  },
  {
    "id": "c8caac41f813ba813eb406ff94b6b2ff",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Why is Exclusive Or (XOR) Important in Cryptography?",
    "url": "https://blog.boot.dev/cryptography/why-xor-in-cryptography/",
    "resume": "If you are getting into cryptography, or just trying to understand the fundamentals, you may have noticed that the exclusive or (XOR) operation is used quite often, especially in ciphers.",
    "date": "2020-01-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e6e9e909fc15fa10127cede3d953a391",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go at Heroku",
    "url": "https://changelog.com/gotime/takeover-codeish-46",
    "resume": "We teamed up with some friends of ours at Heroku to promote the Code-ish podcast so we’re sharing a full-length episode right here in the Go Time feed. This episode features Johnny Boursiquot (Go Time panelist) on the mic with guests Edward Muller and Rishabh Wason talking about Go at Heroku. Learn more and subscribe at heroku.com/podcasts/codeish.",
    "date": "2020-01-16T12:00:00Z",
    "vote": 0
  },
  {
    "id": "43626668550cdc54f69345cd42f556e5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "JavaScript With Statement Explained – A Deep Dive",
    "url": "https://blog.boot.dev/javascript/javascript-with-statement/",
    "resume": "JavaScript\u0026rsquo;s built-in with statement specifies the default object for the given property and gives us a shorthand for writing long object references.",
    "date": "2020-01-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bde19dc3c8c4331310f9f080fa0f1128",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go at Cloudflare",
    "url": "https://changelog.com/gotime/113",
    "resume": "Jaana, Jon, and Mat are joined by John Graham-Cumming, the CTO of Cloudflare, to discuss Go at Cloudflare along with John’s unique involvement in Gordon Brown’s apology to Alan Turing. How did Cloudflare get started with Go? What problems do they use Go for and when to they turn to other languages? And how exactly did John’s petition for an apology to Turing get so popular?",
    "date": "2020-01-14T16:51:21Z",
    "vote": 0
  },
  {
    "id": "689c9b5fb2429e8ccede0f7f2567ac35",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "JavaScript Map Function Explained - A Deep Dive",
    "url": "https://blog.boot.dev/javascript/javascript-map-function/",
    "resume": "The built-in JavaScript map function returns a new array, where each element in the new array is the result of the corresponding element in the old array after being passed through a callback function.",
    "date": "2020-01-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a5e51f5454ee5ddbb4d61b021da6444e",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Perform Sentiment Analysis on Sentences",
    "url": "https://golangcode.com/sentiment-analysis-on-strings/",
    "resume": "Sentiment analysis is an interesting technique of judging whether a sentence, word or paragraph is considered a positive or negative thing. It\u0026rsquo;s often used against datasets like tweets as it allows you to summarize a mass of small sentences into an easy to understand stat.\nIn our example, we\u0026rsquo;re using a package called sentiment - which was trained against IMDB comment data - to judge whether our example sentences are positive or negative.",
    "date": "2020-01-11T15:00:00Z",
    "vote": 0
  },
  {
    "id": "b67e5291cceef91236a075e440e88efb",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "BitBanged SPI in Go, An Explanation",
    "url": "https://blog.boot.dev/golang/bitbanged-spi-in-go-an-explanation/",
    "resume": "I’m going to focus mostly on some design decisions and also how I went about writing an SPI interface using Go on a Raspberry Pi.",
    "date": "2020-01-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c52170001a0e7509e61199565c9f9fd5",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 8 Online Crypto Communities",
    "url": "https://blog.boot.dev/bitcoin/best-online-crypto-communities/",
    "resume": "Crypto has been explosive in 2021. The gains have been even better than the memes! While dancing cat videos are fun, the wise will also take advantage of the various communities as an opportunity to learn more about the technology that supports decentralized money.",
    "date": "2020-01-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "22eb7bac8e38c9c40fa619002fce215a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "defer GoTime()",
    "url": "https://changelog.com/gotime/112",
    "resume": "Mat, Carmen, and Jon are joined by Dan Scales to talk about Mat’s favorite keyword in Go - defer. Where did the defer statement come from? What problems can it solve? How has it shaped how we write Go code? How are other languages solving similar problems? And what exactly was changed in Go 1.14 to improve the performance of defer?",
    "date": "2020-01-07T17:00:00Z",
    "vote": 0
  },
  {
    "id": "ff7e5c9eac20e1bf153d088daa4c313e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Top 6 Golang Logging Best Practices",
    "url": "https://blog.boot.dev/golang/golang-logging-best-practices/",
    "resume": "Let\u0026rsquo;s discuss a few rules of thumb for logging in Go, as well as some features you may not have heard of that can make debugging easier.",
    "date": "2020-01-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f3d4b67794b5da88fcdb6201039c4778",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Reduce Backend Load Using Cache-Control",
    "url": "https://www.jajaldoang.com/post/reduce-backend-load-using-cache-control/",
    "resume": "\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eIt is common practice to separate front end and back end service for a website. One of the reasons for this is so that we can scale back end or front end separately. Most of the time, we need more resources to serve back end than the front end. To reduce loads that coming to backend we need some caching. Fortunately, there is a Cache-Control header. The back end can control how the front end should cache the resource by using this header. Cache-control is commonly used for image files or static files such as javascript. It also can be used to ajax JSON request or any other request. This article will show you how to use the Cache-Control header to reduce load to back end for your website.\u003c/p\u003e",
    "date": "2020-01-06T02:46:49+07:00",
    "vote": 0
  },
  {
    "id": "1d7331411ec9e23dcaa1b381dccd1a88",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Cryptography Trends And News Going Into 2020",
    "url": "https://blog.boot.dev/cryptography/cryptography-trends-and-news-going-into-2020/",
    "resume": "Quantum Computing 🔗Quantum computing may not be coming quite as fast as some in the field had certainly feared (or perhaps hoped).",
    "date": "2020-01-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8161572fb1184cf7f62ea9288f3458a2",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Intro to The AES-256 Cipher",
    "url": "https://blog.boot.dev/cryptography/aes-256-cipher/",
    "resume": "AES, or \u0026ldquo;Advanced Encryption Standard\u0026rdquo;, is an encryption specification that uses the Rijndael cipher as its symmetric key ciphering algorithm.",
    "date": "2020-01-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "044f5c8a6b92dc8205d83b153f7f19ad",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "(Very) Basic Intro to Hash Functions (SHA-256, MD5, etc)",
    "url": "https://blog.boot.dev/cryptography/very-basic-intro-to-hash-functions-sha-256-md-5-etc/",
    "resume": "Hash functions are used to securely store passwords, find duplicate records, quickly store and retrieve data, among other useful computational tasks.",
    "date": "2020-01-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "eca5c53bde85d75bff284b07bde40590",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "TypeScript",
    "url": "https://mariadesouza.com/2019/12/31/typescript/",
    "resume": "TypeScript is an open source superset of JavaScript that is compiled into plain JavaScript. It provides static type checking at compile time. TypeScript was designed to prevent issues that typically occur in JavaScript because of the lack of type checking. It also adds features like Interfaces, Generics, Namespaces, Null Checking and Access Modifiers. Deep dive\u0026#8230; \u003ca href=\"https://mariadesouza.com/2019/12/31/typescript/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eTypeScript\u003c/span\u003e\u003c/a\u003e",
    "date": "2019-12-31T23:13:35Z",
    "vote": 0
  },
  {
    "id": "2d12d31901ef5aa9dda558acd4667c59",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Basic Intro to Key Derivation Functions",
    "url": "https://blog.boot.dev/cryptography/key-derivation-functions/",
    "resume": "A Key Derivation Function, or KDF, is a cryptographic algorithm that derives one or more secret keys from a secret value.",
    "date": "2019-12-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "69cd2c31a7c0b5c3689151be98fe9b48",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Cache Form Inputs With localStorage in Javascript",
    "url": "https://www.jajaldoang.com/post/cache-form-inputs-with-localstorage-in-javascript/",
    "resume": "\u003cp\u003eHTML Form is the most common way to collect user inputs on a website. When there are many fields to fill or there is a field with a long value to input, caching the inputted value is not a bad idea. We cache inputs so users can continue to fill the fields if they accidentally close the page or browser, or move to another page.\nThis article will show you how to cache input with localStorage.\u003c/p\u003e",
    "date": "2019-12-26T23:38:43+07:00",
    "vote": 0
  },
  {
    "id": "459c59d0e651f626286dabb724a3e5ba",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Bugs are in the air",
    "url": "https://changelog.com/gotime/111",
    "resume": "Guests are catching the bug, so we decided to spend this episode talking about bugs! How do you find and fix your bugs? Do you sketch things out, whip out the debugger, or something else?",
    "date": "2019-12-24T17:00:00Z",
    "vote": 0
  },
  {
    "id": "bed5938b82bc102c1e8d3c0e3e8388ac",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Modules Part 03: Minimal Version Selection",
    "url": "https://www.ardanlabs.com/blog/2019/12/modules-03-minimal-version-selection.html",
    "resume": "Series Index Why and What\nProjects, Dependencies and Gopls\nMinimal Version Selection\nMirrors, Checksums and Athens\nGopls Improvements\nVendoring\nIntroduction Every dependency management solution has to solve the problem of picking a version of a dependency. Many of the version selection algorithms that exist today attempt to identify the “latest greatest” version of any dependency. This makes sense if you believe semantic versioning will be applied correctly and the social contract will be respected.",
    "date": "2019-12-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2dada22864ec78f8d1b411ddd47da7fc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The fireside edition 🔥",
    "url": "https://changelog.com/gotime/110",
    "resume": "Grab a hot beverage and a warm blanket because it’s time for a fireside chat with the Go Time panel! We discuss many topics of interest: what we’d build if we had 2 weeks to build anything in Go, the things about Go that “grind our gears”, our ideal work environments, and advice we’d give ourselves if we were starting our career all over again.",
    "date": "2019-12-17T16:30:00Z",
    "vote": 0
  },
  {
    "id": "e72e9392c3379f8159eaae7d7fe1f43d",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Cryptology vs Cryptography - Definitions and Differences",
    "url": "https://blog.boot.dev/cryptography/cryptology-vs-cryptography/",
    "resume": "Many new developers are jumping right into writing code, usually for those fat paychecks, without learning much about the history of Computer Science.",
    "date": "2019-12-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "786907b855bead610cf8e8d40d7be8ee",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Concurrency, parallelism, and async design",
    "url": "https://changelog.com/gotime/109",
    "resume": "Go was designed with concurrency in mind. That’s why we have language primitives like goroutines, channels, wait groups, and mutexes. They’re very powerful when used correctly, but they can be very complicated if used unwisely. Roberto Clapis joins the team once again to drop async wisdom in your ears. Don’t worry, we do it in serial. 😉",
    "date": "2019-12-10T17:32:57Z",
    "vote": 0
  },
  {
    "id": "7eabdfb42f0815b023e90e65042d80cd",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Boot.dev's Lead Engineer Interviewed on \"Running in Production\"",
    "url": "https://blog.boot.dev/news/qvaults-lead-engineer-interviewed-on-running-in-production/",
    "resume": "The podcast is available here.\nBefore I begin, I must give thanks to Nick for having me on the show!",
    "date": "2019-12-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2bcc13c84407b8f1076b175d5adb6810",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Dynamically scoped variables in Go",
    "url": "https://dave.cheney.net/2019/12/08/dynamically-scoped-variables-in-go",
    "resume": "This is a thought experiment in API design. It starts with the classic Go unit testing idiom: func TestOpenFile(t *testing.T) { f, err := os.Open(\"notfound\") if err != nil { t.Fatal(err) } // ... } What\u0026#8217;s the problem with this code? The assertion. if err != nil { ... } is repetitive and in the [\u0026#8230;]",
    "date": "2019-12-08T01:36:27Z",
    "vote": 0
  },
  {
    "id": "feb0123de31daad10b620859f070378b",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Foreach Loops: The Go Way",
    "url": "https://golangcode.com/foreach-loops/",
    "resume": "The foreach keyword itself does not exist within Go, instead the for loop can be adapted to work in the same manner. The difference however, is by using the range keyword and a for loop together. Like foreach loops in many other languages you have the choice of using the slices' key or value within the loop.\nExample 1)\nIn our example, we iterate over a string slice and print out each word.",
    "date": "2019-12-07T18:00:00Z",
    "vote": 0
  },
  {
    "id": "7fa62899c3e3a57482f87a63e0ad8a5c",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Internets of Interest #15: The Queen of the Skies",
    "url": "https://dave.cheney.net/2019/12/05/internets-of-interest-15-the-queen-of-the-skies",
    "resume": "If, like me, you\u0026#8217;re a commercial aviation otaku, this walkthrough of an enthusiast built 747 cockpit simulator should be highly relevant to your interests.",
    "date": "2019-12-05T06:49:41Z",
    "vote": 0
  },
  {
    "id": "67c70405fa692a7f6cf85e51154b055b",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Complementary engineering indicators",
    "url": "https://dave.cheney.net/2019/12/04/complementary-engineering-indicators",
    "resume": "Last year I had the opportunity to watch Cat Swetel\u0026#8217;s presentation The Development Metrics You Should Use (but Don’t). The information that could be gleaned from just tracking the start and finish date of work items was eye opening. If you\u0026#8217;re using an issue tracker this information is probably already (perhaps with some light data [\u0026#8230;]",
    "date": "2019-12-04T09:46:26Z",
    "vote": 0
  },
  {
    "id": "e6ac1ea8ac34ab03589c261966011a6d",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Modules Part 02: Projects, Dependencies and Gopls",
    "url": "https://www.ardanlabs.com/blog/2019/12/modules-02-projects-dependencies-gopls.html",
    "resume": "Series Index Why and What\nProjects, Dependencies and Gopls\nMinimal Version Selection\nMirrors, Checksums and Athens\nGopls Improvements\nVendoring\nIntroduction Modules is the system integrated into Go to provide support for dependency management. This means modules touch just about anything related to working with source code, including editor support. To provide editors with support for modules (and for other reasons), the Go team built a service named gopls which implements the language server protocol (LSP).",
    "date": "2019-12-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f6f3cbcbf130d4059917ae392310adf0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Graph databases",
    "url": "https://changelog.com/gotime/108",
    "resume": "Mat, Johnny, and Jaana are joined by Francesc Campoy to talk about Graph databases. We ask all the important questions — What are graph databases (and why do we need them)? What advantages do they have over relational databases? Are graph databases better at answering questions you didn’t anticipate? How is data structured? How do queries work? What problems are they good at solving? What problems are they not suitable for? And…since we had Francesc on the hot seat, we asked him about Just for Func and when it’s coming back.",
    "date": "2019-11-27T12:00:00Z",
    "vote": 0
  },
  {
    "id": "c19032e0b8d80e6adf0797fac61a7642",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Update golang version Linux or macOS",
    "url": "https://www.jajaldoang.com/post/how-to-update-golang/",
    "resume": "\u003cp\u003eThis article will show you how to update \u003ca href=\"../../tags/go/\" \u003eGo\u003c/a\u003e to the newest version for Linux or macOS.\u003c/p\u003e",
    "date": "2019-11-25T23:51:34+07:00",
    "vote": 0
  },
  {
    "id": "cc1fd0396ce9eaf84e66c8b31acfe03f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Compilers and interpreters",
    "url": "https://changelog.com/gotime/107",
    "resume": "Thorsten Ball and Tim Raymond join Mat Ryer and Mark Bates to talk about compilers and interpreters. What are the roles of compilers and interpreters? What do they do? The how and why of writing a compiler in Go. We also talk about Thorsten’s books “Writing an Interpreter in Go” and “Writing a Compiler in Go.”",
    "date": "2019-11-22T22:00:00Z",
    "vote": 0
  },
  {
    "id": "30f6ebd689e6401e43e5b404b277b743",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Internets of interest #14: UNIX v0",
    "url": "https://dave.cheney.net/2019/11/18/internets-of-interest-14-unix-v0",
    "resume": "Read more over at the Living Computer Museum’s restoration page.",
    "date": "2019-11-17T16:04:20Z",
    "vote": 0
  },
  {
    "id": "9cd8f35a711381a1bbe8e1f0b82d0044",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Internets of interest: Warner Losh on the first ten years of UNIX",
    "url": "https://dave.cheney.net/2019/11/16/internets-of-interest-warner-losh-on-the-first-ten-years-of-unix",
    "resume": "UNIX turns 50 this year which means 7th edition Research UNIX is that 40.",
    "date": "2019-11-16T11:21:46Z",
    "vote": 0
  },
  {
    "id": "923844c42e51aeee6ffc5704724391ce",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Flutter: Forbes had it right",
    "url": "https://www.ardanlabs.com/blog/2019/11/flutter-forbes-had-it-right.html",
    "resume": "“Flutter and Fuchsia. In 2019 you will see these two words everywhere, and now is your chance to get ahead of the curve.” - Todd Fabacher, writing for Forbes\nForbes saw it coming back in July of 2018. If you didn’t, then here’s your chance to find out why they did. From lower lead times to increased productivity, the number of platforms you’ll be able to reach to the simplicity of maintenance, Flutter is now leading the way in just about every category.",
    "date": "2019-11-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6be3f4f5290d4f4fc2f843ec6cae98f0",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Building Alerts with Percolate Queries in ElasticSearch",
    "url": "https://blog.boot.dev/open-source/percolate-queries-elasticsearch/",
    "resume": "Once upon a time, a company I worked for had a problem, we had thousands of messages flowing through our data pipeline every second, and we wanted to be able to send real-time emails, SMS, and Slack alerts when messages matching specific criteria were found.",
    "date": "2019-11-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7a39e510acf8d06fcf0533d623fc302f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Code editors and language servers",
    "url": "https://changelog.com/gotime/106",
    "resume": "In this episode we talk with Ramya Rao about code editors and language servers. We share our thoughts on which editor we use, why we use it, and why we’d switch. We also discuss what a language server is and why it matters in connecting editors and the languages they support. We also dive into various ways to be effective with VS Code including shortcuts, plugins, and more.",
    "date": "2019-11-11T18:00:00Z",
    "vote": 0
  },
  {
    "id": "37ec0fec69e8e88ef6e32952aaf40516",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Which Method of Iteration in JavaScript is Fastest?",
    "url": "https://blog.boot.dev/javascript/benchmarking-array-traversal-in-javascript/",
    "resume": "There are many ways to traverse an array in Javascript. In this benchmark, we will look at five different ways and the pros and cons of each.",
    "date": "2019-11-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ea73514d3ef59062ee22ebefdc0f647a",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Singletons in ES6 - The Good, The Bad, The Ugly",
    "url": "https://blog.boot.dev/clean-code/singletons-in-es6-the-good-the-bad-the-ugly/",
    "resume": "Singletons are fairly controversial as far as I can tell, especially in JavaScript programming. Let\u0026rsquo;s take a look at what they are, when to (maybe) use them, and when not to.",
    "date": "2019-11-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "eab867a9ed4a73b2c27a6e2320657983",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Kubernetes and Cloud Native",
    "url": "https://changelog.com/gotime/105",
    "resume": "Johnny and Mat are joined by Kris Nova and Joe Beda to talk about Kubernetes and Cloud Native. They discuss the rise of “Cloud Native” applications as facilitated by Kubernetes, good places to use Kubernetes, the challenges faced running such a big open source project, Kubernetes’ extensibility, and how Kubernetes fits into the larger Cloud Native world.",
    "date": "2019-11-01T19:00:00Z",
    "vote": 0
  },
  {
    "id": "bd08d8a7e23ffebd08b67892c8abc60e",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Build a Basic Web Scraper in Go",
    "url": "https://golangcode.com/basic-web-scraper/",
    "resume": "This is a single page web scraper, it uses the goquery library to parse the html and allow it to be queried easily (like jQuery). There is a Find method we can use to query for classes and ids in same way as a css selector. In our example we use this to get the latest blog titles from golangcode.\nIf you needed to search an entire site, you could implement a query to follow and recall a link urls.",
    "date": "2019-10-26T08:00:00Z",
    "vote": 0
  },
  {
    "id": "6bc01fdd8e9771f671c3410b2acf2538",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Get the IP Address of a HTTP Request",
    "url": "https://golangcode.com/get-the-request-ip-addr/",
    "resume": "This post demonstrates how to get the IP address of incoming HTTP requests in Go. As a function, it attempts to use the X-FORWARDED-FOR http header for code behind proxies and load balancers (such as on hosts like Heroku) while falling back to the RemoteAddr if the header isn\u0026rsquo;t found.\nJust as an example, we created an echo server (of sorts) below to reply to incoming requests with the requesting ip address in json form.",
    "date": "2019-10-25T19:20:00Z",
    "vote": 0
  },
  {
    "id": "db751da3b36de59a0db201ce32890a28",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building search tools in Go",
    "url": "https://changelog.com/gotime/104",
    "resume": "Johnny is joined by Marty Schoch, creator of the full-text search and indexing engine Bleve, to talk about the art and science of building capable search tools in Go. You get a mix of deep technical considerations as well as some of the challenges around running a popular open source project.",
    "date": "2019-10-24T20:00:00Z",
    "vote": 0
  },
  {
    "id": "eb7d13a6c22adfeebf68e32596ff97e2",
    "source": {
      "path": "blogs",
      "name": "Jajal Doang",
      "url": "https://www.jajaldoang.com/index.xml"
    },
    "name": "Jajal doang",
    "url": "https://www.jajaldoang.com/post/jajaldoang/",
    "resume": "Just trying.\nHope it works.\nHere is a cat picture",
    "date": "2019-10-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9eaa783b9f3f893a8d81ed05036dd838",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Create Constant Maps, Slices, \u0026 Arrays in Golang",
    "url": "https://blog.boot.dev/golang/golang-constant-maps-slices/",
    "resume": "The quick answer is that Go does not support constant arrays, maps or slices. However, there are some great workarounds.",
    "date": "2019-10-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "49abb96961e8610b91d7b75dda4fd474",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "All about caching",
    "url": "https://changelog.com/gotime/103",
    "resume": "Manish Jain and Karl McGuire of Dgraph join Johnny and Jon to discuss caching in Go. What are caches, hit rates, admission policies, and why do they matter? How can you get started using a cache in your applications?",
    "date": "2019-10-17T11:00:00Z",
    "vote": 0
  },
  {
    "id": "6102ced26782985128bf0e5ce1eac535",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Modules Part 01: Why And What",
    "url": "https://www.ardanlabs.com/blog/2019/10/modules-01-why-and-what.html",
    "resume": "Series Index Why and What\nProjects, Dependencies and Gopls\nMinimal Version Selection\nMirrors, Checksums and Athens\nGopls Improvements\nVendoring\nIntroduction Modules provide an integrated solution for three key problems that have been a pain point for developers since Go’s initial release:\nAbility to work with Go code outside of the GOPATH workspace. Ability to version a dependency and identify the most compatible version to use. Ability to manage dependencies natively using the Go tooling.",
    "date": "2019-10-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b2af1090ae73fe68f743bef61fee792b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "On application design",
    "url": "https://changelog.com/gotime/102",
    "resume": "Mat is joined by Peter Bourgon, Kat Zień, and Ben Johnson to talk about application design in Go — principles, trade-offs, common mistakes, patterns, and the things you should consider when it comes to application design.",
    "date": "2019-10-09T16:00:00Z",
    "vote": 0
  },
  {
    "id": "a05c04ea8badf7e3ea3a5f244f746756",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Use internal packages to reduce your public API surface",
    "url": "https://dave.cheney.net/2019/10/06/use-internal-packages-to-reduce-your-public-api-surface",
    "resume": "In the beginning, before the go tool, before Go 1.0, the Go distribution stored the standard library in a subdirectory called pkg/ and the commands which built upon it in cmd/. This wasn\u0026#8217;t so much a deliberate taxonomy but a by product of the original make based build system. In September 2014, the Go distribution [\u0026#8230;]",
    "date": "2019-10-06T04:43:54Z",
    "vote": 0
  },
  {
    "id": "0f9d3c196197f3f3e593ec7c5241ff0c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Security for Gophers",
    "url": "https://changelog.com/gotime/101",
    "resume": "Mat, Filippo, Johan, and Roberto discuss security in Go. Does Go make it easy to secure your code? What common mistakes are Gophers making? What is fuzzing? How can attackers abuse your code if you use the default http mux?",
    "date": "2019-10-03T11:00:00Z",
    "vote": 0
  },
  {
    "id": "7b1451c827eeec82d4994b0a07968cbe",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Systems and Processes that Aren't in Code are Terrifying",
    "url": "https://blog.boot.dev/clean-code/systems-and-processes-that-arent-in-code-are-terrifying/",
    "resume": "My worst enemy is processes that a developer spun up years ago on a server everyone has forgotten about.",
    "date": "2019-10-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a8c44f59e0ef6f141f6fd3e866860d92",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Integration Testing in Go: Part II - Set-up and Writing Tests",
    "url": "https://www.ardanlabs.com/blog/2019/10/integration-testing-in-go-set-up-and-writing-tests.html",
    "resume": "Prelude This post is the 2nd installment of a 2 part series about integration testing. You can read the first installment, which is about executing tests in a restricted environment using Docker. The example repository that this post draws it examples from can be found here.\nIntroduction ”More than the act of testing, the act of designing tests is one of the best bug preventers known.” - Boris Beizer",
    "date": "2019-10-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8616bbe23ed00a99f3c3b1cb7d36550e",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Convert iota List to String in JSON",
    "url": "https://golangcode.com/convert-iota-to-string-in-json/",
    "resume": "Constants in Go, when combined with iota, can be a nice way to use options and settings as a list. We have an example below using genders to show this in action. The problem comes if you want to encode/decode structs to JSON, then the constant will be encoded into an int - sometimes it would be nice to convert this to a string to make it easier to represent what it is.",
    "date": "2019-09-29T06:20:00Z",
    "vote": 0
  },
  {
    "id": "ef2b5c6ce71ff1f44bf024bcc1088ebf",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Creating the Go programming language",
    "url": "https://changelog.com/gotime/100",
    "resume": "Carmen and Jon talk with Rob Pike and Robert Griesemer (the creators of Go) about its origins, growth, influence, and future. This an epic episode that dives deep into the history and details of the how’s and why’s of Go, and the choices they’ve made along the way in creating this awesome programing language.",
    "date": "2019-09-25T19:00:00Z",
    "vote": 0
  },
  {
    "id": "03027094a0e1b9c28b7c7f86e1bf7a03",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "The Proper Use of Pointers in Go (Golang)",
    "url": "https://blog.boot.dev/golang/the-proper-use-of-pointers-in-go-golang/",
    "resume": "Go has become increasingly popular in recent years, especially in my local area. It has been consistently displacing other backend languages like Ruby, Python, C# and Java.",
    "date": "2019-09-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bbd63595b21f7ebb317854efc579c2c5",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How to Run a Single Test",
    "url": "https://golangcode.com/run-one-test/",
    "resume": "\u003cp\u003eGo has a simple command line for running its tests, with \u003ccode\u003ego test\u003c/code\u003e. However, often when writing tests you don\u0026rsquo;t care about the rest of the test suite - you just want to run your new test. This post shows you the command you need to run just your test, as well as a full example below.\u003c/p\u003e",
    "date": "2019-09-24T18:20:00Z",
    "vote": 0
  },
  {
    "id": "b3ab90044bf333638706547c1427eb43",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Be wary of functions which take several parameters of the same type",
    "url": "https://dave.cheney.net/2019/09/24/be-wary-of-functions-which-take-several-parameters-of-the-same-type",
    "resume": "APIs should be easy to use and hard to misuse. — Josh Bloch A good example of a simple looking, but hard to use correctly, API is one which takes two or more parameters of the same type. Let’s compare two function signatures: What’s the difference between these functions? Obviously one returns the maximum of [\u0026#8230;]",
    "date": "2019-09-24T10:20:22Z",
    "vote": 0
  },
  {
    "id": "92808b832119acb764b391d2954f8eda",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Recursively Traverse JSON Objects",
    "url": "https://blog.boot.dev/javascript/how-to-recursively-traverse-objects/",
    "resume": "I\u0026rsquo;ve found that it\u0026rsquo;s pretty rare that I need recursion in application code, but every once in a while I need to write a function that operates on a tree of unknown depth, such as a JSON object, and that\u0026rsquo;s often best solved recursively.",
    "date": "2019-09-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "540efeb5c8d2bf9f1c24b9a2c92df1de",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hiring and nurturing junior developers",
    "url": "https://changelog.com/gotime/99",
    "resume": "Johnny, Carmen, Jon, and returning guest Stevenson Jean-Pierre talk about hiring engineers with a focus on junior roles. Why do we keep running into these ridiculous job listings that nobody could ever live up to? What benefits do junior developers bring to the team? Why don’t teams put more focus on developing junior engineers? What can we do better?",
    "date": "2019-09-20T19:00:00Z",
    "vote": 0
  },
  {
    "id": "4a355999540e7945acfbca6f90c15126",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Generate a PDF in Go",
    "url": "https://golangcode.com/generate-a-pdf/",
    "resume": "We have already covered pdf generation to some degree, by using wkhtmltopdf on AWS' Lambda service. This post is about generating pdfs without needing wkhtml - by building the pdf from Go itself. To do this we use a library called gofpdf to build the pdf.\nIt quite straightforward for simple documents, but gets more complicated the more you add to it. In our example we add some text as a title and an image just beneath it.",
    "date": "2019-09-19T18:30:00Z",
    "vote": 0
  },
  {
    "id": "21f1c312abf7b37ae30d9ca69cf6cb54",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Generics in Go",
    "url": "https://changelog.com/gotime/98",
    "resume": "Mat, Johnny, Jon, and special guest Ian Lance Taylor discuss  generics in Go. What are generics and why are they useful? Why aren’t interfaces enough? How will the standard library change if generics are added to Go? How has the community contributed to generics? If generics are added, how will this negatively affect the language?",
    "date": "2019-09-11T18:00:00Z",
    "vote": 0
  },
  {
    "id": "73085b6cba4b1ffab57540dbbb90b64c",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Don’t force allocations on the callers of your API",
    "url": "https://dave.cheney.net/2019/09/05/dont-force-allocations-on-the-callers-of-your-api",
    "resume": "This is a post about performance. Most of the time when worrying about the performance of a piece of code the overwhelming advice should be (with apologies to Brendan Gregg) don\u0026#8217;t worry about it, yet. However there is one area where I counsel developers to think about the performance implications of a design, and that [\u0026#8230;]",
    "date": "2019-09-05T10:44:32Z",
    "vote": 0
  },
  {
    "id": "1b64041fdee62eca2726c0730d97e85c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "LIVE from Gophercon UK",
    "url": "https://changelog.com/gotime/97",
    "resume": "LIVE from LondonGophers as part of GopherCon UK! Mat Ryer, and Mark Bates were joined by Liz Rice, Kat Zień, Gautam Rege to talk about the magic in Go’s standard library. Huge thanks to the organizers of LondonGophers and GopherCon UK for making this possible.",
    "date": "2019-09-04T15:00:00Z",
    "vote": 0
  },
  {
    "id": "d6872ff44c7b7f42494ad31701ce4ba5",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Context Package Semantics In Go",
    "url": "https://www.ardanlabs.com/blog/2019/09/context-package-semantics-in-go.html",
    "resume": "Introduction The Go programming language has the built-in keyword go to create goroutines, but has no keywords or direct support for terminating goroutines. In a real world service, the ability to time-out and terminate goroutines is critical for maintaining the health and operation of a service. No request or task can be allowed to run forever so identifying and managing latency is a responsibility every programmer has.\nA solution provided by the Go team to solve this problem is the Context package.",
    "date": "2019-09-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c0c111091abcaaf9d66da2ddebf88302",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Serverless and Go",
    "url": "https://changelog.com/gotime/96",
    "resume": "Johnny, Mat, Jaana, and special guest Stevenson Jean-Pierre discuss serverless in a Go world. What is serverless, what use cases is serverless good for, what are the trade offs, and how do you program with Go differently in the context of serverless?",
    "date": "2019-09-03T20:00:00Z",
    "vote": 0
  },
  {
    "id": "2bde503b43bf3e787009073c2cb80731",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "How to Secure Your Bitcoin",
    "url": "https://blog.boot.dev/bitcoin/how-to-secure-bitcoin/",
    "resume": "If you\u0026rsquo;re new to Bitcoin and cryptocurrency, you may have heard the common phrase not your keys not your coins.",
    "date": "2019-08-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b3dc690fc83d1565d614e54a3019cf6d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The infrastructure effect: COBOL and Go",
    "url": "https://changelog.com/gotime/takeover-clh-s3e5",
    "resume": "We partnered with Red Hat to promote Season 3 of Command Line Heroes — an original podcast from Red Hat, hosted by Saron Yitbarek of CodeNewbie, about the people who transform technology from the command line up. It’s an awesome show and we’re huge fans of Saron and the team behind the podcast, so we wanted to share it with you. Learn more and subscribe at redhat.com/commandlineheroes.",
    "date": "2019-08-27T11:00:00Z",
    "vote": 0
  },
  {
    "id": "5139b258230834174610c692e174dd0c",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "JSON Web Tokens: Authenticating your API",
    "url": "https://golangcode.com/api-auth-with-jwt/",
    "resume": "There are of course many different ways to build authentication into APIs these days - JSON web tokens being just one of them. JSON Web Tokens (JWT) have an inherent advantage over other methods, like Basic Authentication, by working as a token system instead of sending the username and password with every request. To learn more about it, head over to the introduction on jwt.io before we dive straight into it.",
    "date": "2019-08-26T17:50:00Z",
    "vote": 0
  },
  {
    "id": "35049381508b95933fd380d2c7ac5069",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Why is DevOps Important?",
    "url": "https://www.ardanlabs.com/blog/2019/08/devops-questions-for-ardan-labs.html",
    "resume": "1. What are four keys for great DevOps? Collaboration: DevOps requires collaboration, both within teams and between teams. Good communication between teams implies to break down silos, which can be harder than it sounds in organizations where a leader and their team are rewarded for individual achievements, discouraging them from collaborating and sharing information with others, and often encouraging politics at the expense of the company\u0026rsquo;s success.\nBlameless Culture: It also requires to internalize that we learn from our failures.",
    "date": "2019-08-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b1e83b61a3e5f3708423e387a9ac0a0e",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Security in Dependencies",
    "url": "https://blog.boot.dev/security/security-in-dependencies/",
    "resume": "Choosing the right dependencies is a difficult task. Assuming the developer of an application is the best programmer in the world, the \u0026ldquo;best\u0026rdquo; thing to do would be to write the entire codebase alone.",
    "date": "2019-08-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fa893cab7d77f7300f898bdecb3530b3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The importance of representation",
    "url": "https://changelog.com/gotime/95",
    "resume": "Hot off the heels of GopherCon 2019 — Johnny Boursiquot, Jon Calhoun, and special guests Jamal Yusuf, and Yingrong Zhao recap the conference and the importance of representation in the Go community.",
    "date": "2019-08-20T18:00:00Z",
    "vote": 0
  },
  {
    "id": "770df3cd763c98b595b388aa76d1f882",
    "source": {
      "path": "blogs",
      "name": "Dave Cheney",
      "url": "https://dave.cheney.net/feed"
    },
    "name": "Go compiler intrinsics",
    "url": "https://dave.cheney.net/2019/08/20/go-compiler-intrinsics",
    "resume": "Go allows authors to write functions in assembly if required. This is called a stub or forward declaration. package asm // Add returns the sum of a and b. func Add(a int64, b int64) int64 Here we\u0026#8217;re declaring Add, a function which takes two int64\u0026#8216;s and returns their sum.Add is a normal Go function declaration, [\u0026#8230;]",
    "date": "2019-08-20T10:50:18Z",
    "vote": 0
  },
  {
    "id": "87bc05495f434ea98e0a31f14187b24e",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Check Element Exists in a Slice",
    "url": "https://golangcode.com/check-if-element-exists-in-slice/",
    "resume": "Go doesn\u0026rsquo;t have a find or in_array function as part of it\u0026rsquo;s standard library. They are easy to create however. In this example we create a Find() function to search a slice of strings for the element we are looking for.\nCue the \u0026ldquo;generics\u0026rdquo; rant from some coders. This is a great example of why they could be useful. We have created our find function, but it only works with strings and you will have to create different find functions for different types - as needed.",
    "date": "2019-08-16T17:00:00Z",
    "vote": 0
  },
  {
    "id": "1c38682e4d23463704d18341436f3941",
    "source": {
      "path": "courses",
      "name": "Golang Bot",
      "url": "https://golangbot.com/rss/"
    },
    "name": "June 2019 Quiz Answers and Explanation",
    "url": "https://golangbot.com/june-2019-quiz-results/",
    "resume": "\u003cp\u003eHere are all the quizzes posted on \u003ca href=\"https://twitter.com/bot_golang \" target=\"_\"blank\"\"\u003eTwitter\u003c/a\u003e and \u003ca href=\"https://www.facebook.com/golangbot \" target=\"_\"blank\"\"\u003eFacebook\u003c/a\u003e in June 2019 and their explanation.\u003c/p\u003e\n\n\u003ch3 id=\"quiz1\"\u003eQuiz 1\u003c/h3\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-go line-numbers\"\u003epackage main\n\nimport (  \n    \"fmt\"\n)\n\nfunc hello() []string {  \n    return nil\n}\n\nfunc main() {  \n    h := hello\n    if h == nil {\n        fmt.Println(\"nil\")\n    } else {\n        fmt.Println(\"not nil\")\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ca href=\"https://play.golang.org/p/tJ01sLBMgcY \" target=\"_\"blank\"\"\u003eRun in playground\u003c/a\u003e\u003c/p\u003e\n\n\u003ch5 id=\"options\"\u003eOptions\u003c/h5\u003e\n\n\u003cpre\u003e\u003ccode\u003enil  \nnot nil  \ncompilation\u003c/code\u003e\u003c/pre\u003e",
    "date": "2019-08-16T11:54:55Z",
    "vote": 0
  },
  {
    "id": "f070b3d80f4b25dcd7ec2341d436a3ea",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Encoding vs Encryption - They Aren't the Same",
    "url": "https://blog.boot.dev/cryptography/encoding-vs-encryption/",
    "resume": "While encryption does involve various methods of encoding data, the two are absolutely not interchangeable. In fact, if you get them mixed up it can result in serious data breaches and security vulnerabilities.",
    "date": "2019-08-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "29fb31fbafd4cf63766accdd4b222cad",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Structuring your Go apps",
    "url": "https://changelog.com/gotime/94",
    "resume": "Jon, Mat, Johnny, and special guest Cory LaNou discuss the ins and outs of structuring Go programs. Why is app structure so important? Why is it hard to structure Go apps? What happens if we get it wrong? Why do we confuse folder structures with application design? How should a new Go app be structured?",
    "date": "2019-08-09T20:00:00Z",
    "vote": 0
  },
  {
    "id": "f3db0d186ac9ae7d123259f29e65b2e8",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Read a File to String",
    "url": "https://golangcode.com/read-a-files-contents/",
    "resume": "This is a matching post to \u0026ldquo;Writing to a File\u0026rdquo; and explains how to simply get the contents of a file as text and print it to screen.\nThere are different ways to achieve this in Go - all valid. In this guide though we\u0026rsquo;ve gone for the simple approach. Using ioutil makes this easy for us by not having to worry about closing files or using buffers. At the cost though of not having flexibility over which parts of the file we need.",
    "date": "2019-08-08T17:00:00Z",
    "vote": 0
  },
  {
    "id": "792ec9f02908a58348955549cd6c53de",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Automatic Cross-Platform Deployments with Electron",
    "url": "https://blog.boot.dev/open-source/automatic-cross-platform-deployments-with-electron-on-a-ci-server-travis/",
    "resume": "This is a tutorial on how to set up an Electron app on Travis CI, so that new versions are deployed to Github Releases with a simple pull request.",
    "date": "2019-08-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ed9608be6569d617d1647205aa0fa729",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "If you've never been to GopherCon...",
    "url": "https://changelog.com/gotime/93",
    "resume": "Jon, Mark, Johnny, and special guest Jamal Yusuf discuss what to expect when attending a conference like GopherCon. What should you be doing before you attend GopherCon? What should you bring to the conference? What shouldn’t you bring? What are the training sessions about? What about the hacking sessions and talking with the Go team? What if you don’t know anyone?",
    "date": "2019-08-05T16:00:00Z",
    "vote": 0
  },
  {
    "id": "76596607d286cb88c6d4eb83d0c4a673",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Creating and Remembering a Strong Passphrase",
    "url": "https://blog.boot.dev/security/creating-and-remembering-a-strong-passphrase/",
    "resume": "We all have hundreds of online accounts. Ideally, as many of those accounts as possible have unique passwords.",
    "date": "2019-08-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f72789c27d9bc1cee86c4a0f3391a270",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "BIP 32 Watch-Only Wallets",
    "url": "https://blog.boot.dev/bitcoin/bip-32-watch-only-wallets/",
    "resume": "Bitcoin improvement proposal 32 is, in my opinion, one of the most important BIPs we have.",
    "date": "2019-07-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c6c0284b3aaa64e2dd128dbf40bf1ab6",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Timeout a Function Call (with Goroutines \u0026 Channels)",
    "url": "https://golangcode.com/timing-out-a-goroutine/",
    "resume": "Some applications and programs can be very time sensitive - and they often need to return something in a timely fashion. However, it\u0026rsquo;s not always within our control to set a cut off point these operations. Go makes this process somewhat easier though through it\u0026rsquo;s use of goroutines and channels.\nIn the example below we execute LongRunningProcess which we\u0026rsquo;ve given 3 seconds complete - but it contains code to sleep for 5, so it will never complete.",
    "date": "2019-07-23T17:00:00Z",
    "vote": 0
  },
  {
    "id": "60fb46fa6299e86249d7cc6d9e73786b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go is eating the world of software",
    "url": "https://changelog.com/gotime/the-changelog-354",
    "resume": "It’s The Changelog in the Go Time feed! Adam Stacoviak and Jerod Santo met up with Ron Evans at OSCON on the expo hall floor to talk about Go and how it’s eating the world of software. Specifically they talked about TinyGo and what they’re doing to bring the Go programming language to micro-controllers and modern web browsers. According to Ron Evans, “embedded systems and Go are the most exciting things happening right now.”",
    "date": "2019-07-23T11:00:00Z",
    "vote": 0
  },
  {
    "id": "013077fb2ce930b19769ca398f1d06e3",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Trustworthy vs Trustless Apps",
    "url": "https://blog.boot.dev/security/trustworthy-vs-trustless-apps/",
    "resume": "In the wake of the hearings about Facebook\u0026rsquo;s new Libra blockchain, it is more important than ever that we all understand the difference between trustworthy and trustless apps.",
    "date": "2019-07-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6a65f2305f03611f03f848942111b704",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Caddy Partnership With Light Code Labs",
    "url": "https://www.ardanlabs.com/blog/2019/07/caddy-partnership-light-code-labs.html",
    "resume": "Ardan Labs (a leader in building Go enterprise software) is excited to announce that we have partnered with Light Code Labs and Matt Holt to bring Caddy into the Ardan Labs family of products and services. Caddy is a lightweight ingress service written in Go that provides automated security features and a plugin environment for extensibility. With the service being free open source (FOSS), small and large Go engineering teams finally have the ability to own and maintain their ingress and load balancing software with ease.",
    "date": "2019-07-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6ef7fdfeee84365059a2ab678f764374",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Garbage Collection In Go : Part III - GC Pacing",
    "url": "https://www.ardanlabs.com/blog/2019/07/garbage-collection-in-go-part3-gcpacing.html",
    "resume": "Prelude This is the third post in a three part series that will provide an understanding of the mechanics and semantics behind the garbage collector in Go. This post focuses on how the GC paces itself.\nIndex of the three part series:\n1) Garbage Collection In Go : Part I - Semantics\n2) Garbage Collection In Go : Part II - GC Traces\n2) Garbage Collection In Go : Part III - GC Pacing",
    "date": "2019-07-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f0b033d26f2e921590c67e4ca99f88dc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Web development in Go",
    "url": "https://changelog.com/gotime/92",
    "resume": "Mat Ryer, Mark Bates, Johnny Boursiquot, and Aaron Schlesinger discuss web development in Go. Go is great at writing server technology, but how good is it for web development? We’ll talk about HTTP, templating, the front-end, Wasm, and we even discuss Buffalo with its creator, Mark Bates.",
    "date": "2019-07-16T11:00:00Z",
    "vote": 0
  },
  {
    "id": "e2bc88195bb002130ed8ae27d10ba479",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "if err != nil",
    "url": "https://changelog.com/gotime/91",
    "resume": "Mat and Carmen along with guest panelists Dave Cheney, Peter Bourgon, and Marcel van Lohuizen discuss errors in Go, including the new try proposal. Many questions get answered…What do we think about how errors work in Go? How is it different from other languages/approaches? What do/don’t we like? What don’t we like? How do we handle errors these days? What’s going on with the try proposal?",
    "date": "2019-07-11T10:55:00Z",
    "vote": 0
  },
  {
    "id": "21e8482e64ffe40a05a482e2a4ae69c8",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Find Common Colours in an Image",
    "url": "https://golangcode.com/find-common-colours-in-image/",
    "resume": "This is part 1 of how to find the dominant colours within an image. You might spot this functionality around the internet, as it\u0026rsquo;s used to give images background colours before the image has loaded.\nWe use a package to do this - which manages much of the heavy lifting. The package, called prominentcolor, uses the Kmeans++ algorithm to work this out. By default, it will return us the three most popular colours after both cropping and resizing the image.",
    "date": "2019-07-04T13:00:00Z",
    "vote": 0
  },
  {
    "id": "073a4cdebd20f5ef1f182f8116901451",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go tooling",
    "url": "https://changelog.com/gotime/90",
    "resume": "We’re talking about the tools we use every day help us to be productive! This show will be a great introduction for those new to Go tooling, with some discussion around what we think of them after using some of them for many years.",
    "date": "2019-07-03T11:05:00Z",
    "vote": 0
  },
  {
    "id": "3e6ffa9e884fc5c8d51c7a2edd5c36ac",
    "source": {
      "path": "blogs",
      "name": "BOOT.DEV",
      "url": "https://blog.boot.dev/index.xml"
    },
    "name": "Secure Random Numbers in Node.js",
    "url": "https://blog.boot.dev/cryptography/node-js-random-number/",
    "resume": "Quick answer: use crypto.randomBytes() for cryptographically secure randomness in Node.js.\nconst { randomBytes } = await import(\u0026#39;node:crypto\u0026#39;); const buf = randomBytes(256); console.",
    "date": "2019-07-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8ed35463f2c776d83365c83ba7b555e1",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "An Open Letter To The Go Team About Try",
    "url": "https://www.ardanlabs.com/blog/2019/07/an-open-letter-to-the-go-team-about-try.html",
    "resume": "“Once a language gets complex enough, programming in it is more like carving out a subset from an infinite sea of features, most of which we’ll never learn. Once a language feels infinite, the costs of adding further features to it are no longer apparent\u0026rdquo;. - Mark Miller\nThe new try proposal is an addition to the language that introduces a second mechanic to handle errors. It is being introduced in response to data gathered from the 2018 Go Survey and a review of proposals that were submitted during the Go 2 proposal process.",
    "date": "2019-07-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "16053fb0be530a78baa57528b7c629a6",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How to Check If a String Starts With ...",
    "url": "https://golangcode.com/check-if-string-starts-with/",
    "resume": "In this post we look at how to check if a given string starts with something. This is often used in programming and there are different ways to achieve the same goal.\nWe provide two options in this example. The first is to use the strings package along with the HasPrefix function - this is probably the simplest/best solution. We did include a second option though, if you know how long the prefix that you\u0026rsquo;re looking for is, you can use the string as a slice and check it\u0026rsquo;s value.",
    "date": "2019-06-29T19:00:00Z",
    "vote": 0
  },
  {
    "id": "f56da0b406d471bf3fa611fc08acae61",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The art of execution",
    "url": "https://changelog.com/gotime/89",
    "resume": "Panelists Mat Ryer, Johnny Boursiquot, Jon Calhoun, and guest panelist Egon Elbre discuss what they build, why, and how they do it. Everybody has their own unique process for getting things done, so today we’re going to learn about them. Too often processes get in the way and slow things down. How do we look for signs of those slow downs? How do we create a space where people are free to discuss their thoughts and struggles?",
    "date": "2019-06-12T17:00:00Z",
    "vote": 0
  },
  {
    "id": "b256821e0cd253ff87568940b8cbdf05",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Working with POST Request Data",
    "url": "https://golangcode.com/handle-post-request-data/",
    "resume": "This is an overview post (pun intended) about how to work with post request data sent to an endpoint via HTTP. This is slightly different to data stored in query parameters sent in the url and has to be handled differently.\nBecause we\u0026rsquo;re using a http server, we can parse the request (in variable r) using ParseForm() and then use the data from the map generated.\nThis will only work with data sent with a Content-Type header of application/x-www-form-urlencode or multipart/form-data.",
    "date": "2019-06-09T10:00:00Z",
    "vote": 0
  },
  {
    "id": "e050bb0a74e97e8ba99622beac325ae8",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go 💚 open source",
    "url": "https://changelog.com/gotime/88",
    "resume": "Panelists Mark Bates, Johnny Boursiquot, and Carmen Andoh discuss Go and open source — what is it, the value in contributing, what it means to be a maintainer, best practices, and the recent blog post from Chris Siebenmann titled “Go is Google’s language, not ours.”",
    "date": "2019-06-07T21:00:00Z",
    "vote": 0
  },
  {
    "id": "e003a166eff720c2201c2f5475b732b2",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Go Get: Install All Packages",
    "url": "https://golangcode.com/go-get-all-packages/",
    "resume": "Go has a simple built in way to download packages. If you\u0026rsquo;ve programmed in Go, you\u0026rsquo;ve likely used the go get command before (view docs). It often works something like this:\ngo get -u github.com/gorilla/mux\nWhich is great - but! What if you want to download all the packages linked to your project? This commonly happens if you pull a new project down using version control and don\u0026rsquo;t want to go get each package individually.",
    "date": "2019-06-07T11:00:00Z",
    "vote": 0
  },
  {
    "id": "5446b7ffda9eb2e64bffed030c4bedf5",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Sublime Text Workflow: Auto Build \u0026 Format",
    "url": "https://golangcode.com/sublime-text-go-workflow/",
    "resume": "Sublime Text 3 can be a great editor for writing Go code - and with a few simple tweaks it can get better. One example of a simple workflow improvement to automate the running of go fmt each time you save. This keeps your code neat and tidy, while also alerting you to any syntax errors.\nSome things you\u0026rsquo;ll need to get started:\n Go installed (with a GOPATH) Sublime Text Installed  1) Install Package Control Firstly, we\u0026rsquo;ll install Sublime\u0026rsquo;s Package Control by going to their site: packagecontrol.",
    "date": "2019-06-01T07:00:00Z",
    "vote": 0
  },
  {
    "id": "8f05cd87e2380ad31a02370cbd6ba428",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Functional programming?",
    "url": "https://changelog.com/gotime/87",
    "resume": "Panelists Mat Ryer and Johnny Boursiquot are joined by guest panelist Aaron Schlesinger to ask/answer questions like; What is functional programming? Can you do functional programming in Go? Can we apply any learnings from functional programming languages as we write Go code today?",
    "date": "2019-05-29T17:00:00Z",
    "vote": 0
  },
  {
    "id": "43aac9524e82abd1596eb11e2efda26a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go modules and the Athens project",
    "url": "https://changelog.com/gotime/86",
    "resume": "Panelists Mat Ryer and Carmen Andoh are joined by guest panelists Marwan Sulaiman and Aaron Schlesinger to discuss Go modules and the Athens project.",
    "date": "2019-05-22T21:00:00Z",
    "vote": 0
  },
  {
    "id": "90cf3dd4684c64fc6d2a1a31d9cf058b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go for beginners",
    "url": "https://changelog.com/gotime/85",
    "resume": "How do beginners learn Go? This episode is meant to engage both non-Go users that listen to sister podcasts here on Changelog, or any Go-curious programmers out there, as well as encourage those that have started to learn Go and want to level up beyond the basics. On this episode we’re aiming to answer questions about how to learn Go, identify resources that are available, and where you can go to continue your learning journey.",
    "date": "2019-05-15T17:00:00Z",
    "vote": 0
  },
  {
    "id": "7d8fad11ab8ae58296afcba34928e749",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Garbage Collection In Go : Part II - GC Traces",
    "url": "https://www.ardanlabs.com/blog/2019/05/garbage-collection-in-go-part2-gctraces.html",
    "resume": "Prelude This is the second post in a three part series that will provide an understanding of the mechanics and semantics behind the garbage collector in Go. This post focuses on how to generate GC traces and interpret them.\nIndex of the three part series:\n1) Garbage Collection In Go : Part I - Semantics\n2) Garbage Collection In Go : Part II - GC Traces\n2) Garbage Collection In Go : Part III - GC Pacing",
    "date": "2019-05-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f38f367211d1277ca1546f12167bfce3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hardware hacking with TinyGo and Gopherbot",
    "url": "https://changelog.com/gotime/84",
    "resume": "Mat Ryer hosts our first one-on-one interview-style episode with special guest Ron Evans. Mat asks Ron to teach us about Go in IoT, hardware hacking at Gophercon, TinyGo, and Gopherbot.",
    "date": "2019-05-08T12:00:00Z",
    "vote": 0
  },
  {
    "id": "e2f2dcbab7edcbf0c5131cc889205e76",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "JSON Encode - Pretty Print",
    "url": "https://golangcode.com/json-encode-pretty-print/",
    "resume": "Is JSON for computers or humans to read? Well, hopefully with this snippet it can be for both. Instead of just dumping all the json in one line, we instead format it and indent it for readability purposes.\nUsing the MarshalIndent function in the json package we\u0026rsquo;re able to not only specify the data to encode, but also a prefix and an indentation string. In our example we\u0026rsquo;re not to worried about the prefix, but the indentation (3rd parameter) allows us to structure our code.",
    "date": "2019-05-03T18:00:00Z",
    "vote": 0
  },
  {
    "id": "2b9ad8c8cf96cca9c153fc87d84aa6f5",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Garbage Collection In Go : Part I - Semantics",
    "url": "https://www.ardanlabs.com/blog/2018/12/garbage-collection-in-go-part1-semantics.html",
    "resume": "Prelude This is the first post in a three part series that will provide an understanding of the mechanics and semantics behind the garbage collector in Go. This post focuses on the foundation material on the collector\u0026rsquo;s semantics.\nIndex of the three part series:\n1) Garbage Collection In Go : Part I - Semantics\n2) Garbage Collection In Go : Part II - GC Traces\n2) Garbage Collection In Go : Part III - GC Pacing",
    "date": "2019-05-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "898718a93a51467f69b71d506e9ff59e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "It's time to talk about testing",
    "url": "https://changelog.com/gotime/83",
    "resume": "Is testing an art or a science? What and when should we test? What’s the point of testing and can it go too far? We explore all this and more in this jam-packed episode on testing.",
    "date": "2019-05-02T15:00:00Z",
    "vote": 0
  },
  {
    "id": "735ec2457751af656d13c2b89a3f7b86",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hiring and job interviews",
    "url": "https://changelog.com/gotime/82",
    "resume": "Panelists Mat Ryer, Ashley McNamara, Johnny Boursiquot, and Carmen Andoh discuss the process of getting hired, hiring, and job interviews. If people are the most important part of a team, how do we pick who we work with? What’s the process like? How can it better?",
    "date": "2019-04-23T17:00:00Z",
    "vote": 0
  },
  {
    "id": "584d0d023b445395995db3fe3e55ad43",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Concurrency Trap #2: Incomplete Work",
    "url": "https://www.ardanlabs.com/blog/2019/04/concurrency-trap-2-incomplete-work.html",
    "resume": "Introduction In my first post on Goroutine Leaks, I mentioned that concurrency is a useful tool but it comes with certain traps that don\u0026rsquo;t exist in synchronous programs. To continue with this theme, I will introduce a new trap called incomplete work. Incomplete work occurs when a program terminates before outstanding Goroutines (non-main goroutines) complete. Depending on the nature of the Goroutine that is being terminated forcefully, this may be a serious problem.",
    "date": "2019-04-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c803e2a9bf64b0e6248d0a65d342ac9c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "All about APIs!",
    "url": "https://changelog.com/gotime/81",
    "resume": "Panelists Mat Ryer, Johnny Boursiquot, Jaana B. Dogan, and Mark Bates discuss how humans build machine to machine integrations via APIs — the good, the bad, and the ugly — and how to give yourself the best chance of success.",
    "date": "2019-04-16T21:00:00Z",
    "vote": 0
  },
  {
    "id": "6038a0b37df1b6acd274a0f01adafa15",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Slow down your code with goroutines",
    "url": "https://appliedgo.net/concurrencyslower/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eOr: How adding goroutines can keep your CPU busy shuffling things around.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2019-04-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "743f80e6858d4924d8d5eca6df75fb23",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go 2 and the future of Go",
    "url": "https://changelog.com/gotime/80",
    "resume": "We’re back! Panelists Mat Ryer, Johnny Boursiquot, Jaana B. Dogan, and Mark Bates discuss Go 2, the future of Go, what they like and don’t like, and what they would add or remove.",
    "date": "2019-04-09T19:00:00Z",
    "vote": 0
  },
  {
    "id": "3b38bd38b361d8ca8d2983920c96b0f1",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Integration Testing in Go: Part I - Executing Tests with Docker",
    "url": "https://www.ardanlabs.com/blog/2019/03/integration-testing-in-go-executing-tests-with-docker.html",
    "resume": "Introduction “Testing leads to failure, and failure leads to understanding.” - Burt Rutan\nBurt Rutan is an aerospace engineer who designed Voyager, the first plane to fly around the world without stopping or refueling. Although Rutan was not a software engineer, his words speak volumes to the importance of testing, even testing software. Testing software in all forms is extremely important, whether it be unit, integration, system, or acceptance testing.",
    "date": "2019-03-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6726e68e93a1ac6fc291a983acf7d6e3",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "Memory management under the hood",
    "url": "https://mariadesouza.com/2019/03/08/memory-management-under-the-hood/",
    "resume": "Memory for a programming language can be allocated via the stack or the heap. Allocation on the stack happens in contiguous blocks of memory. When variables go out of scope these are deallocated automatically. Stack allocation is faster but stack size is limited. Heap does not have a single block of memory but a set\u0026#8230; \u003ca href=\"https://mariadesouza.com/2019/03/08/memory-management-under-the-hood/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eMemory management under the\u0026#160;hood\u003c/span\u003e\u003c/a\u003e",
    "date": "2019-03-08T00:04:45Z",
    "vote": 0
  },
  {
    "id": "2fab72eb976d72fe9ce00be0bec8283e",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "System Design – Scalability",
    "url": "https://mariadesouza.com/2019/03/03/system-design-scalability/",
    "resume": "Scalability is defined as the capacity to change in size. In technology, it means the ability to grow and manage increased demand without affecting overall performance of the systems. Why is scalability so hard? A lot of systems are built iteratively. They start with an idea and a prototype. Traffic and workload grow over time.\u0026#8230; \u003ca href=\"https://mariadesouza.com/2019/03/03/system-design-scalability/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eSystem Design \u0026#8211;\u0026#160;Scalability\u003c/span\u003e\u003c/a\u003e",
    "date": "2019-03-03T23:22:35Z",
    "vote": 0
  },
  {
    "id": "ab3d19434f95241d71bd4da621b4cb9a",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Basic Docker Setup for HTTP Server (using docker-compose)",
    "url": "https://golangcode.com/basic-docker-setup/",
    "resume": "There are many guides on how to setup a docker container running Go, but the aim of this post is to provide a basic starting point - as often they become complicated and split across many files. It\u0026rsquo;s also aimed at getting it running locally for development purposes quickly, so it might not be production ready.\nTo begin with we create a basic http server, which just says status: ok on the root endpoint.",
    "date": "2019-02-24T13:00:00Z",
    "vote": 0
  },
  {
    "id": "4699d072150f890b3f9ef189b234c00b",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Check If a Date/Time Has Been Set with IsZero",
    "url": "https://golangcode.com/checking-if-date-has-been-set/",
    "resume": "In Go, we can store and use dates using the time package and although a date in Go cannot be saved as null (because there\u0026rsquo;s no such thing) there is an unset state. This unset state can be shown as 0001-01-01 00:00:00 +0000 UTC and there\u0026rsquo;s a simple way we can check if a date variable has been populated, as demonstrated below. It\u0026rsquo;s also important to note that these are not unix timestamps, which go back as far as 1970, but can handle a large spectrum of dates.",
    "date": "2019-02-16T09:00:00Z",
    "vote": 0
  },
  {
    "id": "81270a3c36c8dcd046101c8621eee56f",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "Git Tips",
    "url": "https://mariadesouza.com/2019/02/15/git-tips/",
    "resume": "Partial Checkout of a repo If you have to work on a big repo and don\u0026#8217;t want to clone the entire repo on your machine, you could checkout only part of the repo using sparse checkout option. This allows you to choose only folders you want to work on within the repo. Create the directory\u0026#8230; \u003ca href=\"https://mariadesouza.com/2019/02/15/git-tips/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eGit Tips\u003c/span\u003e\u003c/a\u003e",
    "date": "2019-02-15T23:51:15Z",
    "vote": 0
  },
  {
    "id": "84246109232f4ffe7054f97a46e270de",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Is Long/Lat within Polygon from GeoJson",
    "url": "https://golangcode.com/is-point-within-polygon-from-geojson/",
    "resume": "This is an example of checking if a pair of long/lat coordinates lie within a polygon or multipolygon when working with geojson. It\u0026rsquo;s often useful when working with geo-special data and maps to determine if the point your looking is within an area - or which area it\u0026rsquo;s within.\nWe use the paulmach/orb package (see on github), which is deep and precise library for dealing with all sorts of spacial and geometric data.",
    "date": "2019-02-02T09:00:00Z",
    "vote": 0
  },
  {
    "id": "90a11522700c39094eff290cb913c47e",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Convert Interface to Type: Type Assertion",
    "url": "https://golangcode.com/convert-interface-to-number/",
    "resume": "If you\u0026rsquo;ve ever come across messages like these, you\u0026rsquo;ll no doubt have used type assertion already. This is a post explain how and why to use it.\n1  cannot convert result (type interface {}) to type float64: need type assertion   1  invalid operation: myInt += 5 (mismatched types interface {} and int)   Functions and packages will at times return interface{} as a type because the type would be unpredictable or unknown to them.",
    "date": "2019-01-28T11:00:00Z",
    "vote": 0
  },
  {
    "id": "662065a2f1d8aafd39db1bf5406292b5",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "Writing tests in Go",
    "url": "https://mariadesouza.com/2019/01/20/writing-tests-in-go/",
    "resume": "Unit tests in Go are run using the go test command. To create unit tests in go to check functions, add a file with the same name as the original and add a suffix \u0026#8220;_test\u0026#8221; E.g. lrucache\u0026#124;- cache.go\u0026#124;- cache_test.go To test function Foo your test name should be of the form: func TestFoo(*testing.T) Even if\u0026#8230; \u003ca href=\"https://mariadesouza.com/2019/01/20/writing-tests-in-go/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eWriting tests in\u0026#160;Go\u003c/span\u003e\u003c/a\u003e",
    "date": "2019-01-20T22:41:58Z",
    "vote": 0
  },
  {
    "id": "be28ded766fc1a22faf479e3912b13ad",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Run Code Once on First Load  (Concurrency Safe)",
    "url": "https://golangcode.com/run-code-once-with-sync/",
    "resume": "Using a web server as an example, there are multiple stages you can load resources. Within the main() function and within the handler are the obvious two - each with their own advantages and disadvantages. Within the main function can hinder the start-up time of the server, while code within the handler is run on every request.\nSometimes we want to load a resource only once and when it\u0026rsquo;s first needed.",
    "date": "2019-01-19T17:00:00Z",
    "vote": 0
  },
  {
    "id": "f8778a5e43bf66541a107c3d6ae6017a",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "Cryptography",
    "url": "https://mariadesouza.com/2019/01/19/cryptography/",
    "resume": "Cryptography is the set of protocols and algorithms for information protection and verification. There are three widely used concepts in Cryptography that are used to achieve data verification, integrity and confidentiality. These are encryption, hashing and salting. Encryption Encryption scrambles data so its unreadable by unintended parties. Encryption is two way. When you encrypt something\u0026#8230; \u003ca href=\"https://mariadesouza.com/2019/01/19/cryptography/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eCryptography\u003c/span\u003e\u003c/a\u003e",
    "date": "2019-01-19T04:40:44Z",
    "vote": 0
  },
  {
    "id": "5a3911d854269376820be019cbcd0e13",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Disable Log Output During Tests",
    "url": "https://golangcode.com/disable-log-output-during-tests/",
    "resume": "It\u0026rsquo;s quite common to use the log package within your code to keep track of things which the end user might not need to see, like deprecated notices and warnings. These are great when they are in production and you are monitoring the logs - but they will show up during your tests.\nBelow is an example test for our example application (even further below) which just asserts that the result of the function is 5.",
    "date": "2019-01-14T20:20:00Z",
    "vote": 0
  },
  {
    "id": "9977d65af9e8ccee3f0e8f1e921e9a03",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "Empty Struct",
    "url": "https://mariadesouza.com/2019/01/12/empty-struct/",
    "resume": "An empty struct in Go has no data elements. type S struct{} The most important property of the empty struct is that the width is zero. This allows to create a slice or channel of thousands of empty structs with a tiny memory footprint. Here is a size comparison of the empty struct vs empty\u0026#8230; \u003ca href=\"https://mariadesouza.com/2019/01/12/empty-struct/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eEmpty Struct\u003c/span\u003e\u003c/a\u003e",
    "date": "2019-01-12T20:19:40Z",
    "vote": 0
  },
  {
    "id": "97825c0b71effb4b9619f2e71dce151a",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Sending a Slack Message (without a library)",
    "url": "https://golangcode.com/send-slack-messages-without-a-library/",
    "resume": "Programs often need to notify us of events and using services like Slack, Hipchat (or even email) make this convenient for us. This code snippet is a way of sending a message to Slack via an Incoming Webhook - you can set these up in the Slack Apps area. All you need is to set the incoming webhook url and change the text to be anything you want.\nIt does include a timeout (of 10 seconds) if something happens to Slack response times for any reason.",
    "date": "2019-01-10T20:20:00Z",
    "vote": 0
  },
  {
    "id": "338e3a2ab462137c6e431a05f02c6020",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Create a Basic HTTPS Server (using TLS)",
    "url": "https://golangcode.com/basic-https-server-with-certificate/",
    "resume": "This post isn\u0026rsquo;t about the benefits or why you should be using https, instead it\u0026rsquo;s just about how to setup and use it with a basic Go web server. Compared with a basic http server there are two main differences. Firstly we need to generate some certificates and secondly we need to change our code to use the certificates and communicate over a TLS connection.\nStep 1: Commands to make self-signed certificates",
    "date": "2018-12-21T16:20:00Z",
    "vote": 0
  },
  {
    "id": "dc9a8754eaa9d20177d603f7035399fd",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Goroutine Leaks - The Abandoned Receivers",
    "url": "https://www.ardanlabs.com/blog/2018/12/goroutine-leaks-the-abandoned-receivers.html",
    "resume": "Introduction Goroutine Leaks are a common cause of memory leaks in Go programs. In my previous post, I presented an introduction to Goroutine leaks and provided one example of a common mistake that many Go developers make. Continuing that work, this post presents another scenario on how Goroutines could be leaked.\nLeak: The Abandoned Receivers For this leak example you will see multiple Goroutines blocked waiting to receive values that will never be sent.",
    "date": "2018-12-19T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c94daca06b1e2add8a7defd67b5346d2",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "Interfaces in Go",
    "url": "https://mariadesouza.com/2018/12/05/interfaces-in-go/",
    "resume": "An interface type is a method set. If a type contains methods of the interface, it implements the interface.\u0026#160; A type can implement multiple interfaces. For instance all type implement the empty interface. An interface\u0026#160;may use a\u0026#160; interface type name\u0026#160;\u0026#160;in place of a method specification. This is called\u0026#160;embedding\u0026#160;interface. type ReadWriter interface { Read(b Buffer) bool\u0026#8230; \u003ca href=\"https://mariadesouza.com/2018/12/05/interfaces-in-go/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eInterfaces in Go\u003c/span\u003e\u003c/a\u003e",
    "date": "2018-12-05T23:03:23Z",
    "vote": 0
  },
  {
    "id": "bd343d7280e520937efd3f833a28bff0",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Scheduling In Go : Part III - Concurrency",
    "url": "https://www.ardanlabs.com/blog/2018/12/scheduling-in-go-part3.html",
    "resume": "Prelude This is the third post in a three part series that will provide an understanding of the mechanics and semantics behind the scheduler in Go. This post focuses on concurrency.\nIndex of the three part series:\n1) Scheduling In Go : Part I - OS Scheduler\n2) Scheduling In Go : Part II - Go Scheduler\n3) Scheduling In Go : Part III - Concurrency\nIntroduction When I’m solving a problem, especially if it’s a new problem, I don’t initially think about whether concurrency is a good fit or not.",
    "date": "2018-12-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ef1cfd710f8730bc49adf14837c28ab2",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "Golang Net HTTP Package",
    "url": "https://mariadesouza.com/2018/11/28/golang-net-http-package/",
    "resume": "Golang\u0026#8217;s net/http package can be used to build a web server in a minutes. It packs in a pretty wide use of Golang concepts like functions, interfaces and types to achieve this. Here is a basic web server using Go: package main import ( \"fmt\" \"net/http\" ) func main() { http.HandleFunc(\"/\", handlerHelloWorld) http.ListenAndServe(\":8082\", nil) }\u0026#8230; \u003ca href=\"https://mariadesouza.com/2018/11/28/golang-net-http-package/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eGolang Net HTTP\u0026#160;Package\u003c/span\u003e\u003c/a\u003e",
    "date": "2018-11-28T23:46:12Z",
    "vote": 0
  },
  {
    "id": "6b3f1977518e7b7a5c6d7a9f1313890c",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Goroutine Leaks - The Forgotten Sender",
    "url": "https://www.ardanlabs.com/blog/2018/11/goroutine-leaks-the-forgotten-sender.html",
    "resume": "Introduction Concurrent programming allows developers to solve problems using more than one path of execution and is often used in an attempt to improve performance. Concurrency doesn’t mean these multiple paths are executing in parallel; it means these paths are executing out-of-order instead of sequentially. Historically, this type of programming is facilitated using libraries that are either provided by a standard library or from 3rd party developers.\nIn Go, concurrency features like Goroutines and channels are built into the language and runtime to reduce or eliminate the need for libraries.",
    "date": "2018-11-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "49252a853866b2f293121f49b67a4118",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Waiting for Goroutines to Finish with a WaitGroup",
    "url": "https://golangcode.com/waiting-for-goroutines-to-finish/",
    "resume": "One of the (many) positives of Go is it\u0026rsquo;s simple but powerful use of concurrency. By using keywords like go we\u0026rsquo;re able to run functions in parallel. As easy as this is, we often need a way to run our next bit of code once all these goroutines have finished. That\u0026rsquo;s where a WaitGroup comes in.\nA WaitGroup allows you to specify how many goroutines have been created then wait for them to all be done.",
    "date": "2018-11-04T19:20:00Z",
    "vote": 0
  },
  {
    "id": "374be7ffd3271de13415daee678f513a",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Parsing Dates from a String and Formatting",
    "url": "https://golangcode.com/parsing-dates/",
    "resume": "We almost touched on this in our post about unix time - but in this post we look at how to take an arbitrary date in string format and convert it into a meaningful date in the format we want. This uses two important functions, Parse and Format within the time package.\nThe parse function is interesting because, unlike some programming languages, to parse a date you don\u0026rsquo;t specify the date using letters (Y-m-d for example).",
    "date": "2018-10-25T20:20:00Z",
    "vote": 0
  },
  {
    "id": "cc1009ebed97a60ff001df8d154625af",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Run System Commands \u0026 Binary Files",
    "url": "https://golangcode.com/execute-a-command/",
    "resume": "Within Go, like other languages, we have the ability to call external binaries. These allow us to do all sorts of things, but in our example we\u0026rsquo;re just going to print out our go version by calling our copy (located in /usr/local/go/bin on my computer).\nThe Command function within the os/exec package will allow us to do this. It accepts at least one string - the name of the command/binary you\u0026rsquo;re trying to run - followed by any number of strings for it\u0026rsquo;s parameters.",
    "date": "2018-10-06T20:30:00Z",
    "vote": 0
  },
  {
    "id": "1004ddd67e6249d900e2de4d07773f4d",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Scheduling In Go : Part II - Go Scheduler",
    "url": "https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part2.html",
    "resume": "Prelude This is the second post in a three part series that will provide an understanding of the mechanics and semantics behind the scheduler in Go. This post focuses on the Go scheduler.\nIndex of the three part series:\n1) Scheduling In Go : Part I - OS Scheduler\n2) Scheduling In Go : Part II - Go Scheduler\n3) Scheduling In Go : Part III - Concurrency\nIntroduction In the first part of this scheduling series, I explained aspects of the operating-system scheduler that I believe are important in understanding and appreciating the semantics of the Go scheduler.",
    "date": "2018-09-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "934535032b72d48386bf36cc71d88b72",
    "source": {
      "path": "blogs",
      "name": "All Things Tech",
      "url": "https://mariadesouza.com/feed/"
    },
    "name": "API Performance Testing",
    "url": "https://mariadesouza.com/2018/09/01/api-performance-testing/",
    "resume": "The goal of API Performance Tests are to conduct  load tests that will run broadly across all endpoints of an API and help us understand the distribution of throughput in requests per second \u0026#8211; average, peak, etc. It is important to record response times and resource utilization at average and peak loads. This will allow\u0026#8230; \u003ca href=\"https://mariadesouza.com/2018/09/01/api-performance-testing/\" class=\"more-link\"\u003eContinue reading \u003cspan class=\"screen-reader-text\"\u003eAPI Performance Testing\u003c/span\u003e\u003c/a\u003e",
    "date": "2018-09-01T23:44:03Z",
    "vote": 0
  },
  {
    "id": "d8f9eb6d4952362a36352988732f5e3c",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Creating the Art for Gopher Kart",
    "url": "https://www.ardanlabs.com/blog/2018/08/creating-the-art-for-gopher-kart.html",
    "resume": "In the months leading up to GopherCon, my wife Jamilet and I had come up with the idea of creating a “small” browser-based game for the convention using the racing theme. Neither of us had ever worked on a game before and we had no idea what was involved. However, we knew we wanted to design and build something special for the awesome Gopher community.\nThe original idea was to create a game where Gophers raced each other around a track.",
    "date": "2018-08-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1347577dd40f2a964af621ab09b72495",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Scheduling In Go : Part I - OS Scheduler",
    "url": "https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part1.html",
    "resume": "Prelude This is the first post in a three part series that will provide an understanding of the mechanics and semantics behind the scheduler in Go. This post focuses on the operating system scheduler.\nIndex of the three part series:\n1) Scheduling In Go : Part I - OS Scheduler\n2) Scheduling In Go : Part II - Go Scheduler\n3) Scheduling In Go : Part III - Concurrency",
    "date": "2018-08-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e35f7fcae2979e6adae54a7ece5a5321",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Sorting an Array of Numbered String Values",
    "url": "https://golangcode.com/sorting-an-array-of-numeric-items/",
    "resume": "This is an issue in programming when numbers are stored as strings - because as strings, when sorted alphabetically they will go by each digit, from first to last. You might encounter this problem when dealing with numbered file names, for example, which will be treated as strings but we might need to process them in order.\nIn our example below we use both the sort and strconv packages to sort the array and convert the strings to numbers within our comparison function.",
    "date": "2018-08-10T19:30:00Z",
    "vote": 0
  },
  {
    "id": "2c3edc2c9f7c1895c8fe94af3ed77de7",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Creating \u0026 Writing to Temp Files",
    "url": "https://golangcode.com/creating-temp-files/",
    "resume": "We programmers often use temporary files and this example shows how we can create and write to one. We used the ioutil package which has functions for just this.\nThe TempFile() accepts a folder and a prefix. As the folder we get the os' temp directory (which would be /tmp on unix systems) and for the prefix we use a string, but if we don\u0026rsquo;t want one, we just pass an empty string.",
    "date": "2018-07-06T19:00:00Z",
    "vote": 0
  },
  {
    "id": "8596a1c5430372b3eebfc673208e11d7",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Encode and Decode Strings using Base 64",
    "url": "https://golangcode.com/base-64-encode-decode/",
    "resume": "The example below shows to how to encode and then subsequently decode a string using base 64. Doing this has many uses, one of which to safely encode byte data in structures like JSON.\nWe use the encoding/base64 package to do this, which takes in and returns a byte array into it\u0026rsquo;s EncodeToString and DecodeString methods.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  package main import ( \u0026#34;encoding/base64\u0026#34; \u0026#34;fmt\u0026#34; ) func main() { myString := \u0026#34;This is golangcode.",
    "date": "2018-06-30T12:00:00Z",
    "vote": 0
  },
  {
    "id": "7f32e545a204e1dee785c0a327570dad",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ultimate Go Service",
    "url": "https://www.ardanlabs.com/blog/2018/06/ultimate-go-service.html",
    "resume": "Introduction I teach a class called Ultimate Go. The class is three days long and teaches you the history, mechanics and semantics of the Go programming language. The idea is to teach you how to read code to the level that you can understand the behavior and impact your program is having on the machine. This helps you make better and more consistent engineering decisions.\nAt the same time, the class is very focused on teaching you how to optimize for correctness so the code you are writing is readable as a first priority.",
    "date": "2018-06-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "197b97a767bb557b181f19d001f633e5",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "HTTP Get Request with Timeout",
    "url": "https://golangcode.com/http-get-with-timeout/",
    "resume": "We\u0026rsquo;ve already covered how to download a file, but this post covers it a little further by specifying the maximum time attempted on the request. Adding timeouts are often important to stop your program coming to a halt.\nTo do this we make our own http client, giving it our custom timeout value. We can then use this client to make our requests. If a timeout is reached, the Get() function will return with an error.",
    "date": "2018-06-20T19:00:00Z",
    "vote": 0
  },
  {
    "id": "50de968eb951bf8122356a58cb9dd80c",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Get the HTTP Method from a Request",
    "url": "https://golangcode.com/get-http-method-from-request/",
    "resume": "When working with any form of http communication in Go you\u0026rsquo;re going to come across scenarios where you need to know a request\u0026rsquo;s method - whether it\u0026rsquo;s a GET, POST, etc.\nIf you\u0026rsquo;re writing an API with Go you\u0026rsquo;ll most likely have the incoming request in the form of a http.Request object. This request has Method property which allows you to get the http method in the form of a string.",
    "date": "2018-06-08T15:00:00Z",
    "vote": 0
  },
  {
    "id": "49c18411f6b531336120dddbf7b9bf11",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "AWS Lambda PDF Generator",
    "url": "https://golangcode.com/lambda-pdf-generator-from-s3/",
    "resume": "This is an example of how to convert HTML code into a PDF using AWS' Lambda service and S3 Triggers. So that once a HTML file is upload to S3 it will automatically be converted into a PDF which should appear in the same bucket shortly after - all using a serverless function.\nTo do this, other than the standard library, we\u0026rsquo;re using a Go wkhtmltopdf library and the Go AWS sdk.",
    "date": "2018-05-29T09:00:00Z",
    "vote": 0
  },
  {
    "id": "4a41f00812309acfcf8ba06342154a90",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "New Go branding strategy",
    "url": "https://changelog.com/gotime/79",
    "resume": "Steve Francia joined the show and told us EVERYTHING about Go’s new branding strategy (and don’t worry, the gopher isn’t going anywhere!)",
    "date": "2018-05-07T18:38:09Z",
    "vote": 0
  },
  {
    "id": "08f09cb74fdefc37320726ad8a889b73",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Substring: How to Split a String",
    "url": "https://golangcode.com/substring-num-of-characters/",
    "resume": "In the example below we are looking at how to take the first x number of characters from the start of a string. If we know a character we want to separate on, like a space, we can use strings.Split() instead. But for this we\u0026rsquo;re looking to get the first 6 characters as a new string.\nTo do this we first convert it into a rune, allowing for better support in different languages and allowing us to use it like an array.",
    "date": "2018-05-05T09:00:00Z",
    "vote": 0
  },
  {
    "id": "9ee7ac89d34ab32840b409fc7a854b2b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hacking drones with Go",
    "url": "https://changelog.com/gotime/78",
    "resume": "Ron Evans joined the show and talked with us about GoCV, Gobot, using Go to control drones, and other interesting projects and news.",
    "date": "2018-04-30T17:00:00Z",
    "vote": 0
  },
  {
    "id": "5fbcc1db5f663c87a89a6d1ccdadba67",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Bounds Check Elimination In Go",
    "url": "https://www.ardanlabs.com/blog/2018/04/bounds-check-elimination-in-go.html",
    "resume": "Introduction One day I was talking to Damian Gryski in Slack about some performance improvements he made to his go-metro package. When I first looked at the changes I was completely confused how this could have any effect on the performance of the code. I felt the code was more readable, but more performant? I didn’t see it.\nThen Damian started to talk to me about a compiler optimization called Bounds Check Elimination or BCE.",
    "date": "2018-04-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d0175f56160de2f5e10fc16b6e97f715",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "BONUS – Go and WebAssembly (Wasm)",
    "url": "https://changelog.com/gotime/bonus-77",
    "resume": "This is a bonus segment in the after show of Go Time #77 with Russ Cox where we talk briefly about WebAssembly (Wasm) support in Go, and how that plays into Go being used as a web language.",
    "date": "2018-04-25T21:00:00Z",
    "vote": 0
  },
  {
    "id": "6fcf3226b364f9af4dded63047e1f68e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Dependencies and the future of Go",
    "url": "https://changelog.com/gotime/77",
    "resume": "Russ Cox joins us this week to talk about how Russ got involved with Go, Vgo, error handling, updates on Go 2.0, more.",
    "date": "2018-04-23T17:29:54Z",
    "vote": 0
  },
  {
    "id": "7d6558cbe0241a46eedf240ca018926e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building a distributed index with Go",
    "url": "https://changelog.com/gotime/76",
    "resume": "Matt Jaffee joined the show and talked with us about Pilosa, building distributed index with Go, and other interesting projects and news.",
    "date": "2018-04-13T21:44:25Z",
    "vote": 0
  },
  {
    "id": "44fce295c6dd27bdcb34b719e3aa4acd",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "GoLand IDE and managing Gopher Slack",
    "url": "https://changelog.com/gotime/75",
    "resume": "Florin Pățan joined the show and talked with us about GoLand, the pros and cons of using an IDE, his thoughts on the Go community, and managing Gopher Slack.",
    "date": "2018-04-06T19:00:00Z",
    "vote": 0
  },
  {
    "id": "2b44209194b9f5c40fae359b61811601",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Gophercises and creating content for Gophers",
    "url": "https://changelog.com/gotime/74",
    "resume": "Jon Calhoun joined the show and talked with us about Gophercises, experiencing the joy of building cool things, creating content for Gophers, and other interesting projects and news.",
    "date": "2018-03-30T16:20:28Z",
    "vote": 0
  },
  {
    "id": "4516d26564c4284f0505595a5613b051",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Apply Middleware to Your Route Handlers",
    "url": "https://golangcode.com/middleware-on-handlers/",
    "resume": "Middleware is a term used in many different ways within software development, but we\u0026rsquo;re referring to it as a way to wrap requests and responses in simple abstracted functions which can be applied to some routes easily.\nIn our example below we\u0026rsquo;re using an AuthMiddleware to check incoming requests for the correct api key and rejecting them if they don\u0026rsquo;t. Another good example for this technique is applying headers to responses, if you know the content type of the response, we can set it in middleware.",
    "date": "2018-03-30T00:20:00Z",
    "vote": 0
  },
  {
    "id": "8a95036328f219d5b2e13f2328331445",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Generating a SHA256 HMAC Hash",
    "url": "https://golangcode.com/generate-sha256-hmac/",
    "resume": "Generating HMACs (Keyed-Hash Message Authentication Code) are often used as a way of proving data integrity and authenticity. They involve three integrals parts, the algorithm (in our case SHA256), the secret and the data. They a used mainly because data can be checked between two parties without the sharing of the secret.\nIn go, there\u0026rsquo;s a convenient library to help us out with this called crypto/hmac and we show an example of how to do this below.",
    "date": "2018-03-24T00:20:00Z",
    "vote": 0
  },
  {
    "id": "4596bc0b9bc3c1b672ca6e0ddd9de11e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "CockroachDB and distributed databases in Go",
    "url": "https://changelog.com/gotime/73",
    "resume": "Andrei Matei joined the show and talked with us about CockroachDB (and why it’s easier to use than any RDBMS), distributed databases with Go, tracing, and other interesting projects and news.",
    "date": "2018-03-23T07:51:47Z",
    "vote": 0
  },
  {
    "id": "eb1ed291f2c0a393c7a1b8d04b37b18c",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interface Values Are Valueless",
    "url": "https://www.ardanlabs.com/blog/2018/03/interface-values-are-valueless.html",
    "resume": "Introduction I’ve been seeing a lot of question about interfaces lately on Slack. Most of the time the answers are technical and focus on implementation details. Implementation is important to help with debugging, but implementation doesn’t help with design. When it comes to designing code with interfaces, behavior has to be the main focus.\nIn this post, I hope to provide a different way to think about interfaces and how to design code with them.",
    "date": "2018-03-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "131884f9f8eedfea700ead815473f277",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Learning and teaching Go",
    "url": "https://changelog.com/gotime/72",
    "resume": "Bill Kennedy joined the show and talked with Carlisia about learning Go, teaching Go (which is something we’ll do at some point or another), making good presentations, and other interesting projects and news.",
    "date": "2018-03-22T10:39:17Z",
    "vote": 0
  },
  {
    "id": "388087516000d7ea075ecaa7625d5d13",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go is for everyone",
    "url": "https://changelog.com/gotime/71",
    "resume": "Carmen Andoh joined the show and talked with us about inclusivity, the 2017 Go Developer Survey, visualizing abstractions, and other interesting projects and news.",
    "date": "2018-03-22T10:12:38Z",
    "vote": 0
  },
  {
    "id": "7665787c9f6bd06b42db96b4cc565d33",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "From Russia with love",
    "url": "https://changelog.com/gotime/70",
    "resume": "Leo Kalneus joined the show and talked with us about GopherCon Russia and the Go community in Russia. We also debunked a few myths about Siberia and of course talked about interesting Go projects and news.",
    "date": "2018-03-16T20:10:06Z",
    "vote": 0
  },
  {
    "id": "5bfbb3cbacbf1de7a08681921011e19a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Golang Flow, FaaS, and Buffalo",
    "url": "https://changelog.com/gotime/69",
    "resume": "Brian Scott joined the show and talked with us about Golang Flow, contributing to open source, functions as a service, building for the web with Buffalo, and other interesting projects and news.",
    "date": "2018-03-09T12:16:48Z",
    "vote": 0
  },
  {
    "id": "c3b40d729bda617c697d4dbb5c182c70",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "SPECIAL — Ask us anything! (pt. 2)",
    "url": "https://changelog.com/gotime/68",
    "resume": "This is another special “Ask Us Anything” episode where we answer more questions submitted by the community. We covered A LOT of ground, including the hardest things we’ve ever written in Go, how the community can drive adoption, what we’d change about Go, and our favorite: “what do gophers eat?”",
    "date": "2018-03-01T21:16:10Z",
    "vote": 0
  },
  {
    "id": "ba6593f3f679fcf69490e04f3e8a868a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Supporting the Go community",
    "url": "https://changelog.com/gotime/67",
    "resume": "Cassandra Salisbury (the Go core team’s newest member) joined Carlisia (who’s hosting all by herself) to talk about getting to know the Go community around the world, organizing meetups, empowering leaders, and what’s in store for the future.",
    "date": "2018-02-23T17:07:33Z",
    "vote": 0
  },
  {
    "id": "b747844a72f664ddc9cba12970583456",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Focus On Being Precise",
    "url": "https://www.ardanlabs.com/blog/2018/02/focus-on-being-precise.html",
    "resume": "Introduction I was guided for many years to write functions that are generalized and to create layers upon layers of abstraction so things don’t break as business requirements change. That the cost of breaking a function signature, for example, is expensive and something that should be avoided. Therefore, write functions that take more generic parameters or hide things in a receiver or context to be less prone to breakage.",
    "date": "2018-02-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ee51ede193e7f42a4abf95cdeab9ca13",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Performance, fuzzing \u0026 magic",
    "url": "https://changelog.com/gotime/66",
    "resume": "Damian Gryski joined the show and talked with us about perfbook, performance profiling, reading white papers for fun, fuzzing, and other interesting projects and news.",
    "date": "2018-02-16T00:36:07Z",
    "vote": 0
  },
  {
    "id": "f794a9686b9964da887bd042024f45fa",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Converting a PDF to JPG (using ImageMagick)",
    "url": "https://golangcode.com/convert-pdf-to-jpg/",
    "resume": "In the example below we use the gographics/imagick package as a wrapper to the C library for ImageMagick to convert our PDF into a JPG. The processes goes as follows: We use the package to load in our test file which we then process by setting the resolution, compression levels and alpha channel settings then we save the final output file. Because the library is built on C, it\u0026rsquo;s important we call the Terminate and Destroy functions appropriately to keep our memory usage in check.",
    "date": "2018-02-09T20:20:00Z",
    "vote": 0
  },
  {
    "id": "77d05ffc7e811718b0c50241d5839ed0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "GopherCon Brazil \u0026 Genetics",
    "url": "https://changelog.com/gotime/65",
    "resume": "Vitor De Mario joined the show and talked with us about hacking genetics with Go, GopherCon Brazil, machine learning, and other interesting projects and news.",
    "date": "2018-02-06T00:10:11Z",
    "vote": 0
  },
  {
    "id": "e2392f12c69d77d5c28caedfd25da7f6",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Creating, Wrapping and Handling Errors",
    "url": "https://golangcode.com/custom-error-messages/",
    "resume": "In Go, although errors are a controversial subject, they are in fact very simple. As programmers of Go we also spend a lot of our time writing if err != nil. But we often also need to create these errors and pass them back to other functions to handle.\nThe errors package allows us to create errors, as per the error interface, which can be dealt with like any other error.",
    "date": "2018-02-03T10:40:00Z",
    "vote": 0
  },
  {
    "id": "fafebbe4902b4b85ac0a6480b40bb075",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "InfluxDB \u0026 IoT Data",
    "url": "https://changelog.com/gotime/64",
    "resume": "Paul Dix joined the show and talked with us about InfluxDB, building a company with OSS, improving the language, and other interesting projects and news.",
    "date": "2018-01-29T22:33:09Z",
    "vote": 0
  },
  {
    "id": "cdb621ebe7e0103e154ed9ef414649a9",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "In the news: Go on AWS Lambda",
    "url": "https://appliedgo.net/awslambda/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eJust recently, Amazon announced support for Go on AWS Lambda. Here is a summary of last week\u0026rsquo;s news around this topic.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2018-01-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4c28029970699c3c6ac46d0026e22183",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Escape-Analysis Flaws",
    "url": "https://www.ardanlabs.com/blog/2018/01/escape-analysis-flaws.html",
    "resume": "Prelude It will be helpful to read this four-part series first on escape analysis and data semantics. Details on how to read an escape analysis report and pprof output have been outlined here.\nhttps://www.ardanlabs.com/blog/2017/05/language-mechanics-on-stacks-and-pointers.html\nIntroduction Even after working with Go for 4 years, I am continually amazed by the language. Thanks to the static code analysis the compiler performs, the compiler can apply interesting optimizations to the code it produces.",
    "date": "2018-01-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "075d8974e0afcc8e2b6e35d80787f4a5",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Struct Tags for Encoding/Decoding Data",
    "url": "https://golangcode.com/struct-tags/",
    "resume": "In Go, we use structs to define and group data, as we would use classes in other OOP languages. However, in Go the naming of attributes within the struct is important because if it starts with a lower-case it\u0026rsquo;s seen as private and with an upper-case first letter it\u0026rsquo;s seen as public.\nWe can encode these structs into data formats like json but we might want to rename the fields, struct tags allow us to do this.",
    "date": "2018-01-21T10:40:00Z",
    "vote": 0
  },
  {
    "id": "5f6567b478b4ea6b5988ee4108a75863",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Convert uint64 to a String",
    "url": "https://golangcode.com/uint64-to-string/",
    "resume": "\u003cp\u003eWe\u0026rsquo;ve already got a post on \u003ca href=\"https://golangcode.com/converting-and-int-to-string/\"\u003econverting an integer to a string\u003c/a\u003e but the process of converting a variable of type \u003ccode\u003euint64\u003c/code\u003e to a string is a little different. For an int we can use \u003ccode\u003eItoa()\u003c/code\u003e, but for an unsigned int 64 we can still use \u003ccode\u003estrconv\u003c/code\u003e but we can use the \u003ccode\u003eFormatUint\u003c/code\u003e function instead.\u003c/p\u003e",
    "date": "2018-01-20T10:45:00Z",
    "vote": 0
  },
  {
    "id": "5e9ab5bf5f1e48e373af86d166e7b120",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "How to Create PDF Documents",
    "url": "https://appliedgo.net/pdf/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003ePure data is for computers and nerds like you and me. Anyone else likes nicely formatted reports. Go and a good PDF package can help.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2018-01-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d52f147e32a0ec4bbee38e78720c1989",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Changelog Takeover — K8s and Virtual Kubelet",
    "url": "https://changelog.com/gotime/63",
    "resume": "Adam and Jerod jumped in as hosts for an experiment in quantum podcasting, letting Erik and Brian play guests to talk about Virtual Kubelet, building OSS at Microsoft, BBQ (of course), and other interesting projects and news.",
    "date": "2018-01-15T19:15:02Z",
    "vote": 0
  },
  {
    "id": "5cff36fed77f73cf4abdf54b1c54beff",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Print The Current Memory Usage",
    "url": "https://golangcode.com/print-the-current-memory-usage/",
    "resume": "The program below is designed to print out the current state of how much memory is being used, how much has been used and how much the system has reserved. You only really need the PrintMemUsage() function to do this, the rest of the main() is there to illustrate it working (with a gif showing this at the end of this post).\nThe most important figure if often the Alloc which is the amount allocated heap objects.",
    "date": "2017-12-30T12:45:00Z",
    "vote": 0
  },
  {
    "id": "5aac960d5eb40c67063453f9b5e9226a",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "While True: Looping in Go",
    "url": "https://golangcode.com/while-true/",
    "resume": "\u003cp\u003eIn Go, the traditional while true loop, found in many programming languages, can done through the \u003ccode\u003efor\u003c/code\u003e keyword. Below are two alternative versions, a \u003ccode\u003efor\u003c/code\u003e can work as an infinite loop without any parameters, or with a true boolean.\u003c/p\u003e",
    "date": "2017-12-17T11:00:00Z",
    "vote": 0
  },
  {
    "id": "7401b8ba35882e9617a8c1b09d6d0a2d",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How Long Does a Function Take: Measuring Execution Time",
    "url": "https://golangcode.com/function-execution-time/",
    "resume": "We often need to measure execution time in programming, as it helps us understand the programs we\u0026rsquo;re working with and knowing where potential bottlenecks are occurring.\nIn Go, we are able to use the time package and the defer keyword to run our time tracking function at the end of our long function. The parameters will be calculated at the beginning of the function (thus freezing the start time). Once the deferred function is running, all we need to do is show the difference in start time and current time.",
    "date": "2017-12-07T20:00:00Z",
    "vote": 0
  },
  {
    "id": "f69524d53f11f18b42ac696a517e5746",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How Detect Content Type of a File",
    "url": "https://golangcode.com/get-the-content-type-of-file/",
    "resume": "\u003cp\u003eWe can use the \u003ccode\u003enet/http\u003c/code\u003e package to find the content type, or mime type, of a file. To do this, we open the file and read the first 512 bytes (as the \u003ccode\u003eDetectContentType()\u003c/code\u003e function only uses the first 512 bytes, there\u0026rsquo;s no point in doing more than needed). This function will then return a mime type, like \u003ccode\u003eapplication/json\u003c/code\u003e or \u003ccode\u003eimage/jpg\u003c/code\u003e for instance.\u003c/p\u003e",
    "date": "2017-12-04T21:00:00Z",
    "vote": 0
  },
  {
    "id": "aa1045461bb9c0b303755eda4118011b",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Processing spreadsheet data in Go",
    "url": "https://appliedgo.net/spreadsheet/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eYour managers, all through the hierarchy, love circulating spreadsheets via email. (They simply don\u0026rsquo;t know better.) How to extract and analyze the relevant data from the daily mess? Go can help.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-12-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1fdeb98bfd9d92b3b66de3eef90e7bc7",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building Blocks",
    "url": "https://changelog.com/gotime/62",
    "resume": "Jeff Lindsay joined the show to talk about workflow automation, designing apis, and building the society we want to live in…plus a surprise special announcement!",
    "date": "2017-12-01T23:23:58Z",
    "vote": 0
  },
  {
    "id": "583d158d57756d080cd7e50662da94dc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Loggregator, gRPC, Diodes",
    "url": "https://changelog.com/gotime/61",
    "resume": "Jason Keene and Andrew Poydence joined the show to talk about Loggregator, scaling with Go at Pivotal, Diodes, and other interesting Go projects and news.",
    "date": "2017-11-25T18:37:11Z",
    "vote": 0
  },
  {
    "id": "a537338703f8b246554d40af97105079",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Why WADL When You Can Swagger?",
    "url": "https://changelog.com/gotime/60",
    "resume": "Ivan Porto Carrero joined the show to talk about generating documentation (with Swagger), pks, kubo, and other interesting Go projects and news.",
    "date": "2017-11-17T22:50:38Z",
    "vote": 0
  },
  {
    "id": "0c523cf7ba6cff44a7bf1e4dd2715d4b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Improved Improved Improved (i3)",
    "url": "https://changelog.com/gotime/59",
    "resume": "Michael Stapelberg joined the show to talk about window management, open sourcing infrastructure, error handling, and other interesting Go projects and news.",
    "date": "2017-11-10T20:01:56Z",
    "vote": 0
  },
  {
    "id": "7206aa9afb3cc880dcae833bd72c1034",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Handle Ctrl+C (Signal Interrupt) Close in the Terminal",
    "url": "https://golangcode.com/handle-ctrl-c-exit-in-terminal/",
    "resume": "When running a Go program in the terminal, your program could receive a signal interrupt from the OS for any number of reasons. One of which is if the user presses Ctrl+C on their keyboard (or whatever your operating system/terminal is set to). We can execute some code when this interrupt is received, mainly to clean up and reset what we were working on.\nIn our example we use a goroutine to listen for the interrupt from signal.",
    "date": "2017-11-05T10:00:00Z",
    "vote": 0
  },
  {
    "id": "01f85e69dd52155616dea283a2ad608f",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Part 2) Download Large Files with Progress Reports",
    "url": "https://golangcode.com/download-a-file-with-progress/",
    "resume": "We\u0026rsquo;ve already covered basic downloading of files - this post goes beyond that to create a more complete downloader by including progress reporting of the download. This means if you\u0026rsquo;re pulling down large files you are able to see how the download\u0026rsquo;s going.\nIn our basic example we pass the response body into io.Copy() but if we use a TeeReader we can pass our counter to keep track of the progress.",
    "date": "2017-11-03T20:05:00Z",
    "vote": 0
  },
  {
    "id": "466a75c93602d8a8156692f438ed7f6e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Full-time Open Source",
    "url": "https://changelog.com/gotime/58",
    "resume": "Dmitri Shuralyov joined the show to talk about being a full time contributor to open source, developing developer tools, and other interesting Go projects and news.",
    "date": "2017-11-03T18:32:17Z",
    "vote": 0
  },
  {
    "id": "ce74bb26deb11cc003eab5851d2cc889",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Part 1) Download a File (from a URL)",
    "url": "https://golangcode.com/download-a-file-from-a-url/",
    "resume": "This example shows how to download a file from the web on to your local machine. By using io.Copy() and passing the response body directly in we stream the data to the file and avoid having to load it all into the memory - it\u0026rsquo;s not a problem with small files, but it makes a difference when downloading large files.\nWe also have an example of downloading large files with progress reports.",
    "date": "2017-11-02T20:00:00Z",
    "vote": 0
  },
  {
    "id": "98c283612f53e93a7934ac8360e3419a",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Check If a File Exists Before Using It",
    "url": "https://golangcode.com/check-if-a-file-exists/",
    "resume": "In this basic example, we check to see if a file exists before interacting with it (otherwise something\u0026rsquo;s not going to work as expected). We leverage the power of the os standard library and first use the Stat() function, which although it\u0026rsquo;s usually used to get information about a file, we\u0026rsquo;re only looking at the errors.\nWe can\u0026rsquo;t just check for err == nil because any number of errors could be returned so we pass it to IsNotExists() to confirm that it\u0026rsquo;s an error because the file does not exist.",
    "date": "2017-11-01T19:35:00Z",
    "vote": 0
  },
  {
    "id": "9d8719a1e290242aa486dbcd6242ccde",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "A DIY Dashboard with Grafana",
    "url": "https://appliedgo.net/diydashboard/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eIf your code creates some stats to monitor, Grafana and the Grada package may come in handy.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-10-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e98b33a234d19bbd4be3bef0b33afa4d",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "The Behavior Of Channels",
    "url": "https://www.ardanlabs.com/blog/2017/10/the-behavior-of-channels.html",
    "resume": "Introduction When I started to work with Go’s channels for the first time, I made the mistake of thinking about channels as a data structure. I saw channels as a queue that provided automatic synchronized access between goroutines. This structural understanding caused me to write a lot of bad and complicated concurrent code.\nI learned over time that it’s best to forget about how channels are structured and focus on how they behave.",
    "date": "2017-10-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "65ca85593521a1b8570d41c49de95e5d",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Search and Replace in a String",
    "url": "https://golangcode.com/search-and-replace-in-a-string/",
    "resume": "As programmers we often need to take a string and replace parts of it with something else. The code below has three examples, first of which is a basic \u0026lsquo;find all\u0026rsquo; and replace, the second changes only the first occurrence of \u0026lsquo;sound\u0026rsquo; and finally the third example demonstrates how to change a string containing quotes to use escaped quotes. These are changed by using the 4th argument to define how many times to replace, with -1 being every time.",
    "date": "2017-10-20T11:35:00Z",
    "vote": 0
  },
  {
    "id": "155120773d2c171defca3fc53b020f65",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "SF Docker + Go Meetup | Banking on Go with Matt Heath",
    "url": "https://www.youtube.com/watch?v=iRNwLjKeVRE",
    "resume": "",
    "date": "2017-10-03T23:59:23Z",
    "vote": 0
  },
  {
    "id": "e6b537dfcf6276cba364c06a254a0fb7",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "SF Docker + Go Meetup | Blockchain, Cryptocurriencies, and Go with Vicki Niu",
    "url": "https://www.youtube.com/watch?v=Lmgx9KQLueY",
    "resume": "",
    "date": "2017-10-03T23:58:05Z",
    "vote": 0
  },
  {
    "id": "a5c6867e38b5d048351af087d5502417",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Release Party | Ways To Do Things with Peter Bourgon",
    "url": "https://www.youtube.com/watch?v=LHe1Cb_Ud_M",
    "resume": "",
    "date": "2017-10-03T23:39:46Z",
    "vote": 0
  },
  {
    "id": "ab12b747c9436b37c4c623548524a830",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Release Party | Analyzing production using Flamegraphs with Prashant Varanasi",
    "url": "https://www.youtube.com/watch?v=aAhNDgEZj_U",
    "resume": "",
    "date": "2017-10-03T23:39:45Z",
    "vote": 0
  },
  {
    "id": "ce05848df54b7088d8da83bbe7a9a33d",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Release Party | The State of Go 1.9 with Francesc Campoy",
    "url": "https://www.youtube.com/watch?v=vFJkH4qDjJ0",
    "resume": "",
    "date": "2017-10-03T23:35:18Z",
    "vote": 0
  },
  {
    "id": "9513823d33c00ebb9bf7214f76e6bd41",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Set a HTTP Cookie Response Header",
    "url": "https://golangcode.com/add-a-http-cookie/",
    "resume": "For many different reasons, there will be times when you need to keep data within a cookie to be sent with subsequent requests or read by the recipient. We can do this with Go\u0026rsquo;s standard library, or by using a package like gorilla\u0026rsquo;s session, but for this simple example we\u0026rsquo;ll use the standard library.\nWe\u0026rsquo;ve created a function called addCookie() which takes a name, value and duration, and writes it directly against the ResponseWriter w.",
    "date": "2017-09-28T21:35:00Z",
    "vote": 0
  },
  {
    "id": "77ee2ac423ddd2fe43a899a4cfb75bc0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Presenting a Pragmatic Perspective",
    "url": "https://changelog.com/gotime/57",
    "resume": "Cindy Sridharan joined the show to talk about development and operations as a generalist, leveling up as an engineer (while still providing business value), challenging the status-quo, and other interesting Go projects and news.",
    "date": "2017-09-15T23:37:49Z",
    "vote": 0
  },
  {
    "id": "4ecf6e7751135ded5dbe0eaf3a178e1e",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Read a CSV File into a Struct",
    "url": "https://golangcode.com/how-to-read-a-csv-file-into-a-struct/",
    "resume": "We have a similar post on writing data to a CSV file. This post however, focuses on the simple task of taking data from a csv file and converting it into data we can work with.\nThe first part it to open the file, then we read it into the lines variable and finally we loop through the lines and we turn them into CsvLine objects - obviously in a real scenario we should use a more descriptive naming.",
    "date": "2017-09-14T21:40:00Z",
    "vote": 0
  },
  {
    "id": "bab9c0dd3930d97cf46d27f15b8d242c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Container Security and Demystifying Complexity",
    "url": "https://changelog.com/gotime/56",
    "resume": "Liz Rice joined the show to talk about containers, cloud security, making complex concepts easier to understand, and other interesting Go projects and news.",
    "date": "2017-09-08T18:52:01Z",
    "vote": 0
  },
  {
    "id": "43c3a56a46b32baa98f6651b2ef909c3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Dep, Cross-platform, and Getting Started",
    "url": "https://changelog.com/gotime/55",
    "resume": "Carolyn Van Slyck joined the show to talk about dependency management, upping your cross-platform game, getting into Go, and other interesting Go projects and news.",
    "date": "2017-08-31T23:59:33Z",
    "vote": 0
  },
  {
    "id": "4e60157b5ce111e4cd0d96e0e9569528",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Go 1.9 Release Party",
    "url": "https://www.youtube.com/watch?v=WB9UUWNIhm4",
    "resume": "",
    "date": "2017-08-26T03:51:52Z",
    "vote": 0
  },
  {
    "id": "57f26205929749ac6e428fcd71ca93c4",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Uploading a File to AWS S3",
    "url": "https://golangcode.com/uploading-a-file-to-s3/",
    "resume": "This example shows how to upload a local file onto an S3 bucket using the Go AWS SDK. Our first step is to step up the session using the NewSession function. We\u0026rsquo;ve then created an AddFileToS3 function which can be called multiple times when wanting to upload many files.\nWithin the PutObjectInput you can specify options when uploading the file and in our example we show how you can enable AES256 encryption on your files (when at rest).",
    "date": "2017-08-20T11:40:00Z",
    "vote": 0
  },
  {
    "id": "74396fd8feb730e2ff6ebb4a46a2eeb1",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go at Walmart (and Scale)",
    "url": "https://changelog.com/gotime/54",
    "resume": "Chase Adams joined the show to talk about working on distributed systems with distributed teams, giving people opportunities to learn and grow, and other interesting Go projects and news.",
    "date": "2017-08-18T21:29:55Z",
    "vote": 0
  },
  {
    "id": "bd3db96dbe38ac6b04836fc8cee2b1d3",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "GopherCon 2017: A Retrospective",
    "url": "https://changelog.com/gotime/53",
    "resume": "After taking some time to recover, the gang rehashes all the greatest talks and favorite moments from this year’s GopherCon. Much love to the Go community and all the souls who worked tirelessly to make this conference happen.",
    "date": "2017-08-18T00:57:10Z",
    "vote": 0
  },
  {
    "id": "d85e1539b2c86a3eee218e8512127684",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Generating a Random Number",
    "url": "https://golangcode.com/generate-random-numbers/",
    "resume": "Random numbers in computing can be useful for many reasons (we won\u0026rsquo;t go into them too much here though). With Go, they\u0026rsquo;re simple enough to generate providing you first set a unique as possible seed first. Without setting a seed first, the random number generating will return the same number the first time you run it.\nIn our example, we want to generate a random number somewhere between two other numbers - we use Intn to help with this.",
    "date": "2017-08-10T21:00:00Z",
    "vote": 0
  },
  {
    "id": "94b7dc0712d932793dd361f4784706b7",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "All About The Go Compiler",
    "url": "https://changelog.com/gotime/52",
    "resume": "David Chase joined the show for a technical Q \u0026 A on compilers and what makes Go’s compiler different from the rest (and of course, other interesting Go projects and news)",
    "date": "2017-08-07T21:55:50Z",
    "vote": 0
  },
  {
    "id": "b37fec047b99aeabf66a486acb6529fa",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Print a Variable's Type (e.g. Int, String, Float)",
    "url": "https://golangcode.com/print-variable-type/",
    "resume": "\u003cp\u003eEver wanted to know the exact type name of the variable you\u0026rsquo;re using? The \u003ccode\u003ePrintf\u003c/code\u003e is capable of print exactly this information back out to you, like so:\u003c/p\u003e",
    "date": "2017-08-07T21:00:00Z",
    "vote": 0
  },
  {
    "id": "117ad244199de1f809383aacf7cbeadb",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Converting an Int to a String",
    "url": "https://golangcode.com/converting-and-int-to-string/",
    "resume": "\u003cp\u003eThis is a short example on how to convert an integer number into a string. This is a common use case when printing to screen or working with the number as if it was a string. To do this we use the \u003ccode\u003estrconv\u003c/code\u003e package and the \u003ccode\u003eItoa\u003c/code\u003e function.\u003c/p\u003e",
    "date": "2017-08-07T17:00:00Z",
    "vote": 0
  },
  {
    "id": "2fa1243d8e8c2938564ed004cc889430",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "HTTP Response Status Codes",
    "url": "https://golangcode.com/get-the-http-response-status-code/",
    "resume": "When making http requests with Go it is almost always necessary to check the status code of the response which is returned. Generally, if the status code is between 200 and 300 you can treat as successful. But anything except a 200-300 status, we often need to handle.\nGo has many built methods to help us with this. For example, we can use http.StatusText() to convert the status code to it\u0026rsquo;s human readable name.",
    "date": "2017-08-06T14:00:00Z",
    "vote": 0
  },
  {
    "id": "a91f06f1dcfe664e501a78a1fa543bf2",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Passing Data between Go Routines with Channels",
    "url": "https://golangcode.com/basic-channels/",
    "resume": "Go, as a language, makes it very easy to work in parallel on data through its use of go routines (more info on go routines here). However, one of the tricky parts about using go routines is a) to know when they are finished and b) to pass data back from the go routine. Channels make both of these things possible.\nIn this post we\u0026rsquo;re only going to look at a basic use case of channels.",
    "date": "2017-08-06T13:00:00Z",
    "vote": 0
  },
  {
    "id": "e6bc84b37e36598f4063ce889c1ca148",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Go slices are not dynamic arrays",
    "url": "https://appliedgo.net/slices/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eGo\u0026rsquo;s slices are cleverly designed. They provide the look-and-feel of truly dynamic arrays while being optimized for performance. However, not being aware of the slice mechanisms can bring you into trouble.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-08-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2ab7ef11582cc48a5520668cd787e2d3",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "About",
    "url": "https://golangcode.com/about/",
    "resume": "",
    "date": "2017-07-30T19:23:08Z",
    "vote": 0
  },
  {
    "id": "00957f0b4ebf921bbfcfa1b431420071",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Privacy Policy",
    "url": "https://golangcode.com/privacy/",
    "resume": "Golangcode.com is built and provided by Designed by a Turtle. This SERVICE is provided at no cost and is intended for use as is.\nThis page is used to inform website visitors regarding our policies with the collection, use, and disclosure of Personal Information if anyone decided to use our Service.\nIf you choose to use our Service, then you agree to the collection and use of information in relation with this policy.",
    "date": "2017-07-30T19:23:08Z",
    "vote": 0
  },
  {
    "id": "4c75c7d6ea8fd7f0d4e1f20fac6367ba",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Search",
    "url": "https://golangcode.com/search/",
    "resume": "",
    "date": "2017-07-30T19:23:08Z",
    "vote": 0
  },
  {
    "id": "7e6d24be88225dca8632df2cd46e1c23",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Infosec research and app security",
    "url": "https://changelog.com/gotime/51",
    "resume": "Aaron Hnatiw joined the show to talk about being a security researcher, teaching application security with Go, and a deep dive on how engineers and developers can get started with infosec. Plus: white hat, black hat, red team, blue team…Aaron sorts it all out for us.",
    "date": "2017-07-19T00:27:30Z",
    "vote": 0
  },
  {
    "id": "043884c0b3833ed3a0a5ceebe393e37c",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Interface Semantics",
    "url": "https://www.ardanlabs.com/blog/2017/07/interface-semantics.html",
    "resume": "Prelude If you want to put this post in some better context, I suggest reading the following series of posts, which lay out some other fundamental and relevant design principles:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics\nIn particular, the idea of value and pointer semantics is everywhere in the Go programming language.",
    "date": "2017-07-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "69f2e00ce5d5c4c65ab430ac6eb2c3c8",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Get and Set Environment Variables",
    "url": "https://golangcode.com/get-and-set-environment-variables/",
    "resume": "\u003cp\u003eEnvironment variables are a useful way to work with sensitive information (think passwords) which your code needs to work with, but don’t need to be checked into your code base. With Go, you can both get and set these details using the \u003c!-- raw HTML omitted --\u003eos\u003c!-- raw HTML omitted --\u003e library.\u003c/p\u003e",
    "date": "2017-07-10T10:59:26Z",
    "vote": 0
  },
  {
    "id": "1b85f95812a78908a2e8d2b1add430ed",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Bringing Kubernetes to Azure",
    "url": "https://changelog.com/gotime/50",
    "resume": "Kris Nova joined the show to talk about developer empathy, running K8s on Azure, Kops, Draft, editors, containerizing odd things…and what it’s like to play a keytar.",
    "date": "2017-07-06T18:49:05Z",
    "vote": 0
  },
  {
    "id": "f754862ac6a25614c9a4e51632a80630",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "For Range Semantics",
    "url": "https://www.ardanlabs.com/blog/2017/06/for-range-semantics.html",
    "resume": "Prelude These are good posts to read first to better understand the material presented in this post:\nIndex of the four part series:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics\nThe idea of value and pointer semantics are everywhere in the Go programming language. As stated before in those earlier posts, semantic consistency is critical for integrity and readability.",
    "date": "2017-06-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "0940061123be4c19a79a6f166916c562",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "goman - the missing man pages for Go binaries",
    "url": "https://appliedgo.net/goman/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eMost Go binaries come without any man page. The tool \u003ccode\u003egoman\u003c/code\u003e fills this gap. If the corresponding project includes a decent README file (and most projects do), \u003ccode\u003egoman\u003c/code\u003e find this README file and displays it on the terminal.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-06-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2ff814b5592890eb5e43136b139b6f32",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Gopherfest 2017 | Lessons Learned from a Context-NATS Integration with Waldemar Quevedo",
    "url": "https://www.youtube.com/watch?v=jUIh14avdDY",
    "resume": "",
    "date": "2017-06-22T20:44:45Z",
    "vote": 0
  },
  {
    "id": "97404ca05da4d2cb40818d8b2e84dcef",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Gopherfest 2017 | Upspin with Rob Pike",
    "url": "https://www.youtube.com/watch?v=ENLWEfi0Tkg",
    "resume": "",
    "date": "2017-06-22T20:44:37Z",
    "vote": 0
  },
  {
    "id": "67156edbf0f23b115d5701d9130c907c",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Gopherfest 2017 | Event Sourcing – Architectures and Patterns with Matt Ho",
    "url": "https://www.youtube.com/watch?v=B-reKkB8L5Q",
    "resume": "",
    "date": "2017-06-22T20:44:19Z",
    "vote": 0
  },
  {
    "id": "33ac25f9d12a5cba3e1940586edb28a4",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Gopherfest 2017 | The State of Go with Francesc Campoy",
    "url": "https://www.youtube.com/watch?v=dyvpF0jF3AY",
    "resume": "",
    "date": "2017-06-22T20:44:05Z",
    "vote": 0
  },
  {
    "id": "67be16c2f2849bcb220b7d0faf4caf91",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Adventures in VS Code",
    "url": "https://changelog.com/gotime/49",
    "resume": "Ramya Achutha Rao joined the show to talk about all the things that make VS Code a great editor for writing Go, getting help from the community, plus other interesting Go projects and news.",
    "date": "2017-06-13T19:47:11Z",
    "vote": 0
  },
  {
    "id": "203d54dfe596dfb55741b61edcbae2e0",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Unzip Files in Go",
    "url": "https://golangcode.com/unzip-files-in-go/",
    "resume": "\u003cp\u003eThe code below is used to unzip, or decompress, a zip archive file into it’s constituent files. Because there are likely to be multiple files, it will create the files within a folder (specified with the 2nd parameter).\u003c/p\u003e",
    "date": "2017-06-08T11:24:10Z",
    "vote": 0
  },
  {
    "id": "f097b6d65c43a9d72b9b2f5689a37a9c",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Create Zip Files in Go",
    "url": "https://golangcode.com/create-zip-files-in-go/",
    "resume": "The code below shows how you can create a zip archive after being passed a number of files to compress. This is useful for both bundling files together and creating smaller file sizes.\nThe basics of it are to create the initial zip file then cycle through each file and add it to the archive using a zip writer, being sure to specify the deflate method to get better compression.",
    "date": "2017-06-08T10:51:35Z",
    "vote": 0
  },
  {
    "id": "d1806e366a6e95c26e2ac6b0f271045b",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Design Philosophy On Data And Semantics",
    "url": "https://www.ardanlabs.com/blog/2017/06/design-philosophy-on-data-and-semantics.html",
    "resume": "Prelude This is the final post in a four part series discussing the mechanics and design behind pointers, stacks, heaps, escape analysis and value/pointer semantics in Go. This post focuses on data and the design philosophies of applying value/pointer semantics in your code.\nIndex of the four part series:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics",
    "date": "2017-06-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8cf46e08f1e10be43ac6d3da406bcc57",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Cross Platform File Paths",
    "url": "https://golangcode.com/cross-platform-file-paths/",
    "resume": "Unlike with URLs which have a standardised format (they use forward-slashes to separate folders), file path separators will differ between operating systems. This is mainly a historic issue, as it\u0026rsquo;s almost inconceivable to change them at this stage. This means Windows uses back-slashes and *nix systems use forward slashes.\nThis is a pain however when writing cross platform software because if you know a file exists in a folder, and want to get it\u0026rsquo;s contents, you will have to use it\u0026rsquo;s folder name, a slash separator and the file name.",
    "date": "2017-06-06T10:46:59Z",
    "vote": 0
  },
  {
    "id": "9790d5f659def5443d2ed5024cc09942",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Restic and backups (done right)",
    "url": "https://changelog.com/gotime/48",
    "resume": "Alexander Neumann joined the show to talk about using Go to write backup software, solving tough problems like deduplication, scratching your own itch, and other interesting Go projects and news.",
    "date": "2017-06-01T19:27:52Z",
    "vote": 0
  },
  {
    "id": "f5cf8597bfbf4c78bda0904fac7483e3",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How to Run Go Tests with Coverage Percentage",
    "url": "https://golangcode.com/how-to-run-go-tests-with-coverage-percentage/",
    "resume": "Go has a brilliant built in testing package, which although it is quite raw, it is very powerful. It also has the ability to show the test coverage as a percentage of the code base. Which is very useful to get perspective of a project and to know perhaps which areas need improvement.\nYou can see the test coverage by using the -coverprofile parameter on the test command.\n1 2 3 4 5  go test -coverprofile cp.",
    "date": "2017-06-01T08:48:37Z",
    "vote": 0
  },
  {
    "id": "d95aea8ccba31d0bf5582d7af7074953",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Language Mechanics On Memory Profiling",
    "url": "https://www.ardanlabs.com/blog/2017/06/language-mechanics-on-memory-profiling.html",
    "resume": "Prelude This is the third post in a four part series that will provide an understanding of the mechanics and design behind pointers, stacks, heaps, escape analysis and value/pointer semantics in Go. This post focuses on heaps and escape analysis.\nIndex of the four part series:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics",
    "date": "2017-06-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3ed4baf3288ccd0675dfc09786dfdc3e",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How to Check if a String is a URL",
    "url": "https://golangcode.com/how-to-check-if-a-string-is-a-url/",
    "resume": "\u003cp\u003eHere\u0026rsquo;s a little snippet to determine if a string is well structured and valid url. This can be useful for pre-empting if a http call will work - or preventing failures from even occurring. In this snippet we\u0026rsquo;re using a function to tidy this logic and make it reusable and we are essentially parsing the url and checking for any errors.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eParseRequestURI()\u003c/code\u003e is our primary basic check, but it will allow strings like \u0026lsquo;Test: Test\u0026rsquo; to pass (which we don\u0026rsquo;t want). We therefore combine it with a url parser to check that both a scheme (like http) and a host exist.\u003c/p\u003e",
    "date": "2017-05-30T08:33:51Z",
    "vote": 0
  },
  {
    "id": "c97f42e8bd1291990c018402d03e7f83",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Updating Go on Ubuntu/Linux",
    "url": "https://golangcode.com/updating-go-on-ubuntu/",
    "resume": "When a new version of Go is released I always want to jump on it. Likewise, I\u0026rsquo;d like the update to be as easy and quick as possible, but often find it harder than expected (I\u0026rsquo;m used to apt upgrade). Many articles exist online to install Go, less on upgrading it - so here\u0026rsquo;s one! This has Ubuntu in mind as an OS but should work on most Linux distros.",
    "date": "2017-05-27T08:26:11Z",
    "vote": 0
  },
  {
    "id": "2a84a875859d2fb7e1688746ad825acf",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Language Mechanics On Escape Analysis",
    "url": "https://www.ardanlabs.com/blog/2017/05/language-mechanics-on-escape-analysis.html",
    "resume": "Prelude This is the second post in a four part series that will provide an understanding of the mechanics and design behind pointers, stacks, heaps, escape analysis and value/pointer semantics in Go. This post focuses on heaps and escape analysis.\nIndex of the four part series:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics",
    "date": "2017-05-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a3c91691618b02dbc3fb95033ad83dca",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Docker, Moby, Containers",
    "url": "https://changelog.com/gotime/47",
    "resume": "Solomon Hykes joined the show to talk about all things Docker, Moby Project, and what makes Go a good fit for container management.",
    "date": "2017-05-25T21:28:06Z",
    "vote": 0
  },
  {
    "id": "91026c812d83e5785ac86680302bd563",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Controlling a Digispark board",
    "url": "https://appliedgo.net/digispark/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eThe Digispark is perhaps as small as a microcontroller board for DIY electronics can get. This is a short writedown about my first experiences with controlling this board through Go code, using Gobot and LittleWire.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-05-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "79a3f4201e390bc092d864ac4eb9e8df",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Language Mechanics On Stacks And Pointers",
    "url": "https://www.ardanlabs.com/blog/2017/05/language-mechanics-on-stacks-and-pointers.html",
    "resume": "Prelude This is the first post in a four part series that will provide an understanding of the mechanics and design behind pointers, stacks, heaps, escape analysis and value/pointer semantics in Go. This post focuses on stacks and pointers.\nIndex of the four part series:\n1) Language Mechanics On Stacks And Pointers\n2) Language Mechanics On Escape Analysis\n3) Language Mechanics On Memory Profiling\n4) Design Philosophy On Data And Semantics",
    "date": "2017-05-18T00:00:00Z",
    "vote": 0
  },
  {
    "id": "190dfe4f001372b06351b1038fdf9b9d",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Gopherfest 2017",
    "url": "https://www.youtube.com/watch?v=giUatBmmb_Y",
    "resume": "",
    "date": "2017-05-16T04:16:54Z",
    "vote": 0
  },
  {
    "id": "d4cfd2b9d378a4d1152cc71f619e2ca3",
    "source": {
      "path": "podcasts",
      "name": "Golang Youtube Channel",
      "url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCO3LEtymiLrgvpb59cNsb8A"
    },
    "name": "Go 1.9 Release Party - GoSF",
    "url": "https://www.youtube.com/watch?v=KXJPj1kmmAg",
    "resume": "",
    "date": "2017-05-15T20:55:42Z",
    "vote": 0
  },
  {
    "id": "b89304b2f75cf54141e7aadb7cc17e80",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Periph.io, Drivers, Hardware",
    "url": "https://changelog.com/gotime/46",
    "resume": "Marc-Antoine Ruel joined the show for a deep dive on controlling hardware, writing drivers with Go, and other interesting Go projects and news.",
    "date": "2017-05-12T04:41:58Z",
    "vote": 0
  },
  {
    "id": "9e9fb9bf516dc761bcf0c57f418beea4",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Design Philosophy On Logging",
    "url": "https://www.ardanlabs.com/blog/2017/05/design-philosophy-on-logging.html",
    "resume": "Prelude This post is part of a series designed to make you think about your own design philosophy on different topics. If you haven’t read the following post yet, please do so first:\nDevelop Your Design Philosophy\nIntroduction Systems cannot be developed assuming that human beings will be able to write millions of lines of code without making mistakes, and debugging alone is not an efficient way to develop reliable systems.",
    "date": "2017-05-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "60b8d41bb4427164cd321db886d0a14b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "SPECIAL — Ask Us Anything!",
    "url": "https://changelog.com/gotime/45",
    "resume": "This is a  special “Ask Us Anything” episode where we answered questions submitted by the community — covering everything from impostor syndrome and the future of Go, to the music we listen to to get in a groove, and barbecue (of course).",
    "date": "2017-05-04T16:37:44Z",
    "vote": 0
  },
  {
    "id": "4d8ecae67b175a6c777fa4d1c8d290fb",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Sleeping in Go – How to Pause Execution",
    "url": "https://golangcode.com/sleeping-with-go/",
    "resume": "Sleeping, or waiting in Go, is part of the time package. It\u0026rsquo;s a very simple process, all you need to do is specify the duration to sleep for, which in this case is a number followed by it\u0026rsquo;s unit, so 2*time.Second means 2 seconds. This will sleep the current goroutine so other go routines will continue to run.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { fmt.",
    "date": "2017-05-03T19:45:38Z",
    "vote": 0
  },
  {
    "id": "7855d1d486df954b2777e9f26b6a2e76",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Detect if Code is Running On Windows (at Runtime)",
    "url": "https://golangcode.com/detect-if-code-is-running-on-windows-at-runtime/",
    "resume": "On of the advantages of using Go is it’s cross-platform support, the ability to write the code once and have it work across many operating systems. However, there are times when you’ll need to change the route through your code based which OS is running it. If you’re needing to do this on a large scale there are better, more manageable ways, but for tiny changes this works fine.\nThis snippet uses the GOOS flag within the runtime package, which is also used at compile time.",
    "date": "2017-05-02T18:21:48Z",
    "vote": 0
  },
  {
    "id": "a50a681d9f2d544b9707051800f60103",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Big Oh!",
    "url": "https://appliedgo.net/big-o/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eYou worked hard to save a few CPU cycles in the central loop, but your code is still slow? Time to think about the time complexity of your algorithm.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-05-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "56c8a12df404e9fed18d25632d799a68",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go4 and Contributing to Go",
    "url": "https://changelog.com/gotime/44",
    "resume": "Brad Fitzpatrick joined the show to talk about becoming the face of open source Go, getting the community involved in bug triage, the potential future of Go, and other interesting Go projects and news.",
    "date": "2017-04-27T20:25:31Z",
    "vote": 0
  },
  {
    "id": "eafda1addc9add218f448022e569e0d6",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Get the Current Username, Name and Home Dir (Cross Platform)",
    "url": "https://golangcode.com/get-the-current-username-name-and-home-dir-cross-platform/",
    "resume": "In this example we get the current user, the user who is executing the program, and their details. These details include information like user id (Uid), username (the short version of their name), name (the user\u0026rsquo;s full name) and the user\u0026rsquo;s home directory location. To do this we use the os/user package. This package also handles the differences between OS like *nix vs. windows very well, keeping your code simple across all platforms.",
    "date": "2017-04-26T20:08:59Z",
    "vote": 0
  },
  {
    "id": "107df1ab82f03af11ca0dd9a2ad7d049",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Getting Better, Mentoring, Drawing Gophers",
    "url": "https://changelog.com/gotime/43",
    "resume": "Ashley McNamara joined the show to talk about sharing developer experiences, seeking help from the community, getting people excited about STEM, and other interesting Go projects and news.",
    "date": "2017-04-20T20:59:04Z",
    "vote": 0
  },
  {
    "id": "64a308d5adf5b9b0ecc237d0bf9cd345",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Remove all Non-Alphanumeric Characters from a String (with help from regexp)",
    "url": "https://golangcode.com/how-to-remove-all-non-alphanumerical-characters-from-a-string/",
    "resume": "It\u0026rsquo;s often useful be be able to remove characters from a string which aren\u0026rsquo;t relevant, for example when being passed strings which might have $ or £ symbols in, or when parsing content a user has typed in. To do this we use the regexp package where we compile a regex to clear out anything with isn\u0026rsquo;t a letter of the alphabet or a number.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;log\u0026#34; \u0026#34;regexp\u0026#34; ) func main() { example := \u0026#34;#GoLangCode!",
    "date": "2017-04-14T08:01:05Z",
    "vote": 0
  },
  {
    "id": "df3ad575eed3cb8bf4e12d7be160ce5d",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Race detection, firmware, production-grade Go",
    "url": "https://changelog.com/gotime/42",
    "resume": "Kavya Joshi joined the show to talk about shipping production-grade Go, writing firmware with Go, making complex technical concepts accessible, and other interesting Go projects and news.",
    "date": "2017-04-13T19:39:42Z",
    "vote": 0
  },
  {
    "id": "b39649a79487f1fe9baba9574cd83854",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Get a URL Parameter from a Request",
    "url": "https://golangcode.com/get-a-url-parameter-from-a-request/",
    "resume": "Often it\u0026rsquo;s important to read off the parameters sent through from the request. If it\u0026rsquo;s a GET request these will lie within the url itself and can be read using the request\u0026rsquo;s URL property. It\u0026rsquo;s important to note that when getting the parameters in this way it will always return an array (or slice?).\nOur example below will act a little like an echo server, we listen for any requests and log the result of key if it\u0026rsquo;s present.",
    "date": "2017-04-09T10:55:07Z",
    "vote": 0
  },
  {
    "id": "c1aaa3a813f9637ed1b3e9925dea495b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Distributed Messaging and Network Clients",
    "url": "https://changelog.com/gotime/41",
    "resume": "Wally Quevedo joined the show to talk processing millions of messages per second with Go, writing network clients, performance at scale, and other interesting Go projects and news.",
    "date": "2017-04-06T23:19:42Z",
    "vote": 0
  },
  {
    "id": "98137246190db3666aaf43fd8a0973f5",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Text-Based User Interfaces",
    "url": "https://appliedgo.net/tui/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eWant to equip your command-line application with a nice visual user interface? TUI libraries are here to help.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-04-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "769469148d1e10ec2bd5b3ba0ad9a376",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Game Development and Rebuilding Microservices",
    "url": "https://changelog.com/gotime/40",
    "resume": "Luna Duclos joined the show to talk about rebuilding a microservice infrastructure with Go, game development, and other interesting Go projects and news.",
    "date": "2017-03-31T00:08:11Z",
    "vote": 0
  },
  {
    "id": "86f6aa0d7b21a4980e0f2b06930bf5e0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Splice, Audio, Compassion",
    "url": "https://changelog.com/gotime/39",
    "resume": "Matt Aimonetti joined the show to talk about using go to solve tough audio problems, making go for everyone, empowering people with software, and other interesting Go projects and news.",
    "date": "2017-03-24T20:51:08Z",
    "vote": 0
  },
  {
    "id": "9753311bac609a18e978d4d4f427d081",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go Developer Survey",
    "url": "https://changelog.com/gotime/38",
    "resume": "Steve Francia joined the show to talk about the results of the 2016 Go Developer Survey and other interesting Go projects and news.",
    "date": "2017-03-16T21:23:32Z",
    "vote": 0
  },
  {
    "id": "235fa9283443889654c12a4e9d516259",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Flow To Go",
    "url": "https://appliedgo.net/flow2go/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eIf you want to do Flow-Based Programming in Go, there are a couple of frameworks and libraries available. Or you simply do it with pure Go. After all, how difficult can it be?\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-03-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a4b0ed860c43d410159430fdf7e13679",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Gobot, Hardware, Gatekeeping",
    "url": "https://changelog.com/gotime/37",
    "resume": "Ron Evans joined the show to talk about Gobot, writing software for hardware, and open source software’s role in improving the human condition.",
    "date": "2017-03-09T19:37:47Z",
    "vote": 0
  },
  {
    "id": "d6e635f2d90c321d6fc217a4ae649e16",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Dependency Management, Semver, Community Consensus",
    "url": "https://changelog.com/gotime/36",
    "resume": "Sam Boyer joined the show to talk about dependency management, building community consensus, and other interesting Go projects and news.",
    "date": "2017-03-02T23:36:43Z",
    "vote": 0
  },
  {
    "id": "cc8e8e0d9fd29296b67a880f813cb52a",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Get into the flow",
    "url": "https://appliedgo.net/flow/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eIn Flow-Based Programming, programs are modeled as data flowing between independent processing units. Who would not think of channels and goroutines as a natural analogy?\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-02-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ece1829c3c02a1c3dbaf9bc27046d4e1",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Package Oriented Design",
    "url": "https://www.ardanlabs.com/blog/2017/02/package-oriented-design.html",
    "resume": "Updated on February 28th, 2017\nPrelude This post is part of a series of posts designed to make you think about your own design philosophy on different topics. If you haven’t read these posts yet, please do so first:\nDevelop Your Design Philosophy\nDesign Philosophy On Packaging\nIntroduction Package Oriented Design allows a developer to identify where a package belongs inside a Go project and the design guidelines the package must respect.",
    "date": "2017-02-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f54beec484888ebc82322239db02a843",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Honeycomb, Complex Systems, Saving Sanity",
    "url": "https://changelog.com/gotime/35",
    "resume": "Charity Majors joined the show to talk about debugging complex systems, using go to save one’s sanity, hiring smart people who can learn, and collectively working to make “on-call” life not miserable.",
    "date": "2017-02-23T20:00:00Z",
    "vote": 0
  },
  {
    "id": "dc2925a06ddc1ffa32b5a56b6b21aee9",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Design Philosophy On Packaging",
    "url": "https://www.ardanlabs.com/blog/2017/02/design-philosophy-on-packaging.html",
    "resume": "Prelude This post is part of a series of posts designed to make you think about your own design philosophy on different topics. If you haven’t read this post yet, please do so first:\nDevelop Your Design Philosophy\nAfter this post, read this next one:\nPackage Oriented Design\nIntroduction In an interview given to Brian Kernighan by Mihai Budiu in the year 2000, Brian was asked the following question:",
    "date": "2017-02-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "53776bd0c7d677dcb0a206352ecde171",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Pachyderm, Provenance, Data Lakes",
    "url": "https://changelog.com/gotime/34",
    "resume": "Joe Doliner joined the show to talk about managing data lakes with Pachyderm, data containers, provenance, and other interesting Go projects and news.",
    "date": "2017-02-16T18:32:09Z",
    "vote": 0
  },
  {
    "id": "f59c44ffb9194a9546c351f1f9866927",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Gopherize.me, GitHub Stars, BitBar",
    "url": "https://changelog.com/gotime/33",
    "resume": "Mat Ryer joined the show to talk about creating your own Gopher avatar with Gopherize.me, the importance of GitHub Stars, his project BitBar, and other interesting Go projects and news. Special thanks to Kelsey Hightower for guest hosting too!",
    "date": "2017-02-09T18:00:00Z",
    "vote": 0
  },
  {
    "id": "0814c256ee00fc7a19e4065830194b4f",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Design Philosophy On Integrity",
    "url": "https://www.ardanlabs.com/blog/2017/02/design-philosophy-on-integrity.html",
    "resume": "Updated on February 10th, 2017\nPrelude This post is part of a series of posts designed to make you think about your own design philosophy on different topics. If you haven’t read this post yet, please do so first:\nDevelop Your Design Philosophy\nIntroduction I want to share with you my design philosophy around the word Integrity and what it means to me from a Go perspective. Integrity is much more than just a buzzword, it is a driving principle in everything I do, both in code and in life.",
    "date": "2017-02-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "520b06b7697796c26b89e3179fa2d549",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Add Line Numbers to Log Output",
    "url": "https://golangcode.com/add-line-numbers-to-log-output/",
    "resume": "Many programming languages allow you to print the line number of when and where something has happened. This is very useful for debugging a problem when it has occurred. By default in Go this is off, but you can turn it on when logging by setting flags.\n1 2 3 4 5 6 7 8 9 10 11 12  package main import \u0026#34;log\u0026#34; func main() { // Enable line numbers in logging  log.",
    "date": "2017-02-05T09:07:44Z",
    "vote": 0
  },
  {
    "id": "4d2d9002952d8b8b2e2efb75b53d6f00",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Hellogopher, whosthere?",
    "url": "https://changelog.com/gotime/32",
    "resume": "Filippo Valsorda joined the show to talk about his project Hellogopher, whosthere (whoami.filippo.io),  $GOPATH, TLS 1.3, Cloudflare’s secret reverse proxy, and more.",
    "date": "2017-02-02T20:00:00Z",
    "vote": 0
  },
  {
    "id": "a9887f559f6aa1ad5857c8ab81ca92d2",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Develop Your Design Philosophy",
    "url": "https://www.ardanlabs.com/blog/2017/01/develop-your-design-philosophy.html",
    "resume": "Prelude This post is part of a series of posts designed to make you think about your own design philosophy on different topics. I will not be laying out direct examples to prove my own thoughts and ideas. It takes me two or three days in the classroom to do that and it’s why I think my classes are so special.\nMy goal is to get you and others to write the next set of blog posts to prove or disprove these ideas.",
    "date": "2017-01-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a8edd99714e1838318cad0d5efcf1628",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go, Jocko, Kafka",
    "url": "https://changelog.com/gotime/31",
    "resume": "Travis Jeffery joined the show to talk about Go, Jocko, Kafka, how Kafka’s storage internals work, and interesting Go projects and news.",
    "date": "2017-01-26T20:00:00Z",
    "vote": 0
  },
  {
    "id": "5919730b6c5ce94d48f684ed19685b47",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "TCP/IP Networking",
    "url": "https://appliedgo.net/networking/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eConnecting two processes at TCP/IP level might seem scary at first, but in Go\nit is easier than one might think.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2017-01-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1ebc1282e49d7852d278d9eab17c0f77",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Discussing Imposter Syndrome",
    "url": "https://changelog.com/gotime/30",
    "resume": "Johnny Boursiquot and Bill Kennedy joined the show with Erik and Carlisia to talk about a hard subject — Imposter Syndrome. Not often enough do we get to have open conversations about the eventual inadequacies we all face at some point in our career; some more often than others. You are !imposter.",
    "date": "2017-01-19T20:00:00Z",
    "vote": 0
  },
  {
    "id": "a46c075febca44f3a7890557a2b901cd",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go and Buffalo Live from Dunkin' Donuts",
    "url": "https://changelog.com/gotime/29",
    "resume": "Mark Bates joined the show this week live from his local Dunkin’ Donuts to talk about Go and Buffalo — his Go web framework. Those who listened live said this was our best show yet. If you agree let us know in #gotimefm on Gopher Slack or say hi on Twitter.",
    "date": "2017-01-12T14:00:00Z",
    "vote": 0
  },
  {
    "id": "aca18f43ba7d08e178595f7605ac5624",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Creating a programming language",
    "url": "https://changelog.com/gotime/28",
    "resume": "Thorsten Ball joined the show to talk about creating a programming language, writing an interpreter, why he wrote the book “Writing An Interpreter in Go”, how writing a language/interpreter will help you better understand other programming languages, building a computer from Nand to Tetris, and his thoughts on imposter syndrome.",
    "date": "2016-12-23T19:00:00Z",
    "vote": 0
  },
  {
    "id": "c949ca8cbcad4a73dc43724e02f8747d",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Picturesque!",
    "url": "https://appliedgo.net/imageprocessing/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s face it: Pictures taken with a smartphone usually aren\u0026rsquo;t quite like Ansel Adams masterpieces. But with a little post-processing, some of them might still reveal their true beauty. A couple of Go libraries can help.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-12-22T00:00:00Z",
    "vote": 0
  },
  {
    "id": "41fedbfa4a6ba6d221217c3a3f2744ff",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The Go Compiler and Go 1.8",
    "url": "https://changelog.com/gotime/27",
    "resume": "Keith Randall from the Go team joined the show to talk about why a new compiler, what we gain from SSA, what’s next for the compiler, Go 1.8, and the goals/plans for Go 1.9.",
    "date": "2016-12-15T20:00:00Z",
    "vote": 0
  },
  {
    "id": "77b50ddcf83eee1def50d173ffbc30b4",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Teaching and Learning Go",
    "url": "https://changelog.com/gotime/26",
    "resume": "Todd McLeod joined the show to talk about teaching and learning Go, his work as an Instructor at Fresno City College, Udemy and on YouTube.",
    "date": "2016-12-14T21:00:00Z",
    "vote": 0
  },
  {
    "id": "91c49f76cfaa3a2c48dbb6bd3b6344c5",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go Kit, Dependency Management, Microservices",
    "url": "https://changelog.com/gotime/25",
    "resume": "Peter Bourgon joined the show to talk about Go kit, microservices, Go in the enterprise, dependency management, and writing Go packages.",
    "date": "2016-12-13T18:00:00Z",
    "vote": 0
  },
  {
    "id": "749edd02040e9acb40e9e85558521fbd",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Video: Design Philosophy in Go",
    "url": "https://www.ardanlabs.com/blog/2016/12/developing-a-design-philosophy-in-go.html",
    "resume": "This is a talk that I gave at the Vancouver Meetup on November 29th, 2016. The talk covers topics around developing your own design philosophy with a focus on decoupling from change. These are things I cover extensively in the Ultimate Go Classes.\nHere is the material that is covered in the talk. Review the Grouping and Decoupling topics.",
    "date": "2016-12-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d01a40a69e7ad3897c527cd2fcb0f7a7",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "MapReduce - munching through Big Data",
    "url": "https://appliedgo.net/mapreduce/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eHow Google tackled the problem of processing enormous amounts of data, and how you can do the same with Go.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-12-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f292d5ee6c8b2038732a85f2bea55726",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Juju, Jujucharms, Gorram",
    "url": "https://changelog.com/gotime/24",
    "resume": "Nate Finch joined the show this week to talk about Juju, Charms, maturing a project along side Go, Gorram, finding your happy path, and more.",
    "date": "2016-11-10T14:00:00Z",
    "vote": 0
  },
  {
    "id": "e6b19de7db2b87fd9ffd759d3f2004d7",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Open Sourcing Chain's Developer Platform",
    "url": "https://changelog.com/gotime/23",
    "resume": "Tess Rinearson joined the show to talk about Chain launching their open source developer platform, choosing an open source license, open sourcing Chain Core, and the future of this powerful blockchain written in Go.",
    "date": "2016-11-03T14:00:00Z",
    "vote": 0
  },
  {
    "id": "8840af49d8e19fe028b052c24b789ed1",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Application Focused API Design",
    "url": "https://www.ardanlabs.com/blog/2016/11/application-focused-api-design.html",
    "resume": "“I think it\u0026rsquo;s ok to do heinous stuff to test an API if it makes it more usable by others.” - Nate Finch\nPrelude If you are new to Go, it might help to read these posts first before continuing on with this post.\nhttps://www.ardanlabs.com/blog/2014/05/methods-interfaces-and-embedded-types.html\nhttps://www.ardanlabs.com/blog/2015/09/composition-with-go.html\nhttps://www.ardanlabs.com/blog/2016/10/reducing-type-hierarchies.html\nhttps://www.ardanlabs.com/blog/2016/10/avoid-interface-pollution.html\nIntroduction Packages exists to help provide support for specific problems that are commonly found in the different applications we are building. A package API should be intuitive and simple to use so application developers can focus on their concerns and hopefully develop their applications faster.",
    "date": "2016-11-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f860a0f11542b335e38495b310af4839",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go work groups and hardware projects",
    "url": "https://changelog.com/gotime/22",
    "resume": "Jaana B. Dogan joined the show to talk about hardware geekery, on-boarding people into Go, the state of the feedback loop with the Go team, and her initiative to create Go Work Groups.",
    "date": "2016-10-27T14:00:00Z",
    "vote": 0
  },
  {
    "id": "8819b94e2a507a4984bdf5527873d426",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Deliver my data, Mr. Json!",
    "url": "https://appliedgo.net/json/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eJSON is the \u003cem\u003elingua franca\u003c/em\u003e of exchanging data over the net and between applications written in different programming languages. In this article, we create a tiny JSON client/server app in Go.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-10-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e3b6047d1ba384b02b7f8eb815911a78",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Avoid Interface Pollution",
    "url": "https://www.ardanlabs.com/blog/2016/10/avoid-interface-pollution.html",
    "resume": "Introduction Interfaces should only be used when their added value is clear. I see too many packages that declare interfaces unnecessarily, sometimes just for the sake of using interfaces. The use of interfaces when they are not necessary is called interface pollution. This is a practice I would like to see questioned and identified more in code reviews.\nCode Example Let’s look at a code example that contains questionable design choices that raise flags for interface pollution.",
    "date": "2016-10-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "969b83c2f423fa3749117c356c03ec2b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Building a startup on Go",
    "url": "https://changelog.com/gotime/21",
    "resume": "Blake Mizerany joined the show to talk about coming to Go from Ruby, Go’s growth and adoption over the past 7 years, adopting external dependencies, building a startup on Go, and coding as CEO.",
    "date": "2016-10-20T14:00:00Z",
    "vote": 0
  },
  {
    "id": "dc6fca801571af7f2112f1350ffd0fbd",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Kubernetes, Containers, Go",
    "url": "https://changelog.com/gotime/20",
    "resume": "Kelsey Hightower joined the show to talk about the work he’s doing at Google Cloud Platform, Kubernetes, Bringing Pokémon GO to life on Google Cloud, Kubernetes cluster federation, Containers, and of course Go.",
    "date": "2016-10-13T14:00:00Z",
    "vote": 0
  },
  {
    "id": "6c0c827bfaba1391e71b085776e9f587",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "A Random Blog Post",
    "url": "https://appliedgo.net/random/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eHow to generate random numbers, and the difference between math/rand and crypto/rand.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-10-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "d9818a94cd70b7274d122617786251df",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Reducing Type Hierarchies",
    "url": "https://www.ardanlabs.com/blog/2016/10/reducing-type-hierarchies.html",
    "resume": "Introduction I see a lot of developers coming to Go from object oriented programing languages such as C# and Java. Because these developers have been trained to use type hierarchies, it makes sense for them to use this same pattern in Go. However, there are aspects of Go that don’t allow type hierarchies to provide the same level of functionality they do in other object oriented programming languages. Specifically, the concepts of base types and subtyping don’t exist in Go so type reuse requires a different way of thinking.",
    "date": "2016-10-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "63d96c140e5911ffce1a7b2ab90725e6",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Programming Practices, Exercism, Open Source",
    "url": "https://changelog.com/gotime/19",
    "resume": "Katrina Owen joined the show to explore ideas about open source, code review, learning to program, becoming a savvy programmer, mentoring, projects she’s working on, and also her very prominent and amazing code learning tool Exercism.",
    "date": "2016-10-06T14:00:00Z",
    "vote": 0
  },
  {
    "id": "ac46417ff1200978acb8b709d97a1938",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go in 5 Minutes \u0026 design patterns",
    "url": "https://changelog.com/gotime/18",
    "resume": "Aaron Schlesinger joined the show this week to talk about his Go in 5 Minutes series of screencasts, and design patterns in Go.",
    "date": "2016-09-22T20:00:00Z",
    "vote": 0
  },
  {
    "id": "b97b5cda1485afeb375d25fe0f6cce6b",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Monorepos, Mentoring, Testing",
    "url": "https://changelog.com/gotime/17",
    "resume": "Bryan Lyles joined the show to talk about career progression in tech and learning, the idea of a 10x developer, the practice of testing, and advantages and disadvantages of a monorepo.",
    "date": "2016-09-15T20:00:00Z",
    "vote": 0
  },
  {
    "id": "9a118c386f5172a666286baab8c015ce",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Take a REST!",
    "url": "https://appliedgo.net/rest/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eRESTful Web API\u0026rsquo;s are ubiquitous. Time for a minimalistic, five-minutes video tutorial about REST, RESTful API\u0026rsquo;s, and buidling a REST server in Go.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-09-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2d2043a95fb5c4cd3641d85c0cad16d1",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "SOLID Go Design",
    "url": "https://changelog.com/gotime/16",
    "resume": "Dave Cheney joined the show this week to discuss SOLID Go design, software design in Go, what it means to write “good Go code”, and error handling.",
    "date": "2016-09-08T20:00:00Z",
    "vote": 0
  },
  {
    "id": "eb3a7722a83c9572b2d32570ece7efc5",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "The Go Standard Library",
    "url": "https://changelog.com/gotime/15",
    "resume": "Ben Johnson, creator of BoltDB, joined the show to talk about NoSQL vs. Sql databases, tradeoffs between the two, and choosing one over the other. We also talk about Ben’s Secret Lives of Data project, visualizing data structures, and go over his motivation and plans for his blog post series “Go Walkthrough” of the Go standard library.",
    "date": "2016-09-01T20:00:00Z",
    "vote": 0
  },
  {
    "id": "2467e31ee9fb818cd964808ebb13f406",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Regular Expressions demystified",
    "url": "https://appliedgo.net/regexp/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eRegular Expressions are slow, ugly, error-prone, incomprehensible,\u0026hellip; Or are they? Find out by learning regexp basics.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-08-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7902a8816a57ff9ab0f2d162132d578e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Matt Holt on CaddyServer, the ACME Protocol, TLS",
    "url": "https://changelog.com/gotime/14",
    "resume": "This episode wins the contest for the most protocols discussed. Matt Holt joined the show to to talk about TLS, Let’s Encrypt, the ACME protocol, CaddyServer, and a host of other important information security issues.",
    "date": "2016-08-25T20:00:00Z",
    "vote": 0
  },
  {
    "id": "68a983a961668eb4243fc9591117f011",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Francesc Campoy on GopherCon and understanding nil",
    "url": "https://changelog.com/gotime/13",
    "resume": "In our first show after GopherCon, we are joined by Francesc Campoy to chat about some of our GopherCon experience, understanding nil, and a great variety of interesting topics of interest to the Go community.",
    "date": "2016-08-18T20:00:00Z",
    "vote": 0
  },
  {
    "id": "1222b132688dc5d4220d6fd4b21ca1af",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Balancing a binary search tree",
    "url": "https://appliedgo.net/balancedtree/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eOnly a well-balanced search tree can provide optimal search performance. This article adds automatic balancing to the binary search tree from the previous article.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-08-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "bc781c71759cd4c8b9ac271b6c69785a",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Beyang Liu on Go at Sourcegraph and Writing Better Code",
    "url": "https://changelog.com/gotime/12",
    "resume": "Beyang Liu from Sourcegraph joins the show to talk about Go at Sourcegraph and their code insight and language analysis tools for writing better code. We also get an understanding of what Sourcegraph is and the many ways to integrate it into your workflow.",
    "date": "2016-08-10T20:00:00Z",
    "vote": 0
  },
  {
    "id": "ed551cf661ea2b567680aabfe0fa997e",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Jessie Frazelle on Maintaining Open Source, Docker, dotfiles",
    "url": "https://changelog.com/gotime/11",
    "resume": "Jessie Frazelle joins us this week to talk about being an open source maintainer, Docker’s pull request acceptance workflow, dotfiles, getting started with public speaking.",
    "date": "2016-08-10T19:00:00Z",
    "vote": 0
  },
  {
    "id": "9b336d8d89d2c3f9c0ccd7a6c92c602d",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "A Binary Search Tree",
    "url": "https://appliedgo.net/bintree/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eSearch trees are everywhere: In databases, in file systems, in board game algorithms,\u0026hellip; This post explores the probably most basic form of a tree: a binary search tree.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-08-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "855fe2a923a76c77c83f5ac9fa79fefc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "State of Go Survey and Go at Heroku",
    "url": "https://changelog.com/gotime/10",
    "resume": "Ed Muller from Heroku join us to discuss his State of Go survey, vendoring and versioning, the Heroku Go Buildpack, how they use Go at Heroku, and more.",
    "date": "2016-08-01T20:00:00Z",
    "vote": 0
  },
  {
    "id": "19a6f031c78ecded6228b7799e834419",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Scott Mansfield on Go at Netflix",
    "url": "https://changelog.com/gotime/9",
    "resume": "Scott Mansfield joins us this week to talk about Go at Netflix, performance, latency and caching, Rend (their memcached proxy), chaos monkey, and more.",
    "date": "2016-07-28T20:00:00Z",
    "vote": 0
  },
  {
    "id": "032e2866233cb9f204050ecbd20ce2dc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Asim Aslam on Micro, the Go Microservice Toolkit",
    "url": "https://changelog.com/gotime/8",
    "resume": "Asim Aslam joined us to talk about Micro, a pluggable RPC based library which provides the fundamental building blocks for writing microservices in Go. We also discussed open source sustainability, microservices, and serverless architecture.",
    "date": "2016-07-27T19:00:00Z",
    "vote": 0
  },
  {
    "id": "cea9969f058b318633ebceae5c3f245c",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Raphaël Simon on goa, the Framework for Building Microservices",
    "url": "https://changelog.com/gotime/7",
    "resume": "A deep dive into goa, a design-based microservice framework with a DSL that generates idiomatic Go code for your APIs, swagger documentation, and tests helpers.",
    "date": "2016-07-26T20:00:00Z",
    "vote": 0
  },
  {
    "id": "6322472eda560926bb1b31507bbc5bc0",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Who needs generics? Use ... instead!",
    "url": "https://appliedgo.net/generics/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eWhat are generics? Why are they considered useful? Why does Go have no generics? What shall Gophers use instead?\u003c/p\u003e\n\u003cp\u003eThis article examines the nature of generics, and surveys various techniques that can be used to work around the absence of this programming paradigm.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-07-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a792f726871db6186a87a1ec1a2a0cc5",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Plugins in Go",
    "url": "https://appliedgo.net/plugins/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eGo is a statically compiled language. The Go runtime cannot load dynamic libraries, nor does it support compiling Go on the fly. Still, there is a number of ways of creating and using plugins in Go.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-06-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "aa857dfc471813098dd463ecf19e24b0",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Bill Kennedy on Mechanical Sympathy",
    "url": "https://changelog.com/gotime/6",
    "resume": "A deep dive into the fascinating topic of mechanical sympathy with Bill Kennedy. We talk about that plus CPU caches, how object oriented programming is not oriented to be sympathetic to the hardware, and data-oriented design.",
    "date": "2016-06-23T21:08:00Z",
    "vote": 0
  },
  {
    "id": "bfe0fb826615eca39565bf43f1854208",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Dependency Injection in a nutshell",
    "url": "https://appliedgo.net/di/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eLayered software architectures adhere to the \u003cem\u003eDependency Rule:\u003c/em\u003e Source code in a lower-level layer can make use of code in higher-level layers, but never vice versa. Control flow, however, goes in both directions. How is this possible, given that higher-level code must not know anything about the code in lower levels?\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-06-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fec636be909f02a5019ceeba89a4e4dc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Sarah Adams on Test2Doc and Women Who Go",
    "url": "https://changelog.com/gotime/5",
    "resume": "On this show we’re joined by Sarah Adams. We talk about creating safe spaces for women to get started in the Go community, about Women Who Go, and take a deep dive into her Test2Doc open source project.",
    "date": "2016-06-21T21:03:00Z",
    "vote": 0
  },
  {
    "id": "eb5fadd4e1708268cec37590c12f4cbc",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go and Data Science",
    "url": "https://changelog.com/gotime/4",
    "resume": "In this super informative show with Daniel Whitenack we discuss Go and data science. We talk about what data science really is, tools and projects for getting started with data science using Go, and what to expect from Daniel’s talk at GopherCon this year titled “Go for Data Science”.",
    "date": "2016-06-16T20:58:00Z",
    "vote": 0
  },
  {
    "id": "bdd68d50f4256d6d0566d394d5bdedf1",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Inverse Kinematics: how to move a robotic arm (and why this is harder than it seems)",
    "url": "https://appliedgo.net/roboticarm/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eSo you have built a robotic arm? Great, let\u0026rsquo;s write some Go to make it serve your five o\u0026rsquo;clock tea. Sounds simple enough. Or is it?\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-06-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "010ef7f08a41ff250d011c7a1ea3a78f",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Early Go Adoption",
    "url": "https://changelog.com/gotime/3",
    "resume": "Travis Reeder joins the show today to talk about Iron.io, early Go adoption, how Iron.io helps with GoSF and other events for the Go community, the implications of containers at scale, and more.",
    "date": "2016-06-10T20:00:00Z",
    "vote": 0
  },
  {
    "id": "a3a578d2d7e8a6da131fcf97ad46fced",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Convert io.ReadCloser to a String",
    "url": "https://golangcode.com/convert-io-readcloser-to-a-string/",
    "resume": "Net/http is an amazing package but there are times you need to work with the body text of the response returned from the call you just made. Many functions require a string as input so we have to convert it first by passing it through a buffer.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;net/http\u0026#34; \u0026#34;bytes\u0026#34; ) func main() { response, _ := http.",
    "date": "2016-06-10T10:08:48Z",
    "vote": 0
  },
  {
    "id": "28cd9a503d15f3ad1fc037dc1c19d2a3",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Perceptrons - the most basic form of a neural network",
    "url": "https://appliedgo.net/perceptron/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eArtificial Neural Networks have gained attention during the recent years, driven by advances in deep learning. But what is an Artificial Neural Network and what is it made of?\u003c/p\u003e\n\u003cp\u003eMeet the perceptron.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-06-09T00:00:00Z",
    "vote": 0
  },
  {
    "id": "910a60b6f12f18bd3fa92cb050193c77",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "Go Community Discussions",
    "url": "https://changelog.com/gotime/2",
    "resume": "Cory LaNou is our guest this week. He shared what it was like to start open source development after 13 years of programming behind closed doors, and what it was like to have one of his first contributions (a bug fix) be reviewed by Dave Cheney (a very prominent Go developer). Cory helps to organize several local meetups and shared the details of his work in the community, as well as some inspiring tips for how to get involved. We also discussed the need for domain knowledge to understand the code you’re reading, microservices and frameworks in Go, reasoning for breaking down an application, performance, and more.",
    "date": "2016-06-02T08:00:00Z",
    "vote": 0
  },
  {
    "id": "c07c5db6c346302eb29c55e665c90ad9",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Message Queues Part 2: The PubSub Protocol",
    "url": "https://appliedgo.net/pubsub/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eThis is the second (and, for the time being, the last) article about messaging and Mangos. After doing first steps with the Pair protocol, we now look into a slightly more complex protocol, the Publisher-Subscriber (or PubSub) protocol.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-06-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9e5e1159e457bdd66b5687cab84e3412",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "How to Install Go on Ubuntu 18.04/20.04",
    "url": "https://golangcode.com/how-to-install-go-in-ubuntu-16-04/",
    "resume": "Ubuntu does come with a version of go (installable through apt install go) but it won\u0026rsquo;t be as up-to-date as downloading it directly. And I know many gophers like using the latest version.\nTo begin with we\u0026rsquo;ll start by downloading the latest version and, once downloaded, we extract it into a folder we can work with (you can find the latest version here).\n1  wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz   1  sudo tar -C /usr/local -xvf go1.",
    "date": "2016-05-29T17:37:45Z",
    "vote": 0
  },
  {
    "id": "7d324088edeb931e80cfbf7081f2f4f5",
    "source": {
      "path": "blogs",
      "name": "Applied Go",
      "url": "https://appliedgo.net/index.xml"
    },
    "name": "Message Queues, or how you can make processes talk to each other",
    "url": "https://appliedgo.net/messaging/",
    "resume": "\u003cp\u003e\u003cdiv class=\"gotohugo \"\u003e\n\u003cdiv class=\"summary doc \"\u003e\u003c/p\u003e\n\u003cp\u003eConsider two processes that need to exchange commands and data. You want to connect them in a way that is straightforward, efficient, and reliable. How would you do that?\u003c/p\u003e\n\u003cp\u003eEnter Message Queues.\u003c/p\u003e\n\u003cp\u003e\u003c/div\u003e \u003c!--summary doc--\u003e\u003c/p\u003e",
    "date": "2016-05-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b51fe225eae6840540ce768e173ae303",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Serve Static Assets (using the Mux Router)",
    "url": "https://golangcode.com/serve-static-assets-using-the-mux-router/",
    "resume": "Using a router is great when passing off incoming requests to functions to handle and return data. Often though, you just want to serve an entire directory and make everything inside it public. This is useful for images, styles and javascript.\nIn this example we\u0026rsquo;re using the Gorilla mux router (\u0026ldquo;HTTP request multiplexer\u0026rdquo;) and we have setup a new route for the entire directory. We\u0026rsquo;re using static as the folder name to serve, which we pass to our FileServer() as a new route on the router.",
    "date": "2016-05-22T11:54:24Z",
    "vote": 0
  },
  {
    "id": "8f84ece1706a2e6dd3dfb4dd939d2887",
    "source": {
      "path": "podcasts",
      "name": "Go Time",
      "url": "https://changelog.com/gotime/feed"
    },
    "name": "It's Go Time!",
    "url": "https://changelog.com/gotime/1",
    "resume": "In this inaugural show Erik, Brian, and Carlisia kick things off by sharing some recent Go news that caught their attention, what to expect from this show, ways to get in touch, and more.",
    "date": "2016-05-19T20:00:00Z",
    "vote": 0
  },
  {
    "id": "2ccf4ec97d1ce69ac36e8b602ba83ab3",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Installing Go And Your Workspace",
    "url": "https://www.ardanlabs.com/blog/2016/05/installing-go-and-your-workspace.html",
    "resume": "Introduction If you are new to Linux or the Mac you might find installing Go to be a bit confusing. It was for me when I started learning Go. Go was the reason I stopped using Windows, which I used for 20 years. Even if you\u0026rsquo;re experienced with these operation systems, setting up Go might seem a bit of a mystery. With this in mind, let\u0026rsquo;s walk through installing Go.",
    "date": "2016-05-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "793ad340dd7266318ee9977bd84a098f",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Copying Interface Values In Go",
    "url": "https://www.ardanlabs.com/blog/2016/05/copying-interface-values-in-go.html",
    "resume": "I am constantly thinking about the Go language and how things work. Lately I have been thinking how everything in Go is by value. We see this when we pass values to functions, when we iterate over slices and when we perform type assertions. In every case, copies of the values that are stored in these data structures are returned. When I first started learning Go this threw me off, but I have come to appreciate the reasonability this brings to our code.",
    "date": "2016-05-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "a6369baf399578ccd0b100e11be488b1",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Fizz-Buzz Test in Go",
    "url": "https://golangcode.com/fizz-buzz-test-in-go/",
    "resume": "The fizzbuzz test is a simple program, often used in interviews to identify people who struggle to code.\nThe program should print the numbers from 1 to 100, except if the number is divisible by 3 then print \u0026lsquo;fizz\u0026rsquo;, if the number is divisible by 5 print \u0026lsquo;buzz\u0026rsquo; or if the number if divisible by both print \u0026lsquo;fizzbuzz\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  package main import \u0026#34;fmt\u0026#34; func main() { for i := 1; i \u0026lt;= 100; i++ { if i%3 == 0 { // Multiple of 3  fmt.",
    "date": "2016-03-31T17:48:21Z",
    "vote": 0
  },
  {
    "id": "30f4a3c1bbb04055d31d994453055dd1",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "MySQL Database Insert \u0026 Get Last Insert ID",
    "url": "https://golangcode.com/mysql-database-insert-get-last-insert-id/",
    "resume": "This post aims to show you how to use the go-sql-driver (which uses the database/sql interface) to insert a row into a MySQL database table.\nTo do this we use the Open() method to create our database object (and connection pool). We can then create an sql statement using Prepare() and pass in our parameters into Exec(), matching them up with question marks (to avoid sql injection). Finally, calling the LastInsertId() we can get the id of the row we\u0026rsquo;ve just inserted - and in our example, we output this value to screen.",
    "date": "2016-03-24T18:31:09Z",
    "vote": 0
  },
  {
    "id": "0263847faa605f1d3b49645858292092",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Multi-line Strings",
    "url": "https://golangcode.com/multi-line-strings/",
    "resume": "This is an especially useful technique when working with large strings like SQL, HTML or XML within Go. Instead of using either the double quote (“) or single quote symbols (‘), instead use back-ticks to define the start and end of the string. You can then wrap it across lines. If you indent the string though, remember that the white space will count.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  package main import \u0026#34;fmt\u0026#34; func main() { message := `This is a Multi-line Text String Because it uses the raw-string back ticks instead of quotes.",
    "date": "2016-03-22T18:19:38Z",
    "vote": 0
  },
  {
    "id": "44fa953f069879ca30563ba008880181",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Composition with Go",
    "url": "https://www.ardanlabs.com/blog/2015/09/composition-with-go.html",
    "resume": "Composition goes beyond the mechanics of type embedding. It\u0026rsquo;s a paradigm we can leverage to design better APIs and to build larger programs from smaller parts. It all starts from the declaration and implementation of types that have a single purpose. Programs that are architected with composition in mind have a better chance to grow and adapt to changing needs. They are also much easier to read and reason about.",
    "date": "2015-09-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c1e6b71fd28b6b5c730aa9ee52462e8a",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Anonymous Functions (aka Closures)",
    "url": "https://golangcode.com/anonymous-functions/",
    "resume": "Here is a basic example of how an anonymous function, or lambda function, can be used with Go. We\u0026rsquo;re just printing a statement to screen, but it can be used for various things - one of which can be just to segment code which will only need to get run once and doesn\u0026rsquo;t need to be referenced.\nIt also has the use case of encapsulating the variables used within itself, so only from within are you able to access a variable from within.",
    "date": "2015-08-30T10:05:07Z",
    "vote": 0
  },
  {
    "id": "0496514984cc8c75c783d37c146b5224",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Basic Go Routines (like Threading)",
    "url": "https://golangcode.com/basic-go-routines-threading/",
    "resume": "This script basically just prints out the numbers 1 to 10, but it does so by spinning off each print statement into it’s own thread, using a go routine. You’ll notice the script also has a start and an end print statement, but because go routines are used, the end statement will be printed before and items (1-10) are printed.\nThe ending sleep allows the go routines to execute as they were being cut short by the main function finished, thus ending the programs life.",
    "date": "2015-08-30T09:34:15Z",
    "vote": 0
  },
  {
    "id": "5a24fcafba732f26d48e9f4ca3d6199f",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Find the Length of an Array/Slice",
    "url": "https://golangcode.com/find-the-length-of-an-array/",
    "resume": "With Go, you can find the length of an array (or more accurately a slice) by using the internal len() function. Our example shows us creating a slice and then printing out it\u0026rsquo;s length, then adding an extra item and printing the length again.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  package main import \u0026#34;fmt\u0026#34; func main() { // Create an exmaple array  array := []int{1, 2, 3, 4, 5} // Print number of items  fmt.",
    "date": "2015-08-05T17:26:55Z",
    "vote": 0
  },
  {
    "id": "4a02b5195d980ab01c6302883525ee86",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Write data to a CSV file",
    "url": "https://golangcode.com/write-data-to-a-csv-file/",
    "resume": "CSV is a highly accepted data language, commonly used by Excel and spreadsheets, and as such is very useful if your script is producing data and you want it in a common format.\nIn the example, we\u0026rsquo;re forming a data variable, just to illustrate the example, by creating a multi-dimensional array of strings. We are then having to create a file (result.csv) for the csv writer to work with. Finally, we are iterating through the data writing each line to the file.",
    "date": "2015-08-03T20:05:16Z",
    "vote": 0
  },
  {
    "id": "b2b453a489b07003e710c061d187e531",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Passing Arguments into your Application",
    "url": "https://golangcode.com/pass-arguments-into-you-application/",
    "resume": "Passing arguments in your application can be especially useful when you’re creating tools which can do different things, or the same thing in a different way. In go, you can do with by declaring your arguments as flags. In our example we’re using an argument to determine whether we should run task A or task B. Once you’ve declared your flags, you have to parse them at runtime to populate the variables and then you can use it like any other variable.",
    "date": "2015-08-02T19:29:45Z",
    "vote": 0
  },
  {
    "id": "1e6a84070e737f7418a7eeb188e7f99d",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Writing to a File",
    "url": "https://golangcode.com/writing-to-file/",
    "resume": "Often it\u0026rsquo;s very useful being able to write to a file from a program for logging purposes, saving results or as a data store. This is a little snippet on how to write text/data to a file.\nWe use the os package to create the file, exiting the program and logging if it can\u0026rsquo;t do this and printing a string into the file using io.WriteString. We\u0026rsquo;re also using defer to close the file access once the function has finished running (which is a really neat way of remembering to close files).",
    "date": "2015-08-02T11:50:20Z",
    "vote": 0
  },
  {
    "id": "98c4c6c1cc6e34178599b0836957bc14",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Using Constants",
    "url": "https://golangcode.com/using-constants/",
    "resume": "Using constants can often be more efficient than using variables where possible because any references to the constant will be replaced at compile time, where as a variable would have memory allocated to it and can be changed. Using a defined constant is very similar to using a variable and can be declared as a block outside of a function (usually at the top of a file) - a little like your import.",
    "date": "2015-08-02T11:22:13Z",
    "vote": 0
  },
  {
    "id": "e2ece65874e1d10ab507b0cfba32df9d",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Get the Current Unix Time",
    "url": "https://golangcode.com/get-unix-time/",
    "resume": "This is a simple way to get the current system time in the unix format and in this example we\u0026rsquo;re just printing the result to screen. This is all accessible from the time package. The Unix() function will actually return a type of Time (which is the stored time to the nanosecond) - but this can be converted into an int or formatted into a readable string.\n1 2 3 4 5 6 7 8 9 10 11  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { currentTime := time.",
    "date": "2015-08-02T11:03:43Z",
    "vote": 0
  },
  {
    "id": "dd52b9876344df0a37c9a6c72ab45e7c",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Attach a Logger to your Router",
    "url": "https://golangcode.com/attach-a-logger-to-your-router/",
    "resume": "If you\u0026rsquo;re working with the net/http package, you can easily create a router to pass different http calls to different functions. A logger allows you to keep track of these calls. In this example, we just log the call to the terminal (or stdout). To use this logger wrap any handlers you have with Logger().\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  package main import ( \u0026#34;io\u0026#34; \u0026#34;log\u0026#34; \u0026#34;net/http\u0026#34; \u0026#34;time\u0026#34; ) func main() { // Specify our ExampleHandler and wrap the Logger around it.",
    "date": "2015-08-01T15:18:12Z",
    "vote": 0
  },
  {
    "id": "c83ef7a61c65483778fe2bcb40833a15",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "JSON Decode into Objects",
    "url": "https://golangcode.com/json-decode-into-objects/",
    "resume": "This is a way of taking a JSON string and forming an object array with it. These objects can then be used and manipulated as you please. This uses the json encode as well just to demonstrate it works. The primary function used to process the json is the json.Unmarshal method.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  package main import ( \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; ) type Page struct { Title string Filename string Content string } type Pages []Page var rawJson = []byte(`[{\u0026#34;Title\u0026#34;:\u0026#34;First Page\u0026#34;,\u0026#34;Filename\u0026#34;:\u0026#34;page1.",
    "date": "2015-08-01T13:07:52Z",
    "vote": 0
  },
  {
    "id": "8f6ebb20281150c693a04cf344f4e208",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "JSON Encode an Array of Objects",
    "url": "https://golangcode.com/json-encode-an-array-of-objects/",
    "resume": "This is how to convert any object within go, into the JSON data structure. In our example we\u0026rsquo;re using an array of Page objects, each with their own properties and encoding them. We\u0026rsquo;re then just printing this string to Stdout, but if we were using the net/http to create an api, we would want to write to the http writer instead.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  package main import ( \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; ) type Page struct { Title string Filename string Content string } type Pages []Page var pages = Pages{ Page{ \u0026#34;First Page\u0026#34;, \u0026#34;page1.",
    "date": "2015-08-01T12:25:53Z",
    "vote": 0
  },
  {
    "id": "b1745bb54daa56cd0de54ee2fd9b6824",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Using HTML Templates from a Folder (Complied)",
    "url": "https://golangcode.com/using-html-templates-from-a-folder-complied/",
    "resume": "This will take all your templates (found within the templates folder) and add them to your executable application at compile time - so it\u0026rsquo;s fast as it doesn\u0026rsquo;t have to read from file. You can call these templates with ExecuteTemplate and passing the file name as the second parameter.\nIf you\u0026rsquo;re using this with a web server, you can replace the os.Stdout with the net/http writer.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  package main import ( \u0026#34;html/template\u0026#34; \u0026#34;log\u0026#34; \u0026#34;os\u0026#34; ) type Page struct { Title string } var templates = template.",
    "date": "2015-08-01T11:08:00Z",
    "vote": 0
  },
  {
    "id": "668786b1b376d10e5b60f93e60cffb53",
    "source": {
      "path": "blogs",
      "name": "Golang Code",
      "url": "https://golangcode.com/index.xml"
    },
    "name": "Hello world! How to Start any Go Application",
    "url": "https://golangcode.com/hello-world/",
    "resume": "This is a simple first version of any go application – The famous Hello World.\nUsing the format library and a c-style printf function to output a string to screen.\n1 2 3 4 5 6 7 8 9  package main import ( \u0026#34;fmt\u0026#34; ) func main() { fmt.Printf(\u0026#34;Hello World\u0026#34;) }",
    "date": "2015-07-30T19:23:08Z",
    "vote": 0
  },
  {
    "id": "7cfb48b670d522230e0a9c77fc1465fe",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Object Oriented Programming Mechanics",
    "url": "https://www.ardanlabs.com/blog/2015/03/object-oriented-programming-mechanics.html",
    "resume": "Go is an object oriented programming language. It may not have inheritance, but in this 20 minute video from the Bangalore meetup, I will show you how object oriented programming practices and techniques can be applied to your Go programs. From an object oriented standpoint, Go does provides the ability to add behavior to your types via methods, allows you to implement polymorphic behavior via interfaces and gives you a way to extend the state and behavior of any existing type via type embedding.",
    "date": "2015-03-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "71a30475aa46bba1fbeba9e9abf5db3d",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Scheduler Tracing In Go",
    "url": "https://www.ardanlabs.com/blog/2015/02/scheduler-tracing-in-go.html",
    "resume": "Introduction One of the things I love about Go is the profiling and debug information you can generate. There is a special environmental variable named GODEBUG that will emit debugging information about the runtime as your program executes. You can request summary and detailed information for both the garbage collector and the scheduler. What’s great is you don\u0026rsquo;t need to build your program with any special switches for it to work.",
    "date": "2015-02-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "cc05370f38ad28c137105ac4db8cd94a",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Stack Traces In Go",
    "url": "https://www.ardanlabs.com/blog/2015/01/stack-traces-in-go.html",
    "resume": "Introduction\nHaving some basic skills in debugging Go programs can save any programmer a good amount of time trying to identify problems. I believe in logging as much information as you can, but sometimes a panic occurs and what you logged is not enough. Understanding the information in a stack trace can sometimes mean the difference between finding the bug now or needing to add more logging and waiting for it to happen again.",
    "date": "2015-01-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b785697c4f1f28d5611cafac1831e2d6",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Using Pointers In Go",
    "url": "https://www.ardanlabs.com/blog/2014/12/using-pointers-in-go.html",
    "resume": "Introduction\nI am asked quite a bit about when and when not to use pointers in Go. The problem most people have, is that they try to make this decision based on what they think the performance tradeoff will be. Hence the problem, don’t make coding decisions based on unfounded thoughts you may have about performance. Make coding decisions based on the code being idiomatic, simple, readable and reasonable.",
    "date": "2014-12-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "783ebd80f9c9a72b798ad712017c5873",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Error Handling In Go, Part II",
    "url": "https://www.ardanlabs.com/blog/2014/11/error-handling-in-go-part-ii.html",
    "resume": "Introduction\nIn part I of this post, we learned about the error interface and how the standard library provides support for creating error interface values via the errors package. We also learned how to work with error interface values and use them to identify when an error has occured. Finally, we saw how some packages in the standard library export error interface variables to help us identify specific errors.",
    "date": "2014-11-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "02a1f301e76dab8544d6f120e65e737f",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Error Handling In Go, Part I",
    "url": "https://www.ardanlabs.com/blog/2014/10/error-handling-in-go-part-i.html",
    "resume": "Introduction\nIt is idiomatic in Go to use the error interface type as the return type for any error that is going to be returned from a function or method. This interface is used by all the functions and methods in the standard library that return errors. For example, here is the declaration for the Get method from the http package: \u0026nbsp; Listing 1.1 \u0026nbsp;\nhttp://golang.org/pkg/net/http/#Client.Get\nfunc (c \u0026#42;Client) Get(url string) (resp \u0026#42;Response, err error) Listing 1.",
    "date": "2014-10-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6657f10f4fed944e74cf0ec738240fe9",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Go Compiler nil Pointer Checks",
    "url": "https://www.ardanlabs.com/blog/2014/09/go-compiler-nil-pointer-checks.html",
    "resume": "Introduction\nI was thinking about how the compiler looks to protect the code we write when it can. Invalid memory access checks are one type of safety check the compiler adds to our code. We might think that this \u0026quot;extra code\u0026quot; is hurting our performance and maybe over billions of iterative operations it is. However, these checks can prevent our code from causing damage to the systems we are running on.",
    "date": "2014-09-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "774a729b97df1120eb7430463a86ca30",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "ALS Ice Bucket Challenge - Go Style",
    "url": "https://www.ardanlabs.com/blog/2014/08/als-ice-bucket-challenge-go-style.html",
    "resume": "If you have not heard about the ALS Ice Bucket Challenge I would be surprised. It\u0026rsquo;s everywhere nowadays, being done by celebrities alike. After being challenged by my children there was only one person, or should I say Gopher, I knew I needed to nominate. The Gopher took to the challenge and here it is:\nI would like to thank my daughter for spending time today filming and editing the video.",
    "date": "2014-08-30T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1ff14305ca4ebdcfb0ea805ba2bbbeb2",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Ice Cream Makers and Data Races Part II",
    "url": "https://www.ardanlabs.com/blog/2014/06/ice-cream-makers-and-data-races-part-ii.html",
    "resume": "Introduction\nDave Cheney published a post called Ice Cream Makers and Data Races. The post showed an example of an interesting data race that can occur when using an interface typed variable to make a method call. If you have not read the post yet please do. Once you read the post you will discover that the problem lies with the fact that an interface value is implemented internally using a two word header and that the Go memory model states only writes to a single word are atomic.",
    "date": "2014-06-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6192312b9b7c75597ad3bc081aac9552",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Actionable Data With MongoDB and Go",
    "url": "https://www.ardanlabs.com/blog/2014/06/actionable-data-with-mongodb-and-go.html",
    "resume": "Introduction\nIf you are building any kind of application for a consumer based product, it is common to have large amounts of application data being generated about your users. Running reports is a traditional use of this data, but what if you could make this data actionable? What if you could adapt the user experience by aggregating and testing this data against rules that could dictate actions or special messaging?",
    "date": "2014-06-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "04c5a1f918b80e848449d226cae77369",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Pitfalls With Closures In Go",
    "url": "https://www.ardanlabs.com/blog/2014/06/pitfalls-with-closures-in-go.html",
    "resume": "Introduction\nClosures in Go are a very powerful construct but they can also be the cause of bugs if you don’t understand how they work. In this post I am going to pull a small piece of code from Chapter 2 from the Go In Action book that discusses a pitfall you can run into when using closures. The full code example can be found in the Github repository for the book.",
    "date": "2014-06-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7f75a768abb053098028958bef09b365",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Methods, Interfaces and Embedded Types in Go",
    "url": "https://www.ardanlabs.com/blog/2014/05/methods-interfaces-and-embedded-types.html",
    "resume": "Introduction\nMy business partner Ed asked me what would happen if a struct and an embedded field both implemented the same interface. We asked ourselves two questions:\nWould the compiler throw an error because we now had two implementations of the interface? If the compiler accepted the type declaration, how does the compiler determine which implementation to use for interface calls? We hacked out some code to answer the questions and then I dug into the specification.",
    "date": "2014-05-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9fa3d52d025ddd167c66d6f191aeeb66",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Introduction To Numeric Constants In Go",
    "url": "https://www.ardanlabs.com/blog/2014/04/introduction-to-numeric-constants-in-go.html",
    "resume": "Introduction\nOne of the more unique features of Go is how the language implements constants. The rules for constants in the language specification are unique to Go. They provide the flexibility Go needs at the compiler level to make the code we write readable and intuitive while still maintaining a type safe language.\nThis post will attempt to build a foundation for what numeric constants are, how they behave in their simplest form and how best to talk about them.",
    "date": "2014-04-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "523aa4cf8131ebf8503a234bc259ae3e",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Exported/Unexported Identifiers In Go",
    "url": "https://www.ardanlabs.com/blog/2014/03/exportedunexported-identifiers-in-go.html",
    "resume": "Introduction\nOne of the first things I learned about in Go was using an uppercase or lowercase letter as the first letter when naming a type, variable or function. It was explained that when the first letter was capitalized, the identifier was public to any piece of code that wanted to use it. When the first letter was lowercase, the identifier was private and could only be accessed within the package it was declared.",
    "date": "2014-03-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3ed5a7c46ca7341be6f0bf0a2e613a19",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Web Form Validation And Localization In Go",
    "url": "https://www.ardanlabs.com/blog/2014/03/web-form-validation-and-localization-in.html",
    "resume": "Introduction\nAs I improve my knowledge and framework for a Go based web service I am building, I continue to go back and enhance my Beego Sample App. Something I just added recently was providing localized messages for validation errors. I was fortunate to find Nick Snyder\u0026rsquo;s go-i18n package. Nick\u0026rsquo;s package made it easy to support multiple languages for the Go web service I am writing.\nAbstracting go-i18n\nThe go-i18n package is simple to use and you can use it to read files or strings that contain all the messages you want to localize.",
    "date": "2014-03-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "256a288155b4534a127371a62eba1261",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Running MongoDB Queries Concurrently With Go",
    "url": "https://www.ardanlabs.com/blog/2014/02/running-queries-concurrently-against.html",
    "resume": "If you are attending GopherCon 2014 or plan to watch the videos once they are released, this article will prepare you for the talk by Gustavo Niemeyer and Steve Francia. It provides a\u0026nbsp;beginners view for using the Go mgo driver against a MongoDB database.\u0026nbsp;\nIntroduction\nMongoDB supports many different programming languages thanks to a great set of drivers. One such driver is the MongoDB Go driver which is called mgo. This driver has been externally developed by Gustavo Niemeyer from Canonical, and eventually Steve Francia, the head of the drivers team at MongoDB Inc, took notice and offered support.",
    "date": "2014-02-25T00:00:00Z",
    "vote": 0
  },
  {
    "id": "db2e6d939fe204d871ae92f2bd570893",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "The Nature Of Channels In Go",
    "url": "https://www.ardanlabs.com/blog/2014/02/the-nature-of-channels-in-go.html",
    "resume": "Introduction\nIn my last post called Concurrency, Goroutines and GOMAXPROCS, I set the stage for talking about channels. We discussed what concurrency was and how goroutines played a role. With that foundation in hand, we can now understand the nature of channels and how they can be used to synchronize goroutines to share resources in a safe, less error prone and fun way. What Are Channels\nChannels are type safe message queues that have the intelligence to control the behavior of any goroutine attempting to receive or send on it.",
    "date": "2014-02-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "69fd2ed980df96761404da155131a2e7",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Concurrency, Goroutines and GOMAXPROCS",
    "url": "https://www.ardanlabs.com/blog/2014/01/concurrency-goroutines-and-gomaxprocs.html",
    "resume": "Introduction\nWhen new people join the Go-Miami group they always write that they want to learn more about Go\u0026rsquo;s concurrency model. Concurrency seems to be the big buzz word around the language. It was for me when I first started hearing about Go. It was Rob Pike\u0026rsquo;s Go Concurrency Patterns video that finally convinced me I needed to learn this language.\nTo understand how Go makes writing concurrent programs easier and less prone to errors, we first need to understand what a concurrent program is and the problems that result from such programs.",
    "date": "2014-01-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "965fac81b27901202268ed527a5d9a2e",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Decode JSON Documents In Go",
    "url": "https://www.ardanlabs.com/blog/2014/01/decode-json-documents-in-go.html",
    "resume": "Introduction\nWe are working on a project where we have to make calls into a web service. Many of the web calls return very large documents that contain many sub-documents. The worst part is, we usually only need a handful of the fields for any given document and those fields tend to be scattered all over the place.\nHere is a sample of a smaller document:\nvar document string = {\u0026lt;br /\u0026gt; \u0026amp;quot;userContext\u0026amp;quot;: {\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;conversationCredentials\u0026amp;quot;: {\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;sessionToken\u0026amp;quot;: \u0026amp;quot;06142010_1:75bf6a413327dd71ebe8f3f30c5a4210a9b11e93c028d6e11abfca7ff\u0026amp;quot;\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; },\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;valid\u0026amp;quot;: true,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;isPasswordExpired\u0026amp;quot;: false,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;cobrandId\u0026amp;quot;: 10000004,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;channelId\u0026amp;quot;: -1,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;locale\u0026amp;quot;: \u0026amp;quot;en_US\u0026amp;quot;,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;tncVersion\u0026amp;quot;: 2,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;applicationId\u0026amp;quot;: \u0026amp;quot;17CBE222A42161A3FF450E47CF4C1A00\u0026amp;quot;,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;cobrandConversationCredentials\u0026amp;quot;: {\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;sessionToken\u0026amp;quot;: \u0026amp;quot;06142010_1:b8d011fefbab8bf1753391b074ffedf9578612d676ed2b7f073b5785b\u0026amp;quot;\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; },\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;preferenceInfo\u0026amp;quot;: {\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;currencyCode\u0026amp;quot;: \u0026amp;quot;USD\u0026amp;quot;,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;timeZone\u0026amp;quot;: \u0026amp;quot;PST\u0026amp;quot;,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;dateFormat\u0026amp;quot;: \u0026amp;quot;MM/dd/yyyy\u0026amp;quot;,\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;currencyNotationType\u0026amp;quot;: {\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;currencyNotationType\u0026amp;quot;: \u0026amp;quot;SYMBOL\u0026amp;quot;\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; },\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;numberFormat\u0026amp;quot;: {\u0026lt;br /\u0026gt; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;quot;decimalSeparator\u0026amp;quot;: \u0026amp;quot;.",
    "date": "2014-01-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4c40a70af570016147c6dfa6fae055ad",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Be Selected To Attend GopherCon 2014",
    "url": "https://www.ardanlabs.com/blog/2014/01/gophercon-2014-scholarship-for-women.html",
    "resume": "Gopher Academy announced a great program today.\nToday I\u0026rsquo;d like to announce the GopherCon Scholarship Program. It\u0026rsquo;s goal is to increase the visibility of women in the Go community through the most direct path I can imagine: sponsoring their attendance to GopherCon 2014.\nThe program works by you purchasing one of these special tickets. There will be a selection/nomination process and those woman selected will be able to attend GopherCon thanks to you.",
    "date": "2014-01-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9378f3f4d9f3c79612c1002e90e6b546",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Go Package Management For 2014",
    "url": "https://www.ardanlabs.com/blog/2014/01/go-package-management-for-2014.html",
    "resume": "Introduction\nIn October 2013 I sent out a call to action to the Go community. I wanted to form a group of Gophers that would come together and help write a specification and build a working implementation of a package management tool. We are not there yet, but the group did accomplish a few things:\nWe started a mailing list called Go package management [go-pm] where people could discuss ideas and get feedback on existing and new tools.",
    "date": "2014-01-16T00:00:00Z",
    "vote": 0
  },
  {
    "id": "8eec52b7580da911b8c08053ab455847",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Macro View of Map Internals In Go",
    "url": "https://www.ardanlabs.com/blog/2013/12/macro-view-of-map-internals-in-go.html",
    "resume": "Introduction\nThere are lots of posts that talk about the internals of slices, but when it comes to maps, we are left in the dark. I was wondering why and then I found the code for maps and it all made sense.\nhttps://golang.org/src/runtime/hashmap.go\nAt least for me, this code is complicated. That being said, I think we can create a macro view of how maps are structured and grow. This should explain why they are unordered, efficient and fast.",
    "date": "2013-12-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "56fc42ae1d50a433fb73549e48fbd4ea",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Queue Your Way To Scalability",
    "url": "https://www.ardanlabs.com/blog/2013/12/queue-your-way-to-scalability.html",
    "resume": "Introduction\nThe first thing I did when I started programming in Go was begin porting my Windows utilities classes and service frameworks over to Linux. This is what I did when I moved from C++ to C#. Thank goodness, I soon learned about Iron.IO and the services they offered. Then it hit me, if I wanted true scalability, I needed to start building worker tasks that could be queued to run anywhere at any time.",
    "date": "2013-12-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "3afb9ce3eef29f5bac5efdac47b9f2e0",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Three-Index Slices in Go 1.2",
    "url": "https://www.ardanlabs.com/blog/2013/12/three-index-slices-in-go-12.html",
    "resume": "With the release of Go 1.2, slices gained the ability to specify the capacity when performing a slicing operation. This doesn\u0026rsquo;t mean we can use this index to extend the capacity of the underlying array. It means we can create a new slice whose capacity is restricted. Restricting the capacity provides a level of protection to the underlying array and gives us more control over append operations.\nHere are the release notes and design document for the feature request:",
    "date": "2013-12-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "2369f572209925adc62da247225d312b",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Sample Web Application Using Beego and Mgo",
    "url": "https://www.ardanlabs.com/blog/2013/12/sample-web-application-using-beego-and.html",
    "resume": "Introduction\nI am very excited about the Beego web framework. I wanted to share with you how I use the framework to build real world web sites and web services. Here is a picture of the sample website the post is going to showcase:\nThe sample web application:\nImplements a traditional grid view of data calling into MongoDB Provides a modal dialog box to view details using a partial view to generate the HTML Implements a web service that returns a JSON document Takes configuration parameters from the environment using envconfig Implements tests via goconvey Leverages my logging package The code for the sample can be found in the GoingGo repository up on Github:",
    "date": "2013-12-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "441e9a851b442dbdd0c9448d73f47094",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Building A Weather App Using Go",
    "url": "https://www.ardanlabs.com/blog/2013/12/building-weather-app-using-go.html",
    "resume": "At Ardan Studios we have spent the last 6 months, in our spare time and on weekends, building a consumer based mobile application called OutCast. The mobile application is tailored towards those who like spending time outdoors, whether that be fishing, hunting or any other type of activity.\nThis first release of OutCast shows the conditions for the buoy stations and marine forecasts areas within the United States. All this information is updated every 10 minutes and there are map views with traditional grids and search.",
    "date": "2013-12-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "00dcb9a72e1402673cd826d0fd515f8e",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Write Your Go Programs Using GEdit",
    "url": "https://www.ardanlabs.com/blog/2013/11/write-your-go-programs-using-gedit.html",
    "resume": "This is a guest post from Tad Vizbaras from\u0026nbsp;Etasoft\u0026nbsp;in South Florida. There are a number of editors and IDEs for Go development. LiteIde, Vim, Emacs and GEdit just to name a few. Each developer has their own favorite editor for each language they work with. Some like full featured IDE environments while others prefer speed over features. My personal\u0026nbsp;favorite\u0026nbsp;editors for Go development at the moment are Vim and GEdit.\nGEdit comes as part of many Linux distros.",
    "date": "2013-11-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c73d098c4f3899835fbb40454104281b",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Label Breaks In Go",
    "url": "https://www.ardanlabs.com/blog/2013/11/label-breaks-in-go.html",
    "resume": "Have you ever found yourself in this situation. You have a case statement inside of a for loop and you would like to break from both the case and for statements in a single call?\nvar err error\ntimeout := time.After(30 \u0026#42; time.Second)\nsigChan := make(chan os.Signal, 1)\nsignal.Notify(sigChan, os.Interrupt)\ncomplete := make(chan error)\ngo launchProcessor(complete)\nfor {\n\u0026nbsp; \u0026nbsp; select {\n\u0026nbsp; \u0026nbsp; case \u0026lt;-sigChan:\n\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;atomic.StoreInt32(\u0026amp;shutdownFlag, 1)",
    "date": "2013-11-21T00:00:00Z",
    "vote": 0
  },
  {
    "id": "92be9e9045a50e218c95a61a27b5b813",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Using The Log Package In Go",
    "url": "https://www.ardanlabs.com/blog/2013/11/using-log-package-in-go.html",
    "resume": "Linux is unique to Windows in many ways, and writing programs in Linux is no exception. The use of standard out, standard err and null devices is not only a good idea but it\u0026rsquo;s the law. If your programs are going to be logging information, it is best to follow the destination conventions. This way your programs will work with all of the Mac/Linux tooling and hosted environments.\nGo has a package in the standard library called log and a type called logger.",
    "date": "2013-11-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5c312495ea63e72f0cf5876a410f3642",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Using XSLT With Go",
    "url": "https://www.ardanlabs.com/blog/2013/11/using-xslt-with-go.html",
    "resume": "I am working on a project that requires pulling and processing different XML feeds from the web and storing the data into MongoDB as JSON. Since new feeds come up everyday, changing the Go program to process and publish new feeds is out of the question. A second constraint is that processing has to work in Iron.io or any other linux cloud based environment.\nWhat I needed was a Go program that could take an XML document and XSLT stylesheet at runtime, transform the XML into JSON and then store the JSON to MongoDB.",
    "date": "2013-11-03T00:00:00Z",
    "vote": 0
  },
  {
    "id": "dae82eefbc877499ee3a24561d76dcd4",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Manage Dependencies With GODEP",
    "url": "https://www.ardanlabs.com/blog/2013/10/manage-dependencies-with-godep.html",
    "resume": "Introduction If you are using 3rd party packages, (packages that you don\u0026rsquo;t own or control), you will want a way to create a reproducible build every time you build your projects. If you use 3rd party packages directly and the package authors change things, your projects could break. Even if things don\u0026rsquo;t break, code changes could create inconsistent behavior and bugs.\nKeith Rarick\u0026rsquo;s tool godep\u0026nbsp;is a great step in the right direction for managing 3rd party dependencies and creating reproducible builds.",
    "date": "2013-10-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f382fe1db464ce66004988e259462e88",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "My Channel Select Bug",
    "url": "https://www.ardanlabs.com/blog/2013/10/my-channel-select-bug.html",
    "resume": "I was testing new functionality on a program that is already running in production when suddenly the code behaved very badly. What I saw shocked me and then it became obvious why it happened. I also have a race condition just waiting to be a problem.\nI have tried to provide a simplified version of the code and the two bugs.\npackage main\nimport (\n\u0026nbsp; \u0026nbsp; \u0026quot;fmt\u0026quot;\n\u0026nbsp; \u0026nbsp; \u0026quot;os\u0026quot;",
    "date": "2013-10-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e676694e02c7929d15a4e8202b803d38",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Functions and Naked Returns In Go",
    "url": "https://www.ardanlabs.com/blog/2013/10/functions-and-naked-returns-in-go.html",
    "resume": "In Go values that are returned from functions are passed by value. Go gives you some nice flexibility when it comes to returning values from a function.\nHere is a simple example of returning two values from a function:\npackage main\nimport (\n\u0026nbsp; \u0026nbsp;\u0026quot;fmt\u0026quot;\n)\nfunc main() {\n\u0026nbsp; \u0026nbsp;id, err := ReturnId()\n\u0026nbsp; \u0026nbsp;if err != nil {\n\u0026nbsp; \u0026nbsp;\u0026nbsp; \u0026nbsp;fmt.Printf(\u0026quot;ERROR: %s\u0026quot;, err)\n\u0026nbsp; \u0026nbsp;\u0026nbsp; \u0026nbsp;return\n\u0026nbsp; \u0026nbsp;}",
    "date": "2013-10-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "c61cfa68307cb03fe7f7419f65e57b4f",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Cross Compile Your Go Programs",
    "url": "https://www.ardanlabs.com/blog/2013/10/cross-compile-your-go-programs.html",
    "resume": "Introduction\nIn my post about building and running programs in Iron.Io, I needed to switched over to my Ubuntu VM to build linux versions of my test programs locally. I love the ability to have Ubuntu available to me for building and testing my code. However, if I can stay on the Mac side it is better.\nI have wanted to learn how to cross compile my Go programs for the two platforms I use, darwin/amd64 and linux/amd64.",
    "date": "2013-10-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "e6c5b924b4e8a5084f59b059490235df",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Go Package Management Call To Action",
    "url": "https://www.ardanlabs.com/blog/2013/10/go-package-management-call-to-action.html",
    "resume": "Nathan Youngman, with the help of others, has produced this document outlining months of research and discovery. I would appreciate everyone to honestly read it before continuing with my post. http://nathany.com/go-packages/ Mitchell Hashimoto\u0026nbsp;also published this post on go-nuts and everyone should read this as well. https://groups.google.com/forum/#!msg/golang-nuts/BMZDD6FM-QE/LX4JSs4NVLIJ These two documents outline the current capabilities and issues surrounding the Go tooling as it relates to package management. This has been discussed and discussed at length yet we still don't have a consensus on what the community will rally around.",
    "date": "2013-10-01T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6ce3662dc371b96cf48ba35660271cfd",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Detecting Race Conditions With Go",
    "url": "https://www.ardanlabs.com/blog/2013/09/detecting-race-conditions-with-go.html",
    "resume": "I always find it interesting when I realize that something I have been practicing or dealing with for a long time has a name. This time it happens to be race conditions. This is something you can\u0026rsquo;t avoid thinking about as soon as you have more than one routine sharing any kind of resource. If you\u0026rsquo;re not thinking about race conditions in your code, now is the time.\nA race condition is when two or more routines have access to the same resource, such as a variable or data structure and attempt to read and write to that resource without any regard to the other routines.",
    "date": "2013-09-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "03de09d6200f6870270485f99f682ab0",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Recursion And Tail Calls In Go",
    "url": "https://www.ardanlabs.com/blog/2013/09/recursion-and-tail-calls-in-go_26.html",
    "resume": "This article was written for and published by Gopher Academy\nI was looking at a code sample that showed a recursive function in Go and the writer was very quick to state how Go does not optimize for recursion, even if tail calls are explicit. I had no idea what a tail call was and I really wanted to understand what he meant by Go was not optimized for recursion.",
    "date": "2013-09-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6ff2e42aeeb2ac6d0a52e9dc52a1e7b6",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Iterating Over Slices In Go",
    "url": "https://www.ardanlabs.com/blog/2013/09/iterating-over-slices-in-go.html",
    "resume": "Slices are used everywhere in my code. If I am working with data from MongoDB, it is stored in a slice. If I need to keep track of a collection of problems after running an operation, it is stored in a slice. If you don\u0026rsquo;t understand how slices work yet or have been avoiding them like I did when I started, read these two posts to learn more.\nhttps://www.ardanlabs.com/blog/2013/08/understanding-slices-in-go-programming.html https://www.",
    "date": "2013-09-23T00:00:00Z",
    "vote": 0
  },
  {
    "id": "055631a73176e10cf363a48b20a015ae",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Pool Go Routines To Process Task Oriented Work",
    "url": "https://www.ardanlabs.com/blog/2013/09/pool-go-routines-to-process-task.html",
    "resume": "After working in Go for some time now, I learned how to use an unbuffered channel to build a pool of goroutines. I like this implementation better than what is implemented in this post. \u0026nbsp;That being said, this post still has value in what it describes.\nhttps://github.com/goinggo/work\nOn more than one occasion I have been asked why I use the Work Pool pattern. Why not just start as many Go routines as needed at any given time to get the work done?",
    "date": "2013-09-14T00:00:00Z",
    "vote": 0
  },
  {
    "id": "563a6162862dfb8cd8e5e215e9ebf8b5",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Slices of Slices of Slices in Go",
    "url": "https://www.ardanlabs.com/blog/2013/09/slices-of-slices-of-slices-in-go.html",
    "resume": "I am working on building code to load polygons for the different Marine Forecast areas in the United States. These polygons need to be stored in MongoDB and there is a special way that needs to be done. It would not have been a big deal if it wasn\u0026rsquo;t for this fact. There isn\u0026rsquo;t just one polygon for each area. There is an external polygon and then zero to many interior polygons that need to be stored in relationship.",
    "date": "2013-09-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "33c1150bd94fb88fba07948b027544e8",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Running Go Programs In IronWorker",
    "url": "https://www.ardanlabs.com/blog/2013/09/running-go-programs-in-ironworker.html",
    "resume": "Introduction\nIron.io has a product called IronWorker which provides a task oriented Linux container that you can run your programs inside. If you are not sure what I mean, think of this as having a temporary Linux virtual machine instantly available for your personal but short term use. IronWorker allows you to load your binaries, code files, support files, shells scripts and just about anything else you may need to run your program in the container.",
    "date": "2013-09-07T00:00:00Z",
    "vote": 0
  },
  {
    "id": "7407de5eba6a1c22b0f5f53ef1f43ffc",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Timer Routines And Graceful Shutdowns In Go",
    "url": "https://www.ardanlabs.com/blog/2013/09/timer-routines-and-graceful-shutdowns.html",
    "resume": "In my Outcast data server I have several data retrieval jobs that run using different go routines. Each routine wakes up on a set interval. The most complex job is the downloading of radar images. What makes this complex is that there are 155 radar stations throughout the United States that take a new picture every 120 seconds. All these radar images can be put together to create a mosaic. When the go routine wakes up to pull down the new images, it must do this as quickly as possible for all 155 stations.",
    "date": "2013-09-04T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4c28c13e1bcf405c1e4acc07d27a12d6",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Using CGO with Pkg-Config And Custom Dynamic Library Locations",
    "url": "https://www.ardanlabs.com/blog/2013/08/using-cgo-with-pkg-config-and-custom.html",
    "resume": "Earlier in the month I wrote a post about using C Dynamic Libraries in Go Programs. The article built a dynamic library in C and created a Go program that used it. The program worked but only if the dynamic library was in the same folder as the program.\nThis constraint does not allow for the use of the go get command to download, build and install a working version of the program.",
    "date": "2013-08-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f911deb012f604136f6d491f7a6c6871",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Organizing Code to Support Go Get",
    "url": "https://www.ardanlabs.com/blog/2013/08/organizing-code-to-support-go-get.html",
    "resume": "For those of you who are like me, trying to learn the Mac and Linux operating systems, Golang programming and deployment constructs all at the same time, I feel your pain. I have been building a Go application for a couple of months on my Mac and it was time to deploy the code on a local Ubuntu server. I was having a really tough time and it was turning into a disaster.",
    "date": "2013-08-28T00:00:00Z",
    "vote": 0
  },
  {
    "id": "735430c183159681b8e6df0a04fef37a",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Collections Of Unknown Length in Go",
    "url": "https://www.ardanlabs.com/blog/2013/08/collections-of-unknown-length-in-go.html",
    "resume": "If you are coming to Go after using a programming language like C# or Java, the first thing you will discover is that there are no traditional collection types like List and Dictionary. That really threw me off for months. I found a package called container/list and gravitated to using it for almost everything.\nSomething in the back of my head kept nagging me. It didn\u0026rsquo;t make any sense that the language designers would not directly support managing a collection of unknown length.",
    "date": "2013-08-26T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f9fe96028d4518c4681b4c1ca9ddc475",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Using C Dynamic Libraries In Go Programs",
    "url": "https://www.ardanlabs.com/blog/2013/08/using-c-dynamic-libraries-in-go-programs.html",
    "resume": "My son and I were having fun last weekend building a console based game in Go. I was recreating a game from my youth, back when I was programming on a Kaypro II.\nI loved this computer. I would write games in BASIC on it all day and night. Did I mention it was portable. The keyboard would strap in and you could carry it around. LOL.\nBut I digress, back to my Go program.",
    "date": "2013-08-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "1ce7269d04c55cbab849b8af8768dc19",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Understanding Slices in Go Programming",
    "url": "https://www.ardanlabs.com/blog/2013/08/understanding-slices-in-go-programming.html",
    "resume": "Since I started programming in Go the concept and use of slices has been confusing. This is something completely new to me. They look like an array, and feel like an array, but they are much more than an array. I am constantly reading how slices are used quite a bit by Go programmers and I think it is finally time for me to understand what slices are all about.",
    "date": "2013-08-15T00:00:00Z",
    "vote": 0
  },
  {
    "id": "f834f68436a17d825e440b79752540d3",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Using Time, Timezones and Location in Go",
    "url": "https://www.ardanlabs.com/blog/2013/08/using-time-timezones-and-location-in-go.html",
    "resume": "I ran into a problem today. I was building code to consume NOAA\u0026rsquo;s tide station XML document and quickly realized I was in trouble. Here is a small piece of that XML document:\n\u0026lt;timezone\u0026gt;LST/LDT\u0026lt;/timezone\u0026gt;\n\u0026lt;item\u0026gt;\n\u0026lt;date\u0026gt;2013/01/01\u0026lt;/date\u0026gt;\n\u0026lt;day\u0026gt;Tue\u0026lt;/day\u0026gt;\n\u0026lt;time\u0026gt;02:06 AM\u0026lt;/time\u0026gt;\n\u0026lt;predictions_in_ft\u0026gt;19.7\u0026lt;/predictions_in_ft\u0026gt;\n\u0026lt;predictions_in_cm\u0026gt;600\u0026lt;/predictions_in_cm\u0026gt;\n\u0026lt;highlow\u0026gt;H\u0026lt;/highlow\u0026gt;\n\u0026lt;/item\u0026gt; If you notice the timezone tag, it states the time is in Local Standard Time / Local Daylight Time. This is a real problem because I need to store this data in UTC.",
    "date": "2013-08-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "98eba05bbec92c6ad7f4aae8e1884739",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Gustavo's IEEE-754 Brain Teaser",
    "url": "https://www.ardanlabs.com/blog/2013/08/gustavos-ieee-754-brain-teaser.html",
    "resume": "Back in June, Gustavo Niemeyer posted the following question on his Labix.org blog:\nAssume uf is an unsigned integer with 64 bits that holds the IEEE-754 representation for a binary floating point number of that size.\nHow can you tell if uf represents an integer number?\nI can\u0026rsquo;t talk for you, but I write business applications. I just don\u0026rsquo;t have the background to quickly knock out an answer for a question like this.",
    "date": "2013-08-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "559b0ddc56bad8ef45feffdb4c39a8a9",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "An RSS Feed Searching Framework Using Go",
    "url": "https://www.ardanlabs.com/blog/2013/07/an-rss-feed-searching-framework-using-go.html",
    "resume": "This article was written for and published by Safari Books Online Back in May, I finally decided that it was time to move away from the Microsoft stack to Linux. The cost of developing, licensing, and purchasing cloud computing on the Microsoft stack is too expensive. My company was approved for BizSpark, which made development possible for a small company like mine, but what am I going to do three years from now?",
    "date": "2013-07-29T00:00:00Z",
    "vote": 0
  },
  {
    "id": "4a49cc7c3827f5c5d85c743989066be9",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "An Open Source Debate",
    "url": "https://www.ardanlabs.com/blog/2013/07/an-open-source-debate.html",
    "resume": "This article was written for and published by Safari Books Online\nIf you read my article titled Analyze Data With MongoDB and Go, then you will understand the context of this debate with the idea of open source. That article talks about an application we are building, and it publishes some of the proprietary data we are gathering. It also shows techniques we are using to perform the data analysis. This has caused a passionate debate among the business partners in my company.",
    "date": "2013-07-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "ad476210aba406f3211e2e84068b22ea",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Understanding Pointers and Memory Allocation",
    "url": "https://www.ardanlabs.com/blog/2013/07/understanding-pointers-and-memory.html",
    "resume": "In the documentation provided by the Go language team you will find great information on pointers and memory allocation. Here is a link to that documentation:\nhttp://golang.org/doc/faq#Pointers\nWe need to start with the understanding that all variables contain a value. Based on the type that variable represents will determine how we can use it to manipulate the memory it contains. Read this post to learn more:\u0026nbsp;Understanding Type In Go",
    "date": "2013-07-27T00:00:00Z",
    "vote": 0
  },
  {
    "id": "083ed972dd32370837e10f3eb64051d2",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Analyze Data With MongoDB and Go",
    "url": "https://www.ardanlabs.com/blog/2013/07/analyze-data-with-mongodb-and-go.html",
    "resume": "This article was written for and published by Safari Books Online\nMy company is building a mobile application called Outcast. The idea behind Outcast is to give people who love the outdoors the ability to get ahead of the weather. By analyzing real time buoy, tide, lunar and solar data with user preferences and experiences, the application can deliver relevant information and forecasts. The user helps with the forecasting by providing an experience review after their outdoor activities have ended.",
    "date": "2013-07-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "b6bceb89291b989db2f2c3f194c3077e",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "OSCON 2013 - The Gophers Are Coming",
    "url": "https://www.ardanlabs.com/blog/2013/07/oscon-2013-gophers-are-coming.html",
    "resume": "On June 22nd through the 26th, Portland Oregon is hosting OSCON (Open Source Convention). The event is run by O\u0026rsquo;Reilly. After looking at the speakers list it appears it is going to be a great convention.\nThere are three Gophers who will be giving talks. Check out the links:\nFrancesc Campoy Flores\u0026nbsp;\nGo Developer Programs Engineer, Google Inc.\nhttp://www.oscon.com/oscon2013/public/schedule/speaker/155088\nJohan Euphrosine\nDeveloper Programs Engineer, Google\nhttp://www.oscon.com/oscon2013/public/schedule/speaker/155083\nBrad Fitzpatrick\nSoftware Engineer, Google",
    "date": "2013-07-20T00:00:00Z",
    "vote": 0
  },
  {
    "id": "881f78552090903f4fa7367861fe8ea3",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Understanding Type in Go",
    "url": "https://www.ardanlabs.com/blog/2013/07/understanding-type-in-go.html",
    "resume": "When I was coding in C/C++ it was\u0026nbsp;imperative to understand type. If you didn\u0026rsquo;t, you would get into a lot of trouble with both the compiler and running your code. Regardless of the language, type touches every aspect of programming syntax. A good understand of types and pointers is critical to good programming. This post will focus on type.\nTake these bytes of memory for starters:\nFFE4 FFE3 FFE2 FFE1 00000000 11001011 01100101 00001010",
    "date": "2013-07-12T00:00:00Z",
    "vote": 0
  },
  {
    "id": "170e80b6f95462aba1f7a5458b54b0b7",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Object Oriented Programming in Go",
    "url": "https://www.ardanlabs.com/blog/2013/07/object-oriented-programming-in-go.html",
    "resume": "Someone asked a question on the forum today on how to gain the benefits of inheritance without embedding. It is really important for everyone to think in terms of Go and not the\u0026nbsp;languages\u0026nbsp;they are leaving behind. I can\u0026rsquo;t tell you much code I removed from my early Go implementations because it wasn\u0026rsquo;t necessary. The\u0026nbsp;language designers have years of experience and knowledge. Hindsight is helping to create a language that is fast, lean and really fun to code in.",
    "date": "2013-07-10T00:00:00Z",
    "vote": 0
  },
  {
    "id": "31cd1aa434a275f97bb2ce423d027bb5",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Singleton Design Pattern in Go",
    "url": "https://www.ardanlabs.com/blog/2013/07/singleton-design-pattern-in-go.html",
    "resume": "Multi-threaded applications are very complicated, especially when your code is not organized and consistent with how resources are accessed, managed and maintained. If you want to minimize bugs you need philosophies and rules to live by. Here are some of mine:\nResource allocation and de-allocation should be abstracted and managed within the same type. Resource thread safeness should be abstracted and managed within the same type. A public interface should be the only means to accessing shared resources.",
    "date": "2013-07-06T00:00:00Z",
    "vote": 0
  },
  {
    "id": "61e44ded914c1d941304afa5aa4cf4de",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "How Packages Work in Go",
    "url": "https://www.ardanlabs.com/blog/2013/07/how-packages-work-in-go-language.html",
    "resume": "Since I started writing code in Go it has been a mystery to me how best to organize my code and use the package keyword. The package keyword is similar to using a namespace in C#, however the convention is to tie the package name to the directory structure.\nGo has this web page that attempts to explain how to write Go Code.\nhttp://golang.org/doc/code.html\nWhen I started programming in Go this was one of the first documents I read.",
    "date": "2013-07-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "6eea01f0d585769d6456b5174dab0eaf",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Running Go Programs as a Background Process",
    "url": "https://www.ardanlabs.com/blog/2013/06/running-go-programs-as-background.html",
    "resume": "I have been writing Windows services in C/C++ and then in C# since 1999. Now that I am writing server based software in Go for the Linux OS I am completely lost. What is even more\u0026nbsp;frustrating,\u0026nbsp;is that for the first time the OS I am developing on (Mac OSX) is not the operating system I will be deploying my code on. That will be for another blog post.\nI want to run my code as a background process (daemon) on my Mac.",
    "date": "2013-06-24T00:00:00Z",
    "vote": 0
  },
  {
    "id": "5500e62cbb473c9237aac1676a013f67",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Reading XML Documents in Go",
    "url": "https://www.ardanlabs.com/blog/2013/06/reading-xml-documents-in-go.html",
    "resume": "I was really surprised how easy it was to read an XML document using the encoding/xml package that comes with the standard library. The package works by defining structs that map the XML document. If you need more flexibility then use Gustavo Niemeyer\u0026rsquo;s xmlpath package (found here).\nHere is the XML document we are going to read and de-serialize:\n\u0026lt;straps\u0026gt;\n\u0026nbsp; \u0026nbsp; \u0026lt;strap key=\u0026quot;CompanyName\u0026quot; value=\u0026quot;NEWCO\u0026quot; /\u0026gt;\n\u0026nbsp; \u0026nbsp; \u0026lt;strap key=\u0026quot;UseEmail\u0026quot; value=\u0026quot;true\u0026quot; /\u0026gt;",
    "date": "2013-06-17T00:00:00Z",
    "vote": 0
  },
  {
    "id": "de34ced56b8259c8f1eec05280a9847c",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Send an email in Go with smtp.SendMail",
    "url": "https://www.ardanlabs.com/blog/2013/06/send-email-in-go-with-smtpsendmail.html",
    "resume": "I wanted to send an email from my TraceLog package when a critical exception occurred. Fortunately Go\u0026rsquo;s standard library has a package called smpt which can be found inside the net package. When you look at the documentation you are left wanting.\nI spent 20 minutes researching how to use this package. After fighting through the parameters and bugs, I came up with this sample code:\npackage main\nimport (",
    "date": "2013-06-13T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fe74943a308bf7254f83138cf2316649",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Go's time.Duration Type Unravelled",
    "url": "https://www.ardanlabs.com/blog/2013/06/gos-duration-type-unravelled.html",
    "resume": "I have been struggling with using the Time package that comes in the Go standard library. My struggles have come from two pieces of functionality. First, trying to capture the number of milliseconds between two different time periods. Second, comparing that duration in milliseconds against a pre-defined time span. It sounds like a no\u0026nbsp;brainier but like I said, I have been struggling.\nIn the Time package there is a custom type called Duration and a set of helper constants:",
    "date": "2013-06-11T00:00:00Z",
    "vote": 0
  },
  {
    "id": "fa1a1bc7b403f6ba073538fd6262c88b",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Understanding Defer, Panic and Recover",
    "url": "https://www.ardanlabs.com/blog/2013/06/understanding-defer-panic-and-recover.html",
    "resume": "I am building my TraceLog package and it is really important that the package logs any internal exceptions and prevents panics from shutting down the application. The TraceLog package must never be responsible for shutting down an application. I also have internal go routines that must never terminate until the application is shut down gracefully.\nUnderstanding how to use Defer and Recover in your application can be a bit tricky at first, especially if you are used to using try/catch blocks.",
    "date": "2013-06-08T00:00:00Z",
    "vote": 0
  },
  {
    "id": "19a5f58f6cd0ca0fc56b15e63c63db98",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Documenting Go Code With Godoc",
    "url": "https://www.ardanlabs.com/blog/2013/06/documenting-go-code-with-godoc.html",
    "resume": "As you know if you read my blog, I have been building a set of new utility packages so I can start developing an application server I need for a new project. I am brand new to Go and the Mac OS. Needless to say it has been one hell of an education over the past month. But I don\u0026rsquo;t miss Windows or C# at all.\nI made some progress in my coding and wanted to build documentation for the code.",
    "date": "2013-06-05T00:00:00Z",
    "vote": 0
  },
  {
    "id": "de89c4385782a38e79f1a2d994356d81",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Installing Go, Gocode, GDB and LiteIDE",
    "url": "https://www.ardanlabs.com/blog/2013/06/installing-go-gocode-gdb-and-liteide.html",
    "resume": "Check out my new installtion document:\nhttps://www.ardanlabs.com/blog/2016/05/installing-go-and-your-workspace.html\nI removed the sections about gocode and GDB. These are not necessary any longer. I also added links for more editors.\nWindows\nThis is a great post by Wade Wegner for installing Go on your Windows Machine:\nhttp://www.wadewegner.com/2014/12/easy-go-programming-setup-for-windows/\nMac OS XThe following instructions will guide you through installing Go on your Mac.\nStep 1: Download Go Open your favorite browser and go to the following website:",
    "date": "2013-06-02T00:00:00Z",
    "vote": 0
  },
  {
    "id": "9159b260542f710234590179bf28c2c9",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Thread Pooling in Go Programming",
    "url": "https://www.ardanlabs.com/blog/2013/05/thread-pooling-in-go-programming.html",
    "resume": "After working in Go for some time now, I learned how to use an unbuffered channel to build a pool of goroutines. I like this implementation better than what is implemented in this post. \u0026nbsp;That being said, this post still has value in what it describes.\nhttps://github.com/goinggo/work\nIntroduction\nIn my world of server development thread pooling has been the key to building robust code on the Microsoft stack.",
    "date": "2013-05-31T00:00:00Z",
    "vote": 0
  },
  {
    "id": "62cbf35503bffa569b890267510d7bff",
    "source": {
      "path": "courses",
      "name": "Ardan Labs",
      "url": "https://www.ardanlabs.com/blog/index.xml"
    },
    "name": "Why Go Programming",
    "url": "https://www.ardanlabs.com/blog/2013/05/why-go-programming.html",
    "resume": "For the past 20 years I have been writing server based and application software on the Microsoft stack. First in C/C++ leveraging the Win32 API and then in C# when .Net first was released. Over the past few months I have realized that trying to build scalable code on the Microsoft stack is becoming impossible. Why, Technology and Cost!!\nLet\u0026rsquo;s start with the licensing. Luckily I was accepted into the Bizspark program.",
    "date": "2013-05-31T00:00:00Z",
    "vote": 0
  }
]